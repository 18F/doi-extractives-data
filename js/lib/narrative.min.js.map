{"version":3,"sources":["webpack:///narrative.min.js","webpack:///webpack/bootstrap 5b53999643ccafc9a546?3f9c","webpack:///./js/narrative.js","webpack:///./js/components/sticky-nav.js","webpack:///./js/components/open-list-nav.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p",0,21,"scrollLeft","scrollTop","findScrollPositions","undefined","window","pageXOffset","document","documentElement","body","parentNode","pageYOffset","StickyNav","this","elems","sticky","querySelector","main","attrStickyOffset","getAttribute","attrOffsetBottom","parseInt","maxWidth","attrAbsolute","attrParent","parent","determineScreen","windowWidth","innerWidth","clientWidth","wasMobile","isMobile","isAbsolute","status","lastStatus","lastWidth","lastWindowWidth","prototype","setOffset","offset","offsetTop","offsetHeight","getPositions","height","clientHeight","width","windowBump","mainOffset","mainHeight","diffTop","diffBottom","needsUpdate","init","statusChange","sizeChange","updateNeeded","update","style","position","top","classList","remove","add","throttle","fn","threshhold","scope","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply","run","stickyNav","loadDelay","addEventListener","observer","MutationObserver","config","subtree","childList","observe",22,"getScrollTop","isElementInViewport","el","rect","getBoundingClientRect","bottom","right","left","innerHeight","OpenListNav","active","location","hash","navItems","querySelectorAll","navSelect","$","navIsSelect","length","navHeaders","current","prev","direction","updateScrollTop","removeActive","i","setAttribute","addActive","name","updateSelectField","newValue","val","registerEventHandlers","self","item","detectNavChange","changeHandler","selector","value","updated","Array","forEach","header","inViewPort","newName","openListNav"],"mappings":"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","file":"narrative.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(21);\n\t__webpack_require__(22);\n\n\n/***/ },\n\n/***/ 21:\n/***/ function(module, exports) {\n\n\t(function(exports) {\n\t\n\t  var scrollLeft,\n\t    scrollTop;\n\t\n\t  var findScrollPositions = function(){\n\t    scrollLeft = (window.pageXOffset !== undefined)\n\t      ? window.pageXOffset\n\t      : (document.documentElement\n\t        || document.body.parentNode\n\t        || document.body).scrollLeft;\n\t    scrollTop = (window.pageYOffset !== undefined)\n\t      ? window.pageYOffset\n\t      : (document.documentElement\n\t        || document.body.parentNode\n\t        || document.body).scrollTop;\n\t\n\t  };\n\t\n\t  var StickyNav = function() {\n\t\n\t    this.elems = {\n\t      sticky : document.querySelector('.sticky_nav'),\n\t      main: document.querySelector('main')\n\t    };\n\t\n\t    this.attrStickyOffset = this.elems.sticky.getAttribute('data-sticky-offset');\n\t    this.attrOffsetBottom = parseInt(this.elems.sticky.getAttribute('data-offset-bottom')) || 0;\n\t    this.maxWidth = this.elems.sticky.getAttribute('data-max-width');\n\t    var attrAbsolute = this.elems.sticky.getAttribute('data-absolute');\n\t\n\t    this.attrParent = this.elems.sticky.getAttribute('data-offset-parent');\n\t\n\t    this.elems.parent = this.elems.sticky.getAttribute('data-offset-parent')\n\t      ? this.elems.sticky.parentNode\n\t      : null;\n\t\n\t    this.determineScreen = function() {\n\t      var windowWidth = window.innerWidth || document.body.clientWidth;\n\t      this.wasMobile = this.isMobile;\n\t      this.isMobile = windowWidth < 768;\n\t    };\n\t\n\t    this.determineScreen();\n\t\n\t    this.isAbsolute = function() {\n\t\n\t      var isAbsolute = (attrAbsolute === 'true' && !this.isMobile)\n\t        ? true\n\t        : false;\n\t      return isAbsolute;\n\t    }\n\t\n\t\n\t\n\t\n\t    this.status;\n\t    this.lastStatus;\n\t    this.lastWidth;\n\t    this.lastWindowWidth;\n\t  };\n\t\n\t  StickyNav.prototype = {\n\t    setOffset: function () {\n\t      this.offset = this.attrStickyOffset\n\t        ? parseInt(this.attrStickyOffset)\n\t        : !this.elems.parent\n\t          ? this.elems.sticky.offsetTop\n\t          : ( this.attrParent === 'mobile' && this.isMobile )\n\t            ? this.elems.parent.offsetTop - this.elems.sticky.offsetHeight\n\t            : this.elems.sticky.offsetTop\n\t    },\n\t    getPositions: function () {\n\t\n\t      this.height = this.elems.sticky.clientHeight;\n\t\n\t      this.lastWidth = this.width || 'initial';\n\t      var windowWidth = window.innerWidth || document.body.clientWidth,\n\t        windowBump = windowWidth > 1044 || this.isMobile ? 0 : -20;\n\t      this.width = this.elems.parent\n\t        ? this.elems.parent.clientWidth + windowBump + 'px'\n\t        : this.maxWidth;\n\t\n\t      this.mainOffset = this.elems.main.offsetTop;\n\t      this.mainHeight = this.elems.main.clientHeight;\n\t\n\t      this.diffTop = scrollTop - this.mainOffset - this.offset;\n\t\n\t      this.diffBottom = scrollTop + this.height - this.mainHeight - this.mainOffset;\n\t      this.lastStatus = this.status;\n\t      if (this.diffTop >= 0){\n\t        this.status = 'fixed';\n\t        if (this.diffBottom >= 0){\n\t          this.status = 'absolute';\n\t        }\n\t      } else {\n\t        this.status = 'static';\n\t      }\n\t    },\n\t    needsUpdate: function(init) {\n\t      var statusChange = this.status !== this.lastStatus;\n\t      var sizeChange = this.width !== this.lastWidth;\n\t      var updateNeeded = undefined;\n\t      if (!statusChange && sizeChange) {\n\t        updateNeeded = 'size';\n\t      } else if (statusChange && !sizeChange) {\n\t        updateNeeded = 'status';\n\t      } else if (statusChange && sizeChange || init === 'init') {\n\t        updateNeeded = 'both';\n\t      }\n\t      return updateNeeded;\n\t    },\n\t    update: function(updateNeeded) {\n\t      if (!updateNeeded) {\n\t        return;\n\t      } else {\n\t        if (this.diffTop >= 0){\n\t          if (updateNeeded === 'status' || updateNeeded === 'both') {\n\t            this.elems.sticky.style.position = 'fixed';\n\t            this.elems.sticky.style.top = 0;\n\t            this.elems.sticky.classList.remove('js-transparent');\n\t            this.elems.sticky.classList.add('js-color');\n\t          }\n\t\n\t          if (updateNeeded === 'size' || updateNeeded === 'both') {\n\t            this.elems.sticky.style.width = this.width;\n\t          }\n\t\n\t          if (this.diffBottom >= 0){\n\t            if (updateNeeded === 'status' || updateNeeded === 'both') {\n\t              this.elems.sticky.style.position = 'absolute';\n\t\n\t              if ( this.attrParent === 'mobile' && this.isMobile ) {\n\t                this.elems.sticky.style.top = this.mainHeight - this.offset - this.height - this.attrOffsetBottom + 'px';\n\t              } else {\n\t                this.elems.sticky.style.top = this.mainHeight - this.height - this.attrOffsetBottom + 'px';\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          if (updateNeeded === 'status' || updateNeeded === 'both') {\n\t            this.elems.sticky.classList.remove('js-color');\n\t            this.elems.sticky.classList.add('js-transparent');\n\t            if (this.isAbsolute()) {\n\t              this.elems.sticky.style.position = 'absolute';\n\t            } else {\n\t              this.elems.sticky.style.position = 'static';\n\t            }\n\t          }\n\t\n\t          if (updateNeeded === 'size' || updateNeeded === 'both') {\n\t            this.elems.sticky.style.width = this.width;\n\t          }\n\t        }\n\t      }\n\t    },\n\t    throttle : function (fn, threshhold, scope) {\n\t      threshhold || (threshhold = 250);\n\t      var last,\n\t          deferTimer;\n\t      return function () {\n\t        var context = scope || this;\n\t\n\t        var now = +new Date,\n\t            args = arguments;\n\t        if (last && now < last + threshhold) {\n\t          // hold on to it\n\t          clearTimeout(deferTimer);\n\t          deferTimer = setTimeout(function () {\n\t            last = now;\n\t            fn.apply(context, args);\n\t          }, threshhold);\n\t        } else {\n\t          last = now;\n\t          fn.apply(context, args);\n\t        }\n\t      };\n\t    },\n\t    run: function(init) {\n\t      findScrollPositions();\n\t      if (init === 'init') {\n\t        this.setOffset();\n\t      }\n\t      this.getPositions();\n\t      this.update(this.needsUpdate(init));\n\t    }\n\t  };\n\t\n\t  var stickyNav = new StickyNav();\n\t\n\t  var loadDelay = stickyNav.elems.sticky.getAttribute('data-load-delay');\n\t  if (loadDelay) {\n\t    setTimeout(function() {\n\t      stickyNav.run('init');\n\t    }, parseInt(loadDelay));\n\t  } else {\n\t    stickyNav.run('init');\n\t  }\n\t\n\t\n\t\n\t  window.addEventListener('scroll', stickyNav.throttle(stickyNav.run, 130, stickyNav));\n\t\n\t  window.addEventListener('resize', stickyNav.throttle(stickyNav.run, 150, stickyNav));\n\t\n\t  // documentation: https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n\t  var observer = new MutationObserver(function () {\n\t    stickyNav.run();\n\t  });\n\t\n\t  // set up your configuration\n\t  // this will watch to see if you insert or remove any children\n\t  var config = { subtree: true, childList: true };\n\t\n\t  // start observing\n\t  observer.observe(stickyNav.elems.sticky, config);\n\t\n\t  // other potential elem listener\n\t  // http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/\n\t\n\t  exports.stickyNav = stickyNav;\n\t\n\t\n\t})(this);\n\n\n/***/ },\n\n/***/ 22:\n/***/ function(module, exports) {\n\n\t(function(exports) {\n\t    function getScrollTop() {\n\t      return (window.pageYOffset !== undefined)\n\t        ? window.pageYOffset\n\t        : (document.documentElement\n\t          || document.body.parentNode\n\t          || document.body).scrollTop;\n\t    }\n\t\n\t    function isElementInViewport(el) {\n\t      var rect = el.getBoundingClientRect();\n\t\n\t      return rect.bottom > 0 &&\n\t          rect.right > 0 &&\n\t          rect.left < (window.innerWidth || document. documentElement.clientWidth) &&\n\t          rect.top < (window.innerHeight || document. documentElement.clientHeight);\n\t    }\n\t\n\t    var OpenListNav = function() {\n\t      // init OpenListNav Properties\n\t      this.active = window.location.hash || '#intro';\n\t      this.navItems = document.querySelectorAll('[data-nav-item]');\n\t      this.navSelect = $('[data-nav-options]');\n\t      this.navIsSelect = !!this.navSelect.length;\n\t      this.navHeaders = document.querySelectorAll('[data-nav-header]');\n\t      this.scrollTop = {\n\t        current: getScrollTop(),\n\t        prev: getScrollTop(),\n\t        direction: 'down'\n\t      };\n\t    };\n\t\n\t    OpenListNav.prototype.updateScrollTop = function() {\n\t      this.scrollTop.prev = this.scrollTop.current;\n\t      this.scrollTop.current = getScrollTop();\n\t      this.scrollTop.direction = (this.scrollTop.current >= this.scrollTop.prev)\n\t        ? 'down'\n\t        : 'up';\n\t    };\n\t\n\t    OpenListNav.prototype.removeActive = function(){\n\t      this.active = null;\n\t      for (var i = 0; i < this.navItems.length; i++) {\n\t        this.navItems[i].setAttribute('data-active', false);\n\t      }\n\t    };\n\t\n\t    OpenListNav.prototype.addActive = function(el, name){\n\t      if (!el){\n\t        el = document.querySelector('[data-nav-item=\"' + name + '\"]');\n\t        this.active = name;\n\t        el.setAttribute('data-active', true);\n\t      } else {\n\t        this.active = el.getAttribute('data-nav-item');\n\t        el.setAttribute('data-active', true);\n\t      }\n\t    };\n\t\n\t    OpenListNav.prototype.update = function(el, name){\n\t      this.removeActive();\n\t      this.addActive(el, name);\n\t    };\n\t\n\t    OpenListNav.prototype.updateSelectField = function(newValue) {\n\t      if (newValue){\n\t        this.navSelect.val(newValue);\n\t      }\n\t    };\n\t\n\t    OpenListNav.prototype.registerEventHandlers = function(){\n\t      var self = this;\n\t      if (!this.navIsSelect) {\n\t        for (var i = 0; i < this.navItems.length; i++) {\n\t          var item = this.navItems[i];\n\t          item.addEventListener('click', function () {\n\t            self.update(this);\n\t          });\n\t        }\n\t      }\n\t\n\t      window.addEventListener('scroll', function() {\n\t        self.updateScrollTop();\n\t        // TODO: throttle\n\t        self.detectNavChange();\n\t      });\n\t\n\t      window.addEventListener('resize', function(){\n\t        // TODO: throttle\n\t        self.detectNavChange();\n\t      });\n\t\n\t    };\n\t\n\t    OpenListNav.prototype.changeHandler = function(selector) {\n\t      window.location.hash = selector.value;\n\t    };\n\t\n\t\n\t    OpenListNav.prototype.detectNavChange = function(){\n\t\n\t      var self = this;\n\t\n\t      // initialize nav status as not updated\n\t      var updated = false;\n\t\n\t       Array.prototype.forEach.call(this.navHeaders, function(header){\n\t         var inViewPort = isElementInViewport(header);\n\t         if (inViewPort && !self.navIsSelect && !updated) {\n\t           self.update(null, header.name);\n\t           updated = true;\n\t         } else if(inViewPort && self.navIsSelect && !updated) {\n\t           var newName = header.name || header.id;\n\t          self.updateSelectField(newName);\n\t           updated = true;\n\t         }\n\t      });\n\t    };\n\t\n\t    var openListNav = new OpenListNav();\n\t\n\t    openListNav.registerEventHandlers();\n\t\n\t    exports.openListNav = openListNav;\n\t  })(this);\n\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** narrative.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5b53999643ccafc9a546\n **/","require(\"./components/sticky-nav.js\");\nrequire(\"./components/open-list-nav.js\");\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/narrative.js\n ** module id = 0\n ** module chunks = 1\n **/","(function(exports) {\n\n  var scrollLeft,\n    scrollTop;\n\n  var findScrollPositions = function(){\n    scrollLeft = (window.pageXOffset !== undefined)\n      ? window.pageXOffset\n      : (document.documentElement\n        || document.body.parentNode\n        || document.body).scrollLeft;\n    scrollTop = (window.pageYOffset !== undefined)\n      ? window.pageYOffset\n      : (document.documentElement\n        || document.body.parentNode\n        || document.body).scrollTop;\n\n  };\n\n  var StickyNav = function() {\n\n    this.elems = {\n      sticky : document.querySelector('.sticky_nav'),\n      main: document.querySelector('main')\n    };\n\n    this.attrStickyOffset = this.elems.sticky.getAttribute('data-sticky-offset');\n    this.attrOffsetBottom = parseInt(this.elems.sticky.getAttribute('data-offset-bottom')) || 0;\n    this.maxWidth = this.elems.sticky.getAttribute('data-max-width');\n    var attrAbsolute = this.elems.sticky.getAttribute('data-absolute');\n\n    this.attrParent = this.elems.sticky.getAttribute('data-offset-parent');\n\n    this.elems.parent = this.elems.sticky.getAttribute('data-offset-parent')\n      ? this.elems.sticky.parentNode\n      : null;\n\n    this.determineScreen = function() {\n      var windowWidth = window.innerWidth || document.body.clientWidth;\n      this.wasMobile = this.isMobile;\n      this.isMobile = windowWidth < 768;\n    };\n\n    this.determineScreen();\n\n    this.isAbsolute = function() {\n\n      var isAbsolute = (attrAbsolute === 'true' && !this.isMobile)\n        ? true\n        : false;\n      return isAbsolute;\n    }\n\n\n\n\n    this.status;\n    this.lastStatus;\n    this.lastWidth;\n    this.lastWindowWidth;\n  };\n\n  StickyNav.prototype = {\n    setOffset: function () {\n      this.offset = this.attrStickyOffset\n        ? parseInt(this.attrStickyOffset)\n        : !this.elems.parent\n          ? this.elems.sticky.offsetTop\n          : ( this.attrParent === 'mobile' && this.isMobile )\n            ? this.elems.parent.offsetTop - this.elems.sticky.offsetHeight\n            : this.elems.sticky.offsetTop\n    },\n    getPositions: function () {\n\n      this.height = this.elems.sticky.clientHeight;\n\n      this.lastWidth = this.width || 'initial';\n      var windowWidth = window.innerWidth || document.body.clientWidth,\n        windowBump = windowWidth > 1044 || this.isMobile ? 0 : -20;\n      this.width = this.elems.parent\n        ? this.elems.parent.clientWidth + windowBump + 'px'\n        : this.maxWidth;\n\n      this.mainOffset = this.elems.main.offsetTop;\n      this.mainHeight = this.elems.main.clientHeight;\n\n      this.diffTop = scrollTop - this.mainOffset - this.offset;\n\n      this.diffBottom = scrollTop + this.height - this.mainHeight - this.mainOffset;\n      this.lastStatus = this.status;\n      if (this.diffTop >= 0){\n        this.status = 'fixed';\n        if (this.diffBottom >= 0){\n          this.status = 'absolute';\n        }\n      } else {\n        this.status = 'static';\n      }\n    },\n    needsUpdate: function(init) {\n      var statusChange = this.status !== this.lastStatus;\n      var sizeChange = this.width !== this.lastWidth;\n      var updateNeeded = undefined;\n      if (!statusChange && sizeChange) {\n        updateNeeded = 'size';\n      } else if (statusChange && !sizeChange) {\n        updateNeeded = 'status';\n      } else if (statusChange && sizeChange || init === 'init') {\n        updateNeeded = 'both';\n      }\n      return updateNeeded;\n    },\n    update: function(updateNeeded) {\n      if (!updateNeeded) {\n        return;\n      } else {\n        if (this.diffTop >= 0){\n          if (updateNeeded === 'status' || updateNeeded === 'both') {\n            this.elems.sticky.style.position = 'fixed';\n            this.elems.sticky.style.top = 0;\n            this.elems.sticky.classList.remove('js-transparent');\n            this.elems.sticky.classList.add('js-color');\n          }\n\n          if (updateNeeded === 'size' || updateNeeded === 'both') {\n            this.elems.sticky.style.width = this.width;\n          }\n\n          if (this.diffBottom >= 0){\n            if (updateNeeded === 'status' || updateNeeded === 'both') {\n              this.elems.sticky.style.position = 'absolute';\n\n              if ( this.attrParent === 'mobile' && this.isMobile ) {\n                this.elems.sticky.style.top = this.mainHeight - this.offset - this.height - this.attrOffsetBottom + 'px';\n              } else {\n                this.elems.sticky.style.top = this.mainHeight - this.height - this.attrOffsetBottom + 'px';\n              }\n            }\n          }\n        } else {\n          if (updateNeeded === 'status' || updateNeeded === 'both') {\n            this.elems.sticky.classList.remove('js-color');\n            this.elems.sticky.classList.add('js-transparent');\n            if (this.isAbsolute()) {\n              this.elems.sticky.style.position = 'absolute';\n            } else {\n              this.elems.sticky.style.position = 'static';\n            }\n          }\n\n          if (updateNeeded === 'size' || updateNeeded === 'both') {\n            this.elems.sticky.style.width = this.width;\n          }\n        }\n      }\n    },\n    throttle : function (fn, threshhold, scope) {\n      threshhold || (threshhold = 250);\n      var last,\n          deferTimer;\n      return function () {\n        var context = scope || this;\n\n        var now = +new Date,\n            args = arguments;\n        if (last && now < last + threshhold) {\n          // hold on to it\n          clearTimeout(deferTimer);\n          deferTimer = setTimeout(function () {\n            last = now;\n            fn.apply(context, args);\n          }, threshhold);\n        } else {\n          last = now;\n          fn.apply(context, args);\n        }\n      };\n    },\n    run: function(init) {\n      findScrollPositions();\n      if (init === 'init') {\n        this.setOffset();\n      }\n      this.getPositions();\n      this.update(this.needsUpdate(init));\n    }\n  };\n\n  var stickyNav = new StickyNav();\n\n  var loadDelay = stickyNav.elems.sticky.getAttribute('data-load-delay');\n  if (loadDelay) {\n    setTimeout(function() {\n      stickyNav.run('init');\n    }, parseInt(loadDelay));\n  } else {\n    stickyNav.run('init');\n  }\n\n\n\n  window.addEventListener('scroll', stickyNav.throttle(stickyNav.run, 130, stickyNav));\n\n  window.addEventListener('resize', stickyNav.throttle(stickyNav.run, 150, stickyNav));\n\n  // documentation: https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n  var observer = new MutationObserver(function () {\n    stickyNav.run();\n  });\n\n  // set up your configuration\n  // this will watch to see if you insert or remove any children\n  var config = { subtree: true, childList: true };\n\n  // start observing\n  observer.observe(stickyNav.elems.sticky, config);\n\n  // other potential elem listener\n  // http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/\n\n  exports.stickyNav = stickyNav;\n\n\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/components/sticky-nav.js\n ** module id = 21\n ** module chunks = 1\n **/","(function(exports) {\n    function getScrollTop() {\n      return (window.pageYOffset !== undefined)\n        ? window.pageYOffset\n        : (document.documentElement\n          || document.body.parentNode\n          || document.body).scrollTop;\n    }\n\n    function isElementInViewport(el) {\n      var rect = el.getBoundingClientRect();\n\n      return rect.bottom > 0 &&\n          rect.right > 0 &&\n          rect.left < (window.innerWidth || document. documentElement.clientWidth) &&\n          rect.top < (window.innerHeight || document. documentElement.clientHeight);\n    }\n\n    var OpenListNav = function() {\n      // init OpenListNav Properties\n      this.active = window.location.hash || '#intro';\n      this.navItems = document.querySelectorAll('[data-nav-item]');\n      this.navSelect = $('[data-nav-options]');\n      this.navIsSelect = !!this.navSelect.length;\n      this.navHeaders = document.querySelectorAll('[data-nav-header]');\n      this.scrollTop = {\n        current: getScrollTop(),\n        prev: getScrollTop(),\n        direction: 'down'\n      };\n    };\n\n    OpenListNav.prototype.updateScrollTop = function() {\n      this.scrollTop.prev = this.scrollTop.current;\n      this.scrollTop.current = getScrollTop();\n      this.scrollTop.direction = (this.scrollTop.current >= this.scrollTop.prev)\n        ? 'down'\n        : 'up';\n    };\n\n    OpenListNav.prototype.removeActive = function(){\n      this.active = null;\n      for (var i = 0; i < this.navItems.length; i++) {\n        this.navItems[i].setAttribute('data-active', false);\n      }\n    };\n\n    OpenListNav.prototype.addActive = function(el, name){\n      if (!el){\n        el = document.querySelector('[data-nav-item=\"' + name + '\"]');\n        this.active = name;\n        el.setAttribute('data-active', true);\n      } else {\n        this.active = el.getAttribute('data-nav-item');\n        el.setAttribute('data-active', true);\n      }\n    };\n\n    OpenListNav.prototype.update = function(el, name){\n      this.removeActive();\n      this.addActive(el, name);\n    };\n\n    OpenListNav.prototype.updateSelectField = function(newValue) {\n      if (newValue){\n        this.navSelect.val(newValue);\n      }\n    };\n\n    OpenListNav.prototype.registerEventHandlers = function(){\n      var self = this;\n      if (!this.navIsSelect) {\n        for (var i = 0; i < this.navItems.length; i++) {\n          var item = this.navItems[i];\n          item.addEventListener('click', function () {\n            self.update(this);\n          });\n        }\n      }\n\n      window.addEventListener('scroll', function() {\n        self.updateScrollTop();\n        // TODO: throttle\n        self.detectNavChange();\n      });\n\n      window.addEventListener('resize', function(){\n        // TODO: throttle\n        self.detectNavChange();\n      });\n\n    };\n\n    OpenListNav.prototype.changeHandler = function(selector) {\n      window.location.hash = selector.value;\n    };\n\n\n    OpenListNav.prototype.detectNavChange = function(){\n\n      var self = this;\n\n      // initialize nav status as not updated\n      var updated = false;\n\n       Array.prototype.forEach.call(this.navHeaders, function(header){\n         var inViewPort = isElementInViewport(header);\n         if (inViewPort && !self.navIsSelect && !updated) {\n           self.update(null, header.name);\n           updated = true;\n         } else if(inViewPort && self.navIsSelect && !updated) {\n           var newName = header.name || header.id;\n          self.updateSelectField(newName);\n           updated = true;\n         }\n      });\n    };\n\n    var openListNav = new OpenListNav();\n\n    openListNav.registerEventHandlers();\n\n    exports.openListNav = openListNav;\n  })(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/components/open-list-nav.js\n ** module id = 22\n ** module chunks = 1\n **/"],"sourceRoot":""}