{"version":3,"sources":["webpack:///app-3b9f50df1dcce21f5ee1.js","webpack:///./.cache/api-runner-browser.js","webpack:///./.cache/async-requires.js","webpack:///./.cache/component-renderer.js","webpack:///./.cache/emitter.js","webpack:///./.cache/find-page.js","webpack:///./.cache/history.js","webpack:///./.cache/json/404-html.json?780a","webpack:///./.cache/json/404.json?2d21","webpack:///./.cache/json/about.json?e030","webpack:///./.cache/json/explore.json?b242","webpack:///./.cache/json/layout-index.json?fda3","webpack:///./.cache/layouts/index.js?666a","webpack:///./.cache/loader.js","webpack:///./.cache/pages.json","webpack:///./.cache/prefetcher.js","webpack:///./.cache/production-app.js","webpack:///./.cache/redirects.json","webpack:///./.cache/register-service-worker.js","webpack:///./.cache/strip-prefix.js","webpack:///./gatsby-browser.js","webpack:///./~/accounting/accounting.js","webpack:///./~/currency-formatter/currencies.json","webpack:///./~/currency-formatter/index.js","webpack:///./~/currency-formatter/localeFormats.json","webpack:///./~/domready/ready.js","webpack:///./~/gatsby-module-loader/patch.js","webpack:///./~/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js?0891","webpack:///./~/lazy.js/lazy.js","webpack:///./~/locale-currency/index.js","webpack:///./~/locale-currency/map.js","webpack:///./~/lodash/_Symbol.js?dfe5","webpack:///./~/lodash/_baseGetTag.js?0d07","webpack:///./~/lodash/_freeGlobal.js?e849","webpack:///./~/lodash/_getPrototype.js?1075","webpack:///./~/lodash/_getRawTag.js?9b8e","webpack:///./~/lodash/_objectToString.js?e901","webpack:///./~/lodash/_overArg.js?12d5","webpack:///./~/lodash/_root.js?c0bd","webpack:///./~/lodash/isObjectLike.js?36be","webpack:///./~/lodash/isPlainObject.js?4342","webpack:///./~/mitt/dist/mitt.js","webpack:///./~/process/browser.js","webpack:///./~/react-redux/lib/components/Provider.js?bf89","webpack:///./~/react-redux/lib/components/connectAdvanced.js?9db7","webpack:///./~/react-redux/lib/connect/connect.js?2ae2","webpack:///./~/react-redux/lib/connect/mapDispatchToProps.js?7b00","webpack:///./~/react-redux/lib/connect/mapStateToProps.js?39db","webpack:///./~/react-redux/lib/connect/mergeProps.js?6b78","webpack:///./~/react-redux/lib/connect/selectorFactory.js?f45e","webpack:///./~/react-redux/lib/connect/verifySubselectors.js?1073","webpack:///./~/react-redux/lib/connect/wrapMapToProps.js?8f24","webpack:///./~/react-redux/lib/index.js?56e4","webpack:///./~/react-redux/lib/utils/PropTypes.js?8e7a","webpack:///./~/react-redux/lib/utils/Subscription.js?8389","webpack:///./~/react-redux/lib/utils/shallowEqual.js?2338","webpack:///./~/react-redux/lib/utils/verifyPlainObject.js?8a88","webpack:///./~/react-redux/lib/utils/warning.js?8f69","webpack:///./~/redux/lib/applyMiddleware.js?ee15","webpack:///./~/redux/lib/bindActionCreators.js?91d9","webpack:///./~/redux/lib/combineReducers.js?1086","webpack:///./~/redux/lib/compose.js?a8c7","webpack:///./~/redux/lib/createStore.js?fe4c","webpack:///./~/redux/lib/index.js?5f19","webpack:///./~/redux/lib/utils/warning.js?07c3","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/shallow-compare/lib/index.js","webpack:///./~/slugify/index.js","webpack:///./~/symbol-observable/lib/index.js?631f","webpack:///./~/symbol-observable/lib/ponyfill.js?505d","webpack:///./~/timers-browserify/main.js","webpack:///(webpack)/buildin/module.js?c3c2","webpack:///./src/data/commodity_names.yml","webpack:///./src/data/fund_names.yml","webpack:///./src/js/utils.js","webpack:///./src/pages/404.js?7ff6","webpack:///./src/pages/About/index.js?24c5","webpack:///./src/pages/Explore/index.js?e01e","webpack:///./src/store/create-store.js","webpack:///./src/store/reducers/disbursements.js","webpack:///./src/store/reducers/glossary.js?4af8","webpack:///./src/store/reducers/index.js"],"names":["webpackJsonp","191","module","exports","__webpack_require__","apiRunner","api","args","defaultReturn","results","plugins","map","plugin","result","options","filter","length","apiRunnerAsync","reduce","previous","next","then","Promise","resolve","__esModule","387","components","component---src-pages-404-js","component---src-pages-about-index-js","component---src-pages-explore-index-js","json","layout-index.json","404.json","about.json","explore.json","404-html.json","layouts","layout---index","388","_interopRequireDefault","obj","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_extends","assign","target","i","arguments","source","key","hasOwnProperty","_react","_react2","_propTypes","_propTypes2","_loader","_loader2","_emitter","_emitter2","_apiRunnerBrowser","_shallowCompare","_shallowCompare2","DefaultLayout","_ref","children","createElement","ComponentRenderer","_React$Component","props","this","_this","location","loader","getPage","pathname","state","pageResources","getResourcesForPathname","componentWillReceiveProps","nextProps","_this2","setState","componentDidMount","_this3","emitter","on","e","page","path","shouldComponentUpdate","nextState","component","matchPath","render","pluginResponses","publicLoader","replacementComponent","layout","React","Component","propTypes","PropTypes","bool","object","156","_mitt","_mitt2","389","_reactRouterDom","_stripPrefix","_stripPrefix2","pageCache","pages","pathPrefix","undefined","rawPathname","decodeURIComponent","trimmedPathname","split","slice","join","foundPage","some","exact","390","_createBrowserHistory","_createBrowserHistory2","replacementHistory","history","717","cb","_","error","console","log","716","718","719","715","711","276","process","_findPage","_findPage2","findPage","syncRequires","asyncRequires","pathScriptsCache","resourceStrCache","resourceCache","pathArray","pathCount","resourcesArray","resourcesCount","preferDefault","m","prefetcher","inInitialRender","fetchHistory","failedPaths","failedResources","MAX_HISTORY","getNextQueuedResources","createResourceDownload","resourceName","fetchResource","r","onResourcedFinished","onPreLoadPageResources","onPostLoadPageResources","sortResourcesByCount","a","b","sortPagesByCount","nextTick","resourceFunction","err","executeChunk","push","resource","succeeded","getResourceModule","appearsOnLine","isOnLine","navigator","onLine","succeededFetch","find","entry","handleResourceLoadError","message","window","replace","mountOrder","queue","empty","addPagesArray","newPages","addDevRequires","devRequires","addProdRequires","prodRequires","dequeue","pop","enqueue","rawPath","p","mountOrderBoost","has","unshift","sort","jsonName","indexOf","componentChunkName","onNewResourcesAdded","getResources","getPages","serviceWorker","controller","getRegistrations","registrations","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","done","registration","unregister","reload","emit","layoutComponentChunkName","c","j","l","peek","731","392","pagesLoading","resourcesDownloading","startResourceDownloading","nextResource","reducer","action","type","payload","setTimeout","event","getState","0","_reactDom","_reactDom2","_gatsbyReactRouterScroll","_domready","_domready2","_history","_history2","_history3","_pages","_pages2","_redirects","_redirects2","_componentRenderer","_componentRenderer2","_asyncRequires","_asyncRequires2","___history","___emitter","___loader","redirectMap","redirects","redirect","fromPath","maybeRedirect","toPath","attachToHistory","initialAttachDone","listen","shouldUpdateScroll","prevRouterProps","oldPathname","navigate","to","eventHandler","off","clearTimeout","timeoutId","historyNavigateFunc","createLocation","wl","search","hash","___push","___replace","___navigateTo","AltRouter","DefaultRouter","_ref2","Router","ComponentRendererWithRouter","withRouter","Root","ScrollContext","layoutProps","Route","routeProps","NewRoot","renderer","ReactDOM","document","getElementById","732","393","register","reg","addEventListener","installingWorker","installing","catch","277","str","prefix","substr","394","global","_reactRedux","_createStore","_createStore2","replaceRouterComponent","store","ConnectedRouterWrapper","Provider","onClientEntry","includes","190","root","isString","charCodeAt","nativeIsArray","toString","isObject","defaults","defs","context","nativeMap","checkPrecision","val","base","Math","round","abs","isNaN","checkCurrencyFormat","format","lib","settings","currency","match","pos","neg","zero","version","symbol","decimal","thousand","precision","grouping","number","unformat","parse","regex","RegExp","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","usePrecision","negative","parseInt","mod","formatMoney","formats","useFormat","formatColumn","list","padAfterSymbol","maxLength","formatted","fVal","accounting","246","AED","code","thousandsSeparator","decimalSeparator","symbolOnLeft","spaceBetweenAmountAndSymbol","decimalDigits","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTC","BTN","BWP","BYR","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MTL","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDD","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEB","VEF","VND","VUV","WST","XAF","XCD","XBT","XOF","XPF","YER","ZAR","ZMW","WON","235","locale","localeCurrency","getCurrency","localeMatch","exec","language","region","localeFormat","defaultLocaleFormat","localeFormats","defaultCurrency","findCurrency","formatMapping","f","isUndefined","currencyCode","currencies","keys","247","de","el","en-IE","es","it","nl","697","name","definition","listener","fns","doc","hack","documentElement","doScroll","domContentLoaded","loaded","test","readyState","removeEventListener","shift","fn","52","patch","onError","callback","script","head","lastChild","tagName","warn","onload","onerror","failures","querySelector","ensure","chunks","s","chunkId","immediate","handler","99","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","objectPrototype","inheritedComponent","getPrototypeOf","getOwnPropertyNames","getOwnPropertySymbols","concat","REACT_STATICS","KNOWN_STATICS","descriptor","getOwnPropertyDescriptor","defineProperty","childContextTypes","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromProps","mixins","caller","callee","arity","23","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","setImmediate","clearImmediate","factory","Lazy","ArrayWrapper","StringWrapper","Sequence","extensions","ObjectWrapper","Iterator","sequence","index","MemoizedSequence","parent","memo","complete","MappedSequence","mapFn","MappingIterator","getIterator","FilteredSequence","filterFn","FilteringIterator","ReversedSequence","ReversedIterator","ConcatenatedSequence","arrays","TakeSequence","count","TakeIterator","TakeWhileSequence","predicate","InitialSequence","DropSequence","DropWhileSequence","SortedSequence","sortFn","GroupedSequence","keyFn","valFn","IndexedSequence","CountedSequence","UniqueSequence","ZippedSequence","ShuffledSequence","FlattenedSequence","shallow","each","eachShallow","eachRecursive","WithoutSequence","values","IntersectionSequence","Memoizer","currentIndex","currentValue","UniqueMemoizer","set","Set","ConsecutiveSequence","ChunkedSequence","size","chunkSize","ChunkedIterator","TappedSequence","SimpleIntersectionSequence","array","getEachForIntersection","eachArrayCache","eachMemoizerCache","SimpleZippedSequence","ArrayLikeSequence","IndexedIterator","IndexedMappedSequence","IndexedFilteredSequence","IndexedReversedSequence","IndexedTakeSequence","IndexedDropSequence","IndexedConcatenatedSequence","other","IndexedUniqueSequence","getEachForParent","MappedArrayWrapper","FilteredArrayWrapper","UniqueArrayWrapper","getEachForSource","eachNoCache","eachSetCache","ConcatArrayWrapper","ObjectLikeSequence","KeySequence","ValuesSequence","FilteredObjectLikeSequence","AssignSequence","DefaultsSequence","defaultValues","InvertedSequence","MergedSequence","others","mergeFn","mergeObjects","merged","prop","isVanillaObject","PickSequence","properties","OmitSequence","StringLikeSequence","CharIterator","StringSegment","start","stop","max","MappedStringLikeSequence","ReversedStringLikeSequence","StringMatchSequence","pattern","StringMatchIterator","cloneRegex","SplitStringSequence","SplitWithRegExpIterator","SplitWithStringIterator","delimiter","GeneratedSequence","generatorFn","get","fixedLength","GeneratedIterator","AsyncSequence","interval","Error","onNextCallback","getOnNextCallback","cancelCallback","getCancelCallback","AsyncHandle","cancelFn","resolveListeners","rejectListeners","PENDING","promise","x","_reject","reason","thenableState","_resolve","RESOLVED","REJECTED","consumeListeners","listeners","transform","WatchedPropertySequence","propertyNames","toArray","propertyName","propertyValue","property","splice","StreamLikeSequence","SplitStreamSequence","getEachForDelimiter","MatchedStreamSequence","curry","curried","arraySlice","apply","curryRight","curriedRight","createCallback","defaultValue","all","identity","createComparator","y","compare","reverseArguments","createSet","flatten","add","forEach","len","getFirst","arrayContains","element","arrayContainsBefore","swap","temp","eval","table","objects","Queue","capacity","contents","defineSequenceType","overrides","ctor","override","init","methodNames","VERSION","noop","equality","strict","StrictLazy","define","methodName","getIndex","isAsync","previousSource","current","cachedIndex","moveNext","arr","equals","equalityFn","oit","eq","memoize","toObject","pair","collect","pluck","invoke","select","reverse","reject","rejectFn","ofType","where","var_args","first","take","handle","takeWhile","finished","initial","last","findWhere","rest","skip","tail","drop","dropped","dropWhile","skipWhile","descending","sortBy","groupBy","indexBy","countBy","uniq","unique","cache","zip","iteratedLeft","group","keepGoing","shuffle","shuffled","floor","random","recurseVisitor","compact","without","difference","contains","union","intersection","sets","setIterator","includedInAll","every","success","any","none","isEmpty","foundIndex","lastIndexOf","reversed","sortedIndex","indexed","lower","upper","aggregator","eachResult","inject","foldl","reduceRight","foldr","consecutive","segments","chunk","currentChunk","tap","detect","min","valueFn","minBy","prev","maxBy","sum","sumBy","String","async","begin","end","parentLength","getParentIterator","iterateTo","Infinity","k","sourceLength","otherLength","pairs","v","extend","parentValue","invert","merge","arrayPop","iteratedFullSource","remaining","functions","methods","pick","inArray","omit","grouped","counted","watch","charAt","char","NaN","substring","startIndex","endsWith","suffix","startsWith","toUpperCase","mapString","toLowerCase","nextStart","leftIndex","rightIndex","cancellationId","iterate","onFulfilled","onRejected","cancel","onComplete","found","regexEach","stringEach","buffer","pieceIndex","delimiterIndex","piece","lines","createWrapper","initializer","data","generate","range","step","ceil","repeat","clone","deprecate","snapshot","253","getCountryCode","localeString","countryCode","getLocales","locales","254","AD","AE","AF","AG","AI","AL","AM","AN","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","63","121","baseGetTag","undefinedTag","nullTag","symToStringTag","getRawTag","objectToString","toStringTag","122","freeGlobal","123","overArg","getPrototype","124","isOwn","tag","unmasked","nativeObjectToString","objectProto","125","126","func","arg","127","freeSelf","Function","128","isObjectLike","36","isPlainObject","objectTag","proto","Ctor","funcToString","objectCtorString","funcProto","742","n","100","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","run","Item","title","browser","env","argv","versions","addListener","once","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","135","createProvider","_Provider$childContex","storeKey","subKey","subscriptionKey","_Component","getChildContext","Children","only","_PropTypes","storeShape","isRequired","subscriptionShape","_warning","65","_objectWithoutProperties","makeSelectorStateful","sourceSelector","selector","connectAdvanced","selectorFactory","_contextTypes","_childContextTypes","_ref$getDisplayName","getDisplayName","_ref$methodName","_ref$renderCountProp","renderCountProp","_ref$shouldHandleStat","shouldHandleStateChanges","_ref$storeKey","_ref$withRef","withRef","connectOptions","hotReloadingVersion","WrappedComponent","_invariant2","JSON","stringify","wrappedComponentName","selectorFactoryOptions","Connect","renderCount","propsMode","Boolean","setWrappedInstance","bind","initSelector","initSubscription","subscription","trySubscribe","forceUpdate","componentWillUnmount","tryUnsubscribe","notifyNestedSubs","getWrappedInstance","wrappedInstance","ref","dispatch","parentSub","_Subscription2","onStateChange","componentDidUpdate","notifyNestedSubsOnComponentDidUpdate","dummyState","isSubscribed","addExtraProps","withExtras","_hoistNonReactStatics2","_hoistNonReactStatics","_invariant","_Subscription","136","factories","strictEqual","createConnect","_ref$connectHOC","connectHOC","_connectAdvanced2","_ref$mapStateToPropsF","mapStateToPropsFactories","_mapStateToProps2","_ref$mapDispatchToPro","mapDispatchToPropsFactories","_mapDispatchToProps2","_ref$mergePropsFactor","mergePropsFactories","_mergeProps2","_ref$selectorFactory","_selectorFactory2","mapStateToProps","mapDispatchToProps","mergeProps","_ref2$pure","pure","_ref2$areStatesEqual","areStatesEqual","_ref2$areOwnPropsEqua","areOwnPropsEqual","_shallowEqual2","_ref2$areStatePropsEq","areStatePropsEqual","_ref2$areMergedPropsE","areMergedPropsEqual","extraOptions","initMapStateToProps","initMapDispatchToProps","initMergeProps","_connectAdvanced","_shallowEqual","_mapDispatchToProps","_mapStateToProps","_mergeProps","_selectorFactory","137","whenMapDispatchToPropsIsFunction","_wrapMapToProps","wrapMapToPropsFunc","whenMapDispatchToPropsIsMissing","wrapMapToPropsConstant","whenMapDispatchToPropsIsObject","_redux","bindActionCreators","138","whenMapStateToPropsIsFunction","whenMapStateToPropsIsMissing","139","defaultMergeProps","stateProps","dispatchProps","ownProps","wrapMergePropsFunc","hasRunOnce","mergedProps","nextMergedProps","whenMergePropsIsFunction","whenMergePropsIsOmitted","_verifyPlainObject","140","impureFinalPropsSelectorFactory","pureFinalPropsSelectorFactory","handleFirstCall","firstState","firstOwnProps","hasRunAtLeastOnce","handleNewPropsAndNewState","dependsOnOwnProps","handleNewProps","handleNewState","nextStateProps","statePropsChanged","handleSubsequentCalls","nextOwnProps","propsChanged","stateChanged","finalPropsSelectorFactory","_verifySubselectors","141","verify","_warning2","verifySubselectors","66","getConstant","constantSelector","constant","getDependsOnOwnProps","mapToProps","proxy","stateOrDispatch","33","connect","_Provider","_Provider2","_connect","_connect2","67","shape","subscribe","142","createListenerCollection","clear","CLEARED","notify","nullListeners","Subscription","unsubscribe","addNestedSub","143","is","shallowEqual","objA","objB","keysA","keysB","hasOwn","68","verifyPlainObject","_isPlainObject2","_isPlainObject","38","warning","147","applyMiddleware","_len","middlewares","_key","createStore","preloadedState","enhancer","_dispatch","chain","middlewareAPI","middleware","_compose2","_compose","148","bindActionCreator","actionCreator","actionCreators","boundActionCreators","149","getUndefinedStateErrorMessage","actionType","actionName","assertReducerShape","reducers","initialState","ActionTypes","INIT","combineReducers","reducerKeys","finalReducers","finalReducerKeys","shapeAssertionError","hasChanged","previousStateForKey","nextStateForKey","errorMessage","69","compose","funcs","70","ensureCanMutateNextListeners","nextListeners","currentListeners","currentState","isDispatching","currentReducer","replaceReducer","nextReducer","observable","outerSubscribe","observer","observeState","_symbolObservable2","_symbolObservable","82","_combineReducers","_combineReducers2","_bindActionCreators","_bindActionCreators2","_applyMiddleware","_applyMiddleware2","71","274","task","tasksByHandle","nextHandle","registerImmediate","runIfPresent","currentlyRunningATask","installNextTickImplementation","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","installPostMessageImplementation","messagePrefix","onGlobalMessage","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","onreadystatechange","removeChild","appendChild","installSetTimeoutImplementation","attachTo","843","shallowDiffers","107","string","replacement","slug","ch","charMap","remove","customMap","151","_ponyfill","_ponyfill2","152","symbolObservablePonyfill","_Symbol","153","Timeout","id","clearFn","_id","_clearFn","scope","setInterval","clearInterval","close","unref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","155","webpackPolyfill","paths","248","All","Crude Oil","CO2","Geothermal","Hardrock","Natural Gas","NGL","Wood and wood-derived fuels","Conventional Hydroelectric","249","States","description","U.S. Treasury","Reclamation","Land & Water Conservation","link","Historic Preservation","American Indian Tribes","Other","21","_slugify","_slugify2","_currencyFormatter","_currencyFormatter2","_commodity_names","_commodity_names2","utils","commodityNames","formatToSlug","formatToDollarInt","currencyFormatter","formatToCommaInt","throttle","limit","wait","groups","itemGroup","resolveByStringPath","curr","fill","idx","712","713","714","278","_index","_index2","devtools","rootReducer","158","hydateDisbursements","selectYear","_fund_names","_fund_names2","_utils","_utils2","_lazy","_lazy2","year","years","disbursements","2017","total","highestFundValue","sortOrderIndex","Onshore","GOMESA","Offshore","fundInfo","FUND_INFO","SELECT_YEAR","HYDRATE_DISBURSEMENTS","newState","hydrateDisbursements","sortedByYear","Year","fundSortOrder","disbursementsForYear","hydrateDisbursementsForYear","fund","disbursementsByFund","_loop","fundKey","fundToAdd","sourceData","fundData","disbursement","Source","Disbursement","55","glossaryTerm","glossaryOpen","GLOSSARY_TERM_SELECTED","glossaryTermSelected","term","doOpen","openGlossary","423","createReducer","_glossary","_glossary2","_disbursements","_disbursements2","glossary","handlers"],"mappings":"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","file":"app-3b9f50df1dcce21f5ee1.js","sourcesContent":["webpackJsonp([231608221292675],{\n\n/***/ 191:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.apiRunner = apiRunner;\n\texports.apiRunnerAsync = apiRunnerAsync;\n\tvar plugins = [{\n\t  plugin: __webpack_require__(394),\n\t  options: { \"plugins\": [] }\n\t}];\n\t// During bootstrap, we write requires at top of this file which looks\n\t// basically like:\n\t// var plugins = [\n\t//   {\n\t//     plugin: require(\"/path/to/plugin1/gatsby-browser.js\"),\n\t//     options: { ... },\n\t//   },\n\t//   {\n\t//     plugin: require(\"/path/to/plugin2/gatsby-browser.js\"),\n\t//     options: { ... },\n\t//   },\n\t// ]\n\t\n\tfunction apiRunner(api, args, defaultReturn) {\n\t  var results = plugins.map(function (plugin) {\n\t    if (plugin.plugin[api]) {\n\t      var result = plugin.plugin[api](args, plugin.options);\n\t      return result;\n\t    }\n\t  });\n\t\n\t  // Filter out undefined results.\n\t  results = results.filter(function (result) {\n\t    return typeof result !== \"undefined\";\n\t  });\n\t\n\t  if (results.length > 0) {\n\t    return results;\n\t  } else if (defaultReturn) {\n\t    return [defaultReturn];\n\t  } else {\n\t    return [];\n\t  }\n\t}\n\t\n\tfunction apiRunnerAsync(api, args, defaultReturn) {\n\t  return plugins.reduce(function (previous, next) {\n\t    return next.plugin[api] ? previous.then(function () {\n\t      return next.plugin[api](args, next.options);\n\t    }) : previous;\n\t  }, Promise.resolve());\n\t}\n\n/***/ }),\n\n/***/ 387:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t// prefer default export if available\n\tvar preferDefault = function preferDefault(m) {\n\t  return m && m.default || m;\n\t};\n\t\n\texports.components = {\n\t  \"component---src-pages-404-js\": __webpack_require__(712),\n\t  \"component---src-pages-about-index-js\": __webpack_require__(713),\n\t  \"component---src-pages-explore-index-js\": __webpack_require__(714)\n\t};\n\t\n\texports.json = {\n\t  \"layout-index.json\": __webpack_require__(715),\n\t  \"404.json\": __webpack_require__(716),\n\t  \"about.json\": __webpack_require__(718),\n\t  \"explore.json\": __webpack_require__(719),\n\t  \"404-html.json\": __webpack_require__(717)\n\t};\n\t\n\texports.layouts = {\n\t  \"layout---index\": __webpack_require__(711)\n\t};\n\n/***/ }),\n\n/***/ 388:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(8);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _loader = __webpack_require__(276);\n\t\n\tvar _loader2 = _interopRequireDefault(_loader);\n\t\n\tvar _emitter = __webpack_require__(156);\n\t\n\tvar _emitter2 = _interopRequireDefault(_emitter);\n\t\n\tvar _apiRunnerBrowser = __webpack_require__(191);\n\t\n\tvar _shallowCompare = __webpack_require__(843);\n\t\n\tvar _shallowCompare2 = _interopRequireDefault(_shallowCompare);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DefaultLayout = function DefaultLayout(_ref) {\n\t  var children = _ref.children;\n\t  return _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    children()\n\t  );\n\t};\n\t\n\t// Pass pathname in as prop.\n\t// component will try fetching resources. If they exist,\n\t// will just render, else will render null.\n\t\n\tvar ComponentRenderer = function (_React$Component) {\n\t  _inherits(ComponentRenderer, _React$Component);\n\t\n\t  function ComponentRenderer(props) {\n\t    _classCallCheck(this, ComponentRenderer);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this));\n\t\n\t    var location = props.location;\n\t\n\t    // Set the pathname for 404 pages.\n\t    if (!_loader2.default.getPage(location.pathname)) {\n\t      location = _extends({}, location, {\n\t        pathname: \"/404.html\"\n\t      });\n\t    }\n\t\n\t    _this.state = {\n\t      location: location,\n\t      pageResources: _loader2.default.getResourcesForPathname(location.pathname)\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  ComponentRenderer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n\t    var _this2 = this;\n\t\n\t    // During development, always pass a component's JSON through so graphql\n\t    // updates go through.\n\t    if (false) {\n\t      if (nextProps && nextProps.pageResources && nextProps.pageResources.json) {\n\t        this.setState({ pageResources: nextProps.pageResources });\n\t      }\n\t    }\n\t    if (this.state.location.pathname !== nextProps.location.pathname) {\n\t      var pageResources = _loader2.default.getResourcesForPathname(nextProps.location.pathname);\n\t      if (!pageResources) {\n\t        var location = nextProps.location;\n\t\n\t        // Set the pathname for 404 pages.\n\t        if (!_loader2.default.getPage(location.pathname)) {\n\t          location = _extends({}, location, {\n\t            pathname: \"/404.html\"\n\t          });\n\t        }\n\t\n\t        // Page resources won't be set in cases where the browser back button\n\t        // or forward button is pushed as we can't wait as normal for resources\n\t        // to load before changing the page.\n\t        _loader2.default.getResourcesForPathname(location.pathname, function (pageResources) {\n\t          _this2.setState({\n\t            location: location,\n\t            pageResources: pageResources\n\t          });\n\t        });\n\t      } else {\n\t        this.setState({\n\t          location: nextProps.location,\n\t          pageResources: pageResources\n\t        });\n\t      }\n\t    }\n\t  };\n\t\n\t  ComponentRenderer.prototype.componentDidMount = function componentDidMount() {\n\t    var _this3 = this;\n\t\n\t    // Listen to events so when our page gets updated, we can transition.\n\t    // This is only useful on delayed transitions as the page will get rendered\n\t    // without the necessary page resources and then re-render once those come in.\n\t    _emitter2.default.on(\"onPostLoadPageResources\", function (e) {\n\t      if (_loader2.default.getPage(_this3.state.location.pathname) && e.page.path === _loader2.default.getPage(_this3.state.location.pathname).path) {\n\t        _this3.setState({ pageResources: e.pageResources });\n\t      }\n\t    });\n\t  };\n\t\n\t  ComponentRenderer.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n\t    // 404\n\t    if (!nextState.pageResources) {\n\t      return true;\n\t    }\n\t    // Check if the component or json have changed.\n\t    if (!this.state.pageResources && nextState.pageResources) {\n\t      return true;\n\t    }\n\t    if (this.state.pageResources.component !== nextState.pageResources.component) {\n\t      return true;\n\t    }\n\t\n\t    if (this.state.pageResources.json !== nextState.pageResources.json) {\n\t      return true;\n\t    }\n\t\n\t    // Check if location has changed on a page using internal routing\n\t    // via matchPath configuration.\n\t    if (this.state.location.key !== nextState.location.key && nextState.pageResources.page && (nextState.pageResources.page.matchPath || nextState.pageResources.page.path)) {\n\t      return true;\n\t    }\n\t\n\t    return (0, _shallowCompare2.default)(this, nextProps, nextState);\n\t  };\n\t\n\t  ComponentRenderer.prototype.render = function render() {\n\t    var pluginResponses = (0, _apiRunnerBrowser.apiRunner)(\"replaceComponentRenderer\", {\n\t      props: _extends({}, this.props, { pageResources: this.state.pageResources }),\n\t      loader: _loader.publicLoader\n\t    });\n\t    var replacementComponent = pluginResponses[0];\n\t    // If page.\n\t    if (this.props.page) {\n\t      if (this.state.pageResources) {\n\t        return replacementComponent || (0, _react.createElement)(this.state.pageResources.component, _extends({\n\t          key: this.props.location.pathname\n\t        }, this.props, this.state.pageResources.json));\n\t      } else {\n\t        return null;\n\t      }\n\t      // If layout.\n\t    } else if (this.props.layout) {\n\t      return replacementComponent || (0, _react.createElement)(this.state.pageResources && this.state.pageResources.layout ? this.state.pageResources.layout : DefaultLayout, _extends({\n\t        key: this.state.pageResources && this.state.pageResources.layout ? this.state.pageResources.layout : \"DefaultLayout\"\n\t      }, this.props));\n\t    } else {\n\t      return null;\n\t    }\n\t  };\n\t\n\t  return ComponentRenderer;\n\t}(_react2.default.Component);\n\t\n\tComponentRenderer.propTypes = {\n\t  page: _propTypes2.default.bool,\n\t  layout: _propTypes2.default.bool,\n\t  location: _propTypes2.default.object\n\t};\n\t\n\texports.default = ComponentRenderer;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 156:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _mitt = __webpack_require__(742);\n\t\n\tvar _mitt2 = _interopRequireDefault(_mitt);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar emitter = (0, _mitt2.default)();\n\tmodule.exports = emitter;\n\n/***/ }),\n\n/***/ 389:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _reactRouterDom = __webpack_require__(144);\n\t\n\tvar _stripPrefix = __webpack_require__(277);\n\t\n\tvar _stripPrefix2 = _interopRequireDefault(_stripPrefix);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// TODO add tests especially for handling prefixed links.\n\tvar pageCache = {};\n\t\n\tmodule.exports = function (pages) {\n\t  var pathPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\t  return function (rawPathname) {\n\t    var pathname = decodeURIComponent(rawPathname);\n\t\n\t    // Remove the pathPrefix from the pathname.\n\t    var trimmedPathname = (0, _stripPrefix2.default)(pathname, pathPrefix);\n\t\n\t    // Remove any hashfragment\n\t    if (trimmedPathname.split(\"#\").length > 1) {\n\t      trimmedPathname = trimmedPathname.split(\"#\").slice(0, -1).join(\"\");\n\t    }\n\t\n\t    // Remove search query\n\t    if (trimmedPathname.split(\"?\").length > 1) {\n\t      trimmedPathname = trimmedPathname.split(\"?\").slice(0, -1).join(\"\");\n\t    }\n\t\n\t    if (pageCache[trimmedPathname]) {\n\t      return pageCache[trimmedPathname];\n\t    }\n\t\n\t    var foundPage = void 0;\n\t    // Array.prototype.find is not supported in IE so we use this somewhat odd\n\t    // work around.\n\t    pages.some(function (page) {\n\t      if (page.matchPath) {\n\t        // Try both the path and matchPath\n\t        if ((0, _reactRouterDom.matchPath)(trimmedPathname, { path: page.path }) || (0, _reactRouterDom.matchPath)(trimmedPathname, {\n\t          path: page.matchPath\n\t        })) {\n\t          foundPage = page;\n\t          pageCache[trimmedPathname] = page;\n\t          return true;\n\t        }\n\t      } else {\n\t        if ((0, _reactRouterDom.matchPath)(trimmedPathname, {\n\t          path: page.path,\n\t          exact: true\n\t        })) {\n\t          foundPage = page;\n\t          pageCache[trimmedPathname] = page;\n\t          return true;\n\t        }\n\t\n\t        // Finally, try and match request with default document.\n\t        if ((0, _reactRouterDom.matchPath)(trimmedPathname, {\n\t          path: page.path + \"index.html\"\n\t        })) {\n\t          foundPage = page;\n\t          pageCache[trimmedPathname] = page;\n\t          return true;\n\t        }\n\t      }\n\t\n\t      return false;\n\t    });\n\t\n\t    return foundPage;\n\t  };\n\t};\n\n/***/ }),\n\n/***/ 390:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createBrowserHistory = __webpack_require__(340);\n\t\n\tvar _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);\n\t\n\tvar _apiRunnerBrowser = __webpack_require__(191);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar pluginResponses = (0, _apiRunnerBrowser.apiRunner)(\"replaceHistory\");\n\tvar replacementHistory = pluginResponses[0];\n\tvar history = replacementHistory || (0, _createBrowserHistory2.default)();\n\tmodule.exports = history;\n\n/***/ }),\n\n/***/ 717:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      52\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(178698757827068, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(727) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 716:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      52\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(254022195166212, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(728) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 718:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      52\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(273950069227526, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(729) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 719:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      52\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(23951649087997, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(730) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 715:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      52\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(60335399758886, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(245) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 711:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      52\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(114276838955818, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(391) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 276:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.publicLoader = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _findPage = __webpack_require__(389);\n\t\n\tvar _findPage2 = _interopRequireDefault(_findPage);\n\t\n\tvar _emitter = __webpack_require__(156);\n\t\n\tvar _emitter2 = _interopRequireDefault(_emitter);\n\t\n\tvar _stripPrefix = __webpack_require__(277);\n\t\n\tvar _stripPrefix2 = _interopRequireDefault(_stripPrefix);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar findPage = void 0;\n\t\n\tvar syncRequires = {};\n\tvar asyncRequires = {};\n\tvar pathScriptsCache = {};\n\tvar resourceStrCache = {};\n\tvar resourceCache = {};\n\tvar pages = [];\n\t// Note we're not actively using the path data atm. There\n\t// could be future optimizations however around trying to ensure\n\t// we load all resources for likely-to-be-visited paths.\n\tvar pathArray = [];\n\tvar pathCount = {};\n\tvar pathPrefix = \"\";\n\tvar resourcesArray = [];\n\tvar resourcesCount = {};\n\tvar preferDefault = function preferDefault(m) {\n\t  return m && m.default || m;\n\t};\n\tvar prefetcher = void 0;\n\tvar inInitialRender = true;\n\tvar fetchHistory = [];\n\tvar failedPaths = {};\n\tvar failedResources = {};\n\tvar MAX_HISTORY = 5;\n\t\n\t// Prefetcher logic\n\tif (true) {\n\t  prefetcher = __webpack_require__(392)({\n\t    getNextQueuedResources: function getNextQueuedResources() {\n\t      return resourcesArray.slice(-1)[0];\n\t    },\n\t    createResourceDownload: function createResourceDownload(resourceName) {\n\t      fetchResource(resourceName, function () {\n\t        resourcesArray = resourcesArray.filter(function (r) {\n\t          return r !== resourceName;\n\t        });\n\t        prefetcher.onResourcedFinished(resourceName);\n\t      });\n\t    }\n\t  });\n\t  _emitter2.default.on(\"onPreLoadPageResources\", function (e) {\n\t    prefetcher.onPreLoadPageResources(e);\n\t  });\n\t  _emitter2.default.on(\"onPostLoadPageResources\", function (e) {\n\t    prefetcher.onPostLoadPageResources(e);\n\t  });\n\t}\n\t\n\tvar sortResourcesByCount = function sortResourcesByCount(a, b) {\n\t  if (resourcesCount[a] > resourcesCount[b]) {\n\t    return 1;\n\t  } else if (resourcesCount[a] < resourcesCount[b]) {\n\t    return -1;\n\t  } else {\n\t    return 0;\n\t  }\n\t};\n\t\n\tvar sortPagesByCount = function sortPagesByCount(a, b) {\n\t  if (pathCount[a] > pathCount[b]) {\n\t    return 1;\n\t  } else if (pathCount[a] < pathCount[b]) {\n\t    return -1;\n\t  } else {\n\t    return 0;\n\t  }\n\t};\n\t\n\tvar fetchResource = function fetchResource(resourceName) {\n\t  var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\t\n\t  if (resourceStrCache[resourceName]) {\n\t    process.nextTick(function () {\n\t      cb(null, resourceStrCache[resourceName]);\n\t    });\n\t  } else {\n\t    // Find resource\n\t    var resourceFunction = void 0;\n\t    if (resourceName.slice(0, 12) === \"component---\") {\n\t      resourceFunction = asyncRequires.components[resourceName];\n\t    } else if (resourceName.slice(0, 9) === \"layout---\") {\n\t      resourceFunction = asyncRequires.layouts[resourceName];\n\t    } else {\n\t      resourceFunction = asyncRequires.json[resourceName];\n\t    }\n\t\n\t    // Download the resource\n\t    resourceFunction(function (err, executeChunk) {\n\t      resourceStrCache[resourceName] = executeChunk;\n\t      fetchHistory.push({\n\t        resource: resourceName,\n\t        succeeded: !err\n\t      });\n\t\n\t      if (!failedResources[resourceName]) {\n\t        failedResources[resourceName] = err;\n\t      }\n\t\n\t      fetchHistory = fetchHistory.slice(-MAX_HISTORY);\n\t      cb(err, executeChunk);\n\t    });\n\t  }\n\t};\n\t\n\tvar getResourceModule = function getResourceModule(resourceName, cb) {\n\t  if (resourceCache[resourceName]) {\n\t    process.nextTick(function () {\n\t      cb(null, resourceCache[resourceName]);\n\t    });\n\t  } else if (failedResources[resourceName]) {\n\t    process.nextTick(function () {\n\t      cb(failedResources[resourceName]);\n\t    });\n\t  } else {\n\t    fetchResource(resourceName, function (err, executeChunk) {\n\t      if (err) {\n\t        cb(err);\n\t      } else {\n\t        var module = preferDefault(executeChunk());\n\t        resourceCache[resourceName] = module;\n\t        cb(err, module);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\tvar appearsOnLine = function appearsOnLine() {\n\t  var isOnLine = navigator.onLine;\n\t  if (typeof isOnLine === \"boolean\") {\n\t    return isOnLine;\n\t  }\n\t\n\t  // If no navigator.onLine support assume onLine if any of last N fetches succeeded\n\t  var succeededFetch = fetchHistory.find(function (entry) {\n\t    return entry.succeeded;\n\t  });\n\t  return !!succeededFetch;\n\t};\n\t\n\tvar handleResourceLoadError = function handleResourceLoadError(path, message) {\n\t  console.log(message);\n\t\n\t  if (!failedPaths[path]) {\n\t    failedPaths[path] = message;\n\t  }\n\t\n\t  if (appearsOnLine() && window.location.pathname.replace(/\\/$/g, \"\") !== path.replace(/\\/$/g, \"\")) {\n\t    window.location.pathname = path;\n\t  }\n\t};\n\t\n\tvar mountOrder = 1;\n\tvar queue = {\n\t  empty: function empty() {\n\t    pathArray = [];\n\t    pathCount = {};\n\t    resourcesCount = {};\n\t    resourcesArray = [];\n\t    pages = [];\n\t    pathPrefix = \"\";\n\t  },\n\t  addPagesArray: function addPagesArray(newPages) {\n\t    pages = newPages;\n\t    if (true) {\n\t      if (true) pathPrefix = (\"/gatsby-public\");\n\t    }\n\t    findPage = (0, _findPage2.default)(newPages, pathPrefix);\n\t  },\n\t  addDevRequires: function addDevRequires(devRequires) {\n\t    syncRequires = devRequires;\n\t  },\n\t  addProdRequires: function addProdRequires(prodRequires) {\n\t    asyncRequires = prodRequires;\n\t  },\n\t  dequeue: function dequeue() {\n\t    return pathArray.pop();\n\t  },\n\t  enqueue: function enqueue(rawPath) {\n\t    // Check page exists.\n\t    var path = (0, _stripPrefix2.default)(rawPath, pathPrefix);\n\t    if (!pages.some(function (p) {\n\t      return p.path === path;\n\t    })) {\n\t      return false;\n\t    }\n\t\n\t    var mountOrderBoost = 1 / mountOrder;\n\t    mountOrder += 1;\n\t    // console.log(\n\t    // `enqueue \"${path}\", mountOrder: \"${mountOrder}, mountOrderBoost: ${mountOrderBoost}`\n\t    // )\n\t\n\t    // Add to path counts.\n\t    if (!pathCount[path]) {\n\t      pathCount[path] = 1;\n\t    } else {\n\t      pathCount[path] += 1;\n\t    }\n\t\n\t    // Add path to queue.\n\t    if (!queue.has(path)) {\n\t      pathArray.unshift(path);\n\t    }\n\t\n\t    // Sort pages by pathCount\n\t    pathArray.sort(sortPagesByCount);\n\t\n\t    // Add resources to queue.\n\t    var page = findPage(path);\n\t    if (page.jsonName) {\n\t      if (!resourcesCount[page.jsonName]) {\n\t        resourcesCount[page.jsonName] = 1 + mountOrderBoost;\n\t      } else {\n\t        resourcesCount[page.jsonName] += 1 + mountOrderBoost;\n\t      }\n\t\n\t      // Before adding, checking that the JSON resource isn't either\n\t      // already queued or been downloading.\n\t      if (resourcesArray.indexOf(page.jsonName) === -1 && !resourceStrCache[page.jsonName]) {\n\t        resourcesArray.unshift(page.jsonName);\n\t      }\n\t    }\n\t    if (page.componentChunkName) {\n\t      if (!resourcesCount[page.componentChunkName]) {\n\t        resourcesCount[page.componentChunkName] = 1 + mountOrderBoost;\n\t      } else {\n\t        resourcesCount[page.componentChunkName] += 1 + mountOrderBoost;\n\t      }\n\t\n\t      // Before adding, checking that the component resource isn't either\n\t      // already queued or been downloading.\n\t      if (resourcesArray.indexOf(page.componentChunkName) === -1 && !resourceStrCache[page.jsonName]) {\n\t        resourcesArray.unshift(page.componentChunkName);\n\t      }\n\t    }\n\t\n\t    // Sort resources by resourcesCount.\n\t    resourcesArray.sort(sortResourcesByCount);\n\t    if (true) {\n\t      prefetcher.onNewResourcesAdded();\n\t    }\n\t\n\t    return true;\n\t  },\n\t  getResources: function getResources() {\n\t    return {\n\t      resourcesArray: resourcesArray,\n\t      resourcesCount: resourcesCount\n\t    };\n\t  },\n\t  getPages: function getPages() {\n\t    return {\n\t      pathArray: pathArray,\n\t      pathCount: pathCount\n\t    };\n\t  },\n\t  getPage: function getPage(pathname) {\n\t    return findPage(pathname);\n\t  },\n\t  has: function has(path) {\n\t    return pathArray.some(function (p) {\n\t      return p === path;\n\t    });\n\t  },\n\t  getResourcesForPathname: function getResourcesForPathname(path) {\n\t    var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\t\n\t    if (inInitialRender && navigator && navigator.serviceWorker && navigator.serviceWorker.controller && navigator.serviceWorker.controller.state === \"activated\") {\n\t      // If we're loading from a service worker (it's already activated on\n\t      // this initial render) and we can't find a page, there's a good chance\n\t      // we're on a new page that this (now old) service worker doesn't know\n\t      // about so we'll unregister it and reload.\n\t      if (!findPage(path)) {\n\t        navigator.serviceWorker.getRegistrations().then(function (registrations) {\n\t          // We would probably need this to\n\t          // prevent unnecessary reloading of the page\n\t          // while unregistering of ServiceWorker is not happening\n\t          if (registrations.length) {\n\t            for (var _iterator = registrations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t              var _ref;\n\t\n\t              if (_isArray) {\n\t                if (_i >= _iterator.length) break;\n\t                _ref = _iterator[_i++];\n\t              } else {\n\t                _i = _iterator.next();\n\t                if (_i.done) break;\n\t                _ref = _i.value;\n\t              }\n\t\n\t              var registration = _ref;\n\t\n\t              registration.unregister();\n\t            }\n\t            window.location.reload();\n\t          }\n\t        });\n\t      }\n\t    }\n\t    inInitialRender = false;\n\t    // In development we know the code is loaded already\n\t    // so we just return with it immediately.\n\t    if (false) {\n\t      var page = findPage(path);\n\t      if (!page) return cb();\n\t      var pageResources = {\n\t        component: syncRequires.components[page.componentChunkName],\n\t        json: syncRequires.json[page.jsonName],\n\t        layout: syncRequires.layouts[page.layout],\n\t        page: page\n\t      };\n\t      cb(pageResources);\n\t      return pageResources;\n\t      // Production code path\n\t    } else {\n\t      if (failedPaths[path]) {\n\t        handleResourceLoadError(path, \"Previously detected load failure for \\\"\" + path + \"\\\"\");\n\t\n\t        return cb();\n\t      }\n\t\n\t      var _page = findPage(path);\n\t\n\t      if (!_page) {\n\t        handleResourceLoadError(path, \"A page wasn't found for \\\"\" + path + \"\\\"\");\n\t\n\t        return cb();\n\t      }\n\t\n\t      // Use the path from the page so the pathScriptsCache uses\n\t      // the normalized path.\n\t      path = _page.path;\n\t\n\t      // Check if it's in the cache already.\n\t      if (pathScriptsCache[path]) {\n\t        process.nextTick(function () {\n\t          cb(pathScriptsCache[path]);\n\t          _emitter2.default.emit(\"onPostLoadPageResources\", {\n\t            page: _page,\n\t            pageResources: pathScriptsCache[path]\n\t          });\n\t        });\n\t        return pathScriptsCache[path];\n\t      }\n\t\n\t      _emitter2.default.emit(\"onPreLoadPageResources\", { path: path });\n\t      // Nope, we need to load resource(s)\n\t      var component = void 0;\n\t      var json = void 0;\n\t      var layout = void 0;\n\t      // Load the component/json/layout and parallel and call this\n\t      // function when they're done loading. When both are loaded,\n\t      // we move on.\n\t      var done = function done() {\n\t        if (component && json && (!_page.layoutComponentChunkName || layout)) {\n\t          pathScriptsCache[path] = { component: component, json: json, layout: layout, page: _page };\n\t          var _pageResources = { component: component, json: json, layout: layout, page: _page };\n\t          cb(_pageResources);\n\t          _emitter2.default.emit(\"onPostLoadPageResources\", {\n\t            page: _page,\n\t            pageResources: _pageResources\n\t          });\n\t        }\n\t      };\n\t      getResourceModule(_page.componentChunkName, function (err, c) {\n\t        if (err) {\n\t          handleResourceLoadError(_page.path, \"Loading the component for \" + _page.path + \" failed\");\n\t        }\n\t        component = c;\n\t        done();\n\t      });\n\t      getResourceModule(_page.jsonName, function (err, j) {\n\t        if (err) {\n\t          handleResourceLoadError(_page.path, \"Loading the JSON for \" + _page.path + \" failed\");\n\t        }\n\t        json = j;\n\t        done();\n\t      });\n\t\n\t      _page.layoutComponentChunkName && getResourceModule(_page.layout, function (err, l) {\n\t        if (err) {\n\t          handleResourceLoadError(_page.path, \"Loading the Layout for \" + _page.path + \" failed\");\n\t        }\n\t        layout = l;\n\t        done();\n\t      });\n\t\n\t      return undefined;\n\t    }\n\t  },\n\t  peek: function peek(path) {\n\t    return pathArray.slice(-1)[0];\n\t  },\n\t  length: function length() {\n\t    return pathArray.length;\n\t  },\n\t  indexOf: function indexOf(path) {\n\t    return pathArray.length - pathArray.indexOf(path) - 1;\n\t  }\n\t};\n\t\n\tvar publicLoader = exports.publicLoader = {\n\t  getResourcesForPathname: queue.getResourcesForPathname\n\t};\n\t\n\texports.default = queue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(100)))\n\n/***/ }),\n\n/***/ 731:\n/***/ (function(module, exports) {\n\n\tmodule.exports = [{\"componentChunkName\":\"component---src-pages-404-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"404.json\",\"path\":\"/404/\"},{\"componentChunkName\":\"component---src-pages-about-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"about.json\",\"path\":\"/About/\"},{\"componentChunkName\":\"component---src-pages-explore-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"explore.json\",\"path\":\"/Explore/\"},{\"componentChunkName\":\"component---src-pages-404-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"404-html.json\",\"path\":\"/404.html\"}]\n\n/***/ }),\n\n/***/ 392:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (_ref) {\n\t  var getNextQueuedResources = _ref.getNextQueuedResources,\n\t      createResourceDownload = _ref.createResourceDownload;\n\t\n\t  var pagesLoading = [];\n\t  var resourcesDownloading = [];\n\t\n\t  // Do things\n\t  var startResourceDownloading = function startResourceDownloading() {\n\t    var nextResource = getNextQueuedResources();\n\t    if (nextResource) {\n\t      resourcesDownloading.push(nextResource);\n\t      createResourceDownload(nextResource);\n\t    }\n\t  };\n\t\n\t  var reducer = function reducer(action) {\n\t    switch (action.type) {\n\t      case \"RESOURCE_FINISHED\":\n\t        resourcesDownloading = resourcesDownloading.filter(function (r) {\n\t          return r !== action.payload;\n\t        });\n\t        break;\n\t      case \"ON_PRE_LOAD_PAGE_RESOURCES\":\n\t        pagesLoading.push(action.payload.path);\n\t        break;\n\t      case \"ON_POST_LOAD_PAGE_RESOURCES\":\n\t        pagesLoading = pagesLoading.filter(function (p) {\n\t          return p !== action.payload.page.path;\n\t        });\n\t        break;\n\t      case \"ON_NEW_RESOURCES_ADDED\":\n\t        break;\n\t    }\n\t\n\t    // Take actions.\n\t    // Wait for event loop queue to finish.\n\t    setTimeout(function () {\n\t      if (resourcesDownloading.length === 0 && pagesLoading.length === 0) {\n\t        // Start another resource downloading.\n\t        startResourceDownloading();\n\t      }\n\t    }, 0);\n\t  };\n\t\n\t  return {\n\t    onResourcedFinished: function onResourcedFinished(event) {\n\t      // Tell prefetcher that the resource finished downloading\n\t      // so it can grab the next one.\n\t      reducer({ type: \"RESOURCE_FINISHED\", payload: event });\n\t    },\n\t    onPreLoadPageResources: function onPreLoadPageResources(event) {\n\t      // Tell prefetcher a page load has started so it should stop\n\t      // loading anything new\n\t      reducer({ type: \"ON_PRE_LOAD_PAGE_RESOURCES\", payload: event });\n\t    },\n\t    onPostLoadPageResources: function onPostLoadPageResources(event) {\n\t      // Tell prefetcher a page load has finished so it should start\n\t      // loading resources again.\n\t      reducer({ type: \"ON_POST_LOAD_PAGE_RESOURCES\", payload: event });\n\t    },\n\t    onNewResourcesAdded: function onNewResourcesAdded() {\n\t      // Tell prefetcher that more resources to be downloaded have\n\t      // been added.\n\t      reducer({ type: \"ON_NEW_RESOURCES_ADDED\" });\n\t    },\n\t    getState: function getState() {\n\t      return { pagesLoading: pagesLoading, resourcesDownloading: resourcesDownloading };\n\t    },\n\t    empty: function empty() {\n\t      pagesLoading = [];\n\t      resourcesDownloading = [];\n\t    }\n\t  };\n\t};\n\n/***/ }),\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _apiRunnerBrowser = __webpack_require__(191);\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(184);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _reactRouterDom = __webpack_require__(144);\n\t\n\tvar _gatsbyReactRouterScroll = __webpack_require__(723);\n\t\n\tvar _domready = __webpack_require__(697);\n\t\n\tvar _domready2 = _interopRequireDefault(_domready);\n\t\n\tvar _history = __webpack_require__(62);\n\t\n\tvar _history2 = __webpack_require__(390);\n\t\n\tvar _history3 = _interopRequireDefault(_history2);\n\t\n\tvar _emitter = __webpack_require__(156);\n\t\n\tvar _emitter2 = _interopRequireDefault(_emitter);\n\t\n\tvar _pages = __webpack_require__(731);\n\t\n\tvar _pages2 = _interopRequireDefault(_pages);\n\t\n\tvar _redirects = __webpack_require__(732);\n\t\n\tvar _redirects2 = _interopRequireDefault(_redirects);\n\t\n\tvar _componentRenderer = __webpack_require__(388);\n\t\n\tvar _componentRenderer2 = _interopRequireDefault(_componentRenderer);\n\t\n\tvar _asyncRequires = __webpack_require__(387);\n\t\n\tvar _asyncRequires2 = _interopRequireDefault(_asyncRequires);\n\t\n\tvar _loader = __webpack_require__(276);\n\t\n\tvar _loader2 = _interopRequireDefault(_loader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tif (true) {\n\t  __webpack_require__(433);\n\t}\n\t\n\twindow.___history = _history3.default;\n\t\n\twindow.___emitter = _emitter2.default;\n\t\n\t_loader2.default.addPagesArray(_pages2.default);\n\t_loader2.default.addProdRequires(_asyncRequires2.default);\n\twindow.asyncRequires = _asyncRequires2.default;\n\twindow.___loader = _loader2.default;\n\twindow.matchPath = _reactRouterDom.matchPath;\n\t\n\t// Convert to a map for faster lookup in maybeRedirect()\n\tvar redirectMap = _redirects2.default.reduce(function (map, redirect) {\n\t  map[redirect.fromPath] = redirect;\n\t  return map;\n\t}, {});\n\t\n\tvar maybeRedirect = function maybeRedirect(pathname) {\n\t  var redirect = redirectMap[pathname];\n\t\n\t  if (redirect != null) {\n\t    _history3.default.replace(redirect.toPath);\n\t    return true;\n\t  } else {\n\t    return false;\n\t  }\n\t};\n\t\n\t// Check for initial page-load redirect\n\tmaybeRedirect(window.location.pathname);\n\t\n\t// Let the site/plugins run code very early.\n\t(0, _apiRunnerBrowser.apiRunnerAsync)(\"onClientEntry\").then(function () {\n\t  // Let plugins register a service worker. The plugin just needs\n\t  // to return true.\n\t  if ((0, _apiRunnerBrowser.apiRunner)(\"registerServiceWorker\").length > 0) {\n\t    __webpack_require__(393);\n\t  }\n\t\n\t  var navigate = function navigate(to, replace) {\n\t    var location = (0, _history.createLocation)(to, null, null, _history3.default.location);\n\t    var pathname = location.pathname;\n\t\n\t    var redirect = redirectMap[pathname];\n\t\n\t    // If we're redirecting, just replace the passed in pathname\n\t    // to the one we want to redirect to.\n\t    if (redirect) {\n\t      pathname = redirect.toPath;\n\t    }\n\t    var wl = window.location;\n\t\n\t    // If we're already at this location, do nothing.\n\t    if (wl.pathname === location.pathname && wl.search === location.search && wl.hash === location.hash) {\n\t      return;\n\t    }\n\t\n\t    var historyNavigateFunc = replace ? window.___history.replace : window.___history.push;\n\t\n\t    // Listen to loading events. If page resources load before\n\t    // a second, navigate immediately.\n\t    function eventHandler(e) {\n\t      if (e.page.path === _loader2.default.getPage(pathname).path) {\n\t        _emitter2.default.off(\"onPostLoadPageResources\", eventHandler);\n\t        clearTimeout(timeoutId);\n\t        historyNavigateFunc(location);\n\t      }\n\t    }\n\t\n\t    // Start a timer to wait for a second before transitioning and showing a\n\t    // loader in case resources aren't around yet.\n\t    var timeoutId = setTimeout(function () {\n\t      _emitter2.default.off(\"onPostLoadPageResources\", eventHandler);\n\t      _emitter2.default.emit(\"onDelayedLoadPageResources\", { pathname: pathname });\n\t      historyNavigateFunc(location);\n\t    }, 1000);\n\t\n\t    if (_loader2.default.getResourcesForPathname(pathname)) {\n\t      // The resources are already loaded so off we go.\n\t      clearTimeout(timeoutId);\n\t      historyNavigateFunc(location);\n\t    } else {\n\t      // They're not loaded yet so let's add a listener for when\n\t      // they finish loading.\n\t      _emitter2.default.on(\"onPostLoadPageResources\", eventHandler);\n\t    }\n\t  };\n\t\n\t  // window.___loadScriptsForPath = loadScriptsForPath\n\t  window.___push = function (to) {\n\t    return navigate(to, false);\n\t  };\n\t  window.___replace = function (to) {\n\t    return navigate(to, true);\n\t  };\n\t  window.___navigateTo = window.___push;\n\t\n\t  // Call onRouteUpdate on the initial page load.\n\t  (0, _apiRunnerBrowser.apiRunner)(\"onRouteUpdate\", {\n\t    location: _history3.default.location,\n\t    action: _history3.default.action\n\t  });\n\t\n\t  var initialAttachDone = false;\n\t  function attachToHistory(history) {\n\t    if (!window.___history || initialAttachDone === false) {\n\t      window.___history = history;\n\t      initialAttachDone = true;\n\t\n\t      history.listen(function (location, action) {\n\t        if (!maybeRedirect(location.pathname)) {\n\t          // Make sure React has had a chance to flush to DOM first.\n\t          setTimeout(function () {\n\t            (0, _apiRunnerBrowser.apiRunner)(\"onRouteUpdate\", { location: location, action: action });\n\t          }, 0);\n\t        }\n\t      });\n\t    }\n\t  }\n\t\n\t  function shouldUpdateScroll(prevRouterProps, _ref) {\n\t    var pathname = _ref.location.pathname;\n\t\n\t    var results = (0, _apiRunnerBrowser.apiRunner)(\"shouldUpdateScroll\", {\n\t      prevRouterProps: prevRouterProps,\n\t      pathname: pathname\n\t    });\n\t    if (results.length > 0) {\n\t      return results[0];\n\t    }\n\t\n\t    if (prevRouterProps) {\n\t      var oldPathname = prevRouterProps.location.pathname;\n\t\n\t      if (oldPathname === pathname) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  var AltRouter = (0, _apiRunnerBrowser.apiRunner)(\"replaceRouterComponent\", { history: _history3.default })[0];\n\t  var DefaultRouter = function DefaultRouter(_ref2) {\n\t    var children = _ref2.children;\n\t    return _react2.default.createElement(\n\t      _reactRouterDom.Router,\n\t      { history: _history3.default },\n\t      children\n\t    );\n\t  };\n\t\n\t  var ComponentRendererWithRouter = (0, _reactRouterDom.withRouter)(_componentRenderer2.default);\n\t\n\t  _loader2.default.getResourcesForPathname(window.location.pathname, function () {\n\t    var Root = function Root() {\n\t      return (0, _react.createElement)(AltRouter ? AltRouter : DefaultRouter, null, (0, _react.createElement)(_gatsbyReactRouterScroll.ScrollContext, { shouldUpdateScroll: shouldUpdateScroll }, (0, _react.createElement)(ComponentRendererWithRouter, {\n\t        layout: true,\n\t        children: function children(layoutProps) {\n\t          return (0, _react.createElement)(_reactRouterDom.Route, {\n\t            render: function render(routeProps) {\n\t              attachToHistory(routeProps.history);\n\t              var props = layoutProps ? layoutProps : routeProps;\n\t\n\t              if (_loader2.default.getPage(props.location.pathname)) {\n\t                return (0, _react.createElement)(_componentRenderer2.default, _extends({\n\t                  page: true\n\t                }, props));\n\t              } else {\n\t                return (0, _react.createElement)(_componentRenderer2.default, {\n\t                  page: true,\n\t                  location: { pathname: \"/404.html\" }\n\t                });\n\t              }\n\t            }\n\t          });\n\t        }\n\t      })));\n\t    };\n\t\n\t    var NewRoot = (0, _apiRunnerBrowser.apiRunner)(\"wrapRootComponent\", { Root: Root }, Root)[0];\n\t\n\t    var renderer = (0, _apiRunnerBrowser.apiRunner)(\"replaceHydrateFunction\", undefined, _reactDom2.default.render)[0];\n\t\n\t    (0, _domready2.default)(function () {\n\t      return renderer(_react2.default.createElement(NewRoot, null), typeof window !== \"undefined\" ? document.getElementById(\"___gatsby\") : void 0, function () {\n\t        (0, _apiRunnerBrowser.apiRunner)(\"onInitialClientRender\");\n\t      });\n\t    });\n\t  });\n\t});\n\n/***/ }),\n\n/***/ 732:\n/***/ (function(module, exports) {\n\n\tmodule.exports = []\n\n/***/ }),\n\n/***/ 393:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _emitter = __webpack_require__(156);\n\t\n\tvar _emitter2 = _interopRequireDefault(_emitter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar pathPrefix = \"/\";\n\tif (true) {\n\t  pathPrefix = (\"/gatsby-public\") + \"/\";\n\t}\n\t\n\tif (\"serviceWorker\" in navigator) {\n\t  navigator.serviceWorker.register(pathPrefix + \"sw.js\").then(function (reg) {\n\t    reg.addEventListener(\"updatefound\", function () {\n\t      // The updatefound event implies that reg.installing is set; see\n\t      // https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event\n\t      var installingWorker = reg.installing;\n\t      console.log(\"installingWorker\", installingWorker);\n\t      installingWorker.addEventListener(\"statechange\", function () {\n\t        switch (installingWorker.state) {\n\t          case \"installed\":\n\t            if (navigator.serviceWorker.controller) {\n\t              // At this point, the old content will have been purged and the fresh content will\n\t              // have been added to the cache.\n\t              // We reload immediately so the user sees the new content.\n\t              // This could/should be made configurable in the future.\n\t              window.location.reload();\n\t            } else {\n\t              // At this point, everything has been precached.\n\t              // It's the perfect time to display a \"Content is cached for offline use.\" message.\n\t              console.log(\"Content is now available offline!\");\n\t              _emitter2.default.emit(\"sw:installed\");\n\t            }\n\t            break;\n\t\n\t          case \"redundant\":\n\t            console.error(\"The installing service worker became redundant.\");\n\t            break;\n\t        }\n\t      });\n\t    });\n\t  }).catch(function (e) {\n\t    console.error(\"Error during service worker registration:\", e);\n\t  });\n\t}\n\n/***/ }),\n\n/***/ 277:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\t/**\n\t * Remove a prefix from a string. Return the input string if the given prefix\n\t * isn't found.\n\t */\n\t\n\texports.default = function (str) {\n\t  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\t\n\t  if (str.substr(0, prefix.length) === prefix) return str.slice(prefix.length);\n\t  return str;\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 394:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t__webpack_require__(434);\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRouterDom = __webpack_require__(144);\n\t\n\tvar _reactRedux = __webpack_require__(33);\n\t\n\tvar _createStore = __webpack_require__(278);\n\t\n\tvar _createStore2 = _interopRequireDefault(_createStore);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.replaceRouterComponent = function (_ref) {\n\t  var history = _ref.history;\n\t\n\t  var store = (0, _createStore2.default)();\n\t\n\t  var ConnectedRouterWrapper = function ConnectedRouterWrapper(_ref2) {\n\t    var children = _ref2.children;\n\t    return _react2.default.createElement(\n\t      _reactRedux.Provider,\n\t      { store: store },\n\t      _react2.default.createElement(\n\t        _reactRouterDom.Router,\n\t        { history: history },\n\t        children\n\t      )\n\t    );\n\t  };\n\t\n\t  return ConnectedRouterWrapper;\n\t}; /* globals window */\n\t\n\t\n\texports.onClientEntry = function () {\n\t  // Patch the resource loader\n\t  var loader = global.___loader;\n\t  if (!loader) return;\n\t\n\t  var path = window.location.pathname;\n\t\n\t  if (path.includes(\"/explore\")) {\n\t    loader.addPagesArray([{ \"componentChunkName\": \"component---src-pages-explore-index-js\", \"layout\": \"layout---index\", \"layoutComponentChunkName\": \"component---src-layouts-index-js\", \"jsonName\": \"explore.json\", \"path\": path }]);\n\t  } else if (path.includes(\"/about\")) {\n\t    loader.addPagesArray([{ \"componentChunkName\": \"component---src-pages-about-index-js\", \"layout\": \"layout---index\", \"layoutComponentChunkName\": \"component---src-layouts-index-js\", \"jsonName\": \"about.json\", \"path\": path }]);\n\t  }\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 190:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * accounting.js v0.4.1\n\t * Copyright 2014 Open Exchange Rates\n\t *\n\t * Freely distributable under the MIT license.\n\t * Portions of accounting.js are inspired or borrowed from underscore.js\n\t *\n\t * Full details and documentation:\n\t * http://openexchangerates.github.io/accounting.js/\n\t */\n\t\n\t(function(root, undefined) {\n\t\n\t\t/* --- Setup --- */\n\t\n\t\t// Create the local library object, to be exported or referenced globally later\n\t\tvar lib = {};\n\t\n\t\t// Current version\n\t\tlib.version = '0.4.1';\n\t\n\t\n\t\t/* --- Exposed settings --- */\n\t\n\t\t// The library's settings configuration object. Contains default parameters for\n\t\t// currency and number formatting\n\t\tlib.settings = {\n\t\t\tcurrency: {\n\t\t\t\tsymbol : \"$\",\t\t// default currency symbol is '$'\n\t\t\t\tformat : \"%s%v\",\t// controls output: %s = symbol, %v = value (can be object, see docs)\n\t\t\t\tdecimal : \".\",\t\t// decimal point separator\n\t\t\t\tthousand : \",\",\t\t// thousands separator\n\t\t\t\tprecision : 2,\t\t// decimal places\n\t\t\t\tgrouping : 3\t\t// digit grouping (not implemented yet)\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t\tprecision : 0,\t\t// default precision on numbers is 0\n\t\t\t\tgrouping : 3,\t\t// digit grouping (not implemented yet)\n\t\t\t\tthousand : \",\",\n\t\t\t\tdecimal : \".\"\n\t\t\t}\n\t\t};\n\t\n\t\n\t\t/* --- Internal Helper Methods --- */\n\t\n\t\t// Store reference to possibly-available ECMAScript 5 methods for later\n\t\tvar nativeMap = Array.prototype.map,\n\t\t\tnativeIsArray = Array.isArray,\n\t\t\ttoString = Object.prototype.toString;\n\t\n\t\t/**\n\t\t * Tests whether supplied parameter is a string\n\t\t * from underscore.js\n\t\t */\n\t\tfunction isString(obj) {\n\t\t\treturn !!(obj === '' || (obj && obj.charCodeAt && obj.substr));\n\t\t}\n\t\n\t\t/**\n\t\t * Tests whether supplied parameter is a string\n\t\t * from underscore.js, delegates to ECMA5's native Array.isArray\n\t\t */\n\t\tfunction isArray(obj) {\n\t\t\treturn nativeIsArray ? nativeIsArray(obj) : toString.call(obj) === '[object Array]';\n\t\t}\n\t\n\t\t/**\n\t\t * Tests whether supplied parameter is a true object\n\t\t */\n\t\tfunction isObject(obj) {\n\t\t\treturn obj && toString.call(obj) === '[object Object]';\n\t\t}\n\t\n\t\t/**\n\t\t * Extends an object with a defaults object, similar to underscore's _.defaults\n\t\t *\n\t\t * Used for abstracting parameter handling from API methods\n\t\t */\n\t\tfunction defaults(object, defs) {\n\t\t\tvar key;\n\t\t\tobject = object || {};\n\t\t\tdefs = defs || {};\n\t\t\t// Iterate over object non-prototype properties:\n\t\t\tfor (key in defs) {\n\t\t\t\tif (defs.hasOwnProperty(key)) {\n\t\t\t\t\t// Replace values with defaults only if undefined (allow empty/zero values):\n\t\t\t\t\tif (object[key] == null) object[key] = defs[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn object;\n\t\t}\n\t\n\t\t/**\n\t\t * Implementation of `Array.map()` for iteration loops\n\t\t *\n\t\t * Returns a new Array as a result of calling `iterator` on each array value.\n\t\t * Defers to native Array.map if available\n\t\t */\n\t\tfunction map(obj, iterator, context) {\n\t\t\tvar results = [], i, j;\n\t\n\t\t\tif (!obj) return results;\n\t\n\t\t\t// Use native .map method if it exists:\n\t\t\tif (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n\t\n\t\t\t// Fallback for native .map:\n\t\t\tfor (i = 0, j = obj.length; i < j; i++ ) {\n\t\t\t\tresults[i] = iterator.call(context, obj[i], i, obj);\n\t\t\t}\n\t\t\treturn results;\n\t\t}\n\t\n\t\t/**\n\t\t * Check and normalise the value of precision (must be positive integer)\n\t\t */\n\t\tfunction checkPrecision(val, base) {\n\t\t\tval = Math.round(Math.abs(val));\n\t\t\treturn isNaN(val)? base : val;\n\t\t}\n\t\n\t\n\t\t/**\n\t\t * Parses a format string or object and returns format obj for use in rendering\n\t\t *\n\t\t * `format` is either a string with the default (positive) format, or object\n\t\t * containing `pos` (required), `neg` and `zero` values (or a function returning\n\t\t * either a string or object)\n\t\t *\n\t\t * Either string or format.pos must contain \"%v\" (value) to be valid\n\t\t */\n\t\tfunction checkCurrencyFormat(format) {\n\t\t\tvar defaults = lib.settings.currency.format;\n\t\n\t\t\t// Allow function as format parameter (should return string or object):\n\t\t\tif ( typeof format === \"function\" ) format = format();\n\t\n\t\t\t// Format can be a string, in which case `value` (\"%v\") must be present:\n\t\t\tif ( isString( format ) && format.match(\"%v\") ) {\n\t\n\t\t\t\t// Create and return positive, negative and zero formats:\n\t\t\t\treturn {\n\t\t\t\t\tpos : format,\n\t\t\t\t\tneg : format.replace(\"-\", \"\").replace(\"%v\", \"-%v\"),\n\t\t\t\t\tzero : format\n\t\t\t\t};\n\t\n\t\t\t// If no format, or object is missing valid positive value, use defaults:\n\t\t\t} else if ( !format || !format.pos || !format.pos.match(\"%v\") ) {\n\t\n\t\t\t\t// If defaults is a string, casts it to an object for faster checking next time:\n\t\t\t\treturn ( !isString( defaults ) ) ? defaults : lib.settings.currency.format = {\n\t\t\t\t\tpos : defaults,\n\t\t\t\t\tneg : defaults.replace(\"%v\", \"-%v\"),\n\t\t\t\t\tzero : defaults\n\t\t\t\t};\n\t\n\t\t\t}\n\t\t\t// Otherwise, assume format was fine:\n\t\t\treturn format;\n\t\t}\n\t\n\t\n\t\t/* --- API Methods --- */\n\t\n\t\t/**\n\t\t * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value\n\t\t * Alias: `accounting.parse(string)`\n\t\t *\n\t\t * Decimal must be included in the regular expression to match floats (defaults to\n\t\t * accounting.settings.number.decimal), so if the number uses a non-standard decimal \n\t\t * separator, provide it as the second argument.\n\t\t *\n\t\t * Also matches bracketed negatives (eg. \"$ (1.99)\" => -1.99)\n\t\t *\n\t\t * Doesn't throw any errors (`NaN`s become 0) but this may change in future\n\t\t */\n\t\tvar unformat = lib.unformat = lib.parse = function(value, decimal) {\n\t\t\t// Recursively unformat arrays:\n\t\t\tif (isArray(value)) {\n\t\t\t\treturn map(value, function(val) {\n\t\t\t\t\treturn unformat(val, decimal);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Fails silently (need decent errors):\n\t\t\tvalue = value || 0;\n\t\n\t\t\t// Return the value as-is if it's already a number:\n\t\t\tif (typeof value === \"number\") return value;\n\t\n\t\t\t// Default decimal point comes from settings, but could be set to eg. \",\" in opts:\n\t\t\tdecimal = decimal || lib.settings.number.decimal;\n\t\n\t\t\t // Build regex to strip out everything except digits, decimal point and minus sign:\n\t\t\tvar regex = new RegExp(\"[^0-9-\" + decimal + \"]\", [\"g\"]),\n\t\t\t\tunformatted = parseFloat(\n\t\t\t\t\t(\"\" + value)\n\t\t\t\t\t.replace(/\\((.*)\\)/, \"-$1\") // replace bracketed values with negatives\n\t\t\t\t\t.replace(regex, '')         // strip out any cruft\n\t\t\t\t\t.replace(decimal, '.')      // make sure decimal point is standard\n\t\t\t\t);\n\t\n\t\t\t// This will fail silently which may cause trouble, let's wait and see:\n\t\t\treturn !isNaN(unformatted) ? unformatted : 0;\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Implementation of toFixed() that treats floats more like decimals\n\t\t *\n\t\t * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present\n\t\t * problems for accounting- and finance-related software.\n\t\t */\n\t\tvar toFixed = lib.toFixed = function(value, precision) {\n\t\t\tprecision = checkPrecision(precision, lib.settings.number.precision);\n\t\t\tvar power = Math.pow(10, precision);\n\t\n\t\t\t// Multiply up by precision, round accurately, then divide and use native toFixed():\n\t\t\treturn (Math.round(lib.unformat(value) * power) / power).toFixed(precision);\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Format a number, with comma-separated thousands and custom precision/decimal places\n\t\t * Alias: `accounting.format()`\n\t\t *\n\t\t * Localise by overriding the precision and thousand / decimal separators\n\t\t * 2nd parameter `precision` can be an object matching `settings.number`\n\t\t */\n\t\tvar formatNumber = lib.formatNumber = lib.format = function(number, precision, thousand, decimal) {\n\t\t\t// Resursively format arrays:\n\t\t\tif (isArray(number)) {\n\t\t\t\treturn map(number, function(val) {\n\t\t\t\t\treturn formatNumber(val, precision, thousand, decimal);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Clean up number:\n\t\t\tnumber = unformat(number);\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(\n\t\t\t\t\t(isObject(precision) ? precision : {\n\t\t\t\t\t\tprecision : precision,\n\t\t\t\t\t\tthousand : thousand,\n\t\t\t\t\t\tdecimal : decimal\n\t\t\t\t\t}),\n\t\t\t\t\tlib.settings.number\n\t\t\t\t),\n\t\n\t\t\t\t// Clean up precision\n\t\t\t\tusePrecision = checkPrecision(opts.precision),\n\t\n\t\t\t\t// Do some calc:\n\t\t\t\tnegative = number < 0 ? \"-\" : \"\",\n\t\t\t\tbase = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + \"\",\n\t\t\t\tmod = base.length > 3 ? base.length % 3 : 0;\n\t\n\t\t\t// Format the number:\n\t\t\treturn negative + (mod ? base.substr(0, mod) + opts.thousand : \"\") + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, \"$1\" + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : \"\");\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Format a number into currency\n\t\t *\n\t\t * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n\t\t * defaults: (0, \"$\", 2, \",\", \".\", \"%s%v\")\n\t\t *\n\t\t * Localise by overriding the symbol, precision, thousand / decimal separators and format\n\t\t * Second param can be an object matching `settings.currency` which is the easiest way.\n\t\t *\n\t\t * To do: tidy up the parameters\n\t\t */\n\t\tvar formatMoney = lib.formatMoney = function(number, symbol, precision, thousand, decimal, format) {\n\t\t\t// Resursively format arrays:\n\t\t\tif (isArray(number)) {\n\t\t\t\treturn map(number, function(val){\n\t\t\t\t\treturn formatMoney(val, symbol, precision, thousand, decimal, format);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Clean up number:\n\t\t\tnumber = unformat(number);\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(\n\t\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\t\tprecision : precision,\n\t\t\t\t\t\tthousand : thousand,\n\t\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\t\tformat : format\n\t\t\t\t\t}),\n\t\t\t\t\tlib.settings.currency\n\t\t\t\t),\n\t\n\t\t\t\t// Check format (returns object with pos, neg and zero):\n\t\t\t\tformats = checkCurrencyFormat(opts.format),\n\t\n\t\t\t\t// Choose which format to use for this value:\n\t\t\t\tuseFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\n\t\n\t\t\t// Return with currency symbol added:\n\t\t\treturn useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Format a list of numbers into an accounting column, padding with whitespace\n\t\t * to line up currency symbols, thousand separators and decimals places\n\t\t *\n\t\t * List should be an array of numbers\n\t\t * Second parameter can be an object containing keys that match the params\n\t\t *\n\t\t * Returns array of accouting-formatted number strings of same length\n\t\t *\n\t\t * NB: `white-space:pre` CSS rule is required on the list container to prevent\n\t\t * browsers from collapsing the whitespace in the output strings.\n\t\t */\n\t\tlib.formatColumn = function(list, symbol, precision, thousand, decimal, format) {\n\t\t\tif (!list) return [];\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(\n\t\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\t\tprecision : precision,\n\t\t\t\t\t\tthousand : thousand,\n\t\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\t\tformat : format\n\t\t\t\t\t}),\n\t\t\t\t\tlib.settings.currency\n\t\t\t\t),\n\t\n\t\t\t\t// Check format (returns object with pos, neg and zero), only need pos for now:\n\t\t\t\tformats = checkCurrencyFormat(opts.format),\n\t\n\t\t\t\t// Whether to pad at start of string or after currency symbol:\n\t\t\t\tpadAfterSymbol = formats.pos.indexOf(\"%s\") < formats.pos.indexOf(\"%v\") ? true : false,\n\t\n\t\t\t\t// Store value for the length of the longest string in the column:\n\t\t\t\tmaxLength = 0,\n\t\n\t\t\t\t// Format the list according to options, store the length of the longest string:\n\t\t\t\tformatted = map(list, function(val, i) {\n\t\t\t\t\tif (isArray(val)) {\n\t\t\t\t\t\t// Recursively format columns if list is a multi-dimensional array:\n\t\t\t\t\t\treturn lib.formatColumn(val, opts);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Clean up the value\n\t\t\t\t\t\tval = unformat(val);\n\t\n\t\t\t\t\t\t// Choose which format to use for this value (pos, neg or zero):\n\t\t\t\t\t\tvar useFormat = val > 0 ? formats.pos : val < 0 ? formats.neg : formats.zero,\n\t\n\t\t\t\t\t\t\t// Format this value, push into formatted list and save the length:\n\t\t\t\t\t\t\tfVal = useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(val), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t\n\t\t\t\t\t\tif (fVal.length > maxLength) maxLength = fVal.length;\n\t\t\t\t\t\treturn fVal;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t// Pad each number in the list and send back the column of numbers:\n\t\t\treturn map(formatted, function(val, i) {\n\t\t\t\t// Only if this is a string (not a nested array, which would have already been padded):\n\t\t\t\tif (isString(val) && val.length < maxLength) {\n\t\t\t\t\t// Depending on symbol position, pad after symbol or at index 0:\n\t\t\t\t\treturn padAfterSymbol ? val.replace(opts.symbol, opts.symbol+(new Array(maxLength - val.length + 1).join(\" \"))) : (new Array(maxLength - val.length + 1).join(\" \")) + val;\n\t\t\t\t}\n\t\t\t\treturn val;\n\t\t\t});\n\t\t};\n\t\n\t\n\t\t/* --- Module Definition --- */\n\t\n\t\t// Export accounting for CommonJS. If being loaded as an AMD module, define it as such.\n\t\t// Otherwise, just add `accounting` to the global object\n\t\tif (true) {\n\t\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\t\texports = module.exports = lib;\n\t\t\t}\n\t\t\texports.accounting = lib;\n\t\t} else if (typeof define === 'function' && define.amd) {\n\t\t\t// Return the library as an AMD module:\n\t\t\tdefine([], function() {\n\t\t\t\treturn lib;\n\t\t\t});\n\t\t} else {\n\t\t\t// Use accounting.noConflict to restore `accounting` back to its original value.\n\t\t\t// Returns a reference to the library's `accounting` object;\n\t\t\t// e.g. `var numbers = accounting.noConflict();`\n\t\t\tlib.noConflict = (function(oldAccounting) {\n\t\t\t\treturn function() {\n\t\t\t\t\t// Reset the value of the root's `accounting` variable:\n\t\t\t\t\troot.accounting = oldAccounting;\n\t\t\t\t\t// Delete the noConflict method:\n\t\t\t\t\tlib.noConflict = undefined;\n\t\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\t\treturn lib;\n\t\t\t\t};\n\t\t\t})(root.accounting);\n\t\n\t\t\t// Declare `fx` on the root (global/window) object:\n\t\t\troot['accounting'] = lib;\n\t\t}\n\t\n\t\t// Root will be `window` in browser or `global` on the server:\n\t}(this));\n\n\n/***/ }),\n\n/***/ 246:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"AED\":{\"code\":\"AED\",\"symbol\":\"د.إ.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"AFN\":{\"code\":\"AFN\",\"symbol\":\"؋\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ALL\":{\"code\":\"ALL\",\"symbol\":\"Lek\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AMD\":{\"code\":\"AMD\",\"symbol\":\"֏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ANG\":{\"code\":\"ANG\",\"symbol\":\"ƒ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AOA\":{\"code\":\"AOA\",\"symbol\":\"Kz\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ARS\":{\"code\":\"ARS\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"AUD\":{\"code\":\"AUD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AWG\":{\"code\":\"AWG\",\"symbol\":\"ƒ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AZN\":{\"code\":\"AZN\",\"symbol\":\"₼\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BAM\":{\"code\":\"BAM\",\"symbol\":\"КМ\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BBD\":{\"code\":\"BBD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BDT\":{\"code\":\"BDT\",\"symbol\":\"৳\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"BGN\":{\"code\":\"BGN\",\"symbol\":\"лв.\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BHD\":{\"code\":\"BHD\",\"symbol\":\"د.ب.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"BIF\":{\"code\":\"BIF\",\"symbol\":\"FBu\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"BMD\":{\"code\":\"BMD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BND\":{\"code\":\"BND\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"BOB\":{\"code\":\"BOB\",\"symbol\":\"Bs\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BRL\":{\"code\":\"BRL\",\"symbol\":\"R$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BSD\":{\"code\":\"BSD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BTC\":{\"code\":\"BTC\",\"symbol\":\"Ƀ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":8},\"BTN\":{\"code\":\"BTN\",\"symbol\":\"Nu.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"BWP\":{\"code\":\"BWP\",\"symbol\":\"P\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BYR\":{\"code\":\"BYR\",\"symbol\":\"р.\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BZD\":{\"code\":\"BZD\",\"symbol\":\"BZ$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CAD\":{\"code\":\"CAD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CDF\":{\"code\":\"CDF\",\"symbol\":\"FC\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CHF\":{\"code\":\"CHF\",\"symbol\":\"CHF\",\"thousandsSeparator\":\"'\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CLP\":{\"code\":\"CLP\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CNY\":{\"code\":\"CNY\",\"symbol\":\"¥\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"COP\":{\"code\":\"COP\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CRC\":{\"code\":\"CRC\",\"symbol\":\"₡\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CUC\":{\"code\":\"CUC\",\"symbol\":\"CUC\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CUP\":{\"code\":\"CUP\",\"symbol\":\"$MN\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CVE\":{\"code\":\"CVE\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CZK\":{\"code\":\"CZK\",\"symbol\":\"Kč\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"DJF\":{\"code\":\"DJF\",\"symbol\":\"Fdj\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"DKK\":{\"code\":\"DKK\",\"symbol\":\"kr.\",\"thousandsSeparator\":\"\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"DOP\":{\"code\":\"DOP\",\"symbol\":\"RD$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"DZD\":{\"code\":\"DZD\",\"symbol\":\"د.ج.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"EGP\":{\"code\":\"EGP\",\"symbol\":\"ج.م.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ERN\":{\"code\":\"ERN\",\"symbol\":\"Nfk\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ETB\":{\"code\":\"ETB\",\"symbol\":\"ETB\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"EUR\":{\"code\":\"EUR\",\"symbol\":\"€\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"FJD\":{\"code\":\"FJD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"FKP\":{\"code\":\"FKP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GBP\":{\"code\":\"GBP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GEL\":{\"code\":\"GEL\",\"symbol\":\"Lari\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"GHS\":{\"code\":\"GHS\",\"symbol\":\"₵\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GIP\":{\"code\":\"GIP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GMD\":{\"code\":\"GMD\",\"symbol\":\"D\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GNF\":{\"code\":\"GNF\",\"symbol\":\"FG\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"GTQ\":{\"code\":\"GTQ\",\"symbol\":\"Q\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GYD\":{\"code\":\"GYD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HKD\":{\"code\":\"HKD\",\"symbol\":\"HK$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HNL\":{\"code\":\"HNL\",\"symbol\":\"L.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"HRK\":{\"code\":\"HRK\",\"symbol\":\"kn\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"HTG\":{\"code\":\"HTG\",\"symbol\":\"G\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HUF\":{\"code\":\"HUF\",\"symbol\":\"Ft\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"IDR\":{\"code\":\"IDR\",\"symbol\":\"Rp\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"ILS\":{\"code\":\"ILS\",\"symbol\":\"₪\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"INR\":{\"code\":\"INR\",\"symbol\":\"₹\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"IQD\":{\"code\":\"IQD\",\"symbol\":\"د.ع.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"IRR\":{\"code\":\"IRR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\"/\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ISK\":{\"code\":\"ISK\",\"symbol\":\"kr.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"JMD\":{\"code\":\"JMD\",\"symbol\":\"J$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"JOD\":{\"code\":\"JOD\",\"symbol\":\"د.ا.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"JPY\":{\"code\":\"JPY\",\"symbol\":\"¥\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KES\":{\"code\":\"KES\",\"symbol\":\"KSh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KGS\":{\"code\":\"KGS\",\"symbol\":\"сом\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\"-\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"KHR\":{\"code\":\"KHR\",\"symbol\":\"៛\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KMF\":{\"code\":\"KMF\",\"symbol\":\"CF\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KPW\":{\"code\":\"KPW\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KRW\":{\"code\":\"KRW\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KWD\":{\"code\":\"KWD\",\"symbol\":\"د.ك.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"KYD\":{\"code\":\"KYD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KZT\":{\"code\":\"KZT\",\"symbol\":\"₸\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\"-\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LAK\":{\"code\":\"LAK\",\"symbol\":\"₭\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"LBP\":{\"code\":\"LBP\",\"symbol\":\"ل.ل.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"LKR\":{\"code\":\"LKR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"LRD\":{\"code\":\"LRD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LSL\":{\"code\":\"LSL\",\"symbol\":\"M\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LYD\":{\"code\":\"LYD\",\"symbol\":\"د.ل.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":3},\"MAD\":{\"code\":\"MAD\",\"symbol\":\"د.م.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MDL\":{\"code\":\"MDL\",\"symbol\":\"lei\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MGA\":{\"code\":\"MGA\",\"symbol\":\"Ar\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"MKD\":{\"code\":\"MKD\",\"symbol\":\"ден.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MMK\":{\"code\":\"MMK\",\"symbol\":\"K\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MNT\":{\"code\":\"MNT\",\"symbol\":\"₮\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MOP\":{\"code\":\"MOP\",\"symbol\":\"MOP$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MRO\":{\"code\":\"MRO\",\"symbol\":\"UM\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MTL\":{\"code\":\"MTL\",\"symbol\":\"₤\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MUR\":{\"code\":\"MUR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MVR\":{\"code\":\"MVR\",\"symbol\":\"MVR\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"MWK\":{\"code\":\"MWK\",\"symbol\":\"MK\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MXN\":{\"code\":\"MXN\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MYR\":{\"code\":\"MYR\",\"symbol\":\"RM\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MZN\":{\"code\":\"MZN\",\"symbol\":\"MT\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"NAD\":{\"code\":\"NAD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NGN\":{\"code\":\"NGN\",\"symbol\":\"₦\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NIO\":{\"code\":\"NIO\",\"symbol\":\"C$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"NOK\":{\"code\":\"NOK\",\"symbol\":\"kr\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"NPR\":{\"code\":\"NPR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NZD\":{\"code\":\"NZD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"OMR\":{\"code\":\"OMR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"PAB\":{\"code\":\"PAB\",\"symbol\":\"B/.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PEN\":{\"code\":\"PEN\",\"symbol\":\"S/.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PGK\":{\"code\":\"PGK\",\"symbol\":\"K\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PHP\":{\"code\":\"PHP\",\"symbol\":\"₱\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PKR\":{\"code\":\"PKR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PLN\":{\"code\":\"PLN\",\"symbol\":\"zł\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PYG\":{\"code\":\"PYG\",\"symbol\":\"₲\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"QAR\":{\"code\":\"QAR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RON\":{\"code\":\"RON\",\"symbol\":\"lei\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RSD\":{\"code\":\"RSD\",\"symbol\":\"Дин.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RUB\":{\"code\":\"RUB\",\"symbol\":\"₽\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RWF\":{\"code\":\"RWF\",\"symbol\":\"RWF\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SAR\":{\"code\":\"SAR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SBD\":{\"code\":\"SBD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SCR\":{\"code\":\"SCR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SDD\":{\"code\":\"SDD\",\"symbol\":\"LSd\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SDG\":{\"code\":\"SDG\",\"symbol\":\"£‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SEK\":{\"code\":\"SEK\",\"symbol\":\"kr\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SGD\":{\"code\":\"SGD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SHP\":{\"code\":\"SHP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SLL\":{\"code\":\"SLL\",\"symbol\":\"Le\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SOS\":{\"code\":\"SOS\",\"symbol\":\"S\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SRD\":{\"code\":\"SRD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"STD\":{\"code\":\"STD\",\"symbol\":\"Db\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SVC\":{\"code\":\"SVC\",\"symbol\":\"₡\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SYP\":{\"code\":\"SYP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SZL\":{\"code\":\"SZL\",\"symbol\":\"E\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"THB\":{\"code\":\"THB\",\"symbol\":\"฿\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TJS\":{\"code\":\"TJS\",\"symbol\":\"TJS\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\";\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"TMT\":{\"code\":\"TMT\",\"symbol\":\"m\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"TND\":{\"code\":\"TND\",\"symbol\":\"د.ت.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"TOP\":{\"code\":\"TOP\",\"symbol\":\"T$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TRY\":{\"code\":\"TRY\",\"symbol\":\"TL\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"TTD\":{\"code\":\"TTD\",\"symbol\":\"TT$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TVD\":{\"code\":\"TVD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TWD\":{\"code\":\"TWD\",\"symbol\":\"NT$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TZS\":{\"code\":\"TZS\",\"symbol\":\"TSh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UAH\":{\"code\":\"UAH\",\"symbol\":\"₴\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UGX\":{\"code\":\"UGX\",\"symbol\":\"USh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"USD\":{\"code\":\"USD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UYU\":{\"code\":\"UYU\",\"symbol\":\"$U\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"UZS\":{\"code\":\"UZS\",\"symbol\":\"сўм\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"VEB\":{\"code\":\"VEB\",\"symbol\":\"Bs.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"VEF\":{\"code\":\"VEF\",\"symbol\":\"Bs. F.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"VND\":{\"code\":\"VND\",\"symbol\":\"₫\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"VUV\":{\"code\":\"VUV\",\"symbol\":\"VT\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"WST\":{\"code\":\"WST\",\"symbol\":\"WS$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XAF\":{\"code\":\"XAF\",\"symbol\":\"F\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XCD\":{\"code\":\"XCD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XBT\":{\"code\":\"XBT\",\"symbol\":\"Ƀ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XOF\":{\"code\":\"XOF\",\"symbol\":\"F\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XPF\":{\"code\":\"XPF\",\"symbol\":\"F\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"YER\":{\"code\":\"YER\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ZAR\":{\"code\":\"ZAR\",\"symbol\":\"R\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ZMW\":{\"code\":\"ZMW\",\"symbol\":\"ZK\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"WON\":{\"code\":\"WON\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2}}\n\n/***/ }),\n\n/***/ 235:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar accounting = __webpack_require__(190)\n\tvar assign = __webpack_require__(11)\n\tvar localeCurrency = __webpack_require__(253)\n\tvar currencies = __webpack_require__(246)\n\tvar localeFormats = __webpack_require__(247)\n\t\n\tvar defaultCurrency = {\n\t  symbol: '',\n\t  thousandsSeparator: ',',\n\t  decimalSeparator: '.',\n\t  symbolOnLeft: true,\n\t  spaceBetweenAmountAndSymbol: false,\n\t  decimalDigits: 2\n\t}\n\t\n\tvar defaultLocaleFormat = {}\n\t\n\tvar formatMapping = [\n\t  {\n\t    symbolOnLeft: true,\n\t    spaceBetweenAmountAndSymbol: false,\n\t    format: {\n\t      pos: '%s%v',\n\t      neg: '-%s%v',\n\t      zero: '%s%v'\n\t    }\n\t  },\n\t  {\n\t    symbolOnLeft: true,\n\t    spaceBetweenAmountAndSymbol: true,\n\t    format: {\n\t      pos: '%s %v',\n\t      neg: '-%s %v',\n\t      zero: '%s %v'\n\t    }\n\t  },\n\t  {\n\t    symbolOnLeft: false,\n\t    spaceBetweenAmountAndSymbol: false,\n\t    format: {\n\t      pos: '%v%s',\n\t      neg: '-%v%s',\n\t      zero: '%v%s'\n\t    }\n\t  },\n\t  {\n\t    symbolOnLeft: false,\n\t    spaceBetweenAmountAndSymbol: true,\n\t    format: {\n\t      pos: '%v %s',\n\t      neg: '-%v %s',\n\t      zero: '%v %s'\n\t    }\n\t  }\n\t]\n\t\n\tfunction format(value, options) {\n\t  var code = options.code || (options.locale && localeCurrency.getCurrency(options.locale))\n\t  var localeMatch = /^([a-z]+)([_-]([a-z]+))?$/i.exec(options.locale) || []\n\t  var language = localeMatch[1]\n\t  var region = localeMatch[3]\n\t  var localeFormat = assign({}, defaultLocaleFormat,\n\t                            localeFormats[language] || {},\n\t                            localeFormats[language + '-' + region] || {})\n\t  var currency = assign({}, defaultCurrency, findCurrency(code), localeFormat)\n\t  \n\t  var symbolOnLeft = currency.symbolOnLeft\n\t  var spaceBetweenAmountAndSymbol = currency.spaceBetweenAmountAndSymbol\n\t\n\t  var format = formatMapping.filter(function(f) {\n\t    return f.symbolOnLeft == symbolOnLeft && f.spaceBetweenAmountAndSymbol == spaceBetweenAmountAndSymbol\n\t  })[0].format\n\t\n\t  return accounting.formatMoney(value, {\n\t    symbol: isUndefined(options.symbol)\n\t              ? currency.symbol\n\t              : options.symbol,\n\t\n\t    decimal: isUndefined(options.decimal)\n\t              ? currency.decimalSeparator\n\t              : options.decimal,\n\t\n\t    thousand: isUndefined(options.thousand)\n\t              ? currency.thousandsSeparator\n\t              : options.thousand,\n\t\n\t    precision: typeof options.precision === 'number'\n\t              ? options.precision\n\t              : currency.decimalDigits,\n\t\n\t    format: ['string', 'object'].indexOf(typeof options.format) > -1\n\t              ? options.format\n\t              : format\n\t  })\n\t}\n\t\n\tfunction findCurrency (currencyCode) {\n\t  return currencies[currencyCode]\n\t}\n\t\n\tfunction isUndefined (val) {\n\t  return typeof val === 'undefined'\n\t}\n\t\n\tfunction unformat(value, options) {\n\t  var code = options.code || (options.locale && localeCurrency.getCurrency(options.locale))\n\t  var localeFormat = localeFormats[options.locale] || defaultLocaleFormat\n\t  var currency = assign({}, defaultCurrency, findCurrency(code), localeFormat)\n\t  var decimal = isUndefined(options.decimal) ? currency.decimalSeparator : options.decimal\n\t  return accounting.unformat(value, decimal)\n\t}\n\t\n\tmodule.exports = {\n\t  defaultCurrency: defaultCurrency,\n\t  get currencies() {\n\t    // In favor of backwards compatibility, the currencies map is converted to an array here\n\t    return Object.keys(currencies).map(function(key) {\n\t      return currencies[key]\n\t    })\n\t  },\n\t  findCurrency: findCurrency,\n\t  format: format,\n\t  unformat: unformat\n\t}\n\n/***/ }),\n\n/***/ 247:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"de\":{\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"el\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2},\"en-IE\":{\"symbolOnLeft\":true,\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"es\":{\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"it\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2},\"nl\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2}}\n\n/***/ }),\n\n/***/ 697:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t  * domready (c) Dustin Diaz 2014 - License MIT\n\t  */\n\t!function (name, definition) {\n\t\n\t  if (true) module.exports = definition()\n\t  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n\t  else this[name] = definition()\n\t\n\t}('domready', function () {\n\t\n\t  var fns = [], listener\n\t    , doc = document\n\t    , hack = doc.documentElement.doScroll\n\t    , domContentLoaded = 'DOMContentLoaded'\n\t    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\t\n\t\n\t  if (!loaded)\n\t  doc.addEventListener(domContentLoaded, listener = function () {\n\t    doc.removeEventListener(domContentLoaded, listener)\n\t    loaded = 1\n\t    while (listener = fns.shift()) listener()\n\t  })\n\t\n\t  return function (fn) {\n\t    loaded ? setTimeout(fn, 0) : fns.push(fn)\n\t  }\n\t\n\t});\n\n\n/***/ }),\n\n/***/ 52:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t/* global document: false, __webpack_require__: false */\n\tpatch();\n\t\n\tfunction patch() {\n\t  var head = document.querySelector(\"head\");\n\t  var ensure = __webpack_require__.e;\n\t  var chunks = __webpack_require__.s;\n\t  var failures;\n\t\n\t  __webpack_require__.e = function (chunkId, callback) {\n\t    var loaded = false;\n\t    var immediate = true;\n\t\n\t    var handler = function handler(error) {\n\t      if (!callback) return;\n\t\n\t      callback(__webpack_require__, error);\n\t      callback = null;\n\t    };\n\t\n\t    if (!chunks && failures && failures[chunkId]) {\n\t      handler(true);\n\t      return;\n\t    }\n\t\n\t    ensure(chunkId, function () {\n\t      if (loaded) return;\n\t      loaded = true;\n\t\n\t      if (immediate) {\n\t        // webpack fires callback immediately if chunk was already loaded\n\t        // IE also fires callback immediately if script was already\n\t        // in a cache (AppCache counts too)\n\t        setTimeout(function () {\n\t          handler();\n\t        });\n\t      } else {\n\t        handler();\n\t      }\n\t    });\n\t\n\t    // This is |true| if chunk is already loaded and does not need onError call.\n\t    // This happens because in such case ensure() is performed in sync way\n\t    if (loaded) {\n\t      return;\n\t    }\n\t\n\t    immediate = false;\n\t\n\t    onError(function () {\n\t      if (loaded) return;\n\t      loaded = true;\n\t\n\t      if (chunks) {\n\t        chunks[chunkId] = void 0;\n\t      } else {\n\t        failures || (failures = {});\n\t        failures[chunkId] = true;\n\t      }\n\t\n\t      handler(true);\n\t    });\n\t  };\n\t\n\t  function onError(callback) {\n\t    var script = head.lastChild;\n\t\n\t    if (script.tagName !== \"SCRIPT\") {\n\t      if (typeof console !== \"undefined\" && console.warn) {\n\t        console.warn(\"Script is not a script\", script);\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    script.onload = script.onerror = function () {\n\t      script.onload = script.onerror = null;\n\t      setTimeout(callback, 0);\n\t    };\n\t  }\n\t}\n\n/***/ }),\n\n/***/ 99:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright 2015, Yahoo! Inc.\n\t * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n\t */\n\tvar REACT_STATICS = {\n\t    childContextTypes: true,\n\t    contextTypes: true,\n\t    defaultProps: true,\n\t    displayName: true,\n\t    getDefaultProps: true,\n\t    getDerivedStateFromProps: true,\n\t    mixins: true,\n\t    propTypes: true,\n\t    type: true\n\t};\n\t\n\tvar KNOWN_STATICS = {\n\t    name: true,\n\t    length: true,\n\t    prototype: true,\n\t    caller: true,\n\t    callee: true,\n\t    arguments: true,\n\t    arity: true\n\t};\n\t\n\tvar defineProperty = Object.defineProperty;\n\tvar getOwnPropertyNames = Object.getOwnPropertyNames;\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\tvar getPrototypeOf = Object.getPrototypeOf;\n\tvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\t\n\tfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n\t    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\t\n\t        if (objectPrototype) {\n\t            var inheritedComponent = getPrototypeOf(sourceComponent);\n\t            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n\t                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n\t            }\n\t        }\n\t\n\t        var keys = getOwnPropertyNames(sourceComponent);\n\t\n\t        if (getOwnPropertySymbols) {\n\t            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n\t        }\n\t\n\t        for (var i = 0; i < keys.length; ++i) {\n\t            var key = keys[i];\n\t            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n\t                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\t                try { // Avoid failures from read-only properties\n\t                    defineProperty(targetComponent, key, descriptor);\n\t                } catch (e) {}\n\t            }\n\t        }\n\t\n\t        return targetComponent;\n\t    }\n\t\n\t    return targetComponent;\n\t}\n\t\n\tmodule.exports = hoistNonReactStatics;\n\n\n/***/ }),\n\n/***/ 23:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {/*\n\t * @name Lazy.js\n\t * Licensed under the MIT License (see LICENSE.txt)\n\t *\n\t * @fileOverview\n\t * Lazy.js is a lazy evaluation library for JavaScript.\n\t *\n\t * This has been done before. For examples see:\n\t *\n\t * - [wu.js](http://fitzgen.github.io/wu.js/)\n\t * - [Linq.js](http://linqjs.codeplex.com/)\n\t * - [from.js](https://github.com/suckgamoni/fromjs/)\n\t * - [IxJS](http://rx.codeplex.com/)\n\t * - [sloth.js](http://rfw.name/sloth.js/)\n\t *\n\t * However, at least at present, Lazy.js is faster (on average) than any of\n\t * those libraries. It is also more complete, with nearly all of the\n\t * functionality of [Underscore](http://underscorejs.org/) and\n\t * [Lo-Dash](http://lodash.com/).\n\t *\n\t * Finding your way around the code\n\t * --------------------------------\n\t *\n\t * At the heart of Lazy.js is the {@link Sequence} object. You create an initial\n\t * sequence using {@link Lazy}, which can accept an array, object, or string.\n\t * You can then \"chain\" together methods from this sequence, creating a new\n\t * sequence with each call.\n\t *\n\t * Here's an example:\n\t *\n\t *     var data = getReallyBigArray();\n\t *\n\t *     var statistics = Lazy(data)\n\t *       .map(transform)\n\t *       .filter(validate)\n\t *       .reduce(aggregate);\n\t *\n\t * {@link Sequence} is the foundation of other, more specific sequence types.\n\t *\n\t * An {@link ArrayLikeSequence} provides indexed access to its elements.\n\t *\n\t * An {@link ObjectLikeSequence} consists of key/value pairs.\n\t *\n\t * A {@link StringLikeSequence} is like a string (duh): actually, it is an\n\t * {@link ArrayLikeSequence} whose elements happen to be characters.\n\t *\n\t * An {@link AsyncSequence} is special: it iterates over its elements\n\t * asynchronously (so calling `each` generally begins an asynchronous loop and\n\t * returns immediately).\n\t *\n\t * For more information\n\t * --------------------\n\t *\n\t * I wrote a blog post that explains a little bit more about Lazy.js, which you\n\t * can read [here](http://philosopherdeveloper.com/posts/introducing-lazy-js.html).\n\t *\n\t * You can also [create an issue on GitHub](https://github.com/dtao/lazy.js/issues)\n\t * if you have any issues with the library. I work through them eventually.\n\t *\n\t * [@dtao](https://github.com/dtao)\n\t */\n\t\n\t(function(root, factory) {\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    module.exports = factory();\n\t  } else {\n\t    root.Lazy = factory();\n\t  }\n\t})(this, function(context) {\n\t  /**\n\t   * Wraps an object and returns a {@link Sequence}. For `null` or `undefined`,\n\t   * simply returns an empty sequence (see {@link Lazy.strict} for a stricter\n\t   * implementation).\n\t   *\n\t   * - For **arrays**, Lazy will create a sequence comprising the elements in\n\t   *   the array (an {@link ArrayLikeSequence}).\n\t   * - For **objects**, Lazy will create a sequence of key/value pairs\n\t   *   (an {@link ObjectLikeSequence}).\n\t   * - For **strings**, Lazy will create a sequence of characters (a\n\t   *   {@link StringLikeSequence}).\n\t   *\n\t   * @public\n\t   * @param {Array|Object|string} source An array, object, or string to wrap.\n\t   * @returns {Sequence} The wrapped lazy object.\n\t   *\n\t   * @exampleHelpers\n\t   * // Utility functions to provide to all examples\n\t   * function increment(x) { return x + 1; }\n\t   * function isEven(x) { return x % 2 === 0; }\n\t   * function isPositive(x) { return x > 0; }\n\t   * function isNegative(x) { return x < 0; }\n\t   *\n\t   * // HACK!\n\t   * // autodoc tests for private methods don't pull in all variables defined\n\t   * // within the current scope :(\n\t   * var isArray = Array.isArray;\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 4])       // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy({ foo: \"bar\" })  // instanceof Lazy.ObjectLikeSequence\n\t   * Lazy(\"hello, world!\") // instanceof Lazy.StringLikeSequence\n\t   * Lazy()                // sequence: []\n\t   * Lazy(null)            // sequence: []\n\t   */\n\t  function Lazy(source) {\n\t    if (isArray(source)) {\n\t      return new ArrayWrapper(source);\n\t\n\t    } else if (typeof source === \"string\") {\n\t      return new StringWrapper(source);\n\t\n\t    } else if (source instanceof Sequence) {\n\t      return source;\n\t    }\n\t\n\t    if (Lazy.extensions) {\n\t      var extensions = Lazy.extensions, length = extensions.length, result;\n\t      while (!result && length--) {\n\t        result = extensions[length](source);\n\t      }\n\t      if (result) {\n\t        return result;\n\t      }\n\t    }\n\t\n\t    return new ObjectWrapper(source);\n\t  }\n\t\n\t  Lazy.VERSION = '0.5.1';\n\t\n\t  /*** Utility methods of questionable value ***/\n\t\n\t  Lazy.noop = function noop() {};\n\t  Lazy.identity = function identity(x) { return x; };\n\t  Lazy.equality = function equality(x, y) { return x === y; };\n\t\n\t  /**\n\t   * Provides a stricter version of {@link Lazy} which throws an error when\n\t   * attempting to wrap `null`, `undefined`, or numeric or boolean values as a\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @returns {Function} A stricter version of the {@link Lazy} helper function.\n\t   *\n\t   * @examples\n\t   * var Strict = Lazy.strict();\n\t   *\n\t   * Strict()                  // throws\n\t   * Strict(null)              // throws\n\t   * Strict(true)              // throws\n\t   * Strict(5)                 // throws\n\t   * Strict([1, 2, 3])         // instanceof Lazy.ArrayLikeSequence\n\t   * Strict({ foo: \"bar\" })    // instanceof Lazy.ObjectLikeSequence\n\t   * Strict(\"hello, world!\")   // instanceof Lazy.StringLikeSequence\n\t   *\n\t   * // Let's also ensure the static functions are still there.\n\t   * Strict.range(3)           // sequence: [0, 1, 2]\n\t   * Strict.generate(Date.now) // instanceof Lazy.GeneratedSequence\n\t   */\n\t  Lazy.strict = function strict() {\n\t    function StrictLazy(source) {\n\t      if (source == null) {\n\t        throw new Error(\"You cannot wrap null or undefined using Lazy.\");\n\t      }\n\t\n\t      if (typeof source === \"number\" || typeof source === \"boolean\") {\n\t        throw new Error(\"You cannot wrap primitive values using Lazy.\");\n\t      }\n\t\n\t      return Lazy(source);\n\t    };\n\t\n\t    Lazy(Lazy).each(function(property, name) {\n\t      StrictLazy[name] = property;\n\t    });\n\t\n\t    return StrictLazy;\n\t  };\n\t\n\t  /**\n\t   * The `Sequence` object provides a unified API encapsulating the notion of\n\t   * zero or more consecutive elements in a collection, stream, etc.\n\t   *\n\t   * Lazy evaluation\n\t   * ---------------\n\t   *\n\t   * Generally speaking, creating a sequence should not be an expensive operation,\n\t   * and should not iterate over an underlying source or trigger any side effects.\n\t   * This means that chaining together methods that return sequences incurs only\n\t   * the cost of creating the `Sequence` objects themselves and not the cost of\n\t   * iterating an underlying data source multiple times.\n\t   *\n\t   * The following code, for example, creates 4 sequences and does nothing with\n\t   * `source`:\n\t   *\n\t   *     var seq = Lazy(source) // 1st sequence\n\t   *       .map(func)           // 2nd\n\t   *       .filter(pred)        // 3rd\n\t   *       .reverse();          // 4th\n\t   *\n\t   * Lazy's convention is to hold off on iterating or otherwise *doing* anything\n\t   * (aside from creating `Sequence` objects) until you call `each`:\n\t   *\n\t   *     seq.each(function(x) { console.log(x); });\n\t   *\n\t   * Defining custom sequences\n\t   * -------------------------\n\t   *\n\t   * Defining your own type of sequence is relatively simple:\n\t   *\n\t   * 1. Pass a *method name* and an object containing *function overrides* to\n\t   *    {@link Sequence.define}. If the object includes a function called `init`,\n\t   *    this function will be called upon initialization.\n\t   * 2. The object should include at least either a `getIterator` method or an\n\t   *    `each` method. The former supports both asynchronous and synchronous\n\t   *    iteration, but is slightly more cumbersome to implement. The latter\n\t   *    supports synchronous iteration and can be automatically implemented in\n\t   *    terms of the former. You can also implement both if you want, e.g. to\n\t   *    optimize performance. For more info, see {@link Iterator} and\n\t   *    {@link AsyncSequence}.\n\t   *\n\t   * As a trivial example, the following code defines a new method, `sample`,\n\t   * which randomly may or may not include each element from its parent.\n\t   *\n\t   *     Lazy.Sequence.define(\"sample\", {\n\t   *       each: function(fn) {\n\t   *         return this.parent.each(function(e) {\n\t   *           // 50/50 chance of including this element.\n\t   *           if (Math.random() > 0.5) {\n\t   *             return fn(e);\n\t   *           }\n\t   *         });\n\t   *       }\n\t   *     });\n\t   *\n\t   * (Of course, the above could also easily have been implemented using\n\t   * {@link #filter} instead of creating a custom sequence. But I *did* say this\n\t   * was a trivial example, to be fair.)\n\t   *\n\t   * Now it will be possible to create this type of sequence from any parent\n\t   * sequence by calling the method name you specified. In other words, you can\n\t   * now do this:\n\t   *\n\t   *     Lazy(arr).sample();\n\t   *     Lazy(arr).map(func).sample();\n\t   *     Lazy(arr).map(func).filter(pred).sample();\n\t   *\n\t   * Etc., etc.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   */\n\t  function Sequence() {}\n\t\n\t  /**\n\t   * Create a new constructor function for a type inheriting from `Sequence`.\n\t   *\n\t   * @public\n\t   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n\t   *     used for constructing the new sequence. The method will be attached to\n\t   *     the `Sequence` prototype so that it can be chained with any other\n\t   *     sequence methods, like {@link #map}, {@link #filter}, etc.\n\t   * @param {Object} overrides An object containing function overrides for this\n\t   *     new sequence type. **Must** include either `getIterator` or `each` (or\n\t   *     both). *May* include an `init` method as well. For these overrides,\n\t   *     `this` will be the new sequence, and `this.parent` will be the base\n\t   *     sequence from which the new sequence was constructed.\n\t   * @returns {Function} A constructor for a new type inheriting from `Sequence`.\n\t   *\n\t   * @examples\n\t   * // This sequence type logs every element to the specified logger as it\n\t   * // iterates over it.\n\t   * Lazy.Sequence.define(\"verbose\", {\n\t   *   init: function(logger) {\n\t   *     this.logger = logger;\n\t   *   },\n\t   *\n\t   *   each: function(fn) {\n\t   *     var logger = this.logger;\n\t   *     return this.parent.each(function(e, i) {\n\t   *       logger(e);\n\t   *       return fn(e, i);\n\t   *     });\n\t   *   }\n\t   * });\n\t   *\n\t   * Lazy([1, 2, 3]).verbose(logger).each(Lazy.noop) // calls logger 3 times\n\t   */\n\t  Sequence.define = function define(methodName, overrides) {\n\t    if (!overrides || (!overrides.getIterator && !overrides.each)) {\n\t      throw new Error(\"A custom sequence must implement *at least* getIterator or each!\");\n\t    }\n\t\n\t    return defineSequenceType(Sequence, methodName, overrides);\n\t  };\n\t\n\t  /**\n\t   * Gets the number of elements in the sequence. In some cases, this may\n\t   * require eagerly evaluating the sequence.\n\t   *\n\t   * @public\n\t   * @returns {number} The number of elements in the sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).size();                 // => 3\n\t   * Lazy([1, 2]).map(Lazy.identity).size(); // => 2\n\t   * Lazy([1, 2, 3]).reject(isEven).size();  // => 2\n\t   * Lazy([1, 2, 3]).take(1).size();         // => 1\n\t   * Lazy({ foo: 1, bar: 2 }).size();        // => 2\n\t   * Lazy('hello').size();                   // => 5\n\t   */\n\t  Sequence.prototype.size = function size() {\n\t    return this.getIndex().length();\n\t  };\n\t\n\t  /**\n\t   * Creates an {@link Iterator} object with two methods, `moveNext` -- returning\n\t   * true or false -- and `current` -- returning the current value.\n\t   *\n\t   * This method is used when asynchronously iterating over sequences. Any type\n\t   * inheriting from `Sequence` must implement this method or it can't support\n\t   * asynchronous iteration.\n\t   *\n\t   * Note that **this method is not intended to be used directly by application\n\t   * code.** Rather, it is intended as a means for implementors to potentially\n\t   * define custom sequence types that support either synchronous or\n\t   * asynchronous iteration.\n\t   *\n\t   * @public\n\t   * @returns {Iterator} An iterator object.\n\t   *\n\t   * @examples\n\t   * var iterator = Lazy([1, 2]).getIterator();\n\t   *\n\t   * iterator.moveNext(); // => true\n\t   * iterator.current();  // => 1\n\t   * iterator.moveNext(); // => true\n\t   * iterator.current();  // => 2\n\t   * iterator.moveNext(); // => false\n\t   */\n\t  Sequence.prototype.getIterator = function getIterator() {\n\t    return new Iterator(this);\n\t  };\n\t\n\t  /**\n\t   * Gets the root sequence underlying the current chain of sequences.\n\t   */\n\t  Sequence.prototype.root = function root() {\n\t    return this.parent.root();\n\t  };\n\t\n\t  /**\n\t   * Whether or not the current sequence is an asynchronous one. This is more\n\t   * accurate than checking `instanceof {@link AsyncSequence}` because, for\n\t   * example, `Lazy([1, 2, 3]).async().map(Lazy.identity)` returns a sequence\n\t   * that iterates asynchronously even though it's not an instance of\n\t   * `AsyncSequence`.\n\t   *\n\t   * @returns {boolean} Whether or not the current sequence is an asynchronous one.\n\t   */\n\t  Sequence.prototype.isAsync = function isAsync() {\n\t    return this.parent ? this.parent.isAsync() : false;\n\t  };\n\t\n\t  /**\n\t   * Evaluates the sequence and produces the appropriate value (an array in most\n\t   * cases, an object for {@link ObjectLikeSequence}s or a string for\n\t   * {@link StringLikeSequence}s).\n\t   *\n\t   * @returns {Array|string|Object} The value resulting from fully evaluating\n\t   *     the sequence.\n\t   */\n\t  Sequence.prototype.value = function value() {\n\t    return this.toArray();\n\t  };\n\t\n\t  /**\n\t   * Applies the current transformation chain to a given source, returning the\n\t   * resulting value.\n\t   *\n\t   * @examples\n\t   * var sequence = Lazy([])\n\t   *   .map(function(x) { return x * -1; })\n\t   *   .filter(function(x) { return x % 2 === 0; });\n\t   *\n\t   * sequence.apply([1, 2, 3, 4]); // => [-2, -4]\n\t   */\n\t  Sequence.prototype.apply = function apply(source) {\n\t    var root = this.root(),\n\t        previousSource = root.source,\n\t        result;\n\t\n\t    try {\n\t      root.source = source;\n\t      result = this.value();\n\t    } finally {\n\t      root.source = previousSource;\n\t    }\n\t\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * The Iterator object provides an API for iterating over a sequence.\n\t   *\n\t   * The purpose of the `Iterator` type is mainly to offer an agnostic way of\n\t   * iterating over a sequence -- either synchronous (i.e. with a `while` loop)\n\t   * or asynchronously (with recursive calls to either `setTimeout` or --- if\n\t   * available --- `setImmediate`). It is not intended to be used directly by\n\t   * application code.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   * @param {Sequence} sequence The sequence to iterate over.\n\t   */\n\t  function Iterator(sequence) {\n\t    this.sequence = sequence;\n\t    this.index    = -1;\n\t  }\n\t\n\t  /**\n\t   * Gets the current item this iterator is pointing to.\n\t   *\n\t   * @public\n\t   * @returns {*} The current item.\n\t   */\n\t  Iterator.prototype.current = function current() {\n\t    return this.cachedIndex && this.cachedIndex.get(this.index);\n\t  };\n\t\n\t  /**\n\t   * Moves the iterator to the next item in a sequence, if possible.\n\t   *\n\t   * @public\n\t   * @returns {boolean} True if the iterator is able to move to a new item, or else\n\t   *     false.\n\t   */\n\t  Iterator.prototype.moveNext = function moveNext() {\n\t    var cachedIndex = this.cachedIndex;\n\t\n\t    if (!cachedIndex) {\n\t      cachedIndex = this.cachedIndex = this.sequence.getIndex();\n\t    }\n\t\n\t    if (this.index >= cachedIndex.length() - 1) {\n\t      return false;\n\t    }\n\t\n\t    ++this.index;\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Creates an array snapshot of a sequence.\n\t   *\n\t   * Note that for indefinite sequences, this method may raise an exception or\n\t   * (worse) cause the environment to hang.\n\t   *\n\t   * @public\n\t   * @returns {Array} An array containing the current contents of the sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).toArray() // => [1, 2, 3]\n\t   */\n\t  Sequence.prototype.toArray = function toArray() {\n\t    return this.reduce(function(arr, element) {\n\t      arr.push(element);\n\t      return arr;\n\t    }, []);\n\t  };\n\t\n\t  /**\n\t   * Compare this to another sequence for equality.\n\t   *\n\t   * @public\n\t   * @param {Sequence} other The other sequence to compare this one to.\n\t   * @param {Function=} equalityFn An optional equality function, which should\n\t   *     take two arguments and return true or false to indicate whether those\n\t   *     values are considered equal.\n\t   * @returns {boolean} Whether the two sequences contain the same values in\n\t   *     the same order.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2]).equals(Lazy([1, 2]))   // => true\n\t   * Lazy([1, 2]).equals(Lazy([2, 1]))   // => false\n\t   * Lazy([1]).equals(Lazy([1, 2]))      // => false\n\t   * Lazy([1, 2]).equals(Lazy([1]))      // => false\n\t   * Lazy([]).equals(Lazy([]))           // => true\n\t   * Lazy(['foo']).equals(Lazy(['foo'])) // => true\n\t   * Lazy(['1']).equals(Lazy([1]))       // => false\n\t   * Lazy([false]).equals(Lazy([0]))     // => false\n\t   * Lazy([1, 2]).equals([1, 2])         // => false\n\t   * Lazy([1, 2]).equals('[1, 2]')       // => false\n\t   */\n\t  Sequence.prototype.equals = function equals(other, equalityFn) {\n\t    if (!(other instanceof Sequence)) {\n\t      return false;\n\t    }\n\t\n\t    var it  = this.getIterator(),\n\t        oit = other.getIterator(),\n\t        eq  = equalityFn || Lazy.equality;\n\t    while (it.moveNext()) {\n\t      if (!oit.moveNext()) {\n\t        return false;\n\t      }\n\t      if (!eq(it.current(), oit.current())) {\n\t        return false;\n\t      }\n\t    }\n\t    return !oit.moveNext();\n\t  };\n\t\n\t  /**\n\t   * Provides an indexed view into the sequence.\n\t   *\n\t   * For sequences that are already indexed, this will simply return the\n\t   * sequence. For non-indexed sequences, this will eagerly evaluate the\n\t   * sequence.\n\t   *\n\t   * @returns {ArrayLikeSequence} A sequence containing the current contents of\n\t   *     the sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).filter(isEven)            // instanceof Lazy.Sequence\n\t   * Lazy([1, 2, 3]).filter(isEven).getIndex() // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  Sequence.prototype.getIndex = function getIndex() {\n\t    return new ArrayWrapper(this.toArray());\n\t  };\n\t\n\t  /**\n\t   * Returns the element at the specified index. Note that, for sequences that\n\t   * are not {@link ArrayLikeSequence}s, this may require partially evaluating\n\t   * the sequence, iterating to reach the result. (In other words for such\n\t   * sequences this method is not O(1).)\n\t   *\n\t   * @public\n\t   * @param {number} i The index to access.\n\t   * @returns {*} The element.\n\t   *\n\t   */\n\t  Sequence.prototype.get = function get(i) {\n\t    var element;\n\t    this.each(function(e, index) {\n\t      if (index === i) {\n\t        element = e;\n\t        return false;\n\t      }\n\t    });\n\t    return element;\n\t  };\n\t\n\t  /**\n\t   * Provides an indexed, memoized view into the sequence. This will cache the\n\t   * result whenever the sequence is first iterated, so that subsequent\n\t   * iterations will access the same element objects.\n\t   *\n\t   * @public\n\t   * @returns {ArrayLikeSequence} An indexed, memoized sequence containing this\n\t   *     sequence's elements, cached after the first iteration.\n\t   *\n\t   * @example\n\t   * function createObject() { return new Object(); }\n\t   *\n\t   * var plain    = Lazy.generate(createObject, 10),\n\t   *     memoized = Lazy.generate(createObject, 10).memoize();\n\t   *\n\t   * plain.toArray()[0] === plain.toArray()[0];       // => false\n\t   * memoized.toArray()[0] === memoized.toArray()[0]; // => true\n\t   */\n\t  Sequence.prototype.memoize = function memoize() {\n\t    return new MemoizedSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MemoizedSequence(parent) {\n\t    this.parent   = parent;\n\t    this.memo     = [];\n\t    this.iterator = undefined;\n\t    this.complete = false;\n\t  }\n\t\n\t  // MemoizedSequence needs to have its prototype set up after ArrayLikeSequence\n\t\n\t  /**\n\t   * Creates an object from a sequence of key/value pairs.\n\t   *\n\t   * @public\n\t   * @returns {Object} An object with keys and values corresponding to the pairs\n\t   *     of elements in the sequence.\n\t   *\n\t   * @examples\n\t   * var details = [\n\t   *   [\"first\", \"Dan\"],\n\t   *   [\"last\", \"Tao\"],\n\t   *   [\"age\", 29]\n\t   * ];\n\t   *\n\t   * Lazy(details).toObject() // => { first: \"Dan\", last: \"Tao\", age: 29 }\n\t   */\n\t  Sequence.prototype.toObject = function toObject() {\n\t    return this.reduce(function(object, pair) {\n\t      object[pair[0]] = pair[1];\n\t      return object;\n\t    }, {});\n\t  };\n\t\n\t  /**\n\t   * Iterates over this sequence and executes a function for every element.\n\t   *\n\t   * @public\n\t   * @aka forEach\n\t   * @param {Function} fn The function to call on each element in the sequence.\n\t   *     Return false from the function to end the iteration.\n\t   * @returns {boolean} `true` if the iteration evaluated the entire sequence,\n\t   *     or `false` if iteration was ended early.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4]).each(fn) // calls fn 4 times\n\t   */\n\t  Sequence.prototype.each = function each(fn) {\n\t    var iterator = this.getIterator(),\n\t        i = -1;\n\t\n\t    while (iterator.moveNext()) {\n\t      if (fn(iterator.current(), ++i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  Sequence.prototype.forEach = function forEach(fn) {\n\t    return this.each(fn);\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values are calculated by passing this sequence's\n\t   * elements through some mapping function.\n\t   *\n\t   * @public\n\t   * @aka collect\n\t   * @param {Function} mapFn The mapping function used to project this sequence's\n\t   *     elements onto a new sequence. This function takes up to two arguments:\n\t   *     the element, and the current index.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function addIndexToValue(e, i) { return e + i; }\n\t   *\n\t   * Lazy([]).map(increment)              // sequence: []\n\t   * Lazy([1, 2, 3]).map(increment)       // sequence: [2, 3, 4]\n\t   * Lazy([1, 2, 3]).map(addIndexToValue) // sequence: [1, 3, 5]\n\t   *\n\t   * @benchmarks\n\t   * function increment(x) { return x + 1; }\n\t   *\n\t   * var smArr = Lazy.range(10).toArray(),\n\t   *     lgArr = Lazy.range(100).toArray();\n\t   *\n\t   * Lazy(smArr).map(increment).each(Lazy.noop) // lazy - 10 elements\n\t   * Lazy(lgArr).map(increment).each(Lazy.noop) // lazy - 100 elements\n\t   * _.each(_.map(smArr, increment), _.noop)    // lodash - 10 elements\n\t   * _.each(_.map(lgArr, increment), _.noop)    // lodash - 100 elements\n\t   */\n\t  Sequence.prototype.map = function map(mapFn) {\n\t    return new MappedSequence(this, createCallback(mapFn));\n\t  };\n\t\n\t  Sequence.prototype.collect = function collect(mapFn) {\n\t    return this.map(mapFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MappedSequence(parent, mapFn) {\n\t    this.parent = parent;\n\t    this.mapFn  = mapFn;\n\t  }\n\t\n\t  MappedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  MappedSequence.prototype.getIterator = function getIterator() {\n\t    return new MappingIterator(this.parent, this.mapFn);\n\t  };\n\t\n\t  MappedSequence.prototype.each = function each(fn) {\n\t    var mapFn = this.mapFn;\n\t    return this.parent.each(function(e, i) {\n\t      return fn(mapFn(e, i), i);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MappingIterator(sequence, mapFn) {\n\t    this.iterator = sequence.getIterator();\n\t    this.mapFn    = mapFn;\n\t    this.index    = -1;\n\t  }\n\t\n\t  MappingIterator.prototype.current = function current() {\n\t    return this.mapFn(this.iterator.current(), this.index);\n\t  };\n\t\n\t  MappingIterator.prototype.moveNext = function moveNext() {\n\t    if (this.iterator.moveNext()) {\n\t      ++this.index;\n\t      return true;\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values are calculated by accessing the specified\n\t   * property from each element in this sequence.\n\t   *\n\t   * @public\n\t   * @param {string} propertyName The name of the property to access for every\n\t   *     element in this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var people = [\n\t   *   { first: \"Dan\", last: \"Tao\" },\n\t   *   { first: \"Bob\", last: \"Smith\" }\n\t   * ];\n\t   *\n\t   * Lazy(people).pluck(\"last\") // sequence: [\"Tao\", \"Smith\"]\n\t   */\n\t  Sequence.prototype.pluck = function pluck(property) {\n\t    return this.map(property);\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values are calculated by invoking the specified\n\t   * function on each element in this sequence.\n\t   *\n\t   * @public\n\t   * @param {string} methodName The name of the method to invoke for every element\n\t   *     in this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function Person(first, last) {\n\t   *   this.fullName = function fullName() {\n\t   *     return first + \" \" + last;\n\t   *   };\n\t   * }\n\t   *\n\t   * var people = [\n\t   *   new Person(\"Dan\", \"Tao\"),\n\t   *   new Person(\"Bob\", \"Smith\")\n\t   * ];\n\t   *\n\t   * Lazy(people).invoke(\"fullName\") // sequence: [\"Dan Tao\", \"Bob Smith\"]\n\t   */\n\t  Sequence.prototype.invoke = function invoke(methodName) {\n\t    return this.map(function(e) {\n\t      return e[methodName]();\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values are the elements of this sequence which\n\t   * satisfy the specified predicate.\n\t   *\n\t   * @public\n\t   * @aka select\n\t   * @param {Function} filterFn The predicate to call on each element in this\n\t   *     sequence, which returns true if the element should be included.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var numbers = [1, 2, 3, 4, 5, 6];\n\t   *\n\t   * Lazy(numbers).filter(isEven) // sequence: [2, 4, 6]\n\t   *\n\t   * @benchmarks\n\t   * function isEven(x) { return x % 2 === 0; }\n\t   *\n\t   * var smArr = Lazy.range(10).toArray(),\n\t   *     lgArr = Lazy.range(100).toArray();\n\t   *\n\t   * Lazy(smArr).filter(isEven).each(Lazy.noop) // lazy - 10 elements\n\t   * Lazy(lgArr).filter(isEven).each(Lazy.noop) // lazy - 100 elements\n\t   * _.each(_.filter(smArr, isEven), _.noop)    // lodash - 10 elements\n\t   * _.each(_.filter(lgArr, isEven), _.noop)    // lodash - 100 elements\n\t   */\n\t  Sequence.prototype.filter = function filter(filterFn) {\n\t    return new FilteredSequence(this, createCallback(filterFn));\n\t  };\n\t\n\t  Sequence.prototype.select = function select(filterFn) {\n\t    return this.filter(filterFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function FilteredSequence(parent, filterFn) {\n\t    this.parent   = parent;\n\t    this.filterFn = filterFn;\n\t  }\n\t\n\t  FilteredSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  FilteredSequence.prototype.getIterator = function getIterator() {\n\t    return new FilteringIterator(this.parent, this.filterFn);\n\t  };\n\t\n\t  FilteredSequence.prototype.each = function each(fn) {\n\t    var filterFn = this.filterFn,\n\t        j = 0;\n\t\n\t    return this.parent.each(function(e, i) {\n\t      if (filterFn(e, i)) {\n\t        return fn(e, j++);\n\t      }\n\t    });\n\t  };\n\t\n\t  FilteredSequence.prototype.reverse = function reverse() {\n\t    return this.parent.reverse().filter(this.filterFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function FilteringIterator(sequence, filterFn) {\n\t    this.iterator = sequence.getIterator();\n\t    this.filterFn = filterFn;\n\t    this.index    = 0;\n\t  }\n\t\n\t  FilteringIterator.prototype.current = function current() {\n\t    return this.value;\n\t  };\n\t\n\t  FilteringIterator.prototype.moveNext = function moveNext() {\n\t    var iterator = this.iterator,\n\t        filterFn = this.filterFn,\n\t        value;\n\t\n\t    while (iterator.moveNext()) {\n\t      value = iterator.current();\n\t      if (filterFn(value, this.index++)) {\n\t        this.value = value;\n\t        return true;\n\t      }\n\t    }\n\t\n\t    this.value = undefined;\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values exclude the elements of this sequence\n\t   * identified by the specified predicate.\n\t   *\n\t   * @public\n\t   * @param {Function} rejectFn The predicate to call on each element in this\n\t   *     sequence, which returns true if the element should be omitted.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4, 5]).reject(isEven)              // sequence: [1, 3, 5]\n\t   * Lazy([{ foo: 1 }, { bar: 2 }]).reject('foo')      // sequence: [{ bar: 2 }]\n\t   * Lazy([{ foo: 1 }, { foo: 2 }]).reject({ foo: 2 }) // sequence: [{ foo: 1 }]\n\t   */\n\t  Sequence.prototype.reject = function reject(rejectFn) {\n\t    rejectFn = createCallback(rejectFn);\n\t    return this.filter(function(e) { return !rejectFn(e); });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values have the specified type, as determined\n\t   * by the `typeof` operator.\n\t   *\n\t   * @public\n\t   * @param {string} type The type of elements to include from the underlying\n\t   *     sequence, i.e. where `typeof [element] === [type]`.\n\t   * @returns {Sequence} The new sequence, comprising elements of the specified\n\t   *     type.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 'foo', 'bar']).ofType('number')  // sequence: [1, 2]\n\t   * Lazy([1, 2, 'foo', 'bar']).ofType('string')  // sequence: ['foo', 'bar']\n\t   * Lazy([1, 2, 'foo', 'bar']).ofType('boolean') // sequence: []\n\t   */\n\t  Sequence.prototype.ofType = function ofType(type) {\n\t    return this.filter(function(e) { return typeof e === type; });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values are the elements of this sequence with\n\t   * property names and values matching those of the specified object.\n\t   *\n\t   * @public\n\t   * @param {Object} properties The properties that should be found on every\n\t   *     element that is to be included in this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var people = [\n\t   *   { first: \"Dan\", last: \"Tao\" },\n\t   *   { first: \"Bob\", last: \"Smith\" }\n\t   * ];\n\t   *\n\t   * Lazy(people).where({ first: \"Dan\" }) // sequence: [{ first: \"Dan\", last: \"Tao\" }]\n\t   *\n\t   * @benchmarks\n\t   * var animals = [\"dog\", \"cat\", \"mouse\", \"horse\", \"pig\", \"snake\"];\n\t   *\n\t   * Lazy(animals).where({ length: 3 }).each(Lazy.noop) // lazy\n\t   * _.each(_.where(animals, { length: 3 }), _.noop)    // lodash\n\t   */\n\t  Sequence.prototype.where = function where(properties) {\n\t    return this.filter(properties);\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with the same elements as this one, but to be iterated\n\t   * in the opposite order.\n\t   *\n\t   * Note that in some (but not all) cases, the only way to create such a sequence\n\t   * may require iterating the entire underlying source when `each` is called.\n\t   *\n\t   * @public\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).reverse() // sequence: [3, 2, 1]\n\t   * Lazy([]).reverse()        // sequence: []\n\t   */\n\t  Sequence.prototype.reverse = function reverse() {\n\t    return new ReversedSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ReversedSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  ReversedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ReversedSequence.prototype.getIterator = function getIterator() {\n\t    return new ReversedIterator(this.parent);\n\t  };\n\t\n\t  /**\n\t   * @constuctor\n\t   */\n\t  function ReversedIterator(sequence) {\n\t    this.sequence = sequence;\n\t  }\n\t\n\t  ReversedIterator.prototype.current = function current() {\n\t    return this.getIndex().get(this.index);\n\t  };\n\t\n\t  ReversedIterator.prototype.moveNext = function moveNext() {\n\t    var index  = this.getIndex(),\n\t        length = index.length();\n\t\n\t    if (typeof this.index === \"undefined\") {\n\t      this.index = length;\n\t    }\n\t\n\t    return (--this.index >= 0);\n\t  };\n\t\n\t  ReversedIterator.prototype.getIndex = function getIndex() {\n\t    if (!this.cachedIndex) {\n\t      this.cachedIndex = this.sequence.getIndex();\n\t    }\n\t\n\t    return this.cachedIndex;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with all of the elements of this one, plus those of\n\t   * the given array(s).\n\t   *\n\t   * @public\n\t   * @param {...*} var_args One or more values (or arrays of values) to use for\n\t   *     additional items after this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var left  = [1, 2, 3];\n\t   * var right = [4, 5, 6];\n\t   *\n\t   * Lazy(left).concat(right)             // sequence: [1, 2, 3, 4, 5, 6]\n\t   * Lazy(left).concat(Lazy(right))       // sequence: [1, 2, 3, 4, 5, 6]\n\t   * Lazy(left).concat(right, [7, 8])     // sequence: [1, 2, 3, 4, 5, 6, 7, 8]\n\t   * Lazy(left).concat([4, [5, 6]])       // sequence: [1, 2, 3, 4, [5, 6]]\n\t   * Lazy(left).concat(Lazy([4, [5, 6]])) // sequence: [1, 2, 3, 4, [5, 6]]\n\t   */\n\t  Sequence.prototype.concat = function concat(var_args) {\n\t    return new ConcatenatedSequence(this, arraySlice.call(arguments, 0));\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ConcatenatedSequence(parent, arrays) {\n\t    this.parent = parent;\n\t    this.arrays = arrays;\n\t  }\n\t\n\t  ConcatenatedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ConcatenatedSequence.prototype.each = function each(fn) {\n\t    var done = false,\n\t        i = 0;\n\t\n\t    this.parent.each(function(e) {\n\t      if (fn(e, i++) === false) {\n\t        done = true;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    if (!done) {\n\t      Lazy(this.arrays).flatten(true).each(function(e) {\n\t        if (fn(e, i++) === false) {\n\t          return false;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising the first N elements from this sequence, OR\n\t   * (if N is `undefined`) simply returns the first element of this sequence.\n\t   *\n\t   * @public\n\t   * @aka head, take\n\t   * @param {number=} count The number of elements to take from this sequence. If\n\t   *     this value exceeds the length of the sequence, the resulting sequence\n\t   *     will be essentially the same as this one.\n\t   * @returns {*} The new sequence (or the first element from this sequence if\n\t   *     no count was given).\n\t   *\n\t   * @examples\n\t   * function powerOfTwo(exp) {\n\t   *   return Math.pow(2, exp);\n\t   * }\n\t   *\n\t   * Lazy.generate(powerOfTwo).first()          // => 1\n\t   * Lazy.generate(powerOfTwo).first(5)         // sequence: [1, 2, 4, 8, 16]\n\t   * Lazy.generate(powerOfTwo).skip(2).first()  // => 4\n\t   * Lazy.generate(powerOfTwo).skip(2).first(2) // sequence: [4, 8]\n\t   */\n\t  Sequence.prototype.first = function first(count) {\n\t    if (typeof count === \"undefined\") {\n\t      return getFirst(this);\n\t    }\n\t    return new TakeSequence(this, count);\n\t  };\n\t\n\t  Sequence.prototype.head =\n\t  Sequence.prototype.take = function (count) {\n\t    return this.first(count);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function TakeSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count  = count;\n\t  }\n\t\n\t  TakeSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  TakeSequence.prototype.getIterator = function getIterator() {\n\t    return new TakeIterator(this.parent, this.count);\n\t  };\n\t\n\t  TakeSequence.prototype.each = function each(fn) {\n\t    var count = this.count,\n\t        i     = 0;\n\t\n\t    var result;\n\t    var handle = this.parent.each(function(e) {\n\t      if (i < count) { result = fn(e, i++); }\n\t      if (i >= count) { return false; }\n\t      return result;\n\t    });\n\t\n\t    if (handle instanceof AsyncHandle) {\n\t      return handle;\n\t    }\n\t\n\t    return i === count && result !== false;\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function TakeIterator(sequence, count) {\n\t    this.iterator = sequence.getIterator();\n\t    this.count    = count;\n\t  }\n\t\n\t  TakeIterator.prototype.current = function current() {\n\t    return this.iterator.current();\n\t  };\n\t\n\t  TakeIterator.prototype.moveNext = function moveNext() {\n\t    return ((--this.count >= 0) && this.iterator.moveNext());\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising the elements from the head of this sequence\n\t   * that satisfy some predicate. Once an element is encountered that doesn't\n\t   * satisfy the predicate, iteration will stop.\n\t   *\n\t   * @public\n\t   * @param {Function} predicate\n\t   * @returns {Sequence} The new sequence\n\t   *\n\t   * @examples\n\t   * function lessThan(x) {\n\t   *   return function(y) {\n\t   *     return y < x;\n\t   *   };\n\t   * }\n\t   *\n\t   * Lazy([1, 2, 3, 4]).takeWhile(lessThan(3)) // sequence: [1, 2]\n\t   * Lazy([1, 2, 3, 4]).takeWhile(lessThan(0)) // sequence: []\n\t   */\n\t  Sequence.prototype.takeWhile = function takeWhile(predicate) {\n\t    return new TakeWhileSequence(this, predicate);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function TakeWhileSequence(parent, predicate) {\n\t    this.parent    = parent;\n\t    this.predicate = predicate;\n\t  }\n\t\n\t  TakeWhileSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  TakeWhileSequence.prototype.each = function each(fn) {\n\t    var predicate = this.predicate,\n\t        finished = false,\n\t        j = 0;\n\t\n\t    var result = this.parent.each(function(e, i) {\n\t      if (!predicate(e, i)) {\n\t        finished = true;\n\t        return false;\n\t      }\n\t\n\t      return fn(e, j++);\n\t    });\n\t\n\t    if (result instanceof AsyncHandle) {\n\t      return result;\n\t    }\n\t\n\t    return finished;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising all but the last N elements of this\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @param {number=} count The number of items to omit from the end of the\n\t   *     sequence (defaults to 1).\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4]).initial()                    // sequence: [1, 2, 3]\n\t   * Lazy([1, 2, 3, 4]).initial(2)                   // sequence: [1, 2]\n\t   * Lazy([1, 2, 3]).filter(Lazy.identity).initial() // sequence: [1, 2]\n\t   */\n\t  Sequence.prototype.initial = function initial(count) {\n\t    return new InitialSequence(this, count);\n\t  };\n\t\n\t  function InitialSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count = typeof count === \"number\" ? count : 1;\n\t  }\n\t\n\t  InitialSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  InitialSequence.prototype.each = function each(fn) {\n\t    var index = this.parent.getIndex();\n\t    return index.take(index.length() - this.count).each(fn);\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising the last N elements of this sequence, OR\n\t   * (if N is `undefined`) simply returns the last element of this sequence.\n\t   *\n\t   * @public\n\t   * @param {number=} count The number of items to take from the end of the\n\t   *     sequence.\n\t   * @returns {*} The new sequence (or the last element from this sequence\n\t   *     if no count was given).\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).last()                 // => 3\n\t   * Lazy([1, 2, 3]).last(2)                // sequence: [2, 3]\n\t   * Lazy([1, 2, 3]).filter(isEven).last(2) // sequence: [2]\n\t   */\n\t  Sequence.prototype.last = function last(count) {\n\t    if (typeof count === \"undefined\") {\n\t      return this.reverse().first();\n\t    }\n\t    return this.reverse().take(count).reverse();\n\t  };\n\t\n\t  /**\n\t   * Returns the first element in this sequence with property names and values\n\t   * matching those of the specified object.\n\t   *\n\t   * @public\n\t   * @param {Object} properties The properties that should be found on some\n\t   *     element in this sequence.\n\t   * @returns {*} The found element, or `undefined` if none exists in this\n\t   *     sequence.\n\t   *\n\t   * @examples\n\t   * var words = [\"foo\", \"bar\"];\n\t   *\n\t   * Lazy(words).findWhere({ 0: \"f\" }); // => \"foo\"\n\t   * Lazy(words).findWhere({ 0: \"z\" }); // => undefined\n\t   */\n\t  Sequence.prototype.findWhere = function findWhere(properties) {\n\t    return this.where(properties).first();\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising all but the first N elements of this\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @aka skip, tail, rest\n\t   * @param {number=} count The number of items to omit from the beginning of the\n\t   *     sequence (defaults to 1).\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4]).rest()  // sequence: [2, 3, 4]\n\t   * Lazy([1, 2, 3, 4]).rest(0) // sequence: [1, 2, 3, 4]\n\t   * Lazy([1, 2, 3, 4]).rest(2) // sequence: [3, 4]\n\t   * Lazy([1, 2, 3, 4]).rest(5) // sequence: []\n\t   */\n\t  Sequence.prototype.rest = function rest(count) {\n\t    return new DropSequence(this, count);\n\t  };\n\t\n\t  Sequence.prototype.skip =\n\t  Sequence.prototype.tail =\n\t  Sequence.prototype.drop = function drop(count) {\n\t    return this.rest(count);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function DropSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count  = typeof count === \"number\" ? count : 1;\n\t  }\n\t\n\t  DropSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  DropSequence.prototype.each = function each(fn) {\n\t    var count   = this.count,\n\t        dropped = 0,\n\t        i       = 0;\n\t\n\t    return this.parent.each(function(e) {\n\t      if (dropped++ < count) { return; }\n\t      return fn(e, i++);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising the elements from this sequence *after*\n\t   * those that satisfy some predicate. The sequence starts with the first\n\t   * element that does not match the predicate.\n\t   *\n\t   * @public\n\t   * @aka skipWhile\n\t   * @param {Function} predicate\n\t   * @returns {Sequence} The new sequence\n\t   */\n\t  Sequence.prototype.dropWhile = function dropWhile(predicate) {\n\t    return new DropWhileSequence(this, predicate);\n\t  };\n\t\n\t  Sequence.prototype.skipWhile = function skipWhile(predicate) {\n\t    return this.dropWhile(predicate);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function DropWhileSequence(parent, predicate) {\n\t    this.parent    = parent;\n\t    this.predicate = predicate;\n\t  }\n\t\n\t  DropWhileSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  DropWhileSequence.prototype.each = function each(fn) {\n\t    var predicate = this.predicate,\n\t        done      = false;\n\t\n\t    return this.parent.each(function(e) {\n\t      if (!done) {\n\t        if (predicate(e)) {\n\t          return;\n\t        }\n\t\n\t        done = true;\n\t      }\n\t\n\t      return fn(e);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with the same elements as this one, but ordered\n\t   * using the specified comparison function.\n\t   *\n\t   * This has essentially the same behavior as calling\n\t   * [`Array#sort`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort),\n\t   * but obviously instead of modifying the collection it returns a new\n\t   * {@link Sequence} object.\n\t   *\n\t   * @public\n\t   * @param {Function=} sortFn The function used to compare elements in the\n\t   *     sequence. The function will be passed two elements and should return:\n\t   *     - 1 if the first is greater\n\t   *     - -1 if the second is greater\n\t   *     - 0 if the two values are the same\n\t   * @param {boolean} descending Whether or not the resulting sequence should be\n\t   *     in descending order (defaults to `false`).\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([5, 10, 1]).sort()                // sequence: [1, 5, 10]\n\t   * Lazy(['foo', 'bar']).sort()            // sequence: ['bar', 'foo']\n\t   * Lazy(['b', 'c', 'a']).sort(null, true) // sequence: ['c', 'b', 'a']\n\t   * Lazy([5, 10, 1]).sort(null, true)      // sequence: [10, 5, 1]\n\t   *\n\t   * // Sorting w/ custom comparison function\n\t   * Lazy(['a', 'ab', 'aa', 'ba', 'b', 'abc']).sort(function compare(x, y) {\n\t   *   if (x.length && (x.length !== y.length)) { return compare(x.length, y.length); }\n\t   *   if (x === y) { return 0; }\n\t   *   return x > y ? 1 : -1;\n\t   * });\n\t   * // => sequence: ['a', 'b', 'aa', 'ab', 'ba', 'abc']\n\t   */\n\t  Sequence.prototype.sort = function sort(sortFn, descending) {\n\t    sortFn || (sortFn = compare);\n\t    if (descending) { sortFn = reverseArguments(sortFn); }\n\t    return new SortedSequence(this, sortFn);\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with the same elements as this one, but ordered by\n\t   * the results of the given function.\n\t   *\n\t   * You can pass:\n\t   *\n\t   * - a *string*, to sort by the named property\n\t   * - a function, to sort by the result of calling the function on each element\n\t   *\n\t   * @public\n\t   * @param {Function} sortFn The function to call on the elements in this\n\t   *     sequence, in order to sort them.\n\t   * @param {boolean} descending Whether or not the resulting sequence should be\n\t   *     in descending order (defaults to `false`).\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function population(country) {\n\t   *   return country.pop;\n\t   * }\n\t   *\n\t   * function area(country) {\n\t   *   return country.sqkm;\n\t   * }\n\t   *\n\t   * var countries = [\n\t   *   { name: \"USA\", pop: 320000000, sqkm: 9600000 },\n\t   *   { name: \"Brazil\", pop: 194000000, sqkm: 8500000 },\n\t   *   { name: \"Nigeria\", pop: 174000000, sqkm: 924000 },\n\t   *   { name: \"China\", pop: 1350000000, sqkm: 9700000 },\n\t   *   { name: \"Russia\", pop: 143000000, sqkm: 17000000 },\n\t   *   { name: \"Australia\", pop: 23000000, sqkm: 7700000 }\n\t   * ];\n\t   *\n\t   * Lazy(countries).sortBy(population).last(3).pluck('name') // sequence: [\"Brazil\", \"USA\", \"China\"]\n\t   * Lazy(countries).sortBy(area).last(3).pluck('name')       // sequence: [\"USA\", \"China\", \"Russia\"]\n\t   * Lazy(countries).sortBy(area, true).first(3).pluck('name') // sequence: [\"Russia\", \"China\", \"USA\"]\n\t   *\n\t   * @benchmarks\n\t   * var randoms = Lazy.generate(Math.random).take(100).toArray();\n\t   *\n\t   * Lazy(randoms).sortBy(Lazy.identity).each(Lazy.noop) // lazy\n\t   * _.each(_.sortBy(randoms, Lazy.identity), _.noop)    // lodash\n\t   */\n\t  Sequence.prototype.sortBy = function sortBy(sortFn, descending) {\n\t    sortFn = createComparator(sortFn);\n\t    if (descending) { sortFn = reverseArguments(sortFn); }\n\t    return new SortedSequence(this, sortFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SortedSequence(parent, sortFn) {\n\t    this.parent = parent;\n\t    this.sortFn = sortFn;\n\t  }\n\t\n\t  SortedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  SortedSequence.prototype.each = function each(fn) {\n\t    var sortFn = this.sortFn,\n\t        result = this.parent.toArray();\n\t\n\t    result.sort(sortFn);\n\t\n\t    return forEach(result, fn);\n\t  };\n\t\n\t  /**\n\t   * @examples\n\t   * var items = [{ a: 4 }, { a: 3 }, { a: 5 }];\n\t   *\n\t   * Lazy(items).sortBy('a').reverse();\n\t   * // => sequence: [{ a: 5 }, { a: 4 }, { a: 3 }]\n\t   *\n\t   * Lazy(items).sortBy('a').reverse().reverse();\n\t   * // => sequence: [{ a: 3 }, { a: 4 }, { a: 5 }]\n\t   */\n\t  SortedSequence.prototype.reverse = function reverse() {\n\t    return new SortedSequence(this.parent, reverseArguments(this.sortFn));\n\t  };\n\t\n\t  /**\n\t   * Creates a new {@link ObjectLikeSequence} comprising the elements in this\n\t   * one, grouped together according to some key. The value associated with each\n\t   * key in the resulting object-like sequence is an array containing all of\n\t   * the elements in this sequence with that key.\n\t   *\n\t   * @public\n\t   * @param {Function|string} keyFn The function to call on the elements in this\n\t   *     sequence to obtain a key by which to group them, or a string representing\n\t   *     a parameter to read from all the elements in this sequence.\n\t   * @param {Function|string} valFn (Optional) The function to call on the elements\n\t   *     in this sequence to assign to the value for each instance to appear in the\n\t   *     group, or a string representing a parameter to read from all the elements\n\t   *     in this sequence.\n\t   * @returns {ObjectLikeSequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function oddOrEven(x) {\n\t   *   return x % 2 === 0 ? 'even' : 'odd';\n\t   * }\n\t   * function square(x) {\n\t   *   return x*x;\n\t   * }\n\t   *\n\t   * var numbers = [1, 2, 3, 4, 5];\n\t   *\n\t   * Lazy(numbers).groupBy(oddOrEven)                     // sequence: { odd: [1, 3, 5], even: [2, 4] }\n\t   * Lazy(numbers).groupBy(oddOrEven).get(\"odd\")          // => [1, 3, 5]\n\t   * Lazy(numbers).groupBy(oddOrEven).get(\"foo\")          // => undefined\n\t   * Lazy(numbers).groupBy(oddOrEven, square).get(\"even\") // => [4, 16]\n\t   *\n\t   * Lazy([\n\t   *   { name: 'toString' },\n\t   *   { name: 'toString' }\n\t   * ]).groupBy('name');\n\t   * // => sequence: {\n\t   *   'toString': [\n\t   *     { name: 'toString' },\n\t   *     { name: 'toString' }\n\t   *   ]\n\t   * }\n\t   */\n\t  Sequence.prototype.groupBy = function groupBy(keyFn, valFn) {\n\t    return new GroupedSequence(this, keyFn, valFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function GroupedSequence(parent, keyFn, valFn) {\n\t    this.parent = parent;\n\t    this.keyFn  = keyFn;\n\t    this.valFn  = valFn;\n\t  }\n\t\n\t  // GroupedSequence must have its prototype set after ObjectLikeSequence has\n\t  // been fully initialized.\n\t\n\t  /**\n\t   * Creates a new {@link ObjectLikeSequence} comprising the elements in this\n\t   * one, indexed according to some key.\n\t   *\n\t   * @public\n\t   * @param {Function|string} keyFn The function to call on the elements in this\n\t   *     sequence to obtain a key by which to index them, or a string\n\t   *     representing a property to read from all the elements in this sequence.\n\t   * @param {Function|string} valFn (Optional) The function to call on the elements\n\t   *     in this sequence to assign to the value of the indexed object, or a string\n\t   *     representing a parameter to read from all the elements in this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var people = [\n\t   *   { name: 'Bob', age: 25 },\n\t   *   { name: 'Fred', age: 34 }\n\t   * ];\n\t   *\n\t   * var bob  = people[0],\n\t   *     fred = people[1];\n\t   *\n\t   * Lazy(people).indexBy('name')        // sequence: { 'Bob': bob, 'Fred': fred }\n\t   * Lazy(people).indexBy('name', 'age') // sequence: { 'Bob': 25, 'Fred': 34 }\n\t   */\n\t  Sequence.prototype.indexBy = function(keyFn, valFn) {\n\t    return new IndexedSequence(this, keyFn, valFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedSequence(parent, keyFn, valFn) {\n\t    this.parent = parent;\n\t    this.keyFn  = keyFn;\n\t    this.valFn  = valFn;\n\t  }\n\t\n\t  // IndexedSequence must have its prototype set after ObjectLikeSequence has\n\t  // been fully initialized.\n\t\n\t  /**\n\t   * Creates a new {@link ObjectLikeSequence} containing the unique keys of all\n\t   * the elements in this sequence, each paired with the number of elements\n\t   * in this sequence having that key.\n\t   *\n\t   * @public\n\t   * @param {Function|string} keyFn The function to call on the elements in this\n\t   *     sequence to obtain a key by which to count them, or a string representing\n\t   *     a parameter to read from all the elements in this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function oddOrEven(x) {\n\t   *   return x % 2 === 0 ? 'even' : 'odd';\n\t   * }\n\t   *\n\t   * var numbers = [1, 2, 3, 4, 5];\n\t   *\n\t   * Lazy(numbers).countBy(oddOrEven)            // sequence: { odd: 3, even: 2 }\n\t   * Lazy(numbers).countBy(oddOrEven).get(\"odd\") // => 3\n\t   * Lazy(numbers).countBy(oddOrEven).get(\"foo\") // => undefined\n\t   */\n\t  Sequence.prototype.countBy = function countBy(keyFn) {\n\t    return new CountedSequence(this, keyFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function CountedSequence(parent, keyFn) {\n\t    this.parent = parent;\n\t    this.keyFn  = keyFn;\n\t  }\n\t\n\t  // CountedSequence, like GroupedSequence, must have its prototype set after\n\t  // ObjectLikeSequence has been fully initialized.\n\t\n\t  /**\n\t   * Creates a new sequence with every unique element from this one appearing\n\t   * exactly once (i.e., with duplicates removed).\n\t   *\n\t   * @public\n\t   * @aka unique\n\t   * @param {Function=} keyFn An optional function to produce the key for each\n\t   *     object. This key is then tested for uniqueness as  opposed to the\n\t   *     object reference.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 2, 3, 3, 3]).uniq() // sequence: [1, 2, 3]\n\t   * Lazy([{ name: 'mike' }, \n\t   * \t{ name: 'sarah' }, \n\t   * \t{ name: 'mike' }\n\t   * ]).uniq('name')\n\t   * // sequence: [{ name: 'mike' }, { name: 'sarah' }]\n\t   *\n\t   * @benchmarks\n\t   * function randomOf(array) {\n\t   *   return function() {\n\t   *     return array[Math.floor(Math.random() * array.length)];\n\t   *   };\n\t   * }\n\t   *\n\t   * var mostUnique = Lazy.generate(randomOf(_.range(100)), 100).toArray(),\n\t   *     someUnique = Lazy.generate(randomOf(_.range(50)), 100).toArray(),\n\t   *     mostDupes  = Lazy.generate(randomOf(_.range(5)), 100).toArray();\n\t   *\n\t   * Lazy(mostUnique).uniq().each(Lazy.noop) // lazy - mostly unique elements\n\t   * Lazy(someUnique).uniq().each(Lazy.noop) // lazy - some unique elements\n\t   * Lazy(mostDupes).uniq().each(Lazy.noop)  // lazy - mostly duplicate elements\n\t   * _.each(_.uniq(mostUnique), _.noop)      // lodash - mostly unique elements\n\t   * _.each(_.uniq(someUnique), _.noop)      // lodash - some unique elements\n\t   * _.each(_.uniq(mostDupes), _.noop)       // lodash - mostly duplicate elements\n\t   */\n\t  Sequence.prototype.uniq = function uniq(keyFn) {\n\t    return new UniqueSequence(this, keyFn);\n\t  };\n\t\n\t  Sequence.prototype.unique = function unique(keyFn) {\n\t    return this.uniq(keyFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function UniqueSequence(parent, keyFn) {\n\t    this.parent = parent;\n\t    this.keyFn  = keyFn;\n\t  }\n\t\n\t  UniqueSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  UniqueSequence.prototype.each = function each(fn) {\n\t    var cache = new Set(),\n\t        keyFn = this.keyFn,\n\t        i     = 0;\n\t\n\t    if (keyFn) {\n\t      keyFn = createCallback(keyFn);\n\t      return this.parent.each(function(e) {\n\t        if (cache.add(keyFn(e))) {\n\t          return fn(e, i++);\n\t        }\n\t      });\n\t\n\t    } else {\n\t      return this.parent.each(function(e) {\n\t        if (cache.add(e)) {\n\t          return fn(e, i++);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence by combining the elements from this sequence with\n\t   * corresponding elements from the specified array(s).\n\t   *\n\t   * @public\n\t   * @param {...Array} var_args One or more arrays of elements to combine with\n\t   *     those of this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2]).zip([3, 4])     // sequence: [[1, 3], [2, 4]]\n\t   * Lazy([]).zip([0])            // sequence: [[undefined, 0]]\n\t   * Lazy([0]).zip([])            // sequence: [[0, undefined]]\n\t   * Lazy([]).zip([1, 2], [3, 4]) // sequence: [[undefined, 1, 3], [undefined, 2, 4]]\n\t   * Lazy([]).zip([1], [2, 3])    // sequence: [[undefined, 1, 2], [undefined, undefined, 3]]\n\t   * Lazy([1, 2]).zip([3], [4])   // sequence: [[1, 3, 4], [2, undefined, undefined]]\n\t   *\n\t   * @benchmarks\n\t   * var smArrL = Lazy.range(10).toArray(),\n\t   *     smArrR = Lazy.range(10, 20).toArray(),\n\t   *     lgArrL = Lazy.range(100).toArray(),\n\t   *     lgArrR = Lazy.range(100, 200).toArray();\n\t   *\n\t   * Lazy(smArrL).zip(smArrR).each(Lazy.noop) // lazy - zipping 10-element arrays\n\t   * Lazy(lgArrL).zip(lgArrR).each(Lazy.noop) // lazy - zipping 100-element arrays\n\t   * _.each(_.zip(smArrL, smArrR), _.noop)    // lodash - zipping 10-element arrays\n\t   * _.each(_.zip(lgArrL, lgArrR), _.noop)    // lodash - zipping 100-element arrays\n\t   */\n\t  Sequence.prototype.zip = function zip(var_args) {\n\t    if (arguments.length === 1) {\n\t      return new SimpleZippedSequence(this, (/** @type {Array} */ var_args));\n\t    } else {\n\t      return new ZippedSequence(this, arraySlice.call(arguments, 0));\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ZippedSequence(parent, arrays) {\n\t    this.parent = parent;\n\t    this.arrays = arrays;\n\t  }\n\t\n\t  ZippedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ZippedSequence.prototype.each = function each(fn) {\n\t    var arrays = this.arrays,\n\t        i = 0;\n\t\n\t    var iteratedLeft = this.parent.each(function(e) {\n\t      var group = [e];\n\t      for (var j = 0; j < arrays.length; ++j) {\n\t        group.push(arrays[j][i]);\n\t      }\n\t      return fn(group, i++);\n\t    });\n\t\n\t    if (!iteratedLeft) {\n\t      return false;\n\t    }\n\t\n\t    var group,\n\t        keepGoing = true;\n\t\n\t    while (keepGoing) {\n\t      keepGoing = false;\n\t      group = [undefined];\n\t      for (var j = 0; j < arrays.length; ++j) {\n\t        group.push(arrays[j][i]);\n\t\n\t        // Check if *any* of the arrays have more elements to iterate.\n\t        if (arrays[j].length > i) {\n\t          keepGoing = true;\n\t        }\n\t      }\n\t\n\t      if (keepGoing && (fn(group, i++) === false)) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with the same elements as this one, in a randomized\n\t   * order.\n\t   *\n\t   * @public\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4, 5]).shuffle().value() // =~ [1, 2, 3, 4, 5]\n\t   * Lazy([]).shuffle().value()              // => []\n\t   * Lazy([1]).shuffle().each(Lazy.noop)     // => true\n\t   * Lazy([]).shuffle().each(Lazy.noop)      // => true\n\t   */\n\t  Sequence.prototype.shuffle = function shuffle() {\n\t    return new ShuffledSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ShuffledSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  ShuffledSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ShuffledSequence.prototype.each = function each(fn) {\n\t    var shuffled = this.parent.toArray(),\n\t        floor = Math.floor,\n\t        random = Math.random,\n\t        j = 0;\n\t\n\t    for (var i = shuffled.length - 1; i > 0; --i) {\n\t      swap(shuffled, i, floor(random() * (i + 1)));\n\t      if (fn(shuffled[i], j++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    if (shuffled.length) {\n\t      fn(shuffled[0], j);\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with every element from this sequence, and with arrays\n\t   * exploded so that a sequence of arrays (of arrays) becomes a flat sequence of\n\t   * values.\n\t   *\n\t   * @public\n\t   * @param {boolean} shallow Option to flatten only one level deep (default is\n\t   *     recursive).\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, [2, 3], [4, [5]]]).flatten()     // sequence: [1, 2, 3, 4, 5]\n\t   * Lazy([1, [2, 3], [4, [5]]]).flatten(true) // sequence: [1, 2, 3, 4, [5]]\n\t   * Lazy([1, Lazy([2, 3])]).flatten()         // sequence: [1, 2, 3]\n\t   */\n\t  Sequence.prototype.flatten = function flatten(shallow) {\n\t    return new FlattenedSequence(this, shallow);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function FlattenedSequence(parent, shallow) {\n\t    this.parent = parent;\n\t    this.each = shallow ? this.eachShallow : this.eachRecursive;\n\t  }\n\t\n\t  FlattenedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  FlattenedSequence.prototype.eachShallow = function(fn) {\n\t    var index = 0;\n\t\n\t    return this.parent.each(function(e) {\n\t      if (isArray(e)) {\n\t        return forEach(e, function(val) {\n\t          return fn(val, index++);\n\t        });\n\t      }\n\t\n\t      if (e instanceof Sequence) {\n\t        return e.each(function(val) {\n\t          return fn(val, index++);\n\t        });\n\t      }\n\t\n\t      return fn(e, index++);\n\t    });\n\t  };\n\t\n\t  FlattenedSequence.prototype.eachRecursive = function each(fn) {\n\t    var index = 0;\n\t\n\t    return this.parent.each(function recurseVisitor(e) {\n\t      if (isArray(e)) {\n\t        return forEach(e, recurseVisitor);\n\t      }\n\t\n\t      if (e instanceof Sequence) {\n\t        return e.each(recurseVisitor);\n\t      }\n\t\n\t      return fn(e, index++);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with the same elements as this one, except for all\n\t   * falsy values (`false`, `0`, `\"\"`, `null`, and `undefined`).\n\t   *\n\t   * @public\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([\"foo\", null, \"bar\", undefined]).compact() // sequence: [\"foo\", \"bar\"]\n\t   */\n\t  Sequence.prototype.compact = function compact() {\n\t    return this.filter(function(e) { return !!e; });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with all the elements of this sequence that are not\n\t   * also among the specified arguments.\n\t   *\n\t   * @public\n\t   * @aka difference\n\t   * @param {...*} var_args The values, or array(s) of values, to be excluded from the\n\t   *     resulting sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4, 5]).without(2, 3)   // sequence: [1, 4, 5]\n\t   * Lazy([1, 2, 3, 4, 5]).without([4, 5]) // sequence: [1, 2, 3]\n\t   */\n\t  Sequence.prototype.without = function without(var_args) {\n\t    return new WithoutSequence(this, arraySlice.call(arguments, 0));\n\t  };\n\t\n\t  Sequence.prototype.difference = function difference(var_args) {\n\t    return this.without.apply(this, arguments);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function WithoutSequence(parent, values) {\n\t    this.parent = parent;\n\t    this.values = values;\n\t  }\n\t\n\t  WithoutSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  WithoutSequence.prototype.each = function each(fn) {\n\t    var set = createSet(this.values),\n\t        i = 0;\n\t    return this.parent.each(function(e) {\n\t      if (!set.contains(e)) {\n\t        return fn(e, i++);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with all the unique elements either in this sequence\n\t   * or among the specified arguments.\n\t   *\n\t   * @public\n\t   * @param {...*} var_args The values, or array(s) of values, to be additionally\n\t   *     included in the resulting sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([\"foo\", \"bar\"]).union([])             // sequence: [\"foo\", \"bar\"]\n\t   * Lazy([\"foo\", \"bar\"]).union([\"bar\", \"baz\"]) // sequence: [\"foo\", \"bar\", \"baz\"]\n\t   */\n\t  Sequence.prototype.union = function union(var_args) {\n\t    return this.concat(var_args).uniq();\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with all the elements of this sequence that also\n\t   * appear among the specified arguments.\n\t   *\n\t   * @public\n\t   * @param {...*} var_args The values, or array(s) of values, in which elements\n\t   *     from this sequence must also be included to end up in the resulting sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([\"foo\", \"bar\"]).intersection([])             // sequence: []\n\t   * Lazy([\"foo\", \"bar\"]).intersection([\"bar\", \"baz\"]) // sequence: [\"bar\"]\n\t   * Lazy([\"a\", \"a\"]).intersection([\"a\"])              // sequence: [\"a\"]\n\t   * Lazy([\"a\"]).intersection([\"a\", \"a\"])              // sequence: [\"a\"]\n\t   * Lazy([\"a\", \"a\"]).intersection([\"a\", \"a\"])         // sequence: [\"a\"]\n\t   * Lazy([\"a\", \"a\"]).intersection([\"a\"], [\"a\"])       // sequence: [\"a\"]\n\t   */\n\t  Sequence.prototype.intersection = function intersection(var_args) {\n\t    if (arguments.length === 1 && isArray(arguments[0])) {\n\t      return new SimpleIntersectionSequence(this, (/** @type {Array} */ var_args));\n\t    } else {\n\t      return new IntersectionSequence(this, arraySlice.call(arguments, 0));\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IntersectionSequence(parent, arrays) {\n\t    this.parent = parent;\n\t    this.arrays = arrays;\n\t  }\n\t\n\t  IntersectionSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  IntersectionSequence.prototype.each = function each(fn) {\n\t    var sets = Lazy(this.arrays).map(function(values) {\n\t      return new UniqueMemoizer(Lazy(values).getIterator());\n\t    });\n\t\n\t    var setIterator = new UniqueMemoizer(sets.getIterator()),\n\t        i = 0;\n\t\n\t    return this.parent.uniq().each(function(e) {\n\t      var includedInAll = true;\n\t      setIterator.each(function(set) {\n\t        if (!set.contains(e)) {\n\t          includedInAll = false;\n\t          return false;\n\t        }\n\t      });\n\t\n\t      if (includedInAll) {\n\t        return fn(e, i++);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function Memoizer(memo, iterator) {\n\t    this.iterator     = iterator;\n\t    this.memo         = memo;\n\t    this.currentIndex = 0;\n\t    this.currentValue = undefined;\n\t  }\n\t\n\t  Memoizer.prototype.current = function current() {\n\t    return this.currentValue;\n\t  };\n\t\n\t  Memoizer.prototype.moveNext = function moveNext() {\n\t    var iterator = this.iterator,\n\t        memo = this.memo,\n\t        current;\n\t\n\t    if (this.currentIndex < memo.length) {\n\t      this.currentValue = memo[this.currentIndex++];\n\t      return true;\n\t    }\n\t\n\t    if (iterator.moveNext()) {\n\t      this.currentValue = memo[this.currentIndex++] = iterator.current();\n\t      return true;\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function UniqueMemoizer(iterator) {\n\t    this.iterator     = iterator;\n\t    this.set          = new Set();\n\t    this.memo         = [];\n\t    this.currentValue = undefined;\n\t  }\n\t\n\t  UniqueMemoizer.prototype.current = function current() {\n\t    return this.currentValue;\n\t  };\n\t\n\t  UniqueMemoizer.prototype.moveNext = function moveNext() {\n\t    var iterator = this.iterator,\n\t        set = this.set,\n\t        memo = this.memo,\n\t        current;\n\t\n\t    while (iterator.moveNext()) {\n\t      current = iterator.current();\n\t      if (set.add(current)) {\n\t        memo.push(current);\n\t        this.currentValue = current;\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t\n\t  UniqueMemoizer.prototype.each = function each(fn) {\n\t    var memo = this.memo,\n\t        length = memo.length,\n\t        i = -1;\n\t\n\t    while (++i < length) {\n\t      if (fn(memo[i], i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    while (this.moveNext()) {\n\t      if (fn(this.currentValue, i++) === false) {\n\t        break;\n\t      }\n\t    }\n\t  };\n\t\n\t  UniqueMemoizer.prototype.contains = function contains(e) {\n\t    if (this.set.contains(e)) {\n\t      return true;\n\t    }\n\t\n\t    while (this.moveNext()) {\n\t      if (this.currentValue === e) {\n\t        return true;\n\t      }\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Checks whether every element in this sequence satisfies a given predicate.\n\t   *\n\t   * @public\n\t   * @aka all\n\t   * @param {Function} predicate A function to call on (potentially) every element\n\t   *     in this sequence.\n\t   * @returns {boolean} True if `predicate` returns true for every element in the\n\t   *     sequence (or the sequence is empty). False if `predicate` returns false\n\t   *     for at least one element.\n\t   *\n\t   * @examples\n\t   * var numbers = [1, 2, 3, 4, 5];\n\t   *\n\t   * var objects = [{ foo: true }, { foo: false, bar: true }];\n\t   *\n\t   * Lazy(numbers).every(isEven)     // => false\n\t   * Lazy(numbers).every(isPositive) // => true\n\t   * Lazy(objects).all('foo')        // => false\n\t   * Lazy(objects).all('bar')        // => false\n\t   */\n\t  Sequence.prototype.every = function every(predicate) {\n\t    predicate = createCallback(predicate);\n\t\n\t    return this.each(function(e, i) {\n\t      return !!predicate(e, i);\n\t    });\n\t  };\n\t\n\t  Sequence.prototype.all = function all(predicate) {\n\t    return this.every(predicate);\n\t  };\n\t\n\t  /**\n\t   * Checks whether at least one element in this sequence satisfies a given\n\t   * predicate (or, if no predicate is specified, whether the sequence contains at\n\t   * least one element).\n\t   *\n\t   * @public\n\t   * @aka any\n\t   * @param {Function=} predicate A function to call on (potentially) every element\n\t   *     in this sequence.\n\t   * @returns {boolean} True if `predicate` returns true for at least one element\n\t   *     in the sequence. False if `predicate` returns false for every element (or\n\t   *     the sequence is empty).\n\t   *\n\t   * @examples\n\t   * var numbers = [1, 2, 3, 4, 5];\n\t   *\n\t   * Lazy(numbers).some()           // => true\n\t   * Lazy(numbers).some(isEven)     // => true\n\t   * Lazy(numbers).some(isNegative) // => false\n\t   * Lazy([]).some()                // => false\n\t   */\n\t  Sequence.prototype.some = function some(predicate) {\n\t    predicate = createCallback(predicate, true);\n\t\n\t    var success = false;\n\t    this.each(function(e) {\n\t      if (predicate(e)) {\n\t        success = true;\n\t        return false;\n\t      }\n\t    });\n\t    return success;\n\t  };\n\t\n\t  Sequence.prototype.any = function any(predicate) {\n\t    return this.some(predicate);\n\t  };\n\t\n\t  /**\n\t   * Checks whether NO elements in this sequence satisfy the given predicate\n\t   * (the opposite of {@link Sequence#all}, basically).\n\t   *\n\t   * @public\n\t   * @param {Function=} predicate A function to call on (potentially) every element\n\t   *     in this sequence.\n\t   * @returns {boolean} True if `predicate` does not return true for any element\n\t   *     in the sequence. False if `predicate` returns true for at least one\n\t   *     element.\n\t   *\n\t   * @examples\n\t   * var numbers = [1, 2, 3, 4, 5];\n\t   *\n\t   * Lazy(numbers).none()           // => false\n\t   * Lazy(numbers).none(isEven)     // => false\n\t   * Lazy(numbers).none(isNegative) // => true\n\t   * Lazy([]).none(isEven)          // => true\n\t   * Lazy([]).none(isNegative)      // => true\n\t   * Lazy([]).none()                // => true\n\t   */\n\t  Sequence.prototype.none = function none(predicate) {\n\t    return !this.any(predicate);\n\t  };\n\t\n\t  /**\n\t   * Checks whether the sequence has no elements.\n\t   *\n\t   * @public\n\t   * @returns {boolean} True if the sequence is empty, false if it contains at\n\t   *     least one element.\n\t   *\n\t   * @examples\n\t   * Lazy([]).isEmpty()        // => true\n\t   * Lazy([1, 2, 3]).isEmpty() // => false\n\t   */\n\t  Sequence.prototype.isEmpty = function isEmpty() {\n\t    return !this.any();\n\t  };\n\t\n\t  /**\n\t   * Performs (at worst) a linear search from the head of this sequence,\n\t   * returning the first index at which the specified value is found.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @param {Function=} equalityFn An optional equality function, which should\n\t   *     take two arguments and return true or false to indicate whether those\n\t   *     values are considered equal.\n\t   * @returns {number} The index within this sequence where the given value is\n\t   *     located, or -1 if the sequence doesn't contain the value.\n\t   *\n\t   * @examples\n\t   * function reciprocal(x) { return 1 / x; }\n\t   *\n\t   * Lazy([\"foo\", \"bar\", \"baz\"]).indexOf(\"bar\")   // => 1\n\t   * Lazy([1, 2, 3]).indexOf(4)                   // => -1\n\t   * Lazy([1, 2, 3]).map(reciprocal).indexOf(0.5) // => 1\n\t   */\n\t  Sequence.prototype.indexOf = function indexOf(value, equalityFn) {\n\t    var eq = equalityFn || Lazy.equality,\n\t        foundIndex = -1;\n\t\n\t    this.each(function(e, i) {\n\t      if (eq(e, value)) {\n\t        foundIndex = i;\n\t        return false;\n\t      }\n\t    });\n\t    return foundIndex;\n\t  };\n\t\n\t  /**\n\t   * Performs (at worst) a linear search from the tail of this sequence,\n\t   * returning the last index at which the specified value is found.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @returns {number} The last index within this sequence where the given value\n\t   *     is located, or -1 if the sequence doesn't contain the value.\n\t   *\n\t   * @examples\n\t   * Lazy([\"a\", \"b\", \"c\", \"b\", \"a\"]).lastIndexOf(\"b\")    // => 3\n\t   * Lazy([1, 2, 3]).lastIndexOf(0)                      // => -1\n\t   * Lazy([2, 2, 1, 2, 4]).filter(isEven).lastIndexOf(2) // 2\n\t   */\n\t  Sequence.prototype.lastIndexOf = function lastIndexOf(value, equalityFn) {\n\t    var reversed = this.getIndex().reverse(),\n\t        index    = reversed.indexOf(value, equalityFn);\n\t    if (index !== -1) {\n\t      index = reversed.length() - index - 1;\n\t    }\n\t    return index;\n\t  };\n\t\n\t  /**\n\t   * Performs a binary search of this sequence, returning the lowest index where\n\t   * the given value is either found, or where it belongs (if it is not already\n\t   * in the sequence).\n\t   *\n\t   * This method assumes the sequence is in sorted order and will fail otherwise.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @returns {number} An index within this sequence where the given value is\n\t   *     located, or where it belongs in sorted order.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 3, 6, 9]).sortedIndex(3)                    // => 1\n\t   * Lazy([1, 3, 6, 9]).sortedIndex(7)                    // => 3\n\t   * Lazy([5, 10, 15, 20]).filter(isEven).sortedIndex(10) // => 0\n\t   * Lazy([5, 10, 15, 20]).filter(isEven).sortedIndex(12) // => 1\n\t   */\n\t  Sequence.prototype.sortedIndex = function sortedIndex(value) {\n\t    var indexed = this.getIndex(),\n\t        lower   = 0,\n\t        upper   = indexed.length(),\n\t        i;\n\t\n\t    while (lower < upper) {\n\t      i = (lower + upper) >>> 1;\n\t      if (compare(indexed.get(i), value) === -1) {\n\t        lower = i + 1;\n\t      } else {\n\t        upper = i;\n\t      }\n\t    }\n\t    return lower;\n\t  };\n\t\n\t  /**\n\t   * Checks whether the given value is in this sequence.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @param {Function=} equalityFn An optional equality function, which should\n\t   *     take two arguments and return true or false to indicate whether those\n\t   *     values are considered equal.\n\t   * @returns {boolean} True if the sequence contains the value, false if not.\n\t   *\n\t   * @examples\n\t   * var numbers = [5, 10, 15, 20];\n\t   *\n\t   * Lazy(numbers).contains(15) // => true\n\t   * Lazy(numbers).contains(13) // => false\n\t   */\n\t  Sequence.prototype.contains = function contains(value, equalityFn) {\n\t    return this.indexOf(value, equalityFn) !== -1;\n\t  };\n\t\n\t  /**\n\t   * Aggregates a sequence into a single value according to some accumulator\n\t   * function.\n\t   *\n\t   * For an asynchronous sequence, instead of immediately returning a result\n\t   * (which it can't, obviously), this method returns an {@link AsyncHandle}\n\t   * whose `onComplete` method can be called to supply a callback to handle the\n\t   * final result once iteration has completed.\n\t   *\n\t   * @public\n\t   * @aka inject, foldl\n\t   * @param {Function} aggregator The function through which to pass every element\n\t   *     in the sequence. For every element, the function will be passed the total\n\t   *     aggregated result thus far and the element itself, and should return a\n\t   *     new aggregated result.\n\t   * @param {*=} memo The starting value to use for the aggregated result\n\t   *     (defaults to the first element in the sequence).\n\t   * @returns {*} The result of the aggregation, or, for asynchronous sequences,\n\t   *     an {@link AsyncHandle} whose `onComplete` method accepts a callback to\n\t   *     handle the final result.\n\t   *\n\t   * @examples\n\t   * function multiply(x, y) { return x * y; }\n\t   *\n\t   * var numbers = [1, 2, 3, 4];\n\t   *\n\t   * Lazy(numbers).reduce(multiply)    // => 24\n\t   * Lazy(numbers).reduce(multiply, 5) // => 120\n\t   */\n\t  Sequence.prototype.reduce = function reduce(aggregator, memo) {\n\t    if (arguments.length < 2) {\n\t      return this.tail().reduce(aggregator, this.head());\n\t    }\n\t\n\t    var eachResult = this.each(function(e, i) {\n\t      memo = aggregator(memo, e, i);\n\t    });\n\t\n\t    // TODO: Think of a way more efficient solution to this problem.\n\t    if (eachResult instanceof AsyncHandle) {\n\t      return eachResult.then(function() { return memo; });\n\t    }\n\t\n\t    return memo;\n\t  };\n\t\n\t  Sequence.prototype.inject =\n\t  Sequence.prototype.foldl = function foldl(aggregator, memo) {\n\t    return this.reduce(aggregator, memo);\n\t  };\n\t\n\t  /**\n\t   * Aggregates a sequence, from the tail, into a single value according to some\n\t   * accumulator function.\n\t   *\n\t   * @public\n\t   * @aka foldr\n\t   * @param {Function} aggregator The function through which to pass every element\n\t   *     in the sequence. For every element, the function will be passed the total\n\t   *     aggregated result thus far and the element itself, and should return a\n\t   *     new aggregated result.\n\t   * @param {*} memo The starting value to use for the aggregated result.\n\t   * @returns {*} The result of the aggregation.\n\t   *\n\t   * @examples\n\t   * function append(s1, s2) {\n\t   *   return s1 + s2;\n\t   * }\n\t   *\n\t   * function isVowel(str) {\n\t   *   return \"aeiou\".indexOf(str) !== -1;\n\t   * }\n\t   *\n\t   * Lazy(\"abcde\").reduceRight(append)                 // => \"edcba\"\n\t   * Lazy(\"abcde\").filter(isVowel).reduceRight(append) // => \"ea\"\n\t   */\n\t  Sequence.prototype.reduceRight = function reduceRight(aggregator, memo) {\n\t    if (arguments.length < 2) {\n\t      return this.initial(1).reduceRight(aggregator, this.last());\n\t    }\n\t\n\t    // This bothers me... but frankly, calling reverse().reduce() is potentially\n\t    // going to eagerly evaluate the sequence anyway; so it's really not an issue.\n\t    var indexed = this.getIndex(),\n\t        i = indexed.length() - 1;\n\t    return indexed.reverse().reduce(function(m, e) {\n\t      return aggregator(m, e, i--);\n\t    }, memo);\n\t  };\n\t\n\t  Sequence.prototype.foldr = function foldr(aggregator, memo) {\n\t    return this.reduceRight(aggregator, memo);\n\t  };\n\t\n\t  /**\n\t   * Groups this sequence into consecutive (overlapping) segments of a specified\n\t   * length. If the underlying sequence has fewer elements than the specified\n\t   * length, then this sequence will be empty.\n\t   *\n\t   * @public\n\t   * @param {number} length The length of each consecutive segment.\n\t   * @returns {Sequence} The resulting sequence of consecutive segments.\n\t   *\n\t   * @examples\n\t   * function sum(vals) { return Lazy(vals).sum(); }\n\t   * var pairs = Lazy([1, 2, 3, 4]).consecutive(2);\n\t   *\n\t   * // Make sure consecutive sequences are reusable.\n\t   * pairs.map(sum) // => sequence: [3, 5, 7]\n\t   * pairs.map(sum) // => sequence: [3, 5, 7]\n\t   *\n\t   * Lazy([]).consecutive(2)        // => sequence: []\n\t   * Lazy([1]).consecutive(2)       // => sequence: []\n\t   * Lazy([1, 2]).consecutive(2)    // => sequence: [[1, 2]]\n\t   * Lazy([1, 2, 3]).consecutive(2) // => sequence: [[1, 2], [2, 3]]\n\t   * Lazy([1, 2, 3]).consecutive(0) // => sequence: [[]]\n\t   * Lazy([1, 2, 3]).consecutive(1) // => sequence: [[1], [2], [3]]\n\t   */\n\t  Sequence.prototype.consecutive = function consecutive(count) {\n\t    return new ConsecutiveSequence(this, count);\n\t  };\n\t\n\t  function ConsecutiveSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count = count;\n\t  }\n\t\n\t  ConsecutiveSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ConsecutiveSequence.prototype.each = function each(fn) {\n\t    var count = this.count,\n\t        queue = new Queue(count);\n\t    var segments = this.parent.map(function(element) {\n\t      if (queue.add(element).count === count) {\n\t        return queue.toArray();\n\t      }\n\t    });\n\t    return segments.compact().each(fn);\n\t  };\n\t\n\t  /**\n\t   * Breaks this sequence into chunks (arrays) of a specified length.\n\t   *\n\t   * @public\n\t   * @param {number} size The size of each chunk.\n\t   * @returns {Sequence} The resulting sequence of chunks.\n\t   *\n\t   * @examples\n\t   * Lazy([]).chunk(2)        // sequence: []\n\t   * Lazy([1, 2, 3]).chunk(2) // sequence: [[1, 2], [3]]\n\t   * Lazy([1, 2, 3]).chunk(1) // sequence: [[1], [2], [3]]\n\t   * Lazy([1, 2, 3]).chunk(4) // sequence: [[1, 2, 3]]\n\t   * Lazy([1, 2, 3]).chunk(0) // throws\n\t   */\n\t  Sequence.prototype.chunk = function chunk(size) {\n\t    if (size < 1) {\n\t      throw new Error(\"You must specify a positive chunk size.\");\n\t    }\n\t\n\t    return new ChunkedSequence(this, size);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ChunkedSequence(parent, size) {\n\t    this.parent    = parent;\n\t    this.chunkSize = size;\n\t  }\n\t\n\t  ChunkedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ChunkedSequence.prototype.getIterator = function getIterator() {\n\t    return new ChunkedIterator(this.parent, this.chunkSize);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ChunkedIterator(sequence, size) {\n\t    this.iterator = sequence.getIterator();\n\t    this.size     = size;\n\t  }\n\t\n\t  ChunkedIterator.prototype.current = function current() {\n\t    return this.currentChunk;\n\t  };\n\t\n\t  ChunkedIterator.prototype.moveNext = function moveNext() {\n\t    var iterator  = this.iterator,\n\t        chunkSize = this.size,\n\t        chunk     = [];\n\t\n\t    while (chunk.length < chunkSize && iterator.moveNext()) {\n\t      chunk.push(iterator.current());\n\t    }\n\t\n\t    if (chunk.length === 0) {\n\t      return false;\n\t    }\n\t\n\t    this.currentChunk = chunk;\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Passes each element in the sequence to the specified callback during\n\t   * iteration. This is like {@link Sequence#each}, except that it can be\n\t   * inserted anywhere in the middle of a chain of methods to \"intercept\" the\n\t   * values in the sequence at that point.\n\t   *\n\t   * @public\n\t   * @param {Function} callback A function to call on every element in the\n\t   *     sequence during iteration. The return value of this function does not\n\t   *     matter.\n\t   * @returns {Sequence} A sequence comprising the same elements as this one.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).tap(fn).each(Lazy.noop); // calls fn 3 times\n\t   */\n\t  Sequence.prototype.tap = function tap(callback) {\n\t    return new TappedSequence(this, callback);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function TappedSequence(parent, callback) {\n\t    this.parent = parent;\n\t    this.callback = callback;\n\t  }\n\t\n\t  TappedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  TappedSequence.prototype.each = function each(fn) {\n\t    var callback = this.callback;\n\t    return this.parent.each(function(e, i) {\n\t      callback(e, i);\n\t      return fn(e, i);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Seaches for the first element in the sequence satisfying a given predicate.\n\t   *\n\t   * @public\n\t   * @aka detect\n\t   * @param {Function} predicate A function to call on (potentially) every element\n\t   *     in the sequence.\n\t   * @returns {*} The first element in the sequence for which `predicate` returns\n\t   *     `true`, or `undefined` if no such element is found.\n\t   *\n\t   * @examples\n\t   * function divisibleBy3(x) {\n\t   *   return x % 3 === 0;\n\t   * }\n\t   *\n\t   * var numbers = [5, 6, 7, 8, 9, 10];\n\t   *\n\t   * Lazy(numbers).find(divisibleBy3) // => 6\n\t   * Lazy(numbers).find(isNegative)   // => undefined\n\t   */\n\t  Sequence.prototype.find = function find(predicate) {\n\t    return this.filter(predicate).first();\n\t  };\n\t\n\t  Sequence.prototype.detect = function detect(predicate) {\n\t    return this.find(predicate);\n\t  };\n\t\n\t  /**\n\t   * Gets the minimum value in the sequence.\n\t   *\n\t   * @public\n\t   * @param {Function=} valueFn The function by which the value for comparison is\n\t   *     calculated for each element in the sequence.\n\t   * @returns {*} The element with the lowest value in the sequence, or\n\t   *     undefined` if the sequence is empty.\n\t   *\n\t   * @examples\n\t   * function negate(x) { return x * -1; }\n\t   *\n\t   * Lazy([]).min()                       // => undefined\n\t   * Lazy([1]).min()                      // => 1\n\t   * Lazy([1, 2]).min()                   // => 1\n\t   * Lazy([2, 1]).min()                   // => 1\n\t   * Lazy([6, 18, 2, 49, 34]).min()       // => 2\n\t   * Lazy([6, 18, 2, 49, 34]).min(negate) // => 49\n\t   * Lazy(['b', 'a', 'c']).min()          // => 'a'\n\t   */\n\t  Sequence.prototype.min = function min(valueFn) {\n\t    if (typeof valueFn !== \"undefined\") {\n\t      return this.minBy(valueFn);\n\t    }\n\t\n\t    return this.reduce(function(prev, current, i) {\n\t      if (typeof prev === \"undefined\") {\n\t        return current;\n\t      }\n\t      return current < prev ? current : prev;\n\t    });\n\t  };\n\t\n\t  Sequence.prototype.minBy = function minBy(valueFn) {\n\t    valueFn = createCallback(valueFn);\n\t    return this.reduce(function(x, y) { return valueFn(y) < valueFn(x) ? y : x; });\n\t  };\n\t\n\t  /**\n\t   * Gets the maximum value in the sequence.\n\t   *\n\t   * @public\n\t   * @param {Function=} valueFn The function by which the value for comparison is\n\t   *     calculated for each element in the sequence.\n\t   * @returns {*} The element with the highest value in the sequence, or\n\t   *     undefined if the sequence is empty.\n\t   *\n\t   * @examples\n\t   * function reverseDigits(x) {\n\t   *   return Number(String(x).split('').reverse().join(''));\n\t   * }\n\t   *\n\t   * Lazy([]).max()                              // => undefined\n\t   * Lazy([1]).max()                             // => 1\n\t   * Lazy([1, 2]).max()                          // => 2\n\t   * Lazy([2, 1]).max()                          // => 2\n\t   * Lazy([6, 18, 2, 48, 29]).max()              // => 48\n\t   * Lazy([6, 18, 2, 48, 29]).max(reverseDigits) // => 29\n\t   * Lazy(['b', 'c', 'a']).max()                 // => 'c'\n\t   */\n\t  Sequence.prototype.max = function max(valueFn) {\n\t    if (typeof valueFn !== \"undefined\") {\n\t      return this.maxBy(valueFn);\n\t    }\n\t\n\t    return this.reduce(function(prev, current, i) {\n\t      if (typeof prev === \"undefined\") {\n\t        return current;\n\t      }\n\t      return current > prev ? current : prev;\n\t    });\n\t  };\n\t\n\t  Sequence.prototype.maxBy = function maxBy(valueFn) {\n\t    valueFn = createCallback(valueFn);\n\t    return this.reduce(function(x, y) { return valueFn(y) > valueFn(x) ? y : x; });\n\t  };\n\t\n\t  /**\n\t   * Gets the sum of the numeric values in the sequence.\n\t   *\n\t   * @public\n\t   * @param {Function=} valueFn The function used to select the numeric values\n\t   *     that will be summed up.\n\t   * @returns {*} The sum.\n\t   *\n\t   * @examples\n\t   * Lazy([]).sum()                     // => 0\n\t   * Lazy([1, 2, 3, 4]).sum()           // => 10\n\t   * Lazy([1.2, 3.4]).sum(Math.floor)   // => 4\n\t   * Lazy(['foo', 'bar']).sum('length') // => 6\n\t   */\n\t  Sequence.prototype.sum = function sum(valueFn) {\n\t    if (typeof valueFn !== \"undefined\") {\n\t      return this.sumBy(valueFn);\n\t    }\n\t\n\t    return this.reduce(function(x, y) { return x + y; }, 0);\n\t  };\n\t\n\t  Sequence.prototype.sumBy = function sumBy(valueFn) {\n\t    valueFn = createCallback(valueFn);\n\t    return this.reduce(function(x, y) { return x + valueFn(y); }, 0);\n\t  };\n\t\n\t  /**\n\t   * Creates a string from joining together all of the elements in this sequence,\n\t   * separated by the given delimiter.\n\t   *\n\t   * @public\n\t   * @aka toString\n\t   * @param {string=} delimiter The separator to insert between every element from\n\t   *     this sequence in the resulting string (defaults to `\",\"`).\n\t   * @returns {string} The delimited string.\n\t   *\n\t   * @examples\n\t   * function toParam(v, k) {\n\t   *   return k + '=' + v;\n\t   * }\n\t   *\n\t   * Lazy([6, 29, 1984]).join(\"/\")  // => \"6/29/1984\"\n\t   * Lazy([\"a\", \"b\", \"c\"]).join()   // => \"a,b,c\"\n\t   * Lazy([\"a\", \"b\", \"c\"]).join(\"\") // => \"abc\"\n\t   * Lazy([1, 2, 3]).join()         // => \"1,2,3\"\n\t   * Lazy([1, 2, 3]).join(\"\")       // => \"123\"\n\t   * Lazy([\"\", \"\", \"\"]).join(\",\")   // => \",,\"\n\t   * Lazy([1, 2]).join(0)           // => \"102\"\n\t   * Lazy([\"cons\", \"d\"]).join(true) // => \"construed\"\n\t   * Lazy({foo: 1, bar: 2}).values().join()        // \"1,2\"\n\t   * Lazy({foo: 1, bar: 2}).keys().join()          // \"foo,bar\"\n\t   * Lazy({foo: 1, bar: 2}).map(toParam).join('&') // 'foo=1&bar=2'\n\t   */\n\t  Sequence.prototype.join = function join(delimiter) {\n\t    delimiter = typeof delimiter === \"undefined\" ? \",\" : String(delimiter);\n\t\n\t    var i = -1;\n\t    return this.reduce(function(str, e) {\n\t      if (++i > 0) {\n\t        str += delimiter;\n\t      }\n\t      return str + e;\n\t    }, \"\");\n\t  };\n\t\n\t  Sequence.prototype.toString = function toString(delimiter) {\n\t    return this.join(delimiter);\n\t  };\n\t\n\t  /**\n\t   * Creates a sequence, with the same elements as this one, that will be iterated\n\t   * over asynchronously when calling `each`.\n\t   *\n\t   * @public\n\t   * @param {number=} interval The approximate period, in milliseconds, that\n\t   *     should elapse between each element in the resulting sequence. Omitting\n\t   *     this argument will result in the fastest possible asynchronous iteration.\n\t   * @returns {AsyncSequence} The new asynchronous sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).async(100).each(fn) // calls fn 3 times asynchronously\n\t   */\n\t  Sequence.prototype.async = function async(interval) {\n\t    return new AsyncSequence(this, interval);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SimpleIntersectionSequence(parent, array) {\n\t    this.parent = parent;\n\t    this.array  = array;\n\t    this.each   = getEachForIntersection(array);\n\t  }\n\t\n\t  SimpleIntersectionSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  SimpleIntersectionSequence.prototype.eachMemoizerCache = function eachMemoizerCache(fn) {\n\t    var iterator = new UniqueMemoizer(Lazy(this.array).getIterator()),\n\t        i = 0;\n\t\n\t    return this.parent.uniq().each(function(e) {\n\t      if (iterator.contains(e)) {\n\t        return fn(e, i++);\n\t      }\n\t    });\n\t  };\n\t\n\t  SimpleIntersectionSequence.prototype.eachArrayCache = function eachArrayCache(fn) {\n\t    var array = this.array,\n\t        find  = arrayContains,\n\t        i = 0;\n\t\n\t    return this.parent.uniq().each(function(e) {\n\t      if (find(array, e)) {\n\t        return fn(e, i++);\n\t      }\n\t    });\n\t  };\n\t\n\t  function getEachForIntersection(source) {\n\t    if (source.length < 40) {\n\t      return SimpleIntersectionSequence.prototype.eachArrayCache;\n\t    } else {\n\t      return SimpleIntersectionSequence.prototype.eachMemoizerCache;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * An optimized version of {@link ZippedSequence}, when zipping a sequence with\n\t   * only one array.\n\t   *\n\t   * @param {Sequence} parent The underlying sequence.\n\t   * @param {Array} array The array with which to zip the sequence.\n\t   * @constructor\n\t   */\n\t  function SimpleZippedSequence(parent, array) {\n\t    this.parent = parent;\n\t    this.array  = array;\n\t  }\n\t\n\t  SimpleZippedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  SimpleZippedSequence.prototype.each = function each(fn) {\n\t    var array = this.array,\n\t        i = -1;\n\t\n\t    var iteratedLeft = this.parent.each(function(e) {\n\t      ++i;\n\t      return fn([e, array[i]], i);\n\t    });\n\t\n\t    if (!iteratedLeft) {\n\t      return false;\n\t    }\n\t\n\t    while (++i < array.length) {\n\t      if (fn([undefined, array[i]], i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * An `ArrayLikeSequence` is a {@link Sequence} that provides random access to\n\t   * its elements. This extends the API for iterating with the additional methods\n\t   * {@link #get} and {@link #length}, allowing a sequence to act as a \"view\" into\n\t   * a collection or other indexed data source.\n\t   *\n\t   * The initial sequence created by wrapping an array with `Lazy(array)` is an\n\t   * `ArrayLikeSequence`.\n\t   *\n\t   * All methods of `ArrayLikeSequence` that conceptually should return\n\t   * something like a array (with indexed access) return another\n\t   * `ArrayLikeSequence`, for example:\n\t   *\n\t   * - {@link Sequence#map}\n\t   * - {@link ArrayLikeSequence#slice}\n\t   * - {@link Sequence#take} and {@link Sequence#drop}\n\t   * - {@link Sequence#reverse}\n\t   *\n\t   * The above is not an exhaustive list. There are also certain other cases\n\t   * where it might be possible to return an `ArrayLikeSequence` (e.g., calling\n\t   * {@link Sequence#concat} with a single array argument), but this is not\n\t   * guaranteed by the API.\n\t   *\n\t   * Note that in many cases, it is not possible to provide indexed access\n\t   * without first performing at least a partial iteration of the underlying\n\t   * sequence. In these cases an `ArrayLikeSequence` will not be returned:\n\t   *\n\t   * - {@link Sequence#filter}\n\t   * - {@link Sequence#uniq}\n\t   * - {@link Sequence#union}\n\t   * - {@link Sequence#intersect}\n\t   *\n\t   * etc. The above methods only return ordinary {@link Sequence} objects.\n\t   *\n\t   * Defining custom array-like sequences\n\t   * ------------------------------------\n\t   *\n\t   * Creating a custom `ArrayLikeSequence` is essentially the same as creating a\n\t   * custom {@link Sequence}. You just have a couple more methods you need to\n\t   * implement: `get` and (optionally) `length`.\n\t   *\n\t   * Here's an example. Let's define a sequence type called `OffsetSequence` that\n\t   * offsets each of its parent's elements by a set distance, and circles back to\n\t   * the beginning after reaching the end. **Remember**: the initialization\n\t   * function you pass to {@link #define} should always accept a `parent` as its\n\t   * first parameter.\n\t   *\n\t   *     ArrayLikeSequence.define(\"offset\", {\n\t   *       init: function(parent, offset) {\n\t   *         this.offset = offset;\n\t   *       },\n\t   *\n\t   *       get: function(i) {\n\t   *         return this.parent.get((i + this.offset) % this.parent.length());\n\t   *       }\n\t   *     });\n\t   *\n\t   * It's worth noting a couple of things here.\n\t   *\n\t   * First, Lazy's default implementation of `length` simply returns the parent's\n\t   * length. In this case, since an `OffsetSequence` will always have the same\n\t   * number of elements as its parent, that implementation is fine; so we don't\n\t   * need to override it.\n\t   *\n\t   * Second, the default implementation of `each` uses `get` and `length` to\n\t   * essentially create a `for` loop, which is fine here. If you want to implement\n\t   * `each` your own way, you can do that; but in most cases (as here), you can\n\t   * probably just stick with the default.\n\t   *\n\t   * So we're already done, after only implementing `get`! Pretty easy, huh?\n\t   *\n\t   * Now the `offset` method will be chainable from any `ArrayLikeSequence`. So\n\t   * for example:\n\t   *\n\t   *     Lazy([1, 2, 3]).map(mapFn).offset(3);\n\t   *\n\t   * ...will work, but:\n\t   *\n\t   *     Lazy([1, 2, 3]).filter(mapFn).offset(3);\n\t   *\n\t   * ...will not (because `filter` does not return an `ArrayLikeSequence`).\n\t   *\n\t   * (Also, as with the example provided for defining custom {@link Sequence}\n\t   * types, this example really could have been implemented using a function\n\t   * already available as part of Lazy.js: in this case, {@link Sequence#map}.)\n\t   *\n\t   * @public\n\t   * @constructor\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3])                    // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2, 3]).map(Lazy.identity) // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2, 3]).take(2)            // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2, 3]).drop(2)            // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2, 3]).reverse()          // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2, 3]).slice(1, 2)        // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  function ArrayLikeSequence() {}\n\t\n\t  ArrayLikeSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  /**\n\t   * Create a new constructor function for a type inheriting from\n\t   * `ArrayLikeSequence`.\n\t   *\n\t   * @public\n\t   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n\t   *     used for constructing the new sequence. The method will be attached to\n\t   *     the `ArrayLikeSequence` prototype so that it can be chained with any other\n\t   *     methods that return array-like sequences.\n\t   * @param {Object} overrides An object containing function overrides for this\n\t   *     new sequence type. **Must** include `get`. *May* include `init`,\n\t   *     `length`, `getIterator`, and `each`. For each function, `this` will be\n\t   *     the new sequence and `this.parent` will be the source sequence.\n\t   * @returns {Function} A constructor for a new type inheriting from\n\t   *     `ArrayLikeSequence`.\n\t   *\n\t   * @examples\n\t   * Lazy.ArrayLikeSequence.define(\"offset\", {\n\t   *   init: function(offset) {\n\t   *     this.offset = offset;\n\t   *   },\n\t   *\n\t   *   get: function(i) {\n\t   *     return this.parent.get((i + this.offset) % this.parent.length());\n\t   *   }\n\t   * });\n\t   *\n\t   * Lazy([1, 2, 3]).offset(1) // sequence: [2, 3, 1]\n\t   */\n\t  ArrayLikeSequence.define = function define(methodName, overrides) {\n\t    if (!overrides || typeof overrides.get !== 'function') {\n\t      throw new Error(\"A custom array-like sequence must implement *at least* get!\");\n\t    }\n\t\n\t    return defineSequenceType(ArrayLikeSequence, methodName, overrides);\n\t  };\n\t\n\t  /**\n\t   * Returns the element at the specified index.\n\t   *\n\t   * @public\n\t   * @param {number} i The index to access.\n\t   * @returns {*} The element.\n\t   *\n\t   * @examples\n\t   * function increment(x) { return x + 1; }\n\t   *\n\t   * Lazy([1, 2, 3]).get(1)                // => 2\n\t   * Lazy([1, 2, 3]).get(-1)               // => undefined\n\t   * Lazy([1, 2, 3]).map(increment).get(1) // => 3\n\t   */\n\t  ArrayLikeSequence.prototype.get = function get(i) {\n\t    return this.parent.get(i);\n\t  };\n\t\n\t  /**\n\t   * Returns the length of the sequence.\n\t   *\n\t   * @public\n\t   * @returns {number} The length.\n\t   *\n\t   * @examples\n\t   * function increment(x) { return x + 1; }\n\t   *\n\t   * Lazy([]).length()                       // => 0\n\t   * Lazy([1, 2, 3]).length()                // => 3\n\t   * Lazy([1, 2, 3]).map(increment).length() // => 3\n\t   */\n\t  ArrayLikeSequence.prototype.length = function length() {\n\t    return this.parent.length();\n\t  };\n\t\n\t  /**\n\t   * Returns the current sequence (since it is already indexed).\n\t   */\n\t  ArrayLikeSequence.prototype.getIndex = function getIndex() {\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#getIterator}.\n\t   */\n\t  ArrayLikeSequence.prototype.getIterator = function getIterator() {\n\t    return new IndexedIterator(this);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Iterator} meant to work with already-indexed\n\t   * sequences.\n\t   *\n\t   * @param {ArrayLikeSequence} sequence The sequence to iterate over.\n\t   * @constructor\n\t   */\n\t  function IndexedIterator(sequence) {\n\t    this.sequence = sequence;\n\t    this.index    = -1;\n\t  }\n\t\n\t  IndexedIterator.prototype.current = function current() {\n\t    return this.sequence.get(this.index);\n\t  };\n\t\n\t  IndexedIterator.prototype.moveNext = function moveNext() {\n\t    if (this.index >= this.sequence.length() - 1) {\n\t      return false;\n\t    }\n\t\n\t    ++this.index;\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#each}.\n\t   */\n\t  ArrayLikeSequence.prototype.each = function each(fn) {\n\t    var length = this.length(),\n\t        i = -1;\n\t\n\t    while (++i < length) {\n\t      if (fn(this.get(i), i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Returns a new sequence with the same elements as this one, plus the\n\t   * specified element at the end.\n\t   *\n\t   * @public\n\t   * @returns {ArrayLikeSequence} The new array-like sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2]).push(3) // sequence: [1, 2, 3]\n\t   * Lazy([]).push(1)     // sequence: [1]\n\t   */\n\t  ArrayLikeSequence.prototype.push = function push(value) {\n\t    return this.concat([value]);\n\t  };\n\t\n\t  /**\n\t   * Returns a new sequence with the same elements as this one, minus the last\n\t   * element.\n\t   *\n\t   * @public\n\t   * @returns {ArrayLikeSequence} The new array-like sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).pop() // sequence: [1, 2]\n\t   * Lazy([]).pop()        // sequence: []\n\t   */\n\t  ArrayLikeSequence.prototype.pop = function pop() {\n\t    return this.initial();\n\t  };\n\t\n\t  /**\n\t   * Returns a new sequence with the same elements as this one, plus the\n\t   * specified element at the beginning.\n\t   *\n\t   * @public\n\t   * @returns {ArrayLikeSequence} The new array-like sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2]).unshift(3) // sequence: [3, 1, 2]\n\t   * Lazy([]).unshift(1)     // sequence: [1]\n\t   */\n\t  ArrayLikeSequence.prototype.unshift = function unshift(value) {\n\t    return Lazy([value]).concat(this);\n\t  };\n\t\n\t  /**\n\t   * Returns a new sequence with the same elements as this one, minus the first\n\t   * element.\n\t   *\n\t   * @public\n\t   * @returns {ArrayLikeSequence} The new array-like sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).shift() // sequence: [2, 3]\n\t   * Lazy([]).shift()        // sequence: []\n\t   */\n\t  ArrayLikeSequence.prototype.shift = function shift() {\n\t    return this.drop();\n\t  };\n\t\n\t  /**\n\t   * Returns a new sequence comprising the portion of this sequence starting\n\t   * from the specified starting index and continuing until the specified ending\n\t   * index or to the end of the sequence.\n\t   *\n\t   * @public\n\t   * @param {number} begin The index at which the new sequence should start.\n\t   * @param {number=} end The index at which the new sequence should end.\n\t   * @returns {ArrayLikeSequence} The new array-like sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4, 5]).slice(0)     // sequence: [1, 2, 3, 4, 5]\n\t   * Lazy([1, 2, 3, 4, 5]).slice(2)     // sequence: [3, 4, 5]\n\t   * Lazy([1, 2, 3, 4, 5]).slice(2, 4)  // sequence: [3, 4]\n\t   * Lazy([1, 2, 3, 4, 5]).slice(-1)    // sequence: [5]\n\t   * Lazy([1, 2, 3, 4, 5]).slice(1, -1) // sequence: [2, 3, 4]\n\t   * Lazy([1, 2, 3, 4, 5]).slice(0, 10) // sequence: [1, 2, 3, 4, 5]\n\t   */\n\t  ArrayLikeSequence.prototype.slice = function slice(begin, end) {\n\t    var length = this.length();\n\t\n\t    if (begin < 0) {\n\t      begin = length + begin;\n\t    }\n\t\n\t    var result = this.drop(begin);\n\t\n\t    if (typeof end === \"number\") {\n\t      if (end < 0) {\n\t        end = length + end;\n\t      }\n\t      result = result.take(end - begin);\n\t    }\n\t\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#map}, which creates an\n\t   * {@link ArrayLikeSequence} so that the result still provides random access.\n\t   *\n\t   * @public\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).map(Lazy.identity) // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  ArrayLikeSequence.prototype.map = function map(mapFn) {\n\t    return new IndexedMappedSequence(this, createCallback(mapFn));\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedMappedSequence(parent, mapFn) {\n\t    this.parent = parent;\n\t    this.mapFn  = mapFn;\n\t  }\n\t\n\t  IndexedMappedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  IndexedMappedSequence.prototype.get = function get(i) {\n\t    if (i < 0 || i >= this.parent.length()) {\n\t      return undefined;\n\t    }\n\t\n\t    return this.mapFn(this.parent.get(i), i);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#filter}.\n\t   */\n\t  ArrayLikeSequence.prototype.filter = function filter(filterFn) {\n\t    return new IndexedFilteredSequence(this, createCallback(filterFn));\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedFilteredSequence(parent, filterFn) {\n\t    this.parent   = parent;\n\t    this.filterFn = filterFn;\n\t  }\n\t\n\t  IndexedFilteredSequence.prototype = Object.create(FilteredSequence.prototype);\n\t\n\t  IndexedFilteredSequence.prototype.each = function each(fn) {\n\t    var parent = this.parent,\n\t        filterFn = this.filterFn,\n\t        length = this.parent.length(),\n\t        i = -1,\n\t        j = 0,\n\t        e;\n\t\n\t    while (++i < length) {\n\t      e = parent.get(i);\n\t      if (filterFn(e, i) && fn(e, j++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#reverse}, which creates an\n\t   * {@link ArrayLikeSequence} so that the result still provides random access.\n\t   *\n\t   * @public\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).reverse() // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  ArrayLikeSequence.prototype.reverse = function reverse() {\n\t    return new IndexedReversedSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedReversedSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  IndexedReversedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  IndexedReversedSequence.prototype.get = function get(i) {\n\t    return this.parent.get(this.length() - i - 1);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#first}, which creates an\n\t   * {@link ArrayLikeSequence} so that the result still provides random access.\n\t   *\n\t   * @public\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).first(2) // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  ArrayLikeSequence.prototype.first = function first(count) {\n\t    if (typeof count === \"undefined\") {\n\t      return this.get(0);\n\t    }\n\t\n\t    return new IndexedTakeSequence(this, count);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedTakeSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count  = count;\n\t  }\n\t\n\t  IndexedTakeSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  IndexedTakeSequence.prototype.length = function length() {\n\t    var parentLength = this.parent.length();\n\t    return this.count <= parentLength ? this.count : parentLength;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#rest}, which creates an\n\t   * {@link ArrayLikeSequence} so that the result still provides random access.\n\t   *\n\t   * @public\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).rest() // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  ArrayLikeSequence.prototype.rest = function rest(count) {\n\t    return new IndexedDropSequence(this, count);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedDropSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count  = typeof count === \"number\" ? count : 1;\n\t  }\n\t\n\t  IndexedDropSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  IndexedDropSequence.prototype.get = function get(i) {\n\t    return this.parent.get(this.count + i);\n\t  };\n\t\n\t  IndexedDropSequence.prototype.length = function length() {\n\t    var parentLength = this.parent.length();\n\t    return this.count <= parentLength ? parentLength - this.count : 0;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#concat} that returns another\n\t   * {@link ArrayLikeSequence} *if* the argument is an array.\n\t   *\n\t   * @public\n\t   * @param {...*} var_args\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2]).concat([3, 4]) // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2]).concat([3, 4]) // sequence: [1, 2, 3, 4]\n\t   */\n\t  ArrayLikeSequence.prototype.concat = function concat(var_args) {\n\t    if (arguments.length === 1 && isArray(arguments[0])) {\n\t      return new IndexedConcatenatedSequence(this, (/** @type {Array} */ var_args));\n\t    } else {\n\t      return Sequence.prototype.concat.apply(this, arguments);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedConcatenatedSequence(parent, other) {\n\t    this.parent = parent;\n\t    this.other  = other;\n\t  }\n\t\n\t  IndexedConcatenatedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  IndexedConcatenatedSequence.prototype.get = function get(i) {\n\t    var parentLength = this.parent.length();\n\t    if (i < parentLength) {\n\t      return this.parent.get(i);\n\t    } else {\n\t      return this.other[i - parentLength];\n\t    }\n\t  };\n\t\n\t  IndexedConcatenatedSequence.prototype.length = function length() {\n\t    return this.parent.length() + this.other.length;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#uniq}.\n\t   */\n\t  ArrayLikeSequence.prototype.uniq = function uniq(keyFn) {\n\t    return new IndexedUniqueSequence(this, createCallback(keyFn));\n\t  };\n\t\n\t  /**\n\t   * @param {ArrayLikeSequence} parent\n\t   * @constructor\n\t   */\n\t  function IndexedUniqueSequence(parent, keyFn) {\n\t    this.parent = parent;\n\t    this.each   = getEachForParent(parent);\n\t    this.keyFn  = keyFn;\n\t  }\n\t\n\t  IndexedUniqueSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  IndexedUniqueSequence.prototype.eachArrayCache = function eachArrayCache(fn) {\n\t    // Basically the same implementation as w/ the set, but using an array because\n\t    // it's cheaper for smaller sequences.\n\t    var parent = this.parent,\n\t        keyFn  = this.keyFn,\n\t        length = parent.length(),\n\t        cache  = [],\n\t        find   = arrayContains,\n\t        key, value,\n\t        i = -1,\n\t        j = 0;\n\t\n\t    while (++i < length) {\n\t      value = parent.get(i);\n\t      key = keyFn(value);\n\t      if (!find(cache, key)) {\n\t        cache.push(key);\n\t        if (fn(value, j++) === false) {\n\t          return false;\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  IndexedUniqueSequence.prototype.eachSetCache = UniqueSequence.prototype.each;\n\t\n\t  function getEachForParent(parent) {\n\t    if (parent.length() < 100) {\n\t      return IndexedUniqueSequence.prototype.eachArrayCache;\n\t    } else {\n\t      return UniqueSequence.prototype.each;\n\t    }\n\t  }\n\t\n\t  // Now that we've fully initialized the ArrayLikeSequence prototype, we can\n\t  // set the prototype for MemoizedSequence.\n\t\n\t  MemoizedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  MemoizedSequence.prototype.getParentIterator = function getParentIterator() {\n\t    // Since the premise of this sequence is that it only iterates over each\n\t    // element of its parent a grand total of one (1) time, we should only ever\n\t    // need to get the parent iterator once.\n\t    if (!this.iterator) {\n\t      this.iterator = this.parent.getIterator();\n\t    }\n\t\n\t    return this.iterator;\n\t  };\n\t\n\t  MemoizedSequence.prototype.getIterator = function getIterator() {\n\t    return new Memoizer(this.memo, this.getParentIterator());\n\t  };\n\t\n\t  MemoizedSequence.prototype.iterateTo = function iterateTo(i) {\n\t    var memo = this.memo,\n\t        iterator = this.getParentIterator();\n\t\n\t    while (i >= memo.length) {\n\t      if (!iterator.moveNext()) {\n\t        this.complete = true;\n\t        return false;\n\t      }\n\t\n\t      memo.push(iterator.current());\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  MemoizedSequence.prototype.get = function get(i) {\n\t    var memo = this.memo;\n\t\n\t    if (i < memo.length) {\n\t      return memo[i];\n\t    }\n\t\n\t    if (!this.iterateTo(i)) {\n\t      return undefined;\n\t    }\n\t\n\t    return memo[i];\n\t  };\n\t\n\t  MemoizedSequence.prototype.length = function length() {\n\t    if (!this.complete) {\n\t      this.iterateTo(Infinity);\n\t    }\n\t\n\t    return this.memo.length;\n\t  };\n\t\n\t  MemoizedSequence.prototype.slice = function slice(begin, end) {\n\t    if (!this.complete) {\n\t      this.iterateTo(end);\n\t    }\n\t\n\t    return Lazy(this.memo.slice(begin, end));\n\t  };\n\t\n\t  MemoizedSequence.prototype.toArray = function toArray() {\n\t    if (!this.complete) {\n\t      this.iterateTo(Infinity);\n\t    }\n\t\n\t    return this.memo.slice(0);\n\t  };\n\t\n\t  /**\n\t   * ArrayWrapper is the most basic {@link Sequence}. It directly wraps an array\n\t   * and implements the same methods as {@link ArrayLikeSequence}, but more\n\t   * efficiently.\n\t   *\n\t   * @constructor\n\t   */\n\t  function ArrayWrapper(source) {\n\t    this.source = source;\n\t  }\n\t\n\t  ArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  ArrayWrapper.prototype.root = function root() {\n\t    return this;\n\t  };\n\t\n\t  ArrayWrapper.prototype.isAsync = function isAsync() {\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Returns the element at the specified index in the source array.\n\t   *\n\t   * @param {number} i The index to access.\n\t   * @returns {*} The element.\n\t   */\n\t  ArrayWrapper.prototype.get = function get(i) {\n\t    return this.source[i];\n\t  };\n\t\n\t  /**\n\t   * Returns the length of the source array.\n\t   *\n\t   * @returns {number} The length.\n\t   */\n\t  ArrayWrapper.prototype.length = function length() {\n\t    return this.source.length;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#each}.\n\t   */\n\t  ArrayWrapper.prototype.each = function each(fn) {\n\t    return forEach(this.source, fn);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#map}.\n\t   */\n\t  ArrayWrapper.prototype.map = function map(mapFn) {\n\t    return new MappedArrayWrapper(this, createCallback(mapFn));\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#filter}.\n\t   */\n\t  ArrayWrapper.prototype.filter = function filter(filterFn) {\n\t    return new FilteredArrayWrapper(this, createCallback(filterFn));\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#uniq}.\n\t   */\n\t  ArrayWrapper.prototype.uniq = function uniq(keyFn) {\n\t    return new UniqueArrayWrapper(this, keyFn);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link ArrayLikeSequence#concat}.\n\t   *\n\t   * @param {...*} var_args\n\t   */\n\t  ArrayWrapper.prototype.concat = function concat(var_args) {\n\t    if (arguments.length === 1 && isArray(arguments[0])) {\n\t      return new ConcatArrayWrapper(this, (/** @type {Array} */ var_args));\n\t    } else {\n\t      return ArrayLikeSequence.prototype.concat.apply(this, arguments);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#toArray}.\n\t   */\n\t  ArrayWrapper.prototype.toArray = function toArray() {\n\t    return this.source.slice(0);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MappedArrayWrapper(parent, mapFn) {\n\t    this.parent = parent;\n\t    this.mapFn  = mapFn;\n\t  }\n\t\n\t  MappedArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  MappedArrayWrapper.prototype.get = function get(i) {\n\t    var source = this.parent.source;\n\t\n\t    if (i < 0 || i >= source.length) {\n\t      return undefined;\n\t    }\n\t\n\t    return this.mapFn(source[i]);\n\t  };\n\t\n\t  MappedArrayWrapper.prototype.length = function length() {\n\t    return this.parent.source.length;\n\t  };\n\t\n\t  MappedArrayWrapper.prototype.each = function each(fn) {\n\t    var source = this.parent.source,\n\t        length = source.length,\n\t        mapFn  = this.mapFn,\n\t        i = -1;\n\t\n\t    while (++i < length) {\n\t      if (fn(mapFn(source[i], i), i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function FilteredArrayWrapper(parent, filterFn) {\n\t    this.parent   = parent;\n\t    this.filterFn = filterFn;\n\t  }\n\t\n\t  FilteredArrayWrapper.prototype = Object.create(FilteredSequence.prototype);\n\t\n\t  FilteredArrayWrapper.prototype.each = function each(fn) {\n\t    var source = this.parent.source,\n\t        filterFn = this.filterFn,\n\t        length = source.length,\n\t        i = -1,\n\t        j = 0,\n\t        e;\n\t\n\t    while (++i < length) {\n\t      e = source[i];\n\t      if (filterFn(e, i) && fn(e, j++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function UniqueArrayWrapper(parent, keyFn) {\n\t    this.parent = parent;\n\t    this.each   = getEachForSource(parent.source);\n\t    this.keyFn  = keyFn;\n\t  }\n\t\n\t  UniqueArrayWrapper.prototype = Object.create(Sequence.prototype);\n\t\n\t  UniqueArrayWrapper.prototype.eachNoCache = function eachNoCache(fn) {\n\t    var source = this.parent.source,\n\t        keyFn  = this.keyFn,\n\t        length = source.length,\n\t        find   = arrayContainsBefore,\n\t        value,\n\t\n\t        // Yes, this is hideous.\n\t        // Trying to get performance first, will refactor next!\n\t        i = -1,\n\t        k = 0;\n\t\n\t    while (++i < length) {\n\t      value = source[i];\n\t      if (!find(source, value, i, keyFn) && fn(value, k++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  UniqueArrayWrapper.prototype.eachArrayCache = function eachArrayCache(fn) {\n\t    // Basically the same implementation as w/ the set, but using an array because\n\t    // it's cheaper for smaller sequences.\n\t    var source = this.parent.source,\n\t        keyFn  = this.keyFn,\n\t        length = source.length,\n\t        cache  = [],\n\t        find   = arrayContains,\n\t        key, value,\n\t        i = -1,\n\t        j = 0;\n\t\n\t    if (keyFn) {\n\t      keyFn = createCallback(keyFn);\n\t      while (++i < length) {\n\t        value = source[i];\n\t        key = keyFn(value);\n\t        if (!find(cache, key)) {\n\t          cache.push(key);\n\t          if (fn(value, j++) === false) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t\n\t    } else {\n\t      while (++i < length) {\n\t        value = source[i];\n\t        if (!find(cache, value)) {\n\t          cache.push(value);\n\t          if (fn(value, j++) === false) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  UniqueArrayWrapper.prototype.eachSetCache = UniqueSequence.prototype.each;\n\t\n\t  /**\n\t   * My latest findings here...\n\t   *\n\t   * So I hadn't really given the set-based approach enough credit. The main issue\n\t   * was that my Set implementation was totally not optimized at all. After pretty\n\t   * heavily optimizing it (just take a look; it's a monstrosity now!), it now\n\t   * becomes the fastest option for much smaller values of N.\n\t   */\n\t  function getEachForSource(source) {\n\t    if (source.length < 40) {\n\t      return UniqueArrayWrapper.prototype.eachNoCache;\n\t    } else if (source.length < 100) {\n\t      return UniqueArrayWrapper.prototype.eachArrayCache;\n\t    } else {\n\t      return UniqueArrayWrapper.prototype.eachSetCache;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ConcatArrayWrapper(parent, other) {\n\t    this.parent = parent;\n\t    this.other  = other;\n\t  }\n\t\n\t  ConcatArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  ConcatArrayWrapper.prototype.get = function get(i) {\n\t    var source = this.parent.source,\n\t        sourceLength = source.length;\n\t\n\t    if (i < sourceLength) {\n\t      return source[i];\n\t    } else {\n\t      return this.other[i - sourceLength];\n\t    }\n\t  };\n\t\n\t  ConcatArrayWrapper.prototype.length = function length() {\n\t    return this.parent.source.length + this.other.length;\n\t  };\n\t\n\t  ConcatArrayWrapper.prototype.each = function each(fn) {\n\t    var source = this.parent.source,\n\t        sourceLength = source.length,\n\t        other = this.other,\n\t        otherLength = other.length,\n\t        i = 0,\n\t        j = -1;\n\t\n\t    while (++j < sourceLength) {\n\t      if (fn(source[j], i++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    j = -1;\n\t    while (++j < otherLength) {\n\t      if (fn(other[j], i++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * An `ObjectLikeSequence` object represents a sequence of key/value pairs.\n\t   *\n\t   * The initial sequence you get by wrapping an object with `Lazy(object)` is\n\t   * an `ObjectLikeSequence`.\n\t   *\n\t   * All methods of `ObjectLikeSequence` that conceptually should return\n\t   * something like an object return another `ObjectLikeSequence`.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   *\n\t   * @examples\n\t   * var obj = { foo: 'bar' };\n\t   *\n\t   * Lazy(obj).assign({ bar: 'baz' })   // instanceof Lazy.ObjectLikeSequence\n\t   * Lazy(obj).defaults({ bar: 'baz' }) // instanceof Lazy.ObjectLikeSequence\n\t   * Lazy(obj).invert()                 // instanceof Lazy.ObjectLikeSequence\n\t   */\n\t  function ObjectLikeSequence() {}\n\t\n\t  ObjectLikeSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  /**\n\t   * Create a new constructor function for a type inheriting from\n\t   * `ObjectLikeSequence`.\n\t   *\n\t   * @public\n\t   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n\t   *     used for constructing the new sequence. The method will be attached to\n\t   *     the `ObjectLikeSequence` prototype so that it can be chained with any other\n\t   *     methods that return object-like sequences.\n\t   * @param {Object} overrides An object containing function overrides for this\n\t   *     new sequence type. **Must** include `each`. *May* include `init` and\n\t   *     `get` (for looking up an element by key).\n\t   * @returns {Function} A constructor for a new type inheriting from\n\t   *     `ObjectLikeSequence`.\n\t   *\n\t   * @examples\n\t   * function downcaseKey(value, key) {\n\t   *   return [key.toLowerCase(), value];\n\t   * }\n\t   *\n\t   * Lazy.ObjectLikeSequence.define(\"caseInsensitive\", {\n\t   *   init: function() {\n\t   *     var downcased = this.parent\n\t   *       .map(downcaseKey)\n\t   *       .toObject();\n\t   *     this.downcased = Lazy(downcased);\n\t   *   },\n\t   *\n\t   *   get: function(key) {\n\t   *     return this.downcased.get(key.toLowerCase());\n\t   *   },\n\t   *\n\t   *   each: function(fn) {\n\t   *     return this.downcased.each(fn);\n\t   *   }\n\t   * });\n\t   *\n\t   * Lazy({ Foo: 'bar' }).caseInsensitive()            // sequence: { foo: 'bar' }\n\t   * Lazy({ FOO: 'bar' }).caseInsensitive().get('foo') // => 'bar'\n\t   * Lazy({ FOO: 'bar' }).caseInsensitive().get('FOO') // => 'bar'\n\t   */\n\t  ObjectLikeSequence.define = function define(methodName, overrides) {\n\t    if (!overrides || typeof overrides.each !== 'function') {\n\t      throw new Error(\"A custom object-like sequence must implement *at least* each!\");\n\t    }\n\t\n\t    return defineSequenceType(ObjectLikeSequence, methodName, overrides);\n\t  };\n\t\n\t  ObjectLikeSequence.prototype.value = function value() {\n\t    return this.toObject();\n\t  };\n\t\n\t  /**\n\t   * Gets the element at the specified key in this sequence.\n\t   *\n\t   * @public\n\t   * @param {string} key The key.\n\t   * @returns {*} The element.\n\t   *\n\t   * @examples\n\t   * Lazy({ foo: \"bar\" }).get(\"foo\")                          // => \"bar\"\n\t   * Lazy({ foo: \"bar\" }).extend({ foo: \"baz\" }).get(\"foo\")   // => \"baz\"\n\t   * Lazy({ foo: \"bar\" }).defaults({ bar: \"baz\" }).get(\"bar\") // => \"baz\"\n\t   * Lazy({ foo: \"bar\" }).invert().get(\"bar\")                 // => \"foo\"\n\t   * Lazy({ foo: 1, bar: 2 }).pick([\"foo\"]).get(\"foo\")        // => 1\n\t   * Lazy({ foo: 1, bar: 2 }).pick([\"foo\"]).get(\"bar\")        // => undefined\n\t   * Lazy({ foo: 1, bar: 2 }).omit([\"foo\"]).get(\"bar\")        // => 2\n\t   * Lazy({ foo: 1, bar: 2 }).omit([\"foo\"]).get(\"foo\")        // => undefined\n\t   */\n\t  ObjectLikeSequence.prototype.get = function get(key) {\n\t    var pair = this.pairs().find(function(pair) {\n\t      return pair[0] === key;\n\t    });\n\t\n\t    return pair ? pair[1] : undefined;\n\t  };\n\t\n\t  /**\n\t   * Returns a {@link Sequence} whose elements are the keys of this object-like\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @returns {Sequence} The sequence based on this sequence's keys.\n\t   *\n\t   * @examples\n\t   * var obj = { hello: \"hola\", goodbye: \"hasta luego\" };\n\t   *\n\t   * Lazy(obj).keys() // sequence: [\"hello\", \"goodbye\"]\n\t   * Lazy(obj).keys().map(function(v, i) { return [v, i]; }) // sequence: [[\"hello\", 0], [\"goodbye\", 1]]\n\t   */\n\t  ObjectLikeSequence.prototype.keys = function keys() {\n\t    return new KeySequence(this);\n\t  };\n\t\n\t  function KeySequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  KeySequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  KeySequence.prototype.each = function each(fn) {\n\t    var i = -1;\n\t\n\t    return this.parent.each(function(v, k) {\n\t      return fn(k, ++i);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Returns a {@link Sequence} whose elements are the values of this object-like\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @returns {Sequence} The sequence based on this sequence's values.\n\t   *\n\t   * @examples\n\t   * Lazy({ hello: \"hola\", goodbye: \"hasta luego\" }).values() // sequence: [\"hola\", \"hasta luego\"]\n\t   */\n\t  ObjectLikeSequence.prototype.values = function values() {\n\t    return new ValuesSequence(this);\n\t  };\n\t\n\t  function ValuesSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  ValuesSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ValuesSequence.prototype.each = function each(fn) {\n\t    var i = -1;\n\t\n\t    return this.parent.each(function(v, k) {\n\t      return fn(v, ++i);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Throws an exception. Asynchronous iteration over object-like sequences is\n\t   * not supported.\n\t   *\n\t   * @public\n\t   * @examples\n\t   * Lazy({ foo: 'bar' }).async() // throws\n\t   */\n\t  ObjectLikeSequence.prototype.async = function async() {\n\t    throw new Error('An ObjectLikeSequence does not support asynchronous iteration.');\n\t  };\n\t\n\t  ObjectLikeSequence.prototype.filter = function filter(filterFn) {\n\t    return new FilteredObjectLikeSequence(this, createCallback(filterFn));\n\t  };\n\t\n\t  function FilteredObjectLikeSequence(parent, filterFn) {\n\t    this.parent = parent;\n\t    this.filterFn = filterFn;\n\t  }\n\t\n\t  FilteredObjectLikeSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  FilteredObjectLikeSequence.prototype.each = function each(fn) {\n\t    var filterFn = this.filterFn;\n\t\n\t    return this.parent.each(function(v, k) {\n\t      if (filterFn(v, k)) {\n\t        return fn(v, k);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Returns this same sequence. (Reversing an object-like sequence doesn't make\n\t   * any sense.)\n\t   */\n\t  ObjectLikeSequence.prototype.reverse = function reverse() {\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Returns an {@link ObjectLikeSequence} whose elements are the combination of\n\t   * this sequence and another object. In the case of a key appearing in both this\n\t   * sequence and the given object, the other object's value will override the\n\t   * one in this sequence.\n\t   *\n\t   * @public\n\t   * @aka extend\n\t   * @param {Object} other The other object to assign to this sequence.\n\t   * @returns {ObjectLikeSequence} A new sequence comprising elements from this\n\t   *     sequence plus the contents of `other`.\n\t   *\n\t   * @examples\n\t   * Lazy({ \"uno\": 1, \"dos\": 2 }).assign({ \"tres\": 3 })     // sequence: { uno: 1, dos: 2, tres: 3 }\n\t   * Lazy({ foo: \"bar\" }).assign({ foo: \"baz\" });           // sequence: { foo: \"baz\" }\n\t   * Lazy({ foo: 'foo' }).assign({ foo: false }).get('foo') // false\n\t   */\n\t  ObjectLikeSequence.prototype.assign = function assign(other) {\n\t    return new AssignSequence(this, other);\n\t  };\n\t\n\t  ObjectLikeSequence.prototype.extend = function extend(other) {\n\t    return this.assign(other);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function AssignSequence(parent, other) {\n\t    this.parent = parent;\n\t    this.other  = other;\n\t  }\n\t\n\t  AssignSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  AssignSequence.prototype.get = function get(key) {\n\t    return key in this.other ? this.other[key] : this.parent.get(key);\n\t  };\n\t\n\t  AssignSequence.prototype.each = function each(fn) {\n\t    var merged = new Set(),\n\t        done   = false;\n\t\n\t    Lazy(this.other).each(function(value, key) {\n\t      if (fn(value, key) === false) {\n\t        done = true;\n\t        return false;\n\t      }\n\t\n\t      merged.add(key);\n\t    });\n\t\n\t    if (!done) {\n\t      return this.parent.each(function(value, key) {\n\t        if (!merged.contains(key) && fn(value, key) === false) {\n\t          return false;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns an {@link ObjectLikeSequence} whose elements are the combination of\n\t   * this sequence and a 'default' object. In the case of a key appearing in both\n\t   * this sequence and the given object, this sequence's value will override the\n\t   * default object's.\n\t   *\n\t   * @public\n\t   * @param {Object} defaults The 'default' object to use for missing keys in this\n\t   *     sequence.\n\t   * @returns {ObjectLikeSequence} A new sequence comprising elements from this\n\t   *     sequence supplemented by the contents of `defaults`.\n\t   *\n\t   * @examples\n\t   * Lazy({ name: \"Dan\" }).defaults({ name: \"User\", password: \"passw0rd\" }) // sequence: { name: \"Dan\", password: \"passw0rd\" }\n\t   * Lazy({ foo: false }).defaults({ foo: 'foo' }).get('foo') // false\n\t   * Lazy({ a: 1 }).defaults({ b: 2 }).defaults({ c: 3 }) // sequence: { a: 1, b: 2, c: 3 }\n\t   * Lazy({ a: 1 }).defaults({ b: 2 }).defaults({ a: 3 }) // sequence: { a: 1, b: 2 }\n\t   * Lazy({ a: 1, b: 2 }).defaults({ b: 5 }).defaults({ c: 3, d: 4 }) // sequence: { a: 1, b: 2, c: 3, d: 4 }\n\t   */\n\t  ObjectLikeSequence.prototype.defaults = function defaults(defaults) {\n\t    return new DefaultsSequence(this, defaults);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function DefaultsSequence(parent, defaults) {\n\t    this.parent        = parent;\n\t    this.defaultValues = defaults;\n\t  }\n\t\n\t  DefaultsSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  DefaultsSequence.prototype.get = function get(key) {\n\t    var parentValue = this.parent.get(key);\n\t    return parentValue !== undefined ? parentValue : this.defaultValues[key];\n\t  };\n\t\n\t  DefaultsSequence.prototype.each = function each(fn) {\n\t    var merged = new Set(),\n\t        done   = false;\n\t\n\t    this.parent.each(function(value, key) {\n\t      if (fn(value, key) === false) {\n\t        done = true;\n\t        return false;\n\t      }\n\t\n\t      if (typeof value !== \"undefined\") {\n\t        merged.add(key);\n\t      }\n\t    });\n\t\n\t    if (!done) {\n\t      Lazy(this.defaultValues).each(function(value, key) {\n\t        if (!merged.contains(key) && fn(value, key) === false) {\n\t          return false;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns an {@link ObjectLikeSequence} whose values are this sequence's keys,\n\t   * and whose keys are this sequence's values.\n\t   *\n\t   * @public\n\t   * @returns {ObjectLikeSequence} A new sequence comprising the inverted keys and\n\t   *     values from this sequence.\n\t   *\n\t   * @examples\n\t   * Lazy({ first: \"Dan\", last: \"Tao\" }).invert() // sequence: { Dan: \"first\", Tao: \"last\" }\n\t   */\n\t  ObjectLikeSequence.prototype.invert = function invert() {\n\t    return new InvertedSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function InvertedSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  InvertedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  InvertedSequence.prototype.each = function each(fn) {\n\t    this.parent.each(function(value, key) {\n\t      return fn(key, value);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Produces an {@link ObjectLikeSequence} consisting of all the recursively\n\t   * merged values from this and the given object(s) or sequence(s).\n\t   *\n\t   * Note that by default this method only merges \"vanilla\" objects (bags of\n\t   * key/value pairs), not arrays or any other custom object types. To customize\n\t   * how merging works, you can provide the mergeFn argument, e.g. to handling\n\t   * merging arrays, strings, or other types of objects.\n\t   *\n\t   * @public\n\t   * @param {...Object|ObjectLikeSequence} others The other object(s) or\n\t   *     sequence(s) whose values will be merged into this one.\n\t   * @param {Function=} mergeFn An optional function used to customize merging\n\t   *     behavior. The function should take two values as parameters and return\n\t   *     whatever the \"merged\" form of those values is. If the function returns\n\t   *     undefined then the new value will simply replace the old one in the\n\t   *     final result.\n\t   * @returns {ObjectLikeSequence} The new sequence consisting of merged values.\n\t   *\n\t   * @examples\n\t   * // These examples are completely stolen from Lo-Dash's documentation:\n\t   * // lodash.com/docs#merge\n\t   *\n\t   * var names = {\n\t   *   'characters': [\n\t   *     { 'name': 'barney' },\n\t   *     { 'name': 'fred' }\n\t   *   ]\n\t   * };\n\t   *\n\t   * var ages = {\n\t   *   'characters': [\n\t   *     { 'age': 36 },\n\t   *     { 'age': 40 }\n\t   *   ]\n\t   * };\n\t   *\n\t   * var food = {\n\t   *   'fruits': ['apple'],\n\t   *   'vegetables': ['beet']\n\t   * };\n\t   *\n\t   * var otherFood = {\n\t   *   'fruits': ['banana'],\n\t   *   'vegetables': ['carrot']\n\t   * };\n\t   *\n\t   * function mergeArrays(a, b) {\n\t   *   return Array.isArray(a) ? a.concat(b) : undefined;\n\t   * }\n\t   *\n\t   * Lazy(names).merge(ages); // => sequence: { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n\t   * Lazy(food).merge(otherFood, mergeArrays); // => sequence: { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t   *\n\t   * // ----- Now for my own tests: -----\n\t   *\n\t   * // merges objects\n\t   * Lazy({ foo: 1 }).merge({ foo: 2 }); // => sequence: { foo: 2 }\n\t   * Lazy({ foo: 1 }).merge({ bar: 2 }); // => sequence: { foo: 1, bar: 2 }\n\t   *\n\t   * // goes deep\n\t   * Lazy({ foo: { bar: 1 } }).merge({ foo: { bar: 2 } }); // => sequence: { foo: { bar: 2 } }\n\t   * Lazy({ foo: { bar: 1 } }).merge({ foo: { baz: 2 } }); // => sequence: { foo: { bar: 1, baz: 2 } }\n\t   * Lazy({ foo: { bar: 1 } }).merge({ foo: { baz: 2 } }); // => sequence: { foo: { bar: 1, baz: 2 } }\n\t   *\n\t   * // gives precedence to later sources\n\t   * Lazy({ foo: 1 }).merge({ bar: 2 }, { bar: 3 }); // => sequence: { foo: 1, bar: 3 }\n\t   *\n\t   * // undefined gets passed over\n\t   * Lazy({ foo: 1 }).merge({ foo: undefined }); // => sequence: { foo: 1 }\n\t   *\n\t   * // null doesn't get passed over\n\t   * Lazy({ foo: 1 }).merge({ foo: null }); // => sequence: { foo: null }\n\t   *\n\t   * // array contents get merged as well\n\t   * Lazy({ foo: [{ bar: 1 }] }).merge({ foo: [{ baz: 2 }] }); // => sequence: { foo: [{ bar: 1, baz: 2}] }\n\t   */\n\t  ObjectLikeSequence.prototype.merge = function merge(var_args) {\n\t    var mergeFn = arguments.length > 1 && typeof arguments[arguments.length - 1] === \"function\" ?\n\t      arrayPop.call(arguments) : null;\n\t    return new MergedSequence(this, arraySlice.call(arguments, 0), mergeFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MergedSequence(parent, others, mergeFn) {\n\t    this.parent  = parent;\n\t    this.others  = others;\n\t    this.mergeFn = mergeFn;\n\t  }\n\t\n\t  MergedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  MergedSequence.prototype.each = function each(fn) {\n\t    var others  = this.others,\n\t        mergeFn = this.mergeFn || mergeObjects,\n\t        keys    = {};\n\t\n\t    var iteratedFullSource = this.parent.each(function(value, key) {\n\t      var merged = value;\n\t\n\t      forEach(others, function(other) {\n\t        if (key in other) {\n\t          merged = mergeFn(merged, other[key]);\n\t        }\n\t      });\n\t\n\t      keys[key] = true;\n\t\n\t      return fn(merged, key);\n\t    });\n\t\n\t    if (iteratedFullSource === false) {\n\t      return false;\n\t    }\n\t\n\t    var remaining = {};\n\t\n\t    forEach(others, function(other) {\n\t      for (var k in other) {\n\t        if (!keys[k]) {\n\t          remaining[k] = mergeFn(remaining[k], other[k]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return Lazy(remaining).each(fn);\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   * @examples\n\t   * mergeObjects({ foo: 1 }, { bar: 2 }); // => { foo: 1, bar: 2 }\n\t   * mergeObjects({ foo: { bar: 1 } }, { foo: { baz: 2 } }); // => { foo: { bar: 1, baz: 2 } }\n\t   * mergeObjects({ foo: { bar: 1 } }, { foo: undefined }); // => { foo: { bar: 1 } }\n\t   * mergeObjects({ foo: { bar: 1 } }, { foo: null }); // => { foo: null }\n\t   * mergeObjects({ array: [0, 1, 2] }, { array: [3, 4, 5] }).array; // instanceof Array\n\t   * mergeObjects({ date: new Date() }, { date: new Date() }).date; // instanceof Date\n\t   * mergeObjects([{ foo: 1 }], [{ bar: 2 }]); // => [{ foo: 1, bar: 2 }]\n\t   */\n\t  function mergeObjects(a, b) {\n\t    var merged, prop;\n\t\n\t    if (typeof b === 'undefined') {\n\t      return a;\n\t    }\n\t\n\t    // Check that we're dealing with two objects or two arrays.\n\t    if (isVanillaObject(a) && isVanillaObject(b)) {\n\t      merged = {};\n\t    } else if (isArray(a) && isArray(b)) {\n\t      merged = [];\n\t    } else {\n\t      // Otherwise there's no merging to do -- just replace a w/ b.\n\t      return b;\n\t    }\n\t\n\t    for (prop in a) {\n\t      merged[prop] = mergeObjects(a[prop], b[prop]);\n\t    }\n\t    for (prop in b) {\n\t      if (!merged[prop]) {\n\t        merged[prop] = b[prop];\n\t      }\n\t    }\n\t    return merged;\n\t  }\n\t\n\t  /**\n\t   * Checks whether an object is a \"vanilla\" object, i.e. {'foo': 'bar'} as\n\t   * opposed to an array, date, etc.\n\t   *\n\t   * @private\n\t   * @examples\n\t   * isVanillaObject({foo: 'bar'}); // => true\n\t   * isVanillaObject(new Date());   // => false\n\t   * isVanillaObject([1, 2, 3]);    // => false\n\t   */\n\t  function isVanillaObject(object) {\n\t    return object && object.constructor === Object;\n\t  }\n\t\n\t  /**\n\t   * Creates a {@link Sequence} consisting of the keys from this sequence whose\n\t   *     values are functions.\n\t   *\n\t   * @public\n\t   * @aka methods\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var dog = {\n\t   *   name: \"Fido\",\n\t   *   breed: \"Golden Retriever\",\n\t   *   bark: function() { console.log(\"Woof!\"); },\n\t   *   wagTail: function() { console.log(\"TODO: implement robotic dog interface\"); }\n\t   * };\n\t   *\n\t   * Lazy(dog).functions() // sequence: [\"bark\", \"wagTail\"]\n\t   */\n\t  ObjectLikeSequence.prototype.functions = function functions() {\n\t    return this\n\t      .filter(function(v, k) { return typeof(v) === \"function\"; })\n\t      .map(function(v, k) { return k; });\n\t  };\n\t\n\t  ObjectLikeSequence.prototype.methods = function methods() {\n\t    return this.functions();\n\t  };\n\t\n\t  /**\n\t   * Creates an {@link ObjectLikeSequence} consisting of the key/value pairs from\n\t   * this sequence whose keys are included in the given array of property names.\n\t   *\n\t   * @public\n\t   * @param {Array.<string>} properties An array of the properties to \"pick\" from this\n\t   *     sequence.\n\t   * @returns {ObjectLikeSequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var players = {\n\t   *   \"who\": \"first\",\n\t   *   \"what\": \"second\",\n\t   *   \"i don't know\": \"third\"\n\t   * };\n\t   *\n\t   * Lazy(players).pick([\"who\", \"what\"]) // sequence: { who: \"first\", what: \"second\" }\n\t   */\n\t  ObjectLikeSequence.prototype.pick = function pick(properties) {\n\t    return new PickSequence(this, properties);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function PickSequence(parent, properties) {\n\t    this.parent     = parent;\n\t    this.properties = properties;\n\t  }\n\t\n\t  PickSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  PickSequence.prototype.get = function get(key) {\n\t    return arrayContains(this.properties, key) ? this.parent.get(key) : undefined;\n\t  };\n\t\n\t  PickSequence.prototype.each = function each(fn) {\n\t    var inArray    = arrayContains,\n\t        properties = this.properties;\n\t\n\t    return this.parent.each(function(value, key) {\n\t      if (inArray(properties, key)) {\n\t        return fn(value, key);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates an {@link ObjectLikeSequence} consisting of the key/value pairs from\n\t   * this sequence excluding those with the specified keys. Non-string keys are\n\t   * effectively ignored.\n\t   *\n\t   * @public\n\t   * @param {Array} properties An array of the properties to *omit* from this\n\t   *     sequence.\n\t   * @returns {ObjectLikeSequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var players = {\n\t   *   \"who\": \"first\",\n\t   *   \"what\": \"second\",\n\t   *   \"i don't know\": \"third\"\n\t   * };\n\t   *\n\t   * Lazy(players).omit([\"who\", \"what\"]) // sequence: { \"i don't know\": \"third\" }\n\t   *\n\t   * // Example to show handling of non-string keys\n\t   * Lazy({1: 2, true: false}).omit([1, true]) // sequence: { \"1\": 2, \"true\": false }\n\t   */\n\t  ObjectLikeSequence.prototype.omit = function omit(properties) {\n\t    return new OmitSequence(this, properties);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function OmitSequence(parent, properties) {\n\t    this.parent     = parent;\n\t    this.properties = properties;\n\t  }\n\t\n\t  OmitSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  OmitSequence.prototype.get = function get(key) {\n\t    return arrayContains(this.properties, key) ? undefined : this.parent.get(key);\n\t  };\n\t\n\t  OmitSequence.prototype.each = function each(fn) {\n\t    var inArray    = arrayContains,\n\t        properties = this.properties;\n\t\n\t    return this.parent.each(function(value, key) {\n\t      if (!inArray(properties, key)) {\n\t        return fn(value, key);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Maps the key/value pairs in this sequence to arrays.\n\t   *\n\t   * @public\n\t   * @aka toArray\n\t   * @returns {Sequence} An sequence of `[key, value]` pairs.\n\t   *\n\t   * @examples\n\t   * var colorCodes = {\n\t   *   red: \"#f00\",\n\t   *   green: \"#0f0\",\n\t   *   blue: \"#00f\"\n\t   * };\n\t   *\n\t   * Lazy(colorCodes).pairs() // sequence: [[\"red\", \"#f00\"], [\"green\", \"#0f0\"], [\"blue\", \"#00f\"]]\n\t   */\n\t  ObjectLikeSequence.prototype.pairs = function pairs() {\n\t    return this.map(function(v, k) { return [k, v]; });\n\t  };\n\t\n\t  /**\n\t   * Creates an array from the key/value pairs in this sequence.\n\t   *\n\t   * @public\n\t   * @returns {Array} An array of `[key, value]` elements.\n\t   *\n\t   * @examples\n\t   * var colorCodes = {\n\t   *   red: \"#f00\",\n\t   *   green: \"#0f0\",\n\t   *   blue: \"#00f\"\n\t   * };\n\t   *\n\t   * Lazy(colorCodes).toArray() // => [[\"red\", \"#f00\"], [\"green\", \"#0f0\"], [\"blue\", \"#00f\"]]\n\t   */\n\t  ObjectLikeSequence.prototype.toArray = function toArray() {\n\t    return this.pairs().toArray();\n\t  };\n\t\n\t  /**\n\t   * Creates an object with the key/value pairs from this sequence.\n\t   *\n\t   * @public\n\t   * @returns {Object} An object with the same key/value pairs as this sequence.\n\t   *\n\t   * @examples\n\t   * var colorCodes = {\n\t   *   red: \"#f00\",\n\t   *   green: \"#0f0\",\n\t   *   blue: \"#00f\"\n\t   * };\n\t   *\n\t   * Lazy(colorCodes).toObject() // => { red: \"#f00\", green: \"#0f0\", blue: \"#00f\" }\n\t   */\n\t  ObjectLikeSequence.prototype.toObject = function toObject() {\n\t    return this.reduce(function(object, value, key) {\n\t      object[key] = value;\n\t      return object;\n\t    }, {});\n\t  };\n\t\n\t  // Now that we've fully initialized the ObjectLikeSequence prototype, we can\n\t  // actually set the prototypes for GroupedSequence, IndexedSequence, and\n\t  // CountedSequence.\n\t\n\t  GroupedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  /**\n\t   * @examples\n\t   * var objects = [{a: 'x'}, {a: 'x'}];\n\t   *\n\t   * Lazy(objects).groupBy('a') // sequence: {x: [{a: 'x'}, {a: 'x'}]}\n\t   * Lazy(objects).groupBy('a').each(Lazy.noop) // true\n\t   */\n\t  GroupedSequence.prototype.each = function each(fn) {\n\t    var keyFn   = createCallback(this.keyFn),\n\t        valFn   = createCallback(this.valFn),\n\t        result;\n\t\n\t    result = this.parent.reduce(function(grouped,e) {\n\t      var key = keyFn(e),\n\t          val = valFn(e);\n\t      if (!isArray(grouped[key])) {\n\t        grouped[key] = [val];\n\t      } else {\n\t        grouped[key].push(val);\n\t      }\n\t      return grouped;\n\t    },{});\n\t\n\t    return transform(function(grouped) {\n\t      for (var key in grouped) {\n\t        if (fn(grouped[key], key) === false) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }, result);\n\t  };\n\t\n\t  IndexedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  IndexedSequence.prototype.each = function each(fn) {\n\t    var keyFn   = createCallback(this.keyFn),\n\t        valFn   = createCallback(this.valFn),\n\t        indexed = {};\n\t\n\t    return this.parent.each(function(e) {\n\t      var key = keyFn(e),\n\t          val = valFn(e);\n\t\n\t      if (!indexed[key]) {\n\t        indexed[key] = val;\n\t        return fn(val, key);\n\t      }\n\t    });\n\t  };\n\t\n\t  CountedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  CountedSequence.prototype.each = function each(fn) {\n\t    var keyFn   = createCallback(this.keyFn),\n\t        counted = {};\n\t\n\t    this.parent.each(function(e) {\n\t      var key = keyFn(e);\n\t      if (!counted[key]) {\n\t        counted[key] = 1;\n\t      } else {\n\t        counted[key] += 1;\n\t      }\n\t    });\n\t\n\t    for (var key in counted) {\n\t      if (fn(counted[key], key) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Watches for all changes to a specified property (or properties) of an\n\t   * object and produces a sequence whose elements have the properties\n\t   * `{ property, value }` indicating which property changed and what it was\n\t   * changed to.\n\t   *\n\t   * Note that this method **only works on directly wrapped objects**; it will\n\t   * *not* work on any arbitrary {@link ObjectLikeSequence}.\n\t   *\n\t   * @public\n\t   * @param {(string|Array)=} propertyNames A property name or array of property\n\t   *     names to watch. If this parameter is `undefined`, all of the object's\n\t   *     current (enumerable) properties will be watched.\n\t   * @returns {Sequence} A sequence comprising `{ property, value }` objects\n\t   *     describing each change to the specified property/properties.\n\t   *\n\t   * @examples\n\t   * var obj = {},\n\t   *     changes = [];\n\t   *\n\t   * Lazy(obj).watch('foo').each(function(change) {\n\t   *   changes.push(change);\n\t   * });\n\t   *\n\t   * obj.foo = 1;\n\t   * obj.bar = 2;\n\t   * obj.foo = 3;\n\t   *\n\t   * obj.foo; // => 3\n\t   * changes; // => [{ property: 'foo', value: 1 }, { property: 'foo', value: 3 }]\n\t   */\n\t  ObjectLikeSequence.prototype.watch = function watch(propertyNames) {\n\t    throw new Error('You can only call #watch on a directly wrapped object.');\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ObjectWrapper(source) {\n\t    this.source = source;\n\t  }\n\t\n\t  ObjectWrapper.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  ObjectWrapper.prototype.root = function root() {\n\t    return this;\n\t  };\n\t\n\t  ObjectWrapper.prototype.isAsync = function isAsync() {\n\t    return false;\n\t  };\n\t\n\t  ObjectWrapper.prototype.get = function get(key) {\n\t    return this.source[key];\n\t  };\n\t\n\t  ObjectWrapper.prototype.each = function each(fn) {\n\t    var source = this.source,\n\t        keys = source ? Object.keys(source) : [],\n\t        length = keys.length,\n\t        key,\n\t        index;\n\t\n\t    for (index = 0; index < length; ++index) {\n\t      key = keys[index];\n\t\n\t      if (fn(source[key], key) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * A `StringLikeSequence` represents a sequence of characters.\n\t   *\n\t   * The initial sequence you get by wrapping a string with `Lazy(string)` is a\n\t   * `StringLikeSequence`.\n\t   *\n\t   * All methods of `StringLikeSequence` that conceptually should return\n\t   * something like a string return another `StringLikeSequence`.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   *\n\t   * @examples\n\t   * function upcase(str) { return str.toUpperCase(); }\n\t   *\n\t   * Lazy('foo')               // instanceof Lazy.StringLikeSequence\n\t   * Lazy('foo').toUpperCase() // instanceof Lazy.StringLikeSequence\n\t   * Lazy('foo').reverse()     // instanceof Lazy.StringLikeSequence\n\t   * Lazy('foo').take(2)       // instanceof Lazy.StringLikeSequence\n\t   * Lazy('foo').drop(1)       // instanceof Lazy.StringLikeSequence\n\t   * Lazy('foo').substring(1)  // instanceof Lazy.StringLikeSequence\n\t   *\n\t   * // Note that `map` does not create a `StringLikeSequence` because there's\n\t   * // no guarantee the mapping function will return characters. In the event\n\t   * // you do want to map a string onto a string-like sequence, use\n\t   * // `mapString`:\n\t   * Lazy('foo').map(Lazy.identity)       // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy('foo').mapString(Lazy.identity) // instanceof Lazy.StringLikeSequence\n\t   */\n\t  function StringLikeSequence() {}\n\t\n\t  StringLikeSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  /**\n\t   * Create a new constructor function for a type inheriting from\n\t   * `StringLikeSequence`.\n\t   *\n\t   * @public\n\t   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n\t   *     used for constructing the new sequence. The method will be attached to\n\t   *     the `StringLikeSequence` prototype so that it can be chained with any other\n\t   *     methods that return string-like sequences.\n\t   * @param {Object} overrides An object containing function overrides for this\n\t   *     new sequence type. Has the same requirements as\n\t   *     {@link ArrayLikeSequence.define}.\n\t   * @returns {Function} A constructor for a new type inheriting from\n\t   *     `StringLikeSequence`.\n\t   *\n\t   * @examples\n\t   * Lazy.StringLikeSequence.define(\"zomg\", {\n\t   *   length: function() {\n\t   *     return this.parent.length() + \"!!ZOMG!!!1\".length;\n\t   *   },\n\t   *\n\t   *   get: function(i) {\n\t   *     if (i < this.parent.length()) {\n\t   *       return this.parent.get(i);\n\t   *     }\n\t   *     return \"!!ZOMG!!!1\".charAt(i - this.parent.length());\n\t   *   }\n\t   * });\n\t   *\n\t   * Lazy('foo').zomg() // sequence: \"foo!!ZOMG!!!1\"\n\t   */\n\t  StringLikeSequence.define = function define(methodName, overrides) {\n\t    if (!overrides || typeof overrides.get !== 'function') {\n\t      throw new Error(\"A custom string-like sequence must implement *at least* get!\");\n\t    }\n\t\n\t    return defineSequenceType(StringLikeSequence, methodName, overrides);\n\t  };\n\t\n\t  StringLikeSequence.prototype.value = function value() {\n\t    return this.toString();\n\t  };\n\t\n\t  /**\n\t   * Returns an {@link IndexedIterator} that will step over each character in this\n\t   * sequence one by one.\n\t   *\n\t   * @returns {IndexedIterator} The iterator.\n\t   */\n\t  StringLikeSequence.prototype.getIterator = function getIterator() {\n\t    return new CharIterator(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function CharIterator(source) {\n\t    this.source = Lazy(source);\n\t    this.index = -1;\n\t  }\n\t\n\t  CharIterator.prototype.current = function current() {\n\t    return this.source.charAt(this.index);\n\t  };\n\t\n\t  CharIterator.prototype.moveNext = function moveNext() {\n\t    return (++this.index < this.source.length());\n\t  };\n\t\n\t  /**\n\t   * Returns the character at the given index of this sequence, or the empty\n\t   * string if the specified index lies outside the bounds of the sequence.\n\t   *\n\t   * @public\n\t   * @param {number} i The index of this sequence.\n\t   * @returns {string} The character at the specified index.\n\t   *\n\t   * @examples\n\t   * Lazy(\"foo\").charAt(0)  // => \"f\"\n\t   * Lazy(\"foo\").charAt(-1) // => \"\"\n\t   * Lazy(\"foo\").charAt(10) // => \"\"\n\t   */\n\t  StringLikeSequence.prototype.charAt = function charAt(i) {\n\t    return this.get(i);\n\t  };\n\t\n\t  /**\n\t   * Returns the character code at the given index of this sequence, or `NaN` if\n\t   * the index lies outside the bounds of the sequence.\n\t   *\n\t   * @public\n\t   * @param {number} i The index of the character whose character code you want.\n\t   * @returns {number} The character code.\n\t   *\n\t   * @examples\n\t   * Lazy(\"abc\").charCodeAt(0)  // => 97\n\t   * Lazy(\"abc\").charCodeAt(-1) // => NaN\n\t   * Lazy(\"abc\").charCodeAt(10) // => NaN\n\t   */\n\t  StringLikeSequence.prototype.charCodeAt = function charCodeAt(i) {\n\t    var char = this.charAt(i);\n\t    if (!char) { return NaN; }\n\t\n\t    return char.charCodeAt(0);\n\t  };\n\t\n\t  /**\n\t   * Returns a {@link StringLikeSequence} comprising the characters from *this*\n\t   * sequence starting at `start` and ending at `stop` (exclusive), or---if\n\t   * `stop` is `undefined`, including the rest of the sequence.\n\t   *\n\t   * @public\n\t   * @param {number} start The index where this sequence should begin.\n\t   * @param {number=} stop The index (exclusive) where this sequence should end.\n\t   * @returns {StringLikeSequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy(\"foo\").substring(1)      // sequence: \"oo\"\n\t   * Lazy(\"foo\").substring(-1)     // sequence: \"foo\"\n\t   * Lazy(\"hello\").substring(1, 3) // sequence: \"el\"\n\t   * Lazy(\"hello\").substring(1, 9) // sequence: \"ello\"\n\t   * Lazy(\"foo\").substring(0, 0)   // sequence: \"\"\n\t   * Lazy(\"foo\").substring(3, 3)   // sequence: \"\"\n\t   */\n\t  StringLikeSequence.prototype.substring = function substring(start, stop) {\n\t    return new StringSegment(this, start, stop);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function StringSegment(parent, start, stop) {\n\t    this.parent = parent;\n\t    this.start  = Math.max(0, start);\n\t    this.stop   = stop;\n\t  }\n\t\n\t  StringSegment.prototype = Object.create(StringLikeSequence.prototype);\n\t\n\t  StringSegment.prototype.get = function get(i) {\n\t    return this.parent.get(i + this.start);\n\t  };\n\t\n\t  StringSegment.prototype.length = function length() {\n\t    return (typeof this.stop === \"number\" ? this.stop : this.parent.length()) - this.start;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#first} that returns another\n\t   * {@link StringLikeSequence} (or just the first character, if `count` is\n\t   * undefined).\n\t   *\n\t   * @public\n\t   * @examples\n\t   * Lazy('foo').first()                // => 'f'\n\t   * Lazy('fo').first(2)                // sequence: 'fo'\n\t   * Lazy('foo').first(10)              // sequence: 'foo'\n\t   * Lazy('foo').toUpperCase().first()  // => 'F'\n\t   * Lazy('foo').toUpperCase().first(2) // sequence: 'FO'\n\t   */\n\t  StringLikeSequence.prototype.first = function first(count) {\n\t    if (typeof count === \"undefined\") {\n\t      return this.charAt(0);\n\t    }\n\t\n\t    return this.substring(0, count);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#last} that returns another\n\t   * {@link StringLikeSequence} (or just the last character, if `count` is\n\t   * undefined).\n\t   *\n\t   * @public\n\t   * @examples\n\t   * Lazy('foo').last()                // => 'o'\n\t   * Lazy('foo').last(2)               // sequence: 'oo'\n\t   * Lazy('foo').last(10)              // sequence: 'foo'\n\t   * Lazy('foo').toUpperCase().last()  // => 'O'\n\t   * Lazy('foo').toUpperCase().last(2) // sequence: 'OO'\n\t   */\n\t  StringLikeSequence.prototype.last = function last(count) {\n\t    if (typeof count === \"undefined\") {\n\t      return this.charAt(this.length() - 1);\n\t    }\n\t\n\t    return this.substring(this.length() - count);\n\t  };\n\t\n\t  StringLikeSequence.prototype.drop = function drop(count) {\n\t    return this.substring(count);\n\t  };\n\t\n\t  /**\n\t   * Finds the index of the first occurrence of the given substring within this\n\t   * sequence, starting from the specified index (or the beginning of the\n\t   * sequence).\n\t   *\n\t   * @public\n\t   * @param {string} substring The substring to search for.\n\t   * @param {number=} startIndex The index from which to start the search.\n\t   * @returns {number} The first index where the given substring is found, or\n\t   *     -1 if it isn't in the sequence.\n\t   *\n\t   * @examples\n\t   * Lazy('canal').indexOf('a')    // => 1\n\t   * Lazy('canal').indexOf('a', 2) // => 3\n\t   * Lazy('canal').indexOf('ana')  // => 1\n\t   * Lazy('canal').indexOf('andy') // => -1\n\t   * Lazy('canal').indexOf('x')    // => -1\n\t   */\n\t  StringLikeSequence.prototype.indexOf = function indexOf(substring, startIndex) {\n\t    return this.toString().indexOf(substring, startIndex);\n\t  };\n\t\n\t  /**\n\t   * Finds the index of the last occurrence of the given substring within this\n\t   * sequence, starting from the specified index (or the end of the sequence)\n\t   * and working backwards.\n\t   *\n\t   * @public\n\t   * @param {string} substring The substring to search for.\n\t   * @param {number=} startIndex The index from which to start the search.\n\t   * @returns {number} The last index where the given substring is found, or\n\t   *     -1 if it isn't in the sequence.\n\t   *\n\t   * @examples\n\t   * Lazy('canal').lastIndexOf('a')    // => 3\n\t   * Lazy('canal').lastIndexOf('a', 2) // => 1\n\t   * Lazy('canal').lastIndexOf('ana')  // => 1\n\t   * Lazy('canal').lastIndexOf('andy') // => -1\n\t   * Lazy('canal').lastIndexOf('x')    // => -1\n\t   */\n\t  StringLikeSequence.prototype.lastIndexOf = function lastIndexOf(substring, startIndex) {\n\t    return this.toString().lastIndexOf(substring, startIndex);\n\t  };\n\t\n\t  /**\n\t   * Checks if this sequence contains a given substring.\n\t   *\n\t   * @public\n\t   * @param {string} substring The substring to check for.\n\t   * @returns {boolean} Whether or not this sequence contains `substring`.\n\t   *\n\t   * @examples\n\t   * Lazy('hello').contains('ell') // => true\n\t   * Lazy('hello').contains('')    // => true\n\t   * Lazy('hello').contains('abc') // => false\n\t   */\n\t  StringLikeSequence.prototype.contains = function contains(substring) {\n\t    return this.indexOf(substring) !== -1;\n\t  };\n\t\n\t  /**\n\t   * Checks if this sequence ends with a given suffix.\n\t   *\n\t   * @public\n\t   * @param {string} suffix The suffix to check for.\n\t   * @returns {boolean} Whether or not this sequence ends with `suffix`.\n\t   *\n\t   * @examples\n\t   * Lazy('foo').endsWith('oo')  // => true\n\t   * Lazy('foo').endsWith('')    // => true\n\t   * Lazy('foo').endsWith('abc') // => false\n\t   */\n\t  StringLikeSequence.prototype.endsWith = function endsWith(suffix) {\n\t    return this.substring(this.length() - suffix.length).toString() === suffix;\n\t  };\n\t\n\t  /**\n\t   * Checks if this sequence starts with a given prefix.\n\t   *\n\t   * @public\n\t   * @param {string} prefix The prefix to check for.\n\t   * @returns {boolean} Whether or not this sequence starts with `prefix`.\n\t   *\n\t   * @examples\n\t   * Lazy('foo').startsWith('fo')  // => true\n\t   * Lazy('foo').startsWith('')    // => true\n\t   * Lazy('foo').startsWith('abc') // => false\n\t   */\n\t  StringLikeSequence.prototype.startsWith = function startsWith(prefix) {\n\t    return this.substring(0, prefix.length).toString() === prefix;\n\t  };\n\t\n\t  /**\n\t   * Converts all of the characters in this string to uppercase.\n\t   *\n\t   * @public\n\t   * @returns {StringLikeSequence} A new sequence with the same characters as\n\t   *     this sequence, all uppercase.\n\t   *\n\t   * @examples\n\t   * function nextLetter(a) {\n\t   *   return String.fromCharCode(a.charCodeAt(0) + 1);\n\t   * }\n\t   *\n\t   * Lazy('foo').toUpperCase()                       // sequence: 'FOO'\n\t   * Lazy('foo').substring(1).toUpperCase()          // sequence: 'OO'\n\t   * Lazy('abc').mapString(nextLetter).toUpperCase() // sequence: 'BCD'\n\t   */\n\t  StringLikeSequence.prototype.toUpperCase = function toUpperCase() {\n\t    return this.mapString(function(char) { return char.toUpperCase(); });\n\t  };\n\t\n\t  /**\n\t   * Converts all of the characters in this string to lowercase.\n\t   *\n\t   * @public\n\t   * @returns {StringLikeSequence} A new sequence with the same characters as\n\t   *     this sequence, all lowercase.\n\t   *\n\t   * @examples\n\t   * function nextLetter(a) {\n\t   *   return String.fromCharCode(a.charCodeAt(0) + 1);\n\t   * }\n\t   *\n\t   * Lazy('FOO').toLowerCase()                       // sequence: 'foo'\n\t   * Lazy('FOO').substring(1).toLowerCase()          // sequence: 'oo'\n\t   * Lazy('ABC').mapString(nextLetter).toLowerCase() // sequence: 'bcd'\n\t   */\n\t  StringLikeSequence.prototype.toLowerCase = function toLowerCase() {\n\t    return this.mapString(function(char) { return char.toLowerCase(); });\n\t  };\n\t\n\t  /**\n\t   * Maps the characters of this sequence onto a new {@link StringLikeSequence}.\n\t   *\n\t   * @public\n\t   * @param {Function} mapFn The function used to map characters from this\n\t   *     sequence onto the new sequence.\n\t   * @returns {StringLikeSequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function upcase(char) { return char.toUpperCase(); }\n\t   *\n\t   * Lazy(\"foo\").mapString(upcase)               // sequence: \"FOO\"\n\t   * Lazy(\"foo\").mapString(upcase).charAt(0)     // => \"F\"\n\t   * Lazy(\"foo\").mapString(upcase).charCodeAt(0) // => 70\n\t   * Lazy(\"foo\").mapString(upcase).substring(1)  // sequence: \"OO\"\n\t   */\n\t  StringLikeSequence.prototype.mapString = function mapString(mapFn) {\n\t    return new MappedStringLikeSequence(this, mapFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MappedStringLikeSequence(parent, mapFn) {\n\t    this.parent = parent;\n\t    this.mapFn  = mapFn;\n\t  }\n\t\n\t  MappedStringLikeSequence.prototype = Object.create(StringLikeSequence.prototype);\n\t  MappedStringLikeSequence.prototype.get = IndexedMappedSequence.prototype.get;\n\t  MappedStringLikeSequence.prototype.length = IndexedMappedSequence.prototype.length;\n\t\n\t  /**\n\t   * Returns a copy of this sequence that reads back to front.\n\t   *\n\t   * @public\n\t   *\n\t   * @examples\n\t   * Lazy(\"abcdefg\").reverse() // sequence: \"gfedcba\"\n\t   */\n\t  StringLikeSequence.prototype.reverse = function reverse() {\n\t    return new ReversedStringLikeSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ReversedStringLikeSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  ReversedStringLikeSequence.prototype = Object.create(StringLikeSequence.prototype);\n\t  ReversedStringLikeSequence.prototype.get = IndexedReversedSequence.prototype.get;\n\t  ReversedStringLikeSequence.prototype.length = IndexedReversedSequence.prototype.length;\n\t\n\t  StringLikeSequence.prototype.toString = function toString() {\n\t    return this.join(\"\");\n\t  };\n\t\n\t  /**\n\t   * Creates a {@link Sequence} comprising all of the matches for the specified\n\t   * pattern in the underlying string.\n\t   *\n\t   * @public\n\t   * @param {RegExp} pattern The pattern to match.\n\t   * @returns {Sequence} A sequence of all the matches.\n\t   *\n\t   * @examples\n\t   * Lazy(\"abracadabra\").match(/a[bcd]/) // sequence: [\"ab\", \"ac\", \"ad\", \"ab\"]\n\t   * Lazy(\"fee fi fo fum\").match(/\\w+/)  // sequence: [\"fee\", \"fi\", \"fo\", \"fum\"]\n\t   * Lazy(\"hello\").match(/xyz/)          // sequence: []\n\t   */\n\t  StringLikeSequence.prototype.match = function match(pattern) {\n\t    return new StringMatchSequence(this, pattern);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function StringMatchSequence(parent, pattern) {\n\t    this.parent = parent;\n\t    this.pattern = pattern;\n\t  }\n\t\n\t  StringMatchSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  StringMatchSequence.prototype.getIterator = function getIterator() {\n\t    return new StringMatchIterator(this.parent.toString(), this.pattern);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function StringMatchIterator(source, pattern) {\n\t    this.source  = source;\n\t    this.pattern = cloneRegex(pattern);\n\t  }\n\t\n\t  StringMatchIterator.prototype.current = function current() {\n\t    return this.match[0];\n\t  };\n\t\n\t  StringMatchIterator.prototype.moveNext = function moveNext() {\n\t    return !!(this.match = this.pattern.exec(this.source));\n\t  };\n\t\n\t  /**\n\t   * Creates a {@link Sequence} comprising all of the substrings of this string\n\t   * separated by the given delimiter, which can be either a string or a regular\n\t   * expression.\n\t   *\n\t   * @public\n\t   * @param {string|RegExp} delimiter The delimiter to use for recognizing\n\t   *     substrings.\n\t   * @returns {Sequence} A sequence of all the substrings separated by the given\n\t   *     delimiter.\n\t   *\n\t   * @examples\n\t   * Lazy(\"foo\").split(\"\")                      // sequence: [\"f\", \"o\", \"o\"]\n\t   * Lazy(\"yo dawg\").split(\" \")                 // sequence: [\"yo\", \"dawg\"]\n\t   * Lazy(\"bah bah\\tblack  sheep\").split(/\\s+/) // sequence: [\"bah\", \"bah\", \"black\", \"sheep\"]\n\t   */\n\t  StringLikeSequence.prototype.split = function split(delimiter) {\n\t    return new SplitStringSequence(this, delimiter);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SplitStringSequence(parent, pattern) {\n\t    this.parent = parent;\n\t    this.pattern = pattern;\n\t  }\n\t\n\t  SplitStringSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  SplitStringSequence.prototype.getIterator = function getIterator() {\n\t    var source = this.parent.toString();\n\t\n\t    if (this.pattern instanceof RegExp) {\n\t      if (this.pattern.source === \"\" || this.pattern.source === \"(?:)\") {\n\t        return new CharIterator(source);\n\t      } else {\n\t        return new SplitWithRegExpIterator(source, this.pattern);\n\t      }\n\t    } else if (this.pattern === \"\") {\n\t      return new CharIterator(source);\n\t    } else {\n\t      return new SplitWithStringIterator(source, this.pattern);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SplitWithRegExpIterator(source, pattern) {\n\t    this.source  = source;\n\t    this.pattern = cloneRegex(pattern);\n\t  }\n\t\n\t  SplitWithRegExpIterator.prototype.current = function current() {\n\t    return this.source.substring(this.start, this.end);\n\t  };\n\t\n\t  SplitWithRegExpIterator.prototype.moveNext = function moveNext() {\n\t    if (!this.pattern) {\n\t      return false;\n\t    }\n\t\n\t    var match = this.pattern.exec(this.source);\n\t\n\t    if (match) {\n\t      this.start = this.nextStart ? this.nextStart : 0;\n\t      this.end = match.index;\n\t      this.nextStart = match.index + match[0].length;\n\t      return true;\n\t\n\t    } else if (this.pattern) {\n\t      this.start = this.nextStart;\n\t      this.end = undefined;\n\t      this.nextStart = undefined;\n\t      this.pattern = undefined;\n\t      return true;\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SplitWithStringIterator(source, delimiter) {\n\t    this.source = source;\n\t    this.delimiter = delimiter;\n\t  }\n\t\n\t  SplitWithStringIterator.prototype.current = function current() {\n\t    return this.source.substring(this.leftIndex, this.rightIndex);\n\t  };\n\t\n\t  SplitWithStringIterator.prototype.moveNext = function moveNext() {\n\t    if (!this.finished) {\n\t      this.leftIndex = typeof this.leftIndex !== \"undefined\" ?\n\t        this.rightIndex + this.delimiter.length :\n\t        0;\n\t      this.rightIndex = this.source.indexOf(this.delimiter, this.leftIndex);\n\t    }\n\t\n\t    if (this.rightIndex === -1) {\n\t      this.finished = true;\n\t      this.rightIndex = undefined;\n\t      return true;\n\t    }\n\t\n\t    return !this.finished;\n\t  };\n\t\n\t  /**\n\t   * Wraps a string exposing {@link #match} and {@link #split} methods that return\n\t   * {@link Sequence} objects instead of arrays, improving on the efficiency of\n\t   * JavaScript's built-in `String#split` and `String.match` methods and\n\t   * supporting asynchronous iteration.\n\t   *\n\t   * @param {string} source The string to wrap.\n\t   * @constructor\n\t   */\n\t  function StringWrapper(source) {\n\t    this.source = source;\n\t  }\n\t\n\t  StringWrapper.prototype = Object.create(StringLikeSequence.prototype);\n\t\n\t  StringWrapper.prototype.root = function root() {\n\t    return this;\n\t  };\n\t\n\t  StringWrapper.prototype.isAsync = function isAsync() {\n\t    return false;\n\t  };\n\t\n\t  StringWrapper.prototype.get = function get(i) {\n\t    return this.source.charAt(i);\n\t  };\n\t\n\t  StringWrapper.prototype.length = function length() {\n\t    return this.source.length;\n\t  };\n\t\n\t  StringWrapper.prototype.toString = function toString() {\n\t    return this.source;\n\t  };\n\t\n\t  /**\n\t   * A `GeneratedSequence` does not wrap an in-memory collection but rather\n\t   * determines its elements on-the-fly during iteration according to a generator\n\t   * function.\n\t   *\n\t   * You create a `GeneratedSequence` by calling {@link Lazy.generate}.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   * @param {function(number):*} generatorFn A function which accepts an index\n\t   *     and returns a value for the element at that position in the sequence.\n\t   * @param {number=} length The length of the sequence. If this argument is\n\t   *     omitted, the sequence will go on forever.\n\t   */\n\t  function GeneratedSequence(generatorFn, length) {\n\t    this.get = generatorFn;\n\t    this.fixedLength = length;\n\t  }\n\t\n\t  GeneratedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  GeneratedSequence.prototype.isAsync = function isAsync() {\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Returns the length of this sequence.\n\t   *\n\t   * @public\n\t   * @returns {number} The length, or `undefined` if this is an indefinite\n\t   *     sequence.\n\t   */\n\t  GeneratedSequence.prototype.length = function length() {\n\t    return this.fixedLength;\n\t  };\n\t\n\t  /**\n\t   * Iterates over the sequence produced by invoking this sequence's generator\n\t   * function up to its specified length, or, if length is `undefined`,\n\t   * indefinitely (in which case the sequence will go on forever--you would need\n\t   * to call, e.g., {@link Sequence#take} to limit iteration).\n\t   *\n\t   * @public\n\t   * @param {Function} fn The function to call on each output from the generator\n\t   *     function.\n\t   */\n\t  GeneratedSequence.prototype.each = function each(fn) {\n\t    var generatorFn = this.get,\n\t        length = this.fixedLength,\n\t        i = 0;\n\t\n\t    while (typeof length === \"undefined\" || i < length) {\n\t      if (fn(generatorFn(i), i++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  GeneratedSequence.prototype.getIterator = function getIterator() {\n\t    return new GeneratedIterator(this);\n\t  };\n\t\n\t  /**\n\t   * Iterates over a generated sequence. (This allows generated sequences to be\n\t   * iterated asynchronously.)\n\t   *\n\t   * @param {GeneratedSequence} sequence The generated sequence to iterate over.\n\t   * @constructor\n\t   */\n\t  function GeneratedIterator(sequence) {\n\t    this.sequence     = sequence;\n\t    this.index        = 0;\n\t    this.currentValue = null;\n\t  }\n\t\n\t  GeneratedIterator.prototype.current = function current() {\n\t    return this.currentValue;\n\t  };\n\t\n\t  GeneratedIterator.prototype.moveNext = function moveNext() {\n\t    var sequence = this.sequence;\n\t\n\t    if (typeof sequence.fixedLength === \"number\" && this.index >= sequence.fixedLength) {\n\t      return false;\n\t    }\n\t\n\t    this.currentValue = sequence.get(this.index++);\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * An `AsyncSequence` iterates over its elements asynchronously when\n\t   * {@link #each} is called.\n\t   *\n\t   * You get an `AsyncSequence` by calling {@link Sequence#async} on any\n\t   * sequence. Note that some sequence types may not support asynchronous\n\t   * iteration.\n\t   *\n\t   * Returning values\n\t   * ----------------\n\t   *\n\t   * Because of its asynchronous nature, an `AsyncSequence` cannot be used in the\n\t   * same way as other sequences for functions that return values directly (e.g.,\n\t   * `reduce`, `max`, `any`, even `toArray`).\n\t   *\n\t   * Instead, these methods return an `AsyncHandle` whose `onComplete` method\n\t   * accepts a callback that will be called with the final result once iteration\n\t   * has finished.\n\t   *\n\t   * Defining custom asynchronous sequences\n\t   * --------------------------------------\n\t   *\n\t   * There are plenty of ways to define an asynchronous sequence. Here's one.\n\t   *\n\t   * 1. First, implement an {@link Iterator}. This is an object whose prototype\n\t   *    has the methods {@link Iterator#moveNext} (which returns a `boolean`) and\n\t   *    {@link current} (which returns the current value).\n\t   * 2. Next, create a simple wrapper that inherits from `AsyncSequence`, whose\n\t   *    `getIterator` function returns an instance of the iterator type you just\n\t   *    defined.\n\t   *\n\t   * The default implementation for {@link #each} on an `AsyncSequence` is to\n\t   * create an iterator and then asynchronously call {@link Iterator#moveNext}\n\t   * (using `setImmediate`, if available, otherwise `setTimeout`) until the iterator\n\t   * can't move ahead any more.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   * @param {Sequence} parent A {@link Sequence} to wrap, to expose asynchronous\n\t   *     iteration.\n\t   * @param {number=} interval How many milliseconds should elapse between each\n\t   *     element when iterating over this sequence. Note that this interval\n\t   *     applies even to the first value in the sequence; i.e., when calling\n\t   *     each(), this much time will elapse before the first element is\n\t   *     iterated.\n\t   *\n\t   *     If this argument is omitted, asynchronous iteration will be executed\n\t   *     as fast as possible.\n\t   */\n\t  function AsyncSequence(parent, interval) {\n\t    if (parent instanceof AsyncSequence) {\n\t      throw new Error(\"Sequence is already asynchronous!\");\n\t    }\n\t\n\t    this.parent         = parent;\n\t    this.interval       = interval;\n\t    this.onNextCallback = getOnNextCallback(interval);\n\t    this.cancelCallback = getCancelCallback(interval);\n\t  }\n\t\n\t  AsyncSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  AsyncSequence.prototype.isAsync = function isAsync() {\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Throws an exception. You cannot manually iterate over an asynchronous\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @example\n\t   * Lazy([1, 2, 3]).async().getIterator() // throws\n\t   */\n\t  AsyncSequence.prototype.getIterator = function getIterator() {\n\t    throw new Error('An AsyncSequence does not support synchronous iteration.');\n\t  };\n\t\n\t  /**\n\t   * An asynchronous version of {@link Sequence#each}.\n\t   *\n\t   * @public\n\t   * @param {Function} fn The function to invoke asynchronously on each element in\n\t   *     the sequence one by one.\n\t   * @returns {AsyncHandle} An {@link AsyncHandle} providing the ability to\n\t   *     cancel the asynchronous iteration (by calling `cancel()`) as well as\n\t   *     supply callback(s) for when an error is encountered (`onError`) or when\n\t   *     iteration is complete (`onComplete`).\n\t   */\n\t  AsyncSequence.prototype.each = function each(fn) {\n\t    var iterator = this.parent.getIterator(),\n\t        onNextCallback = this.onNextCallback,\n\t        cancelCallback = this.cancelCallback,\n\t        i = 0;\n\t\n\t    var handle = new AsyncHandle(function cancel() {\n\t      if (cancellationId) {\n\t        cancelCallback(cancellationId);\n\t      }\n\t    });\n\t\n\t    var cancellationId = onNextCallback(function iterate() {\n\t      cancellationId = null;\n\t\n\t      try {\n\t        if (iterator.moveNext() && fn(iterator.current(), i++) !== false) {\n\t          cancellationId = onNextCallback(iterate);\n\t\n\t        } else {\n\t          handle._resolve();\n\t        }\n\t\n\t      } catch (e) {\n\t        handle._reject(e);\n\t      }\n\t    });\n\t\n\t    return handle;\n\t  };\n\t\n\t  /**\n\t   * An `AsyncHandle` provides a [Promises/A+](http://promises-aplus.github.io/promises-spec/)\n\t   * compliant interface for an {@link AsyncSequence} that is currently (or was)\n\t   * iterating over its elements.\n\t   *\n\t   * In addition to behaving as a promise, an `AsyncHandle` provides the ability\n\t   * to {@link AsyncHandle#cancel} iteration (if `cancelFn` is provided)\n\t   * and also offers convenient {@link AsyncHandle#onComplete} and\n\t   * {@link AsyncHandle#onError} methods to attach listeners for when iteration\n\t   * is complete or an error is thrown during iteration.\n\t   *\n\t   * @public\n\t   * @param {Function} cancelFn A function to cancel asynchronous iteration.\n\t   *     This is passed in to support different cancellation mechanisms for\n\t   *     different forms of asynchronous sequences (e.g., timeout-based\n\t   *     sequences, sequences based on I/O, etc.).\n\t   * @constructor\n\t   *\n\t   * @example\n\t   * // Create a sequence of 100,000 random numbers, in chunks of 100.\n\t   * var sequence = Lazy.generate(Math.random)\n\t   *   .chunk(100)\n\t   *   .async()\n\t   *   .take(1000);\n\t   *\n\t   * // Reduce-style operations -- i.e., operations that return a *value* (as\n\t   * // opposed to a *sequence*) -- return an AsyncHandle for async sequences.\n\t   * var handle = sequence.toArray();\n\t   *\n\t   * handle.onComplete(function(array) {\n\t   *   // Do something w/ 1,000-element array.\n\t   * });\n\t   *\n\t   * // Since an AsyncHandle is a promise, you can also use it to create\n\t   * // subsequent promises using `then` (see the Promises/A+ spec for more\n\t   * // info).\n\t   * var flattened = handle.then(function(array) {\n\t   *   return Lazy(array).flatten();\n\t   * });\n\t   */\n\t  function AsyncHandle(cancelFn) {\n\t    this.resolveListeners = [];\n\t    this.rejectListeners = [];\n\t    this.state = PENDING;\n\t    this.cancelFn = cancelFn;\n\t  }\n\t\n\t  // Async handle states\n\t  var PENDING  = 1,\n\t      RESOLVED = 2,\n\t      REJECTED = 3;\n\t\n\t  AsyncHandle.prototype.then = function then(onFulfilled, onRejected) {\n\t    var promise = new AsyncHandle(this.cancelFn);\n\t\n\t    this.resolveListeners.push(function(value) {\n\t      try {\n\t        if (typeof onFulfilled !== 'function') {\n\t          resolve(promise, value);\n\t          return;\n\t        }\n\t\n\t        resolve(promise, onFulfilled(value));\n\t\n\t      } catch (e) {\n\t        promise._reject(e);\n\t      }\n\t    });\n\t\n\t    this.rejectListeners.push(function(reason) {\n\t      try {\n\t        if (typeof onRejected !== 'function') {\n\t          promise._reject(reason);\n\t          return;\n\t        }\n\t\n\t        resolve(promise, onRejected(reason));\n\t\n\t      } catch (e) {\n\t        promise._reject(e);\n\t      }\n\t    });\n\t\n\t    if (this.state === RESOLVED) {\n\t      this._resolve(this.value);\n\t    }\n\t\n\t    if (this.state === REJECTED) {\n\t      this._reject(this.reason);\n\t    }\n\t\n\t    return promise;\n\t  };\n\t\n\t  AsyncHandle.prototype._resolve = function _resolve(value) {\n\t    if (this.state === REJECTED) {\n\t      return;\n\t    }\n\t\n\t    if (this.state === PENDING) {\n\t      this.state = RESOLVED;\n\t      this.value = value;\n\t    }\n\t\n\t    consumeListeners(this.resolveListeners, this.value);\n\t  };\n\t\n\t  AsyncHandle.prototype._reject = function _reject(reason) {\n\t    if (this.state === RESOLVED) {\n\t      return;\n\t    }\n\t\n\t    if (this.state === PENDING) {\n\t      this.state = REJECTED;\n\t      this.reason = reason;\n\t    }\n\t\n\t    consumeListeners(this.rejectListeners, this.reason);\n\t  };\n\t\n\t  /**\n\t   * Cancels asynchronous iteration.\n\t   *\n\t   * @public\n\t   */\n\t  AsyncHandle.prototype.cancel = function cancel() {\n\t    if (this.cancelFn) {\n\t      this.cancelFn();\n\t      this.cancelFn = null;\n\t      this._resolve(false);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Updates the handle with a callback to execute when iteration is completed.\n\t   *\n\t   * @public\n\t   * @param {Function} callback The function to call when the asynchronous\n\t   *     iteration is completed.\n\t   * @return {AsyncHandle} A reference to the handle (for chaining).\n\t   */\n\t  AsyncHandle.prototype.onComplete = function onComplete(callback) {\n\t    this.resolveListeners.push(callback);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Updates the handle with a callback to execute if/when any error is\n\t   * encountered during asynchronous iteration.\n\t   *\n\t   * @public\n\t   * @param {Function} callback The function to call, with any associated error\n\t   *     object, when an error occurs.\n\t   * @return {AsyncHandle} A reference to the handle (for chaining).\n\t   */\n\t  AsyncHandle.prototype.onError = function onError(callback) {\n\t    this.rejectListeners.push(callback);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Promise resolution procedure:\n\t   * http://promises-aplus.github.io/promises-spec/#the_promise_resolution_procedure\n\t   */\n\t  function resolve(promise, x) {\n\t    if (promise === x) {\n\t      promise._reject(new TypeError('Cannot resolve a promise to itself'));\n\t      return;\n\t    }\n\t\n\t    if (x instanceof AsyncHandle) {\n\t      x.then(\n\t        function(value) { resolve(promise, value); },\n\t        function(reason) { promise._reject(reason); }\n\t      );\n\t      return;\n\t    }\n\t\n\t    var then;\n\t    try {\n\t      then = (/function|object/).test(typeof x) && x != null && x.then;\n\t    } catch (e) {\n\t      promise._reject(e);\n\t      return;\n\t    }\n\t\n\t    var thenableState = PENDING;\n\t    if (typeof then === 'function') {\n\t      try {\n\t        then.call(\n\t          x,\n\t          function resolvePromise(value) {\n\t            if (thenableState !== PENDING) {\n\t              return;\n\t            }\n\t            thenableState = RESOLVED;\n\t            resolve(promise, value);\n\t          },\n\t          function rejectPromise(reason) {\n\t            if (thenableState !== PENDING) {\n\t              return;\n\t            }\n\t            thenableState = REJECTED;\n\t            promise._reject(reason);\n\t          }\n\t        );\n\t      } catch (e) {\n\t        if (thenableState !== PENDING) {\n\t          return;\n\t        }\n\t\n\t        promise._reject(e);\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    promise._resolve(x);\n\t  }\n\t\n\t  function consumeListeners(listeners, value, callback) {\n\t    callback || (callback = getOnNextCallback());\n\t\n\t    callback(function() {\n\t      if (listeners.length > 0) {\n\t        listeners.shift()(value);\n\t        consumeListeners(listeners, value, callback);\n\t      }\n\t    });\n\t  }\n\t\n\t  function getOnNextCallback(interval) {\n\t    if (typeof interval === \"undefined\") {\n\t      if (typeof setImmediate === \"function\") {\n\t        return setImmediate;\n\t      }\n\t    }\n\t\n\t    interval = interval || 0;\n\t    return function(fn) {\n\t      return setTimeout(fn, interval);\n\t    };\n\t  }\n\t\n\t  function getCancelCallback(interval) {\n\t    if (typeof interval === \"undefined\") {\n\t      if (typeof clearImmediate === \"function\") {\n\t        return clearImmediate;\n\t      }\n\t    }\n\t\n\t    return clearTimeout;\n\t  }\n\t\n\t  /**\n\t   * Transform a value, whether the value is retrieved asynchronously or directly.\n\t   *\n\t   * @private\n\t   * @param {Function} fn The function that transforms the value.\n\t   * @param {*} value The value to be transformed. This can be an {@link AsyncHandle} when the value\n\t   *     is retrieved asynchronously, otherwise it can be anything.\n\t   * @returns {*} An {@link AsyncHandle} when `value` is also an {@link AsyncHandle}, otherwise\n\t   *     whatever `fn` resulted in.\n\t   */\n\t  function transform(fn, value) {\n\t    if (value instanceof AsyncHandle) {\n\t      return value.then(function() { fn(value); });\n\t    }\n\t    return fn(value);\n\t  }\n\t\n\t  /**\n\t   * An async version of {@link Sequence#reverse}.\n\t   */\n\t  AsyncSequence.prototype.reverse = function reverse() {\n\t    return this.parent.reverse().async();\n\t  };\n\t\n\t  /**\n\t   * A version of {@link Sequence#find} which returns an {@link AsyncHandle}.\n\t   *\n\t   * @public\n\t   * @param {Function} predicate A function to call on (potentially) every element\n\t   *     in the sequence.\n\t   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n\t   *     the found element, once it is detected, or else `undefined`.\n\t   */\n\t  AsyncSequence.prototype.find = function find(predicate) {\n\t    var found;\n\t\n\t    var handle = this.each(function(e, i) {\n\t      if (predicate(e, i)) {\n\t        found = e;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    return handle.then(function() { return found; });\n\t  };\n\t\n\t  /**\n\t   * A version of {@link Sequence#indexOf} which returns an {@link AsyncHandle}.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n\t   *     the found index, once it is detected, or -1.\n\t   */\n\t  AsyncSequence.prototype.indexOf = function indexOf(value) {\n\t    var foundIndex = -1;\n\t\n\t    var handle = this.each(function(e, i) {\n\t      if (e === value) {\n\t        foundIndex = i;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    return handle.then(function() {\n\t      return foundIndex;\n\t    });\n\t  };\n\t\n\t  /**\n\t   * A version of {@link Sequence#contains} which returns an {@link AsyncHandle}.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n\t   *     either `true` or `false` to indicate whether the element was found.\n\t   */\n\t  AsyncSequence.prototype.contains = function contains(value) {\n\t    var found = false;\n\t\n\t    var handle = this.each(function(e) {\n\t      if (e === value) {\n\t        found = true;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    return handle.then(function() {\n\t      return found;\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Just return the same sequence for `AsyncSequence#async` (I see no harm in this).\n\t   */\n\t  AsyncSequence.prototype.async = function async() {\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * See {@link ObjectLikeSequence#watch} for docs.\n\t   */\n\t  ObjectWrapper.prototype.watch = function watch(propertyNames) {\n\t    return new WatchedPropertySequence(this.source, propertyNames);\n\t  };\n\t\n\t  function WatchedPropertySequence(object, propertyNames) {\n\t    this.listeners = [];\n\t\n\t    if (!propertyNames) {\n\t      propertyNames = Lazy(object).keys().toArray();\n\t    } else if (!isArray(propertyNames)) {\n\t      propertyNames = [propertyNames];\n\t    }\n\t\n\t    var listeners = this.listeners,\n\t        index     = 0;\n\t\n\t    Lazy(propertyNames).each(function(propertyName) {\n\t      var propertyValue = object[propertyName];\n\t\n\t      Object.defineProperty(object, propertyName, {\n\t        get: function() {\n\t          return propertyValue;\n\t        },\n\t\n\t        set: function(value) {\n\t          for (var i = listeners.length - 1; i >= 0; --i) {\n\t            if (listeners[i]({ property: propertyName, value: value }, index) === false) {\n\t              listeners.splice(i, 1);\n\t            }\n\t          }\n\t          propertyValue = value;\n\t          ++index;\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  WatchedPropertySequence.prototype = Object.create(AsyncSequence.prototype);\n\t\n\t  WatchedPropertySequence.prototype.each = function each(fn) {\n\t    this.listeners.push(fn);\n\t  };\n\t\n\t  /**\n\t   * A StreamLikeSequence comprises a sequence of 'chunks' of data, which are\n\t   * typically multiline strings.\n\t   *\n\t   * @constructor\n\t   */\n\t  function StreamLikeSequence() {}\n\t\n\t  StreamLikeSequence.prototype = Object.create(AsyncSequence.prototype);\n\t\n\t  StreamLikeSequence.prototype.isAsync = function isAsync() {\n\t    return true;\n\t  };\n\t\n\t  StreamLikeSequence.prototype.split = function split(delimiter) {\n\t    return new SplitStreamSequence(this, delimiter);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SplitStreamSequence(parent, delimiter) {\n\t    this.parent    = parent;\n\t    this.delimiter = delimiter;\n\t    this.each      = this.getEachForDelimiter(delimiter);\n\t  }\n\t\n\t  SplitStreamSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  SplitStreamSequence.prototype.getEachForDelimiter = function getEachForDelimiter(delimiter) {\n\t    if (delimiter instanceof RegExp) {\n\t      return this.regexEach;\n\t    }\n\t\n\t    return this.stringEach;\n\t  };\n\t\n\t  SplitStreamSequence.prototype.regexEach = function each(fn) {\n\t    var delimiter = cloneRegex(this.delimiter),\n\t        buffer = '',\n\t        start = 0, end,\n\t        index = 0;\n\t\n\t    var handle = this.parent.each(function(chunk) {\n\t      buffer += chunk;\n\t\n\t      var match;\n\t      while (match = delimiter.exec(buffer)) {\n\t        end = match.index;\n\t        if (fn(buffer.substring(start, end), index++) === false) {\n\t          return false;\n\t        }\n\t        start = end + match[0].length;\n\t      }\n\t\n\t      buffer = buffer.substring(start);\n\t      start = 0;\n\t    });\n\t\n\t    handle.onComplete(function() {\n\t      if (buffer.length > 0) {\n\t        fn(buffer, index++);\n\t      }\n\t    });\n\t\n\t    return handle;\n\t  };\n\t\n\t  SplitStreamSequence.prototype.stringEach = function each(fn) {\n\t    var delimiter  = this.delimiter,\n\t        pieceIndex = 0,\n\t        buffer = '',\n\t        bufferIndex = 0;\n\t\n\t    var handle = this.parent.each(function(chunk) {\n\t      buffer += chunk;\n\t      var delimiterIndex;\n\t      while ((delimiterIndex = buffer.indexOf(delimiter)) >= 0) {\n\t        var piece = buffer.substr(0,delimiterIndex);\n\t        buffer = buffer.substr(delimiterIndex+delimiter.length);\n\t        if (fn(piece,pieceIndex++) === false) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    });\n\t\n\t    handle.onComplete(function() {\n\t      fn(buffer, pieceIndex++);\n\t    });\n\t\n\t    return handle;\n\t  };\n\t\n\t  StreamLikeSequence.prototype.lines = function lines() {\n\t    return this.split(\"\\n\");\n\t  };\n\t\n\t  StreamLikeSequence.prototype.match = function match(pattern) {\n\t    return new MatchedStreamSequence(this, pattern);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MatchedStreamSequence(parent, pattern) {\n\t    this.parent  = parent;\n\t    this.pattern = cloneRegex(pattern);\n\t  }\n\t\n\t  MatchedStreamSequence.prototype = Object.create(AsyncSequence.prototype);\n\t\n\t  MatchedStreamSequence.prototype.each = function each(fn) {\n\t    var pattern = this.pattern,\n\t        done      = false,\n\t        i         = 0;\n\t\n\t    return this.parent.each(function(chunk) {\n\t      Lazy(chunk).match(pattern).each(function(match) {\n\t        if (fn(match, i++) === false) {\n\t          done = true;\n\t          return false;\n\t        }\n\t      });\n\t\n\t      return !done;\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Defines a wrapper for custom {@link StreamLikeSequence}s. This is useful\n\t   * if you want a way to handle a stream of events as a sequence, but you can't\n\t   * use Lazy's existing interface (i.e., you're wrapping an object from a\n\t   * library with its own custom events).\n\t   *\n\t   * This method defines a *factory*: that is, it produces a function that can\n\t   * be used to wrap objects and return a {@link Sequence}. Hopefully the\n\t   * example will make this clear.\n\t   *\n\t   * @public\n\t   * @param {Function} initializer An initialization function called on objects\n\t   *     created by this factory. `this` will be bound to the created object,\n\t   *     which is an instance of {@link StreamLikeSequence}. Use `emit` to\n\t   *     generate data for the sequence.\n\t   * @returns {Function} A function that creates a new {@link StreamLikeSequence},\n\t   *     initializes it using the specified function, and returns it.\n\t   *\n\t   * @example\n\t   * var factory = Lazy.createWrapper(function(eventSource) {\n\t   *   var sequence = this;\n\t   *\n\t   *   eventSource.handleEvent(function(data) {\n\t   *     sequence.emit(data);\n\t   *   });\n\t   * });\n\t   *\n\t   * var eventEmitter = {\n\t   *   triggerEvent: function(data) {\n\t   *     eventEmitter.eventHandler(data);\n\t   *   },\n\t   *   handleEvent: function(handler) {\n\t   *     eventEmitter.eventHandler = handler;\n\t   *   },\n\t   *   eventHandler: function() {}\n\t   * };\n\t   *\n\t   * var events = [];\n\t   *\n\t   * factory(eventEmitter).each(function(e) {\n\t   *   events.push(e);\n\t   * });\n\t   *\n\t   * eventEmitter.triggerEvent('foo');\n\t   * eventEmitter.triggerEvent('bar');\n\t   *\n\t   * events // => ['foo', 'bar']\n\t   */\n\t  Lazy.createWrapper = function createWrapper(initializer) {\n\t    var ctor = function() {\n\t      this.listeners = [];\n\t    };\n\t\n\t    ctor.prototype = Object.create(StreamLikeSequence.prototype);\n\t\n\t    ctor.prototype.each = function(listener) {\n\t      this.listeners.push(listener);\n\t    };\n\t\n\t    ctor.prototype.emit = function(data) {\n\t      var listeners = this.listeners;\n\t\n\t      for (var len = listeners.length, i = len - 1; i >= 0; --i) {\n\t        if (listeners[i](data) === false) {\n\t          listeners.splice(i, 1);\n\t        }\n\t      }\n\t    };\n\t\n\t    return function() {\n\t      var sequence = new ctor();\n\t      initializer.apply(sequence, arguments);\n\t      return sequence;\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Creates a {@link GeneratedSequence} using the specified generator function\n\t   * and (optionally) length.\n\t   *\n\t   * @public\n\t   * @param {function(number):*} generatorFn The function used to generate the\n\t   *     sequence. This function accepts an index as a parameter and should return\n\t   *     a value for that index in the resulting sequence.\n\t   * @param {number=} length The length of the sequence, for sequences with a\n\t   *     definite length.\n\t   * @returns {GeneratedSequence} The generated sequence.\n\t   *\n\t   * @examples\n\t   * var randomNumbers = Lazy.generate(Math.random);\n\t   * var countingNumbers = Lazy.generate(function(i) { return i + 1; }, 5);\n\t   *\n\t   * randomNumbers          // instanceof Lazy.GeneratedSequence\n\t   * randomNumbers.length() // => undefined\n\t   * countingNumbers          // sequence: [1, 2, 3, 4, 5]\n\t   * countingNumbers.length() // => 5\n\t   */\n\t  Lazy.generate = function generate(generatorFn, length) {\n\t    return new GeneratedSequence(generatorFn, length);\n\t  };\n\t\n\t  /**\n\t   * Creates a sequence from a given starting value, up to a specified stopping\n\t   * value, incrementing by a given step. Invalid values for any of these\n\t   * arguments (e.g., a step of 0) result in an empty sequence.\n\t   *\n\t   * @public\n\t   * @returns {GeneratedSequence} The sequence defined by the given ranges.\n\t   *\n\t   * @examples\n\t   * Lazy.range(3)         // sequence: [0, 1, 2]\n\t   * Lazy.range(1, 4)      // sequence: [1, 2, 3]\n\t   * Lazy.range(2, 10, 2)  // sequence: [2, 4, 6, 8]\n\t   * Lazy.range(5, 1, 2)   // sequence: []\n\t   * Lazy.range(5, 15, -2) // sequence: []\n\t   * Lazy.range(3, 10, 3)  // sequence: [3, 6, 9]\n\t   * Lazy.range(5, 2)      // sequence: [5, 4, 3]\n\t   * Lazy.range(7, 2, -2)  // sequence: [7, 5, 3]\n\t   * Lazy.range(3, 5, 0)   // sequence: []\n\t   */\n\t  Lazy.range = function range() {\n\t    var start = arguments.length > 1 ? arguments[0] : 0,\n\t        stop  = arguments.length > 1 ? arguments[1] : arguments[0],\n\t        step  = arguments.length > 2 && arguments[2];\n\t\n\t    if (step === false) {\n\t      step = stop > start ? 1 : -1;\n\t    }\n\t\n\t    if (step === 0) {\n\t      return Lazy([]);\n\t    }\n\t\n\t    return Lazy.generate(function(i) { return start + (step * i); })\n\t      .take(Math.ceil((stop - start) / step));\n\t  };\n\t\n\t  /**\n\t   * Creates a sequence consisting of the given value repeated a specified number\n\t   * of times.\n\t   *\n\t   * @public\n\t   * @param {*} value The value to repeat.\n\t   * @param {number=} count The number of times the value should be repeated in\n\t   *     the sequence. If this argument is omitted, the value will repeat forever.\n\t   * @returns {GeneratedSequence} The sequence containing the repeated value.\n\t   *\n\t   * @examples\n\t   * Lazy.repeat(\"hi\", 3)          // sequence: [\"hi\", \"hi\", \"hi\"]\n\t   * Lazy.repeat(\"young\")          // instanceof Lazy.GeneratedSequence\n\t   * Lazy.repeat(\"young\").length() // => undefined\n\t   * Lazy.repeat(\"young\").take(3)  // sequence: [\"young\", \"young\", \"young\"]\n\t   */\n\t  Lazy.repeat = function repeat(value, count) {\n\t    return Lazy.generate(function() { return value; }, count);\n\t  };\n\t\n\t  Lazy.Sequence           = Sequence;\n\t  Lazy.ArrayLikeSequence  = ArrayLikeSequence;\n\t  Lazy.ObjectLikeSequence = ObjectLikeSequence;\n\t  Lazy.StringLikeSequence = StringLikeSequence;\n\t  Lazy.StreamLikeSequence = StreamLikeSequence;\n\t  Lazy.GeneratedSequence  = GeneratedSequence;\n\t  Lazy.AsyncSequence      = AsyncSequence;\n\t  Lazy.AsyncHandle        = AsyncHandle;\n\t\n\t  /*** Useful utility methods ***/\n\t\n\t  /**\n\t   * Creates a shallow copy of an array or object.\n\t   *\n\t   * @examples\n\t   * var array  = [1, 2, 3], clonedArray,\n\t   *     object = { foo: 1, bar: 2 }, clonedObject;\n\t   *\n\t   * clonedArray = Lazy.clone(array); // => [1, 2, 3]\n\t   * clonedArray.push(4); // clonedArray == [1, 2, 3, 4]\n\t   * array; // => [1, 2, 3]\n\t   *\n\t   * clonedObject = Lazy.clone(object); // => { foo: 1, bar: 2 }\n\t   * clonedObject.baz = 3; // clonedObject == { foo: 1, bar: 2, baz: 3 }\n\t   * object; // => { foo: 1, bar: 2 }\n\t   */\n\t  Lazy.clone = function clone(target) {\n\t    return Lazy(target).value();\n\t  };\n\t\n\t  /**\n\t   * Marks a method as deprecated, so calling it will issue a console warning.\n\t   */\n\t  Lazy.deprecate = function deprecate(message, fn) {\n\t    return function() {\n\t      console.warn(message);\n\t      return fn.apply(this, arguments);\n\t    };\n\t  };\n\t\n\t  var isArray    = Array.isArray || function(x) { return x instanceof Array; },\n\t      arrayPop   = Array.prototype.pop,\n\t      arraySlice = Array.prototype.slice;\n\t\n\t  /**\n\t   * If you know what function currying is, then you know what this does.\n\t   *\n\t   * @param {Function} fn The function to curry.\n\t   * @returns {Function} The curried function.\n\t   *\n\t   * @examples\n\t   * function abc(a, b, c) { return [a, b, c]; }\n\t   * var curried = Lazy.curry(abc);\n\t   *\n\t   * curried(1)(2)(3) // => [1, 2, 3]\n\t   * curried(1, 2)(3) // => [1, 2, 3]\n\t   * curried(1)(2, 3) // => [1, 2, 3]\n\t   * curried(1, 2, 3) // => [1, 2, 3]\n\t   * Lazy([1, 2, 3]).map(curried(1, 2)) // sequence: [[1, 2, 1], [1, 2, 2], [1, 2, 3]]\n\t   */\n\t  function curry(fn, arity) {\n\t    arity || (arity = fn.length);\n\t\n\t    function curried(args) {\n\t      if (args.length < arity) {\n\t        return function() {\n\t          return curried(args.concat(arraySlice.call(arguments, 0)));\n\t        };\n\t      }\n\t\n\t      return fn.apply(null, args);\n\t    }\n\t\n\t    return curried([]);\n\t  }\n\t\n\t  /**\n\t   * Same as Lazy.curry, but... you know... from the right.\n\t   *\n\t   * @param {Function} fn The function to curry from the right.\n\t   * @returns {Function} The curried-from-the-right function.\n\t   *\n\t   * @examples\n\t   * function abc(a, b, c) { return [a, b, c]; }\n\t   * var curriedRight = Lazy.curryRight(abc);\n\t   *\n\t   * curriedRight(3)(2)(1) // => [1, 2, 3]\n\t   * curriedRight(2, 3)(1) // => [1, 2, 3]\n\t   * curriedRight(3)(1, 2) // => [1, 2, 3]\n\t   * curriedRight(1, 2, 3) // => [1, 2, 3]\n\t   * Lazy([1, 2, 3]).map(curriedRight(3)) // sequence: [[1, 0, 3], [2, 1, 3], [3, 2, 3]]\n\t   */\n\t  function curryRight(fn, arity) {\n\t    arity || (arity = fn.length);\n\t\n\t    function curriedRight(args) {\n\t      if (args.length < arity) {\n\t        return function() {\n\t          return curriedRight(arraySlice.call(arguments, 0).concat(args));\n\t        };\n\t      }\n\t\n\t      return fn.apply(null, args);\n\t    }\n\t\n\t    return curriedRight([]);\n\t  }\n\t\n\t  Lazy.curry = curry;\n\t  Lazy.curryRight = curryRight;\n\t\n\t  /**\n\t   * Creates a callback... you know, Lo-Dash style.\n\t   *\n\t   * - for functions, just returns the function\n\t   * - for strings, returns a pluck-style callback\n\t   * - for objects, returns a where-style callback\n\t   *\n\t   * @param {Function|string|Object} callback A function, string, or object to\n\t   *     convert to a callback.\n\t   * @param {*} defaultReturn If the callback is undefined, a default return\n\t   *     value to use for the function.\n\t   * @returns {Function} The callback function.\n\t   *\n\t   * @examples\n\t   * Lazy.createCallback(function() {})                  // instanceof Function\n\t   * Lazy.createCallback('foo')                          // instanceof Function\n\t   * Lazy.createCallback('foo')({ foo: 'bar'})           // => 'bar'\n\t   * Lazy.createCallback({ foo: 'bar' })({ foo: 'bar' }) // => true\n\t   * Lazy.createCallback({ foo: 'bar' })({ foo: 'baz' }) // => false\n\t   */\n\t  function createCallback(callback, defaultValue) {\n\t    switch (typeof callback) {\n\t      case \"function\":\n\t        return callback;\n\t\n\t      case \"string\":\n\t        return function(e) {\n\t          return e[callback];\n\t        };\n\t\n\t      case \"object\":\n\t        return function(e) {\n\t          return Lazy(callback).all(function(value, key) {\n\t            return e[key] === value;\n\t          });\n\t        };\n\t\n\t      case \"undefined\":\n\t        return defaultValue ?\n\t          function() { return defaultValue; } :\n\t          Lazy.identity;\n\t\n\t      default:\n\t        throw new Error(\"Don't know how to make a callback from a \" + typeof callback + \"!\");\n\t    }\n\t  }\n\t\n\t  Lazy.createCallback = createCallback;\n\t\n\t  /**\n\t   * Takes a function that returns a value for one argument and produces a\n\t   * function that compares two arguments.\n\t   *\n\t   * @param {Function|string|Object} callback A function, string, or object to\n\t   *     convert to a callback using `createCallback`.\n\t   * @returns {Function} A function that accepts two values and returns 1 if\n\t   *     the first is greater, -1 if the second is greater, or 0 if they are\n\t   *     equivalent.\n\t   *\n\t   * @examples\n\t   * Lazy.createComparator('a')({ a: 1 }, { a: 2 });       // => -1\n\t   * Lazy.createComparator('a')({ a: 6 }, { a: 2 });       // => 1\n\t   * Lazy.createComparator('a')({ a: 1 }, { a: 1 });       // => 0\n\t   * Lazy.createComparator()(3, 5);                        // => -1\n\t   * Lazy.createComparator()(7, 5);                        // => 1\n\t   * Lazy.createComparator()(3, 3);                        // => 0\n\t   */\n\t  function createComparator(callback) {\n\t    if (!callback) { return compare; }\n\t\n\t    callback = createCallback(callback);\n\t\n\t    return function(x, y) {\n\t      return compare(callback(x), callback(y));\n\t    };\n\t  }\n\t\n\t  Lazy.createComparator = createComparator;\n\t\n\t  /**\n\t   * Takes a function and returns a function with the same logic but the\n\t   * arguments reversed. Only applies to functions w/ arity=2 as this is private\n\t   * and I can do what I want.\n\t   *\n\t   * @private\n\t   * @param {Function} fn The function to \"reverse\"\n\t   * @returns {Function} The \"reversed\" function\n\t   *\n\t   * @examples\n\t   * reverseArguments(function(x, y) { return x + y; })('a', 'b'); // => 'ba'\n\t   */\n\t  function reverseArguments(fn) {\n\t    return function(x, y) { return fn(y, x); };\n\t  }\n\t\n\t  /**\n\t   * Creates a Set containing the specified values.\n\t   *\n\t   * @param {...Array} values One or more array(s) of values used to populate the\n\t   *     set.\n\t   * @returns {Set} A new set containing the values passed in.\n\t   */\n\t  function createSet(values) {\n\t    var set = new Set();\n\t    Lazy(values || []).flatten().each(function(e) {\n\t      set.add(e);\n\t    });\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * Compares two elements for sorting purposes.\n\t   *\n\t   * @private\n\t   * @param {*} x The left element to compare.\n\t   * @param {*} y The right element to compare.\n\t   * @returns {number} 1 if x > y, -1 if x < y, or 0 if x and y are equal.\n\t   *\n\t   * @examples\n\t   * compare(1, 2)     // => -1\n\t   * compare(1, 1)     // => 0\n\t   * compare(2, 1)     // => 1\n\t   * compare('a', 'b') // => -1\n\t   */\n\t  function compare(x, y) {\n\t    if (x === y) {\n\t      return 0;\n\t    }\n\t\n\t    return x > y ? 1 : -1;\n\t  }\n\t\n\t  /**\n\t   * Iterates over every element in an array.\n\t   *\n\t   * @param {Array} array The array.\n\t   * @param {Function} fn The function to call on every element, which can return\n\t   *     false to stop the iteration early.\n\t   * @returns {boolean} True if every element in the entire sequence was iterated,\n\t   *     otherwise false.\n\t   */\n\t  function forEach(array, fn) {\n\t    var i = -1,\n\t        len = array.length;\n\t\n\t    while (++i < len) {\n\t      if (fn(array[i], i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  }\n\t\n\t  function getFirst(sequence) {\n\t    var result;\n\t    sequence.each(function(e) {\n\t      result = e;\n\t      return false;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Checks if an element exists in an array.\n\t   *\n\t   * @private\n\t   * @param {Array} array\n\t   * @param {*} element\n\t   * @returns {boolean} Whether or not the element exists in the array.\n\t   *\n\t   * @examples\n\t   * arrayContains([1, 2], 2)              // => true\n\t   * arrayContains([1, 2], 3)              // => false\n\t   * arrayContains([undefined], undefined) // => true\n\t   * arrayContains([NaN], NaN)             // => true\n\t   */\n\t  function arrayContains(array, element) {\n\t    var i = -1,\n\t        length = array.length;\n\t\n\t    // Special handling for NaN\n\t    if (element !== element) {\n\t      while (++i < length) {\n\t        if (array[i] !== array[i]) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    while (++i < length) {\n\t      if (array[i] === element) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Checks if an element exists in an array before a given index.\n\t   *\n\t   * @private\n\t   * @param {Array} array\n\t   * @param {*} element\n\t   * @param {number} index\n\t   * @param {Function} keyFn\n\t   * @returns {boolean}\n\t   *\n\t   * @examples\n\t   * arrayContainsBefore([1, 2, 3], 3, 2) // => false\n\t   * arrayContainsBefore([1, 2, 3], 3, 3) // => true\n\t   */\n\t  function arrayContainsBefore(array, element, index, keyFn) {\n\t    var i = -1;\n\t\n\t    if (keyFn) {\n\t      keyFn = createCallback(keyFn);\n\t      while (++i < index) {\n\t        if (keyFn(array[i]) === keyFn(element)) {\n\t          return true;\n\t        }\n\t      }\n\t\n\t    } else {\n\t      while (++i < index) {\n\t        if (array[i] === element) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Swaps the elements at two specified positions of an array.\n\t   *\n\t   * @private\n\t   * @param {Array} array\n\t   * @param {number} i\n\t   * @param {number} j\n\t   *\n\t   * @examples\n\t   * var array = [1, 2, 3, 4, 5];\n\t   *\n\t   * swap(array, 2, 3) // array == [1, 2, 4, 3, 5]\n\t   */\n\t  function swap(array, i, j) {\n\t    var temp = array[i];\n\t    array[i] = array[j];\n\t    array[j] = temp;\n\t  }\n\t\n\t  /**\n\t   * \"Clones\" a regular expression (but makes it always global).\n\t   *\n\t   * @private\n\t   * @param {RegExp|string} pattern\n\t   * @returns {RegExp}\n\t   */\n\t  function cloneRegex(pattern) {\n\t    return eval(\"\" + pattern + (!pattern.global ? \"g\" : \"\"));\n\t  };\n\t\n\t  /**\n\t   * A collection of unique elements.\n\t   *\n\t   * @private\n\t   * @constructor\n\t   *\n\t   * @examples\n\t   * var set  = new Set(),\n\t   *     obj1 = {},\n\t   *     obj2 = {},\n\t   *     fn1 = function fn1() {},\n\t   *     fn2 = function fn2() {};\n\t   *\n\t   * set.add('foo')            // => true\n\t   * set.add('foo')            // => false\n\t   * set.add(1)                // => true\n\t   * set.add(1)                // => false\n\t   * set.add('1')              // => true\n\t   * set.add('1')              // => false\n\t   * set.add(obj1)             // => true\n\t   * set.add(obj1)             // => false\n\t   * set.add(obj2)             // => true\n\t   * set.add(fn1)              // => true\n\t   * set.add(fn2)              // => true\n\t   * set.add(fn2)              // => false\n\t   * set.contains('__proto__') // => false\n\t   * set.add('__proto__')      // => true\n\t   * set.add('__proto__')      // => false\n\t   * set.contains('add')       // => false\n\t   * set.add('add')            // => true\n\t   * set.add('add')            // => false\n\t   * set.contains(undefined)   // => false\n\t   * set.add(undefined)        // => true\n\t   * set.contains(undefined)   // => true\n\t   * set.contains('undefined') // => false\n\t   * set.add('undefined')      // => true\n\t   * set.contains('undefined') // => true\n\t   * set.contains(NaN)         // => false\n\t   * set.add(NaN)              // => true\n\t   * set.contains(NaN)         // => true\n\t   * set.contains('NaN')       // => false\n\t   * set.add('NaN')            // => true\n\t   * set.contains('NaN')       // => true\n\t   * set.contains('@foo')      // => false\n\t   * set.add('@foo')           // => true\n\t   * set.contains('@foo')      // => true\n\t   */\n\t  function Set() {\n\t    this.table   = {};\n\t    this.objects = [];\n\t  }\n\t\n\t  /**\n\t   * Attempts to add a unique value to the set.\n\t   *\n\t   * @param {*} value The value to add.\n\t   * @returns {boolean} True if the value was added to the set (meaning an equal\n\t   *     value was not already present), or else false.\n\t   */\n\t  Set.prototype.add = function add(value) {\n\t    var table = this.table,\n\t        type  = typeof value,\n\t\n\t        // only applies for strings\n\t        firstChar,\n\t\n\t        // only applies for objects\n\t        objects;\n\t\n\t    switch (type) {\n\t      case \"number\":\n\t      case \"boolean\":\n\t      case \"undefined\":\n\t        if (!table[value]) {\n\t          table[value] = true;\n\t          return true;\n\t        }\n\t        return false;\n\t\n\t      case \"string\":\n\t        // Essentially, escape the first character if it could possibly collide\n\t        // with a number, boolean, or undefined (or a string that happens to start\n\t        // with the escape character!), OR if it could override a special property\n\t        // such as '__proto__' or 'constructor'.\n\t        switch (value.charAt(0)) {\n\t          case \"_\": // e.g., __proto__\n\t          case \"f\": // for 'false'\n\t          case \"t\": // for 'true'\n\t          case \"c\": // for 'constructor'\n\t          case \"u\": // for 'undefined'\n\t          case \"@\": // escaped\n\t          case \"0\":\n\t          case \"1\":\n\t          case \"2\":\n\t          case \"3\":\n\t          case \"4\":\n\t          case \"5\":\n\t          case \"6\":\n\t          case \"7\":\n\t          case \"8\":\n\t          case \"9\":\n\t          case \"N\": // for NaN\n\t            value = \"@\" + value;\n\t        }\n\t        if (!table[value]) {\n\t          table[value] = true;\n\t          return true;\n\t        }\n\t        return false;\n\t\n\t      default:\n\t        // For objects and functions, we can't really do anything other than store\n\t        // them in an array and do a linear search for reference equality.\n\t        objects = this.objects;\n\t        if (!arrayContains(objects, value)) {\n\t          objects.push(value);\n\t          return true;\n\t        }\n\t        return false;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Checks whether the set contains a value.\n\t   *\n\t   * @param {*} value The value to check for.\n\t   * @returns {boolean} True if the set contains the value, or else false.\n\t   */\n\t  Set.prototype.contains = function contains(value) {\n\t    var type = typeof value,\n\t\n\t        // only applies for strings\n\t        firstChar;\n\t\n\t    switch (type) {\n\t      case \"number\":\n\t      case \"boolean\":\n\t      case \"undefined\":\n\t        return !!this.table[value];\n\t\n\t      case \"string\":\n\t        // Essentially, escape the first character if it could possibly collide\n\t        // with a number, boolean, or undefined (or a string that happens to start\n\t        // with the escape character!), OR if it could override a special property\n\t        // such as '__proto__' or 'constructor'.\n\t        switch (value.charAt(0)) {\n\t          case \"_\": // e.g., __proto__\n\t          case \"f\": // for 'false'\n\t          case \"t\": // for 'true'\n\t          case \"c\": // for 'constructor'\n\t          case \"u\": // for 'undefined'\n\t          case \"@\": // escaped\n\t          case \"0\":\n\t          case \"1\":\n\t          case \"2\":\n\t          case \"3\":\n\t          case \"4\":\n\t          case \"5\":\n\t          case \"6\":\n\t          case \"7\":\n\t          case \"8\":\n\t          case \"9\":\n\t          case \"N\": // for NaN\n\t            value = \"@\" + value;\n\t        }\n\t        return !!this.table[value];\n\t\n\t      default:\n\t        // For objects and functions, we can't really do anything other than store\n\t        // them in an array and do a linear search for reference equality.\n\t        return arrayContains(this.objects, value);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * A \"rolling\" queue, with a fixed capacity. As items are added to the head,\n\t   * excess items are dropped from the tail.\n\t   *\n\t   * @private\n\t   * @constructor\n\t   *\n\t   * @examples\n\t   * var queue = new Queue(3);\n\t   *\n\t   * queue.add(1).toArray()        // => [1]\n\t   * queue.add(2).toArray()        // => [1, 2]\n\t   * queue.add(3).toArray()        // => [1, 2, 3]\n\t   * queue.add(4).toArray()        // => [2, 3, 4]\n\t   * queue.add(5).add(6).toArray() // => [4, 5, 6]\n\t   * queue.add(7).add(8).toArray() // => [6, 7, 8]\n\t   *\n\t   * // also want to check corner cases\n\t   * new Queue(1).add('foo').add('bar').toArray() // => ['bar']\n\t   * new Queue(0).add('foo').toArray()            // => []\n\t   * new Queue(-1)                                // throws\n\t   *\n\t   * @benchmarks\n\t   * function populateQueue(count, capacity) {\n\t   *   var q = new Queue(capacity);\n\t   *   for (var i = 0; i < count; ++i) {\n\t   *     q.add(i);\n\t   *   }\n\t   * }\n\t   *\n\t   * function populateArray(count, capacity) {\n\t   *   var arr = [];\n\t   *   for (var i = 0; i < count; ++i) {\n\t   *     if (arr.length === capacity) { arr.shift(); }\n\t   *     arr.push(i);\n\t   *   }\n\t   * }\n\t   *\n\t   * populateQueue(100, 10); // populating a Queue\n\t   * populateArray(100, 10); // populating an Array\n\t   */\n\t  function Queue(capacity) {\n\t    this.contents = new Array(capacity);\n\t    this.start    = 0;\n\t    this.count    = 0;\n\t  }\n\t\n\t  /**\n\t   * Adds an item to the queue, and returns the queue.\n\t   */\n\t  Queue.prototype.add = function add(element) {\n\t    var contents = this.contents,\n\t        capacity = contents.length,\n\t        start    = this.start;\n\t\n\t    if (this.count === capacity) {\n\t      contents[start] = element;\n\t      this.start = (start + 1) % capacity;\n\t\n\t    } else {\n\t      contents[this.count++] = element;\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Returns an array containing snapshot of the queue's contents.\n\t   */\n\t  Queue.prototype.toArray = function toArray() {\n\t    var contents = this.contents,\n\t        start    = this.start,\n\t        count    = this.count;\n\t\n\t    var snapshot = contents.slice(start, start + count);\n\t    if (snapshot.length < count) {\n\t      snapshot = snapshot.concat(contents.slice(0, count - snapshot.length));\n\t    }\n\t\n\t    return snapshot;\n\t  };\n\t\n\t  /**\n\t   * Shared base method for defining new sequence types.\n\t   */\n\t  function defineSequenceType(base, name, overrides) {\n\t    /** @constructor */\n\t    var ctor = function ctor() {};\n\t\n\t    // Make this type inherit from the specified base.\n\t    ctor.prototype = new base();\n\t\n\t    // Attach overrides to the new sequence type's prototype.\n\t    for (var override in overrides) {\n\t      ctor.prototype[override] = overrides[override];\n\t    }\n\t\n\t    // Define a factory method that sets the new sequence's parent to the caller\n\t    // and (optionally) applies any additional initialization logic.\n\t    // Expose this as a chainable method so that we can do:\n\t    // Lazy(...).map(...).filter(...).blah(...);\n\t    var factory = function factory() {\n\t      var sequence = new ctor();\n\t\n\t      // Every sequence needs a reference to its parent in order to work.\n\t      sequence.parent = this;\n\t\n\t      // If a custom init function was supplied, call it now.\n\t      if (sequence.init) {\n\t        sequence.init.apply(sequence, arguments);\n\t      }\n\t\n\t      return sequence;\n\t    };\n\t\n\t    var methodNames = typeof name === 'string' ? [name] : name;\n\t    for (var i = 0; i < methodNames.length; ++i) {\n\t      base.prototype[methodNames[i]] = factory;\n\t    }\n\t\n\t    return ctor;\n\t  }\n\t\n\t  return Lazy;\n\t});\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(153).setImmediate, __webpack_require__(153).clearImmediate))\n\n/***/ }),\n\n/***/ 253:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar map = __webpack_require__(254);\n\t\n\tvar getCountryCode = function(localeString) {\n\t    var components = localeString.split(\"_\");\n\t    if (components.length == 2) {\n\t        return components.pop();\n\t    }\n\t    components = localeString.split(\"-\");\n\t    if (components.length == 2) {\n\t        return components.pop();\n\t    }\n\t    return localeString;\n\t}\n\t\n\texports.getCurrency = function(locale) {\n\t    var countryCode = getCountryCode(locale).toUpperCase();\n\t    if (countryCode in map) {\n\t        return map[countryCode];\n\t    }\n\t    return null;\n\t}\n\t\n\texports.getLocales = function(currencyCode) {\n\t    currencyCode = currencyCode.toUpperCase();\n\t    var locales = [];\n\t    for (countryCode in map) {\n\t        if (map[countryCode] === currencyCode) {\n\t            locales.push(countryCode);\n\t        }\n\t    }\n\t    return locales;\n\t}\n\n/***/ }),\n\n/***/ 254:\n/***/ (function(module, exports) {\n\n\t// Generated using ShowCurrencies.java\n\tvar map = {\n\tAD: 'EUR',\n\tAE: 'AED',\n\tAF: 'AFN',\n\tAG: 'XCD',\n\tAI: 'XCD',\n\tAL: 'ALL',\n\tAM: 'AMD',\n\tAN: 'ANG',\n\tAO: 'AOA',\n\tAR: 'ARS',\n\tAS: 'USD',\n\tAT: 'EUR',\n\tAU: 'AUD',\n\tAW: 'AWG',\n\tAX: 'EUR',\n\tAZ: 'AZN',\n\tBA: 'BAM',\n\tBB: 'BBD',\n\tBD: 'BDT',\n\tBE: 'EUR',\n\tBF: 'XOF',\n\tBG: 'BGN',\n\tBH: 'BHD',\n\tBI: 'BIF',\n\tBJ: 'XOF',\n\tBL: 'EUR',\n\tBM: 'BMD',\n\tBN: 'BND',\n\tBO: 'BOB',\n\tBQ: 'USD',\n\tBR: 'BRL',\n\tBS: 'BSD',\n\tBT: 'BTN',\n\tBV: 'NOK',\n\tBW: 'BWP',\n\tBY: 'BYR',\n\tBZ: 'BZD',\n\tCA: 'CAD',\n\tCC: 'AUD',\n\tCD: 'CDF',\n\tCF: 'XAF',\n\tCG: 'XAF',\n\tCH: 'CHF',\n\tCI: 'XOF',\n\tCK: 'NZD',\n\tCL: 'CLP',\n\tCM: 'XAF',\n\tCN: 'CNY',\n\tCO: 'COP',\n\tCR: 'CRC',\n\tCU: 'CUP',\n\tCV: 'CVE',\n\tCW: 'ANG',\n\tCX: 'AUD',\n\tCY: 'EUR',\n\tCZ: 'CZK',\n\tDE: 'EUR',\n\tDJ: 'DJF',\n\tDK: 'DKK',\n\tDM: 'XCD',\n\tDO: 'DOP',\n\tDZ: 'DZD',\n\tEC: 'USD',\n\tEE: 'EUR',\n\tEG: 'EGP',\n\tEH: 'MAD',\n\tER: 'ERN',\n\tES: 'EUR',\n\tET: 'ETB',\n\tFI: 'EUR',\n\tFJ: 'FJD',\n\tFK: 'FKP',\n\tFM: 'USD',\n\tFO: 'DKK',\n\tFR: 'EUR',\n\tGA: 'XAF',\n\tGB: 'GBP',\n\tGD: 'XCD',\n\tGE: 'GEL',\n\tGF: 'EUR',\n\tGG: 'GBP',\n\tGH: 'GHS',\n\tGI: 'GIP',\n\tGL: 'DKK',\n\tGM: 'GMD',\n\tGN: 'GNF',\n\tGP: 'EUR',\n\tGQ: 'XAF',\n\tGR: 'EUR',\n\tGS: 'GBP',\n\tGT: 'GTQ',\n\tGU: 'USD',\n\tGW: 'XOF',\n\tGY: 'GYD',\n\tHK: 'HKD',\n\tHM: 'AUD',\n\tHN: 'HNL',\n\tHR: 'HRK',\n\tHT: 'HTG',\n\tHU: 'HUF',\n\tID: 'IDR',\n\tIE: 'EUR',\n\tIL: 'ILS',\n\tIM: 'GBP',\n\tIN: 'INR',\n\tIO: 'USD',\n\tIQ: 'IQD',\n\tIR: 'IRR',\n\tIS: 'ISK',\n\tIT: 'EUR',\n\tJE: 'GBP',\n\tJM: 'JMD',\n\tJO: 'JOD',\n\tJP: 'JPY',\n\tKE: 'KES',\n\tKG: 'KGS',\n\tKH: 'KHR',\n\tKI: 'AUD',\n\tKM: 'KMF',\n\tKN: 'XCD',\n\tKP: 'KPW',\n\tKR: 'KRW',\n\tKW: 'KWD',\n\tKY: 'KYD',\n\tKZ: 'KZT',\n\tLA: 'LAK',\n\tLB: 'LBP',\n\tLC: 'XCD',\n\tLI: 'CHF',\n\tLK: 'LKR',\n\tLR: 'LRD',\n\tLS: 'LSL',\n\tLT: 'LTL',\n\tLU: 'EUR',\n\tLV: 'LVL',\n\tLY: 'LYD',\n\tMA: 'MAD',\n\tMC: 'EUR',\n\tMD: 'MDL',\n\tME: 'EUR',\n\tMF: 'EUR',\n\tMG: 'MGA',\n\tMH: 'USD',\n\tMK: 'MKD',\n\tML: 'XOF',\n\tMM: 'MMK',\n\tMN: 'MNT',\n\tMO: 'MOP',\n\tMP: 'USD',\n\tMQ: 'EUR',\n\tMR: 'MRO',\n\tMS: 'XCD',\n\tMT: 'EUR',\n\tMU: 'MUR',\n\tMV: 'MVR',\n\tMW: 'MWK',\n\tMX: 'MXN',\n\tMY: 'MYR',\n\tMZ: 'MZN',\n\tNA: 'NAD',\n\tNC: 'XPF',\n\tNE: 'XOF',\n\tNF: 'AUD',\n\tNG: 'NGN',\n\tNI: 'NIO',\n\tNL: 'EUR',\n\tNO: 'NOK',\n\tNP: 'NPR',\n\tNR: 'AUD',\n\tNU: 'NZD',\n\tNZ: 'NZD',\n\tOM: 'OMR',\n\tPA: 'PAB',\n\tPE: 'PEN',\n\tPF: 'XPF',\n\tPG: 'PGK',\n\tPH: 'PHP',\n\tPK: 'PKR',\n\tPL: 'PLN',\n\tPM: 'EUR',\n\tPN: 'NZD',\n\tPR: 'USD',\n\tPS: 'ILS',\n\tPT: 'EUR',\n\tPW: 'USD',\n\tPY: 'PYG',\n\tQA: 'QAR',\n\tRE: 'EUR',\n\tRO: 'RON',\n\tRS: 'RSD',\n\tRU: 'RUB',\n\tRW: 'RWF',\n\tSA: 'SAR',\n\tSB: 'SBD',\n\tSC: 'SCR',\n\tSD: 'SDG',\n\tSE: 'SEK',\n\tSG: 'SGD',\n\tSH: 'SHP',\n\tSI: 'EUR',\n\tSJ: 'NOK',\n\tSK: 'EUR',\n\tSL: 'SLL',\n\tSM: 'EUR',\n\tSN: 'XOF',\n\tSO: 'SOS',\n\tSR: 'SRD',\n\tST: 'STD',\n\tSV: 'SVC',\n\tSX: 'ANG',\n\tSY: 'SYP',\n\tSZ: 'SZL',\n\tTC: 'USD',\n\tTD: 'XAF',\n\tTF: 'EUR',\n\tTG: 'XOF',\n\tTH: 'THB',\n\tTJ: 'TJS',\n\tTK: 'NZD',\n\tTL: 'USD',\n\tTM: 'TMT',\n\tTN: 'TND',\n\tTO: 'TOP',\n\tTR: 'TRY',\n\tTT: 'TTD',\n\tTV: 'AUD',\n\tTW: 'TWD',\n\tTZ: 'TZS',\n\tUA: 'UAH',\n\tUG: 'UGX',\n\tUM: 'USD',\n\tUS: 'USD',\n\tUY: 'UYU',\n\tUZ: 'UZS',\n\tVA: 'EUR',\n\tVC: 'XCD',\n\tVE: 'VEF',\n\tVG: 'USD',\n\tVI: 'USD',\n\tVN: 'VND',\n\tVU: 'VUV',\n\tWF: 'XPF',\n\tWS: 'WST',\n\tYE: 'YER',\n\tYT: 'EUR',\n\tZA: 'ZAR',\n\tZM: 'ZMK',\n\tZW: 'ZWL'\n\t};\n\t\n\tmodule.exports = map;\n\n/***/ }),\n\n/***/ 63:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar root = __webpack_require__(127);\n\t\n\t/** Built-in value references. */\n\tvar Symbol = root.Symbol;\n\t\n\tmodule.exports = Symbol;\n\n\n/***/ }),\n\n/***/ 121:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(63),\n\t    getRawTag = __webpack_require__(124),\n\t    objectToString = __webpack_require__(125);\n\t\n\t/** `Object#toString` result references. */\n\tvar nullTag = '[object Null]',\n\t    undefinedTag = '[object Undefined]';\n\t\n\t/** Built-in value references. */\n\tvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t/**\n\t * The base implementation of `getTag` without fallbacks for buggy environments.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the `toStringTag`.\n\t */\n\tfunction baseGetTag(value) {\n\t  if (value == null) {\n\t    return value === undefined ? undefinedTag : nullTag;\n\t  }\n\t  return (symToStringTag && symToStringTag in Object(value))\n\t    ? getRawTag(value)\n\t    : objectToString(value);\n\t}\n\t\n\tmodule.exports = baseGetTag;\n\n\n/***/ }),\n\n/***/ 122:\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\n\tvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\tmodule.exports = freeGlobal;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 123:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar overArg = __webpack_require__(126);\n\t\n\t/** Built-in value references. */\n\tvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\t\n\tmodule.exports = getPrototype;\n\n\n/***/ }),\n\n/***/ 124:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(63);\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar nativeObjectToString = objectProto.toString;\n\t\n\t/** Built-in value references. */\n\tvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t/**\n\t * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the raw `toStringTag`.\n\t */\n\tfunction getRawTag(value) {\n\t  var isOwn = hasOwnProperty.call(value, symToStringTag),\n\t      tag = value[symToStringTag];\n\t\n\t  try {\n\t    value[symToStringTag] = undefined;\n\t    var unmasked = true;\n\t  } catch (e) {}\n\t\n\t  var result = nativeObjectToString.call(value);\n\t  if (unmasked) {\n\t    if (isOwn) {\n\t      value[symToStringTag] = tag;\n\t    } else {\n\t      delete value[symToStringTag];\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = getRawTag;\n\n\n/***/ }),\n\n/***/ 125:\n/***/ (function(module, exports) {\n\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar nativeObjectToString = objectProto.toString;\n\t\n\t/**\n\t * Converts `value` to a string using `Object.prototype.toString`.\n\t *\n\t * @private\n\t * @param {*} value The value to convert.\n\t * @returns {string} Returns the converted string.\n\t */\n\tfunction objectToString(value) {\n\t  return nativeObjectToString.call(value);\n\t}\n\t\n\tmodule.exports = objectToString;\n\n\n/***/ }),\n\n/***/ 126:\n/***/ (function(module, exports) {\n\n\t/**\n\t * Creates a unary function that invokes `func` with its argument transformed.\n\t *\n\t * @private\n\t * @param {Function} func The function to wrap.\n\t * @param {Function} transform The argument transform.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction overArg(func, transform) {\n\t  return function(arg) {\n\t    return func(transform(arg));\n\t  };\n\t}\n\t\n\tmodule.exports = overArg;\n\n\n/***/ }),\n\n/***/ 127:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar freeGlobal = __webpack_require__(122);\n\t\n\t/** Detect free variable `self`. */\n\tvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t/** Used as a reference to the global object. */\n\tvar root = freeGlobal || freeSelf || Function('return this')();\n\t\n\tmodule.exports = root;\n\n\n/***/ }),\n\n/***/ 128:\n/***/ (function(module, exports) {\n\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return value != null && typeof value == 'object';\n\t}\n\t\n\tmodule.exports = isObjectLike;\n\n\n/***/ }),\n\n/***/ 36:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar baseGetTag = __webpack_require__(121),\n\t    getPrototype = __webpack_require__(123),\n\t    isObjectLike = __webpack_require__(128);\n\t\n\t/** `Object#toString` result references. */\n\tvar objectTag = '[object Object]';\n\t\n\t/** Used for built-in method references. */\n\tvar funcProto = Function.prototype,\n\t    objectProto = Object.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar funcToString = funcProto.toString;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Used to infer the `Object` constructor. */\n\tvar objectCtorString = funcToString.call(Object);\n\t\n\t/**\n\t * Checks if `value` is a plain object, that is, an object created by the\n\t * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.8.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t * }\n\t *\n\t * _.isPlainObject(new Foo);\n\t * // => false\n\t *\n\t * _.isPlainObject([1, 2, 3]);\n\t * // => false\n\t *\n\t * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t * // => true\n\t *\n\t * _.isPlainObject(Object.create(null));\n\t * // => true\n\t */\n\tfunction isPlainObject(value) {\n\t  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n\t    return false;\n\t  }\n\t  var proto = getPrototype(value);\n\t  if (proto === null) {\n\t    return true;\n\t  }\n\t  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n\t    funcToString.call(Ctor) == objectCtorString;\n\t}\n\t\n\tmodule.exports = isPlainObject;\n\n\n/***/ }),\n\n/***/ 742:\n/***/ (function(module, exports) {\n\n\tfunction n(n){return n=n||Object.create(null),{on:function(c,e){(n[c]||(n[c]=[])).push(e)},off:function(c,e){n[c]&&n[c].splice(n[c].indexOf(e)>>>0,1)},emit:function(c,e){(n[c]||[]).slice().map(function(n){n(e)}),(n[\"*\"]||[]).slice().map(function(n){n(c,e)})}}}module.exports=n;\n\t//# sourceMappingURL=mitt.js.map\n\n/***/ }),\n\n/***/ 100:\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ 135:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.createProvider = createProvider;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _propTypes = __webpack_require__(8);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _PropTypes = __webpack_require__(67);\n\t\n\tvar _warning = __webpack_require__(38);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar didWarnAboutReceivingStore = false;\n\tfunction warnAboutReceivingStore() {\n\t  if (didWarnAboutReceivingStore) {\n\t    return;\n\t  }\n\t  didWarnAboutReceivingStore = true;\n\t\n\t  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');\n\t}\n\t\n\tfunction createProvider() {\n\t  var _Provider$childContex;\n\t\n\t  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';\n\t  var subKey = arguments[1];\n\t\n\t  var subscriptionKey = subKey || storeKey + 'Subscription';\n\t\n\t  var Provider = function (_Component) {\n\t    _inherits(Provider, _Component);\n\t\n\t    Provider.prototype.getChildContext = function getChildContext() {\n\t      var _ref;\n\t\n\t      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;\n\t    };\n\t\n\t    function Provider(props, context) {\n\t      _classCallCheck(this, Provider);\n\t\n\t      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\t\n\t      _this[storeKey] = props.store;\n\t      return _this;\n\t    }\n\t\n\t    Provider.prototype.render = function render() {\n\t      return _react.Children.only(this.props.children);\n\t    };\n\t\n\t    return Provider;\n\t  }(_react.Component);\n\t\n\t  if (false) {\n\t    Provider.prototype.componentWillReceiveProps = function (nextProps) {\n\t      if (this[storeKey] !== nextProps.store) {\n\t        warnAboutReceivingStore();\n\t      }\n\t    };\n\t  }\n\t\n\t  Provider.propTypes = {\n\t    store: _PropTypes.storeShape.isRequired,\n\t    children: _propTypes2.default.element.isRequired\n\t  };\n\t  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);\n\t\n\t  return Provider;\n\t}\n\t\n\texports.default = createProvider();\n\n/***/ }),\n\n/***/ 65:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.default = connectAdvanced;\n\t\n\tvar _hoistNonReactStatics = __webpack_require__(99);\n\t\n\tvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\t\n\tvar _invariant = __webpack_require__(31);\n\t\n\tvar _invariant2 = _interopRequireDefault(_invariant);\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _Subscription = __webpack_require__(142);\n\t\n\tvar _Subscription2 = _interopRequireDefault(_Subscription);\n\t\n\tvar _PropTypes = __webpack_require__(67);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tvar hotReloadingVersion = 0;\n\tvar dummyState = {};\n\tfunction noop() {}\n\tfunction makeSelectorStateful(sourceSelector, store) {\n\t  // wrap the selector in an object that tracks its results between runs.\n\t  var selector = {\n\t    run: function runComponentSelector(props) {\n\t      try {\n\t        var nextProps = sourceSelector(store.getState(), props);\n\t        if (nextProps !== selector.props || selector.error) {\n\t          selector.shouldComponentUpdate = true;\n\t          selector.props = nextProps;\n\t          selector.error = null;\n\t        }\n\t      } catch (error) {\n\t        selector.shouldComponentUpdate = true;\n\t        selector.error = error;\n\t      }\n\t    }\n\t  };\n\t\n\t  return selector;\n\t}\n\t\n\tfunction connectAdvanced(\n\t/*\n\t  selectorFactory is a func that is responsible for returning the selector function used to\n\t  compute new props from state, props, and dispatch. For example:\n\t     export default connectAdvanced((dispatch, options) => (state, props) => ({\n\t      thing: state.things[props.thingId],\n\t      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\n\t    }))(YourComponent)\n\t   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\n\t  outside of their selector as an optimization. Options passed to connectAdvanced are passed to\n\t  the selectorFactory, along with displayName and WrappedComponent, as the second argument.\n\t   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\n\t  props. Do not use connectAdvanced directly without memoizing results between calls to your\n\t  selector, otherwise the Connect component will re-render on every state or props change.\n\t*/\n\tselectorFactory) {\n\t  var _contextTypes, _childContextTypes;\n\t\n\t  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t      _ref$getDisplayName = _ref.getDisplayName,\n\t      getDisplayName = _ref$getDisplayName === undefined ? function (name) {\n\t    return 'ConnectAdvanced(' + name + ')';\n\t  } : _ref$getDisplayName,\n\t      _ref$methodName = _ref.methodName,\n\t      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,\n\t      _ref$renderCountProp = _ref.renderCountProp,\n\t      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,\n\t      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,\n\t      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,\n\t      _ref$storeKey = _ref.storeKey,\n\t      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,\n\t      _ref$withRef = _ref.withRef,\n\t      withRef = _ref$withRef === undefined ? false : _ref$withRef,\n\t      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);\n\t\n\t  var subscriptionKey = storeKey + 'Subscription';\n\t  var version = hotReloadingVersion++;\n\t\n\t  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);\n\t  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);\n\t\n\t  return function wrapWithConnect(WrappedComponent) {\n\t    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + (methodName + '. Instead received ' + JSON.stringify(WrappedComponent)));\n\t\n\t    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\t\n\t    var displayName = getDisplayName(wrappedComponentName);\n\t\n\t    var selectorFactoryOptions = _extends({}, connectOptions, {\n\t      getDisplayName: getDisplayName,\n\t      methodName: methodName,\n\t      renderCountProp: renderCountProp,\n\t      shouldHandleStateChanges: shouldHandleStateChanges,\n\t      storeKey: storeKey,\n\t      withRef: withRef,\n\t      displayName: displayName,\n\t      wrappedComponentName: wrappedComponentName,\n\t      WrappedComponent: WrappedComponent\n\t    });\n\t\n\t    var Connect = function (_Component) {\n\t      _inherits(Connect, _Component);\n\t\n\t      function Connect(props, context) {\n\t        _classCallCheck(this, Connect);\n\t\n\t        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\t\n\t        _this.version = version;\n\t        _this.state = {};\n\t        _this.renderCount = 0;\n\t        _this.store = props[storeKey] || context[storeKey];\n\t        _this.propsMode = Boolean(props[storeKey]);\n\t        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n\t\n\t        (0, _invariant2.default)(_this.store, 'Could not find \"' + storeKey + '\" in either the context or props of ' + ('\"' + displayName + '\". Either wrap the root component in a <Provider>, ') + ('or explicitly pass \"' + storeKey + '\" as a prop to \"' + displayName + '\".'));\n\t\n\t        _this.initSelector();\n\t        _this.initSubscription();\n\t        return _this;\n\t      }\n\t\n\t      Connect.prototype.getChildContext = function getChildContext() {\n\t        var _ref2;\n\t\n\t        // If this component received store from props, its subscription should be transparent\n\t        // to any descendants receiving store+subscription from context; it passes along\n\t        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows\n\t        // Connect to control ordering of notifications to flow top-down.\n\t        var subscription = this.propsMode ? null : this.subscription;\n\t        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;\n\t      };\n\t\n\t      Connect.prototype.componentDidMount = function componentDidMount() {\n\t        if (!shouldHandleStateChanges) return;\n\t\n\t        // componentWillMount fires during server side rendering, but componentDidMount and\n\t        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.\n\t        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.\n\t        // To handle the case where a child component may have triggered a state change by\n\t        // dispatching an action in its componentWillMount, we have to re-run the select and maybe\n\t        // re-render.\n\t        this.subscription.trySubscribe();\n\t        this.selector.run(this.props);\n\t        if (this.selector.shouldComponentUpdate) this.forceUpdate();\n\t      };\n\t\n\t      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n\t        this.selector.run(nextProps);\n\t      };\n\t\n\t      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {\n\t        return this.selector.shouldComponentUpdate;\n\t      };\n\t\n\t      Connect.prototype.componentWillUnmount = function componentWillUnmount() {\n\t        if (this.subscription) this.subscription.tryUnsubscribe();\n\t        this.subscription = null;\n\t        this.notifyNestedSubs = noop;\n\t        this.store = null;\n\t        this.selector.run = noop;\n\t        this.selector.shouldComponentUpdate = false;\n\t      };\n\t\n\t      Connect.prototype.getWrappedInstance = function getWrappedInstance() {\n\t        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));\n\t        return this.wrappedInstance;\n\t      };\n\t\n\t      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {\n\t        this.wrappedInstance = ref;\n\t      };\n\t\n\t      Connect.prototype.initSelector = function initSelector() {\n\t        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);\n\t        this.selector = makeSelectorStateful(sourceSelector, this.store);\n\t        this.selector.run(this.props);\n\t      };\n\t\n\t      Connect.prototype.initSubscription = function initSubscription() {\n\t        if (!shouldHandleStateChanges) return;\n\t\n\t        // parentSub's source should match where store came from: props vs. context. A component\n\t        // connected to the store via props shouldn't use subscription from context, or vice versa.\n\t        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];\n\t        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));\n\t\n\t        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in\n\t        // the middle of the notification loop, where `this.subscription` will then be null. An\n\t        // extra null check every change can be avoided by copying the method onto `this` and then\n\t        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's\n\t        // listeners logic is changed to not call listeners that have been unsubscribed in the\n\t        // middle of the notification loop.\n\t        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);\n\t      };\n\t\n\t      Connect.prototype.onStateChange = function onStateChange() {\n\t        this.selector.run(this.props);\n\t\n\t        if (!this.selector.shouldComponentUpdate) {\n\t          this.notifyNestedSubs();\n\t        } else {\n\t          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;\n\t          this.setState(dummyState);\n\t        }\n\t      };\n\t\n\t      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {\n\t        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it\n\t        // needs to notify nested subs. Once called, it unimplements itself until further state\n\t        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does\n\t        // a boolean check every time avoids an extra method call most of the time, resulting\n\t        // in some perf boost.\n\t        this.componentDidUpdate = undefined;\n\t        this.notifyNestedSubs();\n\t      };\n\t\n\t      Connect.prototype.isSubscribed = function isSubscribed() {\n\t        return Boolean(this.subscription) && this.subscription.isSubscribed();\n\t      };\n\t\n\t      Connect.prototype.addExtraProps = function addExtraProps(props) {\n\t        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;\n\t        // make a shallow copy so that fields added don't leak to the original selector.\n\t        // this is especially important for 'ref' since that's a reference back to the component\n\t        // instance. a singleton memoized selector would then be holding a reference to the\n\t        // instance, preventing the instance from being garbage collected, and that would be bad\n\t        var withExtras = _extends({}, props);\n\t        if (withRef) withExtras.ref = this.setWrappedInstance;\n\t        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;\n\t        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;\n\t        return withExtras;\n\t      };\n\t\n\t      Connect.prototype.render = function render() {\n\t        var selector = this.selector;\n\t        selector.shouldComponentUpdate = false;\n\t\n\t        if (selector.error) {\n\t          throw selector.error;\n\t        } else {\n\t          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));\n\t        }\n\t      };\n\t\n\t      return Connect;\n\t    }(_react.Component);\n\t\n\t    Connect.WrappedComponent = WrappedComponent;\n\t    Connect.displayName = displayName;\n\t    Connect.childContextTypes = childContextTypes;\n\t    Connect.contextTypes = contextTypes;\n\t    Connect.propTypes = contextTypes;\n\t\n\t    if (false) {\n\t      Connect.prototype.componentWillUpdate = function componentWillUpdate() {\n\t        var _this2 = this;\n\t\n\t        // We are hot reloading!\n\t        if (this.version !== version) {\n\t          this.version = version;\n\t          this.initSelector();\n\t\n\t          // If any connected descendants don't hot reload (and resubscribe in the process), their\n\t          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all\n\t          // listeners, this does mean that the old versions of connected descendants will still be\n\t          // notified of state changes; however, their onStateChange function is a no-op so this\n\t          // isn't a huge deal.\n\t          var oldListeners = [];\n\t\n\t          if (this.subscription) {\n\t            oldListeners = this.subscription.listeners.get();\n\t            this.subscription.tryUnsubscribe();\n\t          }\n\t          this.initSubscription();\n\t          if (shouldHandleStateChanges) {\n\t            this.subscription.trySubscribe();\n\t            oldListeners.forEach(function (listener) {\n\t              return _this2.subscription.listeners.subscribe(listener);\n\t            });\n\t          }\n\t        }\n\t      };\n\t    }\n\t\n\t    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);\n\t  };\n\t}\n\n/***/ }),\n\n/***/ 136:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.createConnect = createConnect;\n\t\n\tvar _connectAdvanced = __webpack_require__(65);\n\t\n\tvar _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);\n\t\n\tvar _shallowEqual = __webpack_require__(143);\n\t\n\tvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\t\n\tvar _mapDispatchToProps = __webpack_require__(137);\n\t\n\tvar _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);\n\t\n\tvar _mapStateToProps = __webpack_require__(138);\n\t\n\tvar _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);\n\t\n\tvar _mergeProps = __webpack_require__(139);\n\t\n\tvar _mergeProps2 = _interopRequireDefault(_mergeProps);\n\t\n\tvar _selectorFactory = __webpack_require__(140);\n\t\n\tvar _selectorFactory2 = _interopRequireDefault(_selectorFactory);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\t/*\n\t  connect is a facade over connectAdvanced. It turns its args into a compatible\n\t  selectorFactory, which has the signature:\n\t\n\t    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\n\t  \n\t  connect passes its args to connectAdvanced as options, which will in turn pass them to\n\t  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\n\t\n\t  selectorFactory returns a final props selector from its mapStateToProps,\n\t  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\n\t  mergePropsFactories, and pure args.\n\t\n\t  The resulting final props selector is called by the Connect component instance whenever\n\t  it receives new props or store state.\n\t */\n\t\n\tfunction match(arg, factories, name) {\n\t  for (var i = factories.length - 1; i >= 0; i--) {\n\t    var result = factories[i](arg);\n\t    if (result) return result;\n\t  }\n\t\n\t  return function (dispatch, options) {\n\t    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');\n\t  };\n\t}\n\t\n\tfunction strictEqual(a, b) {\n\t  return a === b;\n\t}\n\t\n\t// createConnect with default args builds the 'official' connect behavior. Calling it with\n\t// different options opens up some testing and extensibility scenarios\n\tfunction createConnect() {\n\t  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t      _ref$connectHOC = _ref.connectHOC,\n\t      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,\n\t      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n\t      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,\n\t      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n\t      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,\n\t      _ref$mergePropsFactor = _ref.mergePropsFactories,\n\t      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,\n\t      _ref$selectorFactory = _ref.selectorFactory,\n\t      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;\n\t\n\t  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {\n\t    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n\t        _ref2$pure = _ref2.pure,\n\t        pure = _ref2$pure === undefined ? true : _ref2$pure,\n\t        _ref2$areStatesEqual = _ref2.areStatesEqual,\n\t        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,\n\t        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,\n\t        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,\n\t        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,\n\t        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,\n\t        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,\n\t        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,\n\t        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);\n\t\n\t    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');\n\t    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');\n\t    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');\n\t\n\t    return connectHOC(selectorFactory, _extends({\n\t      // used in error messages\n\t      methodName: 'connect',\n\t\n\t      // used to compute Connect's displayName from the wrapped component's displayName.\n\t      getDisplayName: function getDisplayName(name) {\n\t        return 'Connect(' + name + ')';\n\t      },\n\t\n\t      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n\t      shouldHandleStateChanges: Boolean(mapStateToProps),\n\t\n\t      // passed through to selectorFactory\n\t      initMapStateToProps: initMapStateToProps,\n\t      initMapDispatchToProps: initMapDispatchToProps,\n\t      initMergeProps: initMergeProps,\n\t      pure: pure,\n\t      areStatesEqual: areStatesEqual,\n\t      areOwnPropsEqual: areOwnPropsEqual,\n\t      areStatePropsEqual: areStatePropsEqual,\n\t      areMergedPropsEqual: areMergedPropsEqual\n\t\n\t    }, extraOptions));\n\t  };\n\t}\n\t\n\texports.default = createConnect();\n\n/***/ }),\n\n/***/ 137:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;\n\texports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;\n\texports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;\n\t\n\tvar _redux = __webpack_require__(82);\n\t\n\tvar _wrapMapToProps = __webpack_require__(66);\n\t\n\tfunction whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n\t  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;\n\t}\n\t\n\tfunction whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n\t  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {\n\t    return { dispatch: dispatch };\n\t  }) : undefined;\n\t}\n\t\n\tfunction whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n\t  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {\n\t    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);\n\t  }) : undefined;\n\t}\n\t\n\texports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];\n\n/***/ }),\n\n/***/ 138:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;\n\texports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;\n\t\n\tvar _wrapMapToProps = __webpack_require__(66);\n\t\n\tfunction whenMapStateToPropsIsFunction(mapStateToProps) {\n\t  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;\n\t}\n\t\n\tfunction whenMapStateToPropsIsMissing(mapStateToProps) {\n\t  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {\n\t    return {};\n\t  }) : undefined;\n\t}\n\t\n\texports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];\n\n/***/ }),\n\n/***/ 139:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.defaultMergeProps = defaultMergeProps;\n\texports.wrapMergePropsFunc = wrapMergePropsFunc;\n\texports.whenMergePropsIsFunction = whenMergePropsIsFunction;\n\texports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;\n\t\n\tvar _verifyPlainObject = __webpack_require__(68);\n\t\n\tvar _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n\t  return _extends({}, ownProps, stateProps, dispatchProps);\n\t}\n\t\n\tfunction wrapMergePropsFunc(mergeProps) {\n\t  return function initMergePropsProxy(dispatch, _ref) {\n\t    var displayName = _ref.displayName,\n\t        pure = _ref.pure,\n\t        areMergedPropsEqual = _ref.areMergedPropsEqual;\n\t\n\t    var hasRunOnce = false;\n\t    var mergedProps = void 0;\n\t\n\t    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n\t      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\t\n\t      if (hasRunOnce) {\n\t        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n\t      } else {\n\t        hasRunOnce = true;\n\t        mergedProps = nextMergedProps;\n\t\n\t        if (false) (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');\n\t      }\n\t\n\t      return mergedProps;\n\t    };\n\t  };\n\t}\n\t\n\tfunction whenMergePropsIsFunction(mergeProps) {\n\t  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n\t}\n\t\n\tfunction whenMergePropsIsOmitted(mergeProps) {\n\t  return !mergeProps ? function () {\n\t    return defaultMergeProps;\n\t  } : undefined;\n\t}\n\t\n\texports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];\n\n/***/ }),\n\n/***/ 140:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;\n\texports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;\n\texports.default = finalPropsSelectorFactory;\n\t\n\tvar _verifySubselectors = __webpack_require__(141);\n\t\n\tvar _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tfunction impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n\t  return function impureFinalPropsSelector(state, ownProps) {\n\t    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n\t  };\n\t}\n\t\n\tfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n\t  var areStatesEqual = _ref.areStatesEqual,\n\t      areOwnPropsEqual = _ref.areOwnPropsEqual,\n\t      areStatePropsEqual = _ref.areStatePropsEqual;\n\t\n\t  var hasRunAtLeastOnce = false;\n\t  var state = void 0;\n\t  var ownProps = void 0;\n\t  var stateProps = void 0;\n\t  var dispatchProps = void 0;\n\t  var mergedProps = void 0;\n\t\n\t  function handleFirstCall(firstState, firstOwnProps) {\n\t    state = firstState;\n\t    ownProps = firstOwnProps;\n\t    stateProps = mapStateToProps(state, ownProps);\n\t    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n\t    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\t    hasRunAtLeastOnce = true;\n\t    return mergedProps;\n\t  }\n\t\n\t  function handleNewPropsAndNewState() {\n\t    stateProps = mapStateToProps(state, ownProps);\n\t\n\t    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n\t\n\t    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\t    return mergedProps;\n\t  }\n\t\n\t  function handleNewProps() {\n\t    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n\t\n\t    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n\t\n\t    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\t    return mergedProps;\n\t  }\n\t\n\t  function handleNewState() {\n\t    var nextStateProps = mapStateToProps(state, ownProps);\n\t    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n\t    stateProps = nextStateProps;\n\t\n\t    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\t\n\t    return mergedProps;\n\t  }\n\t\n\t  function handleSubsequentCalls(nextState, nextOwnProps) {\n\t    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n\t    var stateChanged = !areStatesEqual(nextState, state);\n\t    state = nextState;\n\t    ownProps = nextOwnProps;\n\t\n\t    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n\t    if (propsChanged) return handleNewProps();\n\t    if (stateChanged) return handleNewState();\n\t    return mergedProps;\n\t  }\n\t\n\t  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n\t    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n\t  };\n\t}\n\t\n\t// TODO: Add more comments\n\t\n\t// If pure is true, the selector returned by selectorFactory will memoize its results,\n\t// allowing connectAdvanced's shouldComponentUpdate to return false if final\n\t// props have not changed. If false, the selector will always return a new\n\t// object and shouldComponentUpdate will always return true.\n\t\n\tfunction finalPropsSelectorFactory(dispatch, _ref2) {\n\t  var initMapStateToProps = _ref2.initMapStateToProps,\n\t      initMapDispatchToProps = _ref2.initMapDispatchToProps,\n\t      initMergeProps = _ref2.initMergeProps,\n\t      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);\n\t\n\t  var mapStateToProps = initMapStateToProps(dispatch, options);\n\t  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n\t  var mergeProps = initMergeProps(dispatch, options);\n\t\n\t  if (false) {\n\t    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);\n\t  }\n\t\n\t  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n\t\n\t  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n\t}\n\n/***/ }),\n\n/***/ 141:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = verifySubselectors;\n\t\n\tvar _warning = __webpack_require__(38);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction verify(selector, methodName, displayName) {\n\t  if (!selector) {\n\t    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');\n\t  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {\n\t    if (!selector.hasOwnProperty('dependsOnOwnProps')) {\n\t      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');\n\t    }\n\t  }\n\t}\n\t\n\tfunction verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {\n\t  verify(mapStateToProps, 'mapStateToProps', displayName);\n\t  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);\n\t  verify(mergeProps, 'mergeProps', displayName);\n\t}\n\n/***/ }),\n\n/***/ 66:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.wrapMapToPropsConstant = wrapMapToPropsConstant;\n\texports.getDependsOnOwnProps = getDependsOnOwnProps;\n\texports.wrapMapToPropsFunc = wrapMapToPropsFunc;\n\t\n\tvar _verifyPlainObject = __webpack_require__(68);\n\t\n\tvar _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction wrapMapToPropsConstant(getConstant) {\n\t  return function initConstantSelector(dispatch, options) {\n\t    var constant = getConstant(dispatch, options);\n\t\n\t    function constantSelector() {\n\t      return constant;\n\t    }\n\t    constantSelector.dependsOnOwnProps = false;\n\t    return constantSelector;\n\t  };\n\t}\n\t\n\t// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n\t// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n\t// whether mapToProps needs to be invoked when props have changed.\n\t// \n\t// A length of one signals that mapToProps does not depend on props from the parent component.\n\t// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n\t// therefore not reporting its length accurately..\n\tfunction getDependsOnOwnProps(mapToProps) {\n\t  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n\t}\n\t\n\t// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n\t// this function wraps mapToProps in a proxy function which does several things:\n\t// \n\t//  * Detects whether the mapToProps function being called depends on props, which\n\t//    is used by selectorFactory to decide if it should reinvoke on props changes.\n\t//    \n\t//  * On first call, handles mapToProps if returns another function, and treats that\n\t//    new function as the true mapToProps for subsequent calls.\n\t//    \n\t//  * On first call, verifies the first result is a plain object, in order to warn\n\t//    the developer that their mapToProps function is not returning a valid result.\n\t//    \n\tfunction wrapMapToPropsFunc(mapToProps, methodName) {\n\t  return function initProxySelector(dispatch, _ref) {\n\t    var displayName = _ref.displayName;\n\t\n\t    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n\t      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);\n\t    };\n\t\n\t    // allow detectFactoryAndVerify to get ownProps\n\t    proxy.dependsOnOwnProps = true;\n\t\n\t    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n\t      proxy.mapToProps = mapToProps;\n\t      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n\t      var props = proxy(stateOrDispatch, ownProps);\n\t\n\t      if (typeof props === 'function') {\n\t        proxy.mapToProps = props;\n\t        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n\t        props = proxy(stateOrDispatch, ownProps);\n\t      }\n\t\n\t      if (false) (0, _verifyPlainObject2.default)(props, displayName, methodName);\n\t\n\t      return props;\n\t    };\n\t\n\t    return proxy;\n\t  };\n\t}\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;\n\t\n\tvar _Provider = __webpack_require__(135);\n\t\n\tvar _Provider2 = _interopRequireDefault(_Provider);\n\t\n\tvar _connectAdvanced = __webpack_require__(65);\n\t\n\tvar _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);\n\t\n\tvar _connect = __webpack_require__(136);\n\t\n\tvar _connect2 = _interopRequireDefault(_connect);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Provider = _Provider2.default;\n\texports.createProvider = _Provider.createProvider;\n\texports.connectAdvanced = _connectAdvanced2.default;\n\texports.connect = _connect2.default;\n\n/***/ }),\n\n/***/ 67:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.storeShape = exports.subscriptionShape = undefined;\n\t\n\tvar _propTypes = __webpack_require__(8);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({\n\t  trySubscribe: _propTypes2.default.func.isRequired,\n\t  tryUnsubscribe: _propTypes2.default.func.isRequired,\n\t  notifyNestedSubs: _propTypes2.default.func.isRequired,\n\t  isSubscribed: _propTypes2.default.func.isRequired\n\t});\n\t\n\tvar storeShape = exports.storeShape = _propTypes2.default.shape({\n\t  subscribe: _propTypes2.default.func.isRequired,\n\t  dispatch: _propTypes2.default.func.isRequired,\n\t  getState: _propTypes2.default.func.isRequired\n\t});\n\n/***/ }),\n\n/***/ 142:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// encapsulates the subscription logic for connecting a component to the redux store, as\n\t// well as nesting subscriptions of descendant components, so that we can ensure the\n\t// ancestor components re-render before descendants\n\t\n\tvar CLEARED = null;\n\tvar nullListeners = {\n\t  notify: function notify() {}\n\t};\n\t\n\tfunction createListenerCollection() {\n\t  // the current/next pattern is copied from redux's createStore code.\n\t  // TODO: refactor+expose that code to be reusable here?\n\t  var current = [];\n\t  var next = [];\n\t\n\t  return {\n\t    clear: function clear() {\n\t      next = CLEARED;\n\t      current = CLEARED;\n\t    },\n\t    notify: function notify() {\n\t      var listeners = current = next;\n\t      for (var i = 0; i < listeners.length; i++) {\n\t        listeners[i]();\n\t      }\n\t    },\n\t    get: function get() {\n\t      return next;\n\t    },\n\t    subscribe: function subscribe(listener) {\n\t      var isSubscribed = true;\n\t      if (next === current) next = current.slice();\n\t      next.push(listener);\n\t\n\t      return function unsubscribe() {\n\t        if (!isSubscribed || current === CLEARED) return;\n\t        isSubscribed = false;\n\t\n\t        if (next === current) next = current.slice();\n\t        next.splice(next.indexOf(listener), 1);\n\t      };\n\t    }\n\t  };\n\t}\n\t\n\tvar Subscription = function () {\n\t  function Subscription(store, parentSub, onStateChange) {\n\t    _classCallCheck(this, Subscription);\n\t\n\t    this.store = store;\n\t    this.parentSub = parentSub;\n\t    this.onStateChange = onStateChange;\n\t    this.unsubscribe = null;\n\t    this.listeners = nullListeners;\n\t  }\n\t\n\t  Subscription.prototype.addNestedSub = function addNestedSub(listener) {\n\t    this.trySubscribe();\n\t    return this.listeners.subscribe(listener);\n\t  };\n\t\n\t  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {\n\t    this.listeners.notify();\n\t  };\n\t\n\t  Subscription.prototype.isSubscribed = function isSubscribed() {\n\t    return Boolean(this.unsubscribe);\n\t  };\n\t\n\t  Subscription.prototype.trySubscribe = function trySubscribe() {\n\t    if (!this.unsubscribe) {\n\t      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);\n\t\n\t      this.listeners = createListenerCollection();\n\t    }\n\t  };\n\t\n\t  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {\n\t    if (this.unsubscribe) {\n\t      this.unsubscribe();\n\t      this.unsubscribe = null;\n\t      this.listeners.clear();\n\t      this.listeners = nullListeners;\n\t    }\n\t  };\n\t\n\t  return Subscription;\n\t}();\n\t\n\texports.default = Subscription;\n\n/***/ }),\n\n/***/ 143:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = shallowEqual;\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\t\n\tfunction is(x, y) {\n\t  if (x === y) {\n\t    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n\t  } else {\n\t    return x !== x && y !== y;\n\t  }\n\t}\n\t\n\tfunction shallowEqual(objA, objB) {\n\t  if (is(objA, objB)) return true;\n\t\n\t  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n\t    return false;\n\t  }\n\t\n\t  var keysA = Object.keys(objA);\n\t  var keysB = Object.keys(objB);\n\t\n\t  if (keysA.length !== keysB.length) return false;\n\t\n\t  for (var i = 0; i < keysA.length; i++) {\n\t    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\n/***/ }),\n\n/***/ 68:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = verifyPlainObject;\n\t\n\tvar _isPlainObject = __webpack_require__(36);\n\t\n\tvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\t\n\tvar _warning = __webpack_require__(38);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction verifyPlainObject(value, displayName, methodName) {\n\t  if (!(0, _isPlainObject2.default)(value)) {\n\t    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');\n\t  }\n\t}\n\n/***/ }),\n\n/***/ 38:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = warning;\n\t/**\n\t * Prints a warning in the console if it exists.\n\t *\n\t * @param {String} message The warning message.\n\t * @returns {void}\n\t */\n\tfunction warning(message) {\n\t  /* eslint-disable no-console */\n\t  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t    console.error(message);\n\t  }\n\t  /* eslint-enable no-console */\n\t  try {\n\t    // This error was thrown as a convenience so that if you enable\n\t    // \"break on all exceptions\" in your console,\n\t    // it would pause the execution at this line.\n\t    throw new Error(message);\n\t    /* eslint-disable no-empty */\n\t  } catch (e) {}\n\t  /* eslint-enable no-empty */\n\t}\n\n/***/ }),\n\n/***/ 147:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports['default'] = applyMiddleware;\n\t\n\tvar _compose = __webpack_require__(69);\n\t\n\tvar _compose2 = _interopRequireDefault(_compose);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * Creates a store enhancer that applies middleware to the dispatch method\n\t * of the Redux store. This is handy for a variety of tasks, such as expressing\n\t * asynchronous actions in a concise manner, or logging every action payload.\n\t *\n\t * See `redux-thunk` package as an example of the Redux middleware.\n\t *\n\t * Because middleware is potentially asynchronous, this should be the first\n\t * store enhancer in the composition chain.\n\t *\n\t * Note that each middleware will be given the `dispatch` and `getState` functions\n\t * as named arguments.\n\t *\n\t * @param {...Function} middlewares The middleware chain to be applied.\n\t * @returns {Function} A store enhancer applying the middleware.\n\t */\n\tfunction applyMiddleware() {\n\t  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n\t    middlewares[_key] = arguments[_key];\n\t  }\n\t\n\t  return function (createStore) {\n\t    return function (reducer, preloadedState, enhancer) {\n\t      var store = createStore(reducer, preloadedState, enhancer);\n\t      var _dispatch = store.dispatch;\n\t      var chain = [];\n\t\n\t      var middlewareAPI = {\n\t        getState: store.getState,\n\t        dispatch: function dispatch(action) {\n\t          return _dispatch(action);\n\t        }\n\t      };\n\t      chain = middlewares.map(function (middleware) {\n\t        return middleware(middlewareAPI);\n\t      });\n\t      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);\n\t\n\t      return _extends({}, store, {\n\t        dispatch: _dispatch\n\t      });\n\t    };\n\t  };\n\t}\n\n/***/ }),\n\n/***/ 148:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = bindActionCreators;\n\tfunction bindActionCreator(actionCreator, dispatch) {\n\t  return function () {\n\t    return dispatch(actionCreator.apply(undefined, arguments));\n\t  };\n\t}\n\t\n\t/**\n\t * Turns an object whose values are action creators, into an object with the\n\t * same keys, but with every function wrapped into a `dispatch` call so they\n\t * may be invoked directly. This is just a convenience method, as you can call\n\t * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n\t *\n\t * For convenience, you can also pass a single function as the first argument,\n\t * and get a function in return.\n\t *\n\t * @param {Function|Object} actionCreators An object whose values are action\n\t * creator functions. One handy way to obtain it is to use ES6 `import * as`\n\t * syntax. You may also pass a single function.\n\t *\n\t * @param {Function} dispatch The `dispatch` function available on your Redux\n\t * store.\n\t *\n\t * @returns {Function|Object} The object mimicking the original object, but with\n\t * every action creator wrapped into the `dispatch` call. If you passed a\n\t * function as `actionCreators`, the return value will also be a single\n\t * function.\n\t */\n\tfunction bindActionCreators(actionCreators, dispatch) {\n\t  if (typeof actionCreators === 'function') {\n\t    return bindActionCreator(actionCreators, dispatch);\n\t  }\n\t\n\t  if (typeof actionCreators !== 'object' || actionCreators === null) {\n\t    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n\t  }\n\t\n\t  var keys = Object.keys(actionCreators);\n\t  var boundActionCreators = {};\n\t  for (var i = 0; i < keys.length; i++) {\n\t    var key = keys[i];\n\t    var actionCreator = actionCreators[key];\n\t    if (typeof actionCreator === 'function') {\n\t      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n\t    }\n\t  }\n\t  return boundActionCreators;\n\t}\n\n/***/ }),\n\n/***/ 149:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = combineReducers;\n\t\n\tvar _createStore = __webpack_require__(70);\n\t\n\tvar _isPlainObject = __webpack_require__(36);\n\t\n\tvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\t\n\tvar _warning = __webpack_require__(71);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction getUndefinedStateErrorMessage(key, action) {\n\t  var actionType = action && action.type;\n\t  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\t\n\t  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n\t}\n\t\n\tfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n\t  var reducerKeys = Object.keys(reducers);\n\t  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\t\n\t  if (reducerKeys.length === 0) {\n\t    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n\t  }\n\t\n\t  if (!(0, _isPlainObject2['default'])(inputState)) {\n\t    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n\t  }\n\t\n\t  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n\t    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n\t  });\n\t\n\t  unexpectedKeys.forEach(function (key) {\n\t    unexpectedKeyCache[key] = true;\n\t  });\n\t\n\t  if (unexpectedKeys.length > 0) {\n\t    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n\t  }\n\t}\n\t\n\tfunction assertReducerShape(reducers) {\n\t  Object.keys(reducers).forEach(function (key) {\n\t    var reducer = reducers[key];\n\t    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\t\n\t    if (typeof initialState === 'undefined') {\n\t      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n\t    }\n\t\n\t    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n\t    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n\t      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Turns an object whose values are different reducer functions, into a single\n\t * reducer function. It will call every child reducer, and gather their results\n\t * into a single state object, whose keys correspond to the keys of the passed\n\t * reducer functions.\n\t *\n\t * @param {Object} reducers An object whose values correspond to different\n\t * reducer functions that need to be combined into one. One handy way to obtain\n\t * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n\t * undefined for any action. Instead, they should return their initial state\n\t * if the state passed to them was undefined, and the current state for any\n\t * unrecognized action.\n\t *\n\t * @returns {Function} A reducer function that invokes every reducer inside the\n\t * passed object, and builds a state object with the same shape.\n\t */\n\tfunction combineReducers(reducers) {\n\t  var reducerKeys = Object.keys(reducers);\n\t  var finalReducers = {};\n\t  for (var i = 0; i < reducerKeys.length; i++) {\n\t    var key = reducerKeys[i];\n\t\n\t    if (false) {\n\t      if (typeof reducers[key] === 'undefined') {\n\t        (0, _warning2['default'])('No reducer provided for key \"' + key + '\"');\n\t      }\n\t    }\n\t\n\t    if (typeof reducers[key] === 'function') {\n\t      finalReducers[key] = reducers[key];\n\t    }\n\t  }\n\t  var finalReducerKeys = Object.keys(finalReducers);\n\t\n\t  var unexpectedKeyCache = void 0;\n\t  if (false) {\n\t    unexpectedKeyCache = {};\n\t  }\n\t\n\t  var shapeAssertionError = void 0;\n\t  try {\n\t    assertReducerShape(finalReducers);\n\t  } catch (e) {\n\t    shapeAssertionError = e;\n\t  }\n\t\n\t  return function combination() {\n\t    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t    var action = arguments[1];\n\t\n\t    if (shapeAssertionError) {\n\t      throw shapeAssertionError;\n\t    }\n\t\n\t    if (false) {\n\t      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\t      if (warningMessage) {\n\t        (0, _warning2['default'])(warningMessage);\n\t      }\n\t    }\n\t\n\t    var hasChanged = false;\n\t    var nextState = {};\n\t    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n\t      var _key = finalReducerKeys[_i];\n\t      var reducer = finalReducers[_key];\n\t      var previousStateForKey = state[_key];\n\t      var nextStateForKey = reducer(previousStateForKey, action);\n\t      if (typeof nextStateForKey === 'undefined') {\n\t        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n\t        throw new Error(errorMessage);\n\t      }\n\t      nextState[_key] = nextStateForKey;\n\t      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n\t    }\n\t    return hasChanged ? nextState : state;\n\t  };\n\t}\n\n/***/ }),\n\n/***/ 69:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = compose;\n\t/**\n\t * Composes single-argument functions from right to left. The rightmost\n\t * function can take multiple arguments as it provides the signature for\n\t * the resulting composite function.\n\t *\n\t * @param {...Function} funcs The functions to compose.\n\t * @returns {Function} A function obtained by composing the argument functions\n\t * from right to left. For example, compose(f, g, h) is identical to doing\n\t * (...args) => f(g(h(...args))).\n\t */\n\t\n\tfunction compose() {\n\t  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n\t    funcs[_key] = arguments[_key];\n\t  }\n\t\n\t  if (funcs.length === 0) {\n\t    return function (arg) {\n\t      return arg;\n\t    };\n\t  }\n\t\n\t  if (funcs.length === 1) {\n\t    return funcs[0];\n\t  }\n\t\n\t  return funcs.reduce(function (a, b) {\n\t    return function () {\n\t      return a(b.apply(undefined, arguments));\n\t    };\n\t  });\n\t}\n\n/***/ }),\n\n/***/ 70:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.ActionTypes = undefined;\n\texports['default'] = createStore;\n\t\n\tvar _isPlainObject = __webpack_require__(36);\n\t\n\tvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\t\n\tvar _symbolObservable = __webpack_require__(151);\n\t\n\tvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/**\n\t * These are private action types reserved by Redux.\n\t * For any unknown actions, you must return the current state.\n\t * If the current state is undefined, you must return the initial state.\n\t * Do not reference these action types directly in your code.\n\t */\n\tvar ActionTypes = exports.ActionTypes = {\n\t  INIT: '@@redux/INIT'\n\t\n\t  /**\n\t   * Creates a Redux store that holds the state tree.\n\t   * The only way to change the data in the store is to call `dispatch()` on it.\n\t   *\n\t   * There should only be a single store in your app. To specify how different\n\t   * parts of the state tree respond to actions, you may combine several reducers\n\t   * into a single reducer function by using `combineReducers`.\n\t   *\n\t   * @param {Function} reducer A function that returns the next state tree, given\n\t   * the current state tree and the action to handle.\n\t   *\n\t   * @param {any} [preloadedState] The initial state. You may optionally specify it\n\t   * to hydrate the state from the server in universal apps, or to restore a\n\t   * previously serialized user session.\n\t   * If you use `combineReducers` to produce the root reducer function, this must be\n\t   * an object with the same shape as `combineReducers` keys.\n\t   *\n\t   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n\t   * to enhance the store with third-party capabilities such as middleware,\n\t   * time travel, persistence, etc. The only store enhancer that ships with Redux\n\t   * is `applyMiddleware()`.\n\t   *\n\t   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n\t   * and subscribe to changes.\n\t   */\n\t};function createStore(reducer, preloadedState, enhancer) {\n\t  var _ref2;\n\t\n\t  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n\t    enhancer = preloadedState;\n\t    preloadedState = undefined;\n\t  }\n\t\n\t  if (typeof enhancer !== 'undefined') {\n\t    if (typeof enhancer !== 'function') {\n\t      throw new Error('Expected the enhancer to be a function.');\n\t    }\n\t\n\t    return enhancer(createStore)(reducer, preloadedState);\n\t  }\n\t\n\t  if (typeof reducer !== 'function') {\n\t    throw new Error('Expected the reducer to be a function.');\n\t  }\n\t\n\t  var currentReducer = reducer;\n\t  var currentState = preloadedState;\n\t  var currentListeners = [];\n\t  var nextListeners = currentListeners;\n\t  var isDispatching = false;\n\t\n\t  function ensureCanMutateNextListeners() {\n\t    if (nextListeners === currentListeners) {\n\t      nextListeners = currentListeners.slice();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reads the state tree managed by the store.\n\t   *\n\t   * @returns {any} The current state tree of your application.\n\t   */\n\t  function getState() {\n\t    return currentState;\n\t  }\n\t\n\t  /**\n\t   * Adds a change listener. It will be called any time an action is dispatched,\n\t   * and some part of the state tree may potentially have changed. You may then\n\t   * call `getState()` to read the current state tree inside the callback.\n\t   *\n\t   * You may call `dispatch()` from a change listener, with the following\n\t   * caveats:\n\t   *\n\t   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n\t   * If you subscribe or unsubscribe while the listeners are being invoked, this\n\t   * will not have any effect on the `dispatch()` that is currently in progress.\n\t   * However, the next `dispatch()` call, whether nested or not, will use a more\n\t   * recent snapshot of the subscription list.\n\t   *\n\t   * 2. The listener should not expect to see all state changes, as the state\n\t   * might have been updated multiple times during a nested `dispatch()` before\n\t   * the listener is called. It is, however, guaranteed that all subscribers\n\t   * registered before the `dispatch()` started will be called with the latest\n\t   * state by the time it exits.\n\t   *\n\t   * @param {Function} listener A callback to be invoked on every dispatch.\n\t   * @returns {Function} A function to remove this change listener.\n\t   */\n\t  function subscribe(listener) {\n\t    if (typeof listener !== 'function') {\n\t      throw new Error('Expected listener to be a function.');\n\t    }\n\t\n\t    var isSubscribed = true;\n\t\n\t    ensureCanMutateNextListeners();\n\t    nextListeners.push(listener);\n\t\n\t    return function unsubscribe() {\n\t      if (!isSubscribed) {\n\t        return;\n\t      }\n\t\n\t      isSubscribed = false;\n\t\n\t      ensureCanMutateNextListeners();\n\t      var index = nextListeners.indexOf(listener);\n\t      nextListeners.splice(index, 1);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Dispatches an action. It is the only way to trigger a state change.\n\t   *\n\t   * The `reducer` function, used to create the store, will be called with the\n\t   * current state tree and the given `action`. Its return value will\n\t   * be considered the **next** state of the tree, and the change listeners\n\t   * will be notified.\n\t   *\n\t   * The base implementation only supports plain object actions. If you want to\n\t   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n\t   * wrap your store creating function into the corresponding middleware. For\n\t   * example, see the documentation for the `redux-thunk` package. Even the\n\t   * middleware will eventually dispatch plain object actions using this method.\n\t   *\n\t   * @param {Object} action A plain object representing “what changed”. It is\n\t   * a good idea to keep actions serializable so you can record and replay user\n\t   * sessions, or use the time travelling `redux-devtools`. An action must have\n\t   * a `type` property which may not be `undefined`. It is a good idea to use\n\t   * string constants for action types.\n\t   *\n\t   * @returns {Object} For convenience, the same action object you dispatched.\n\t   *\n\t   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n\t   * return something else (for example, a Promise you can await).\n\t   */\n\t  function dispatch(action) {\n\t    if (!(0, _isPlainObject2['default'])(action)) {\n\t      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n\t    }\n\t\n\t    if (typeof action.type === 'undefined') {\n\t      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n\t    }\n\t\n\t    if (isDispatching) {\n\t      throw new Error('Reducers may not dispatch actions.');\n\t    }\n\t\n\t    try {\n\t      isDispatching = true;\n\t      currentState = currentReducer(currentState, action);\n\t    } finally {\n\t      isDispatching = false;\n\t    }\n\t\n\t    var listeners = currentListeners = nextListeners;\n\t    for (var i = 0; i < listeners.length; i++) {\n\t      var listener = listeners[i];\n\t      listener();\n\t    }\n\t\n\t    return action;\n\t  }\n\t\n\t  /**\n\t   * Replaces the reducer currently used by the store to calculate the state.\n\t   *\n\t   * You might need this if your app implements code splitting and you want to\n\t   * load some of the reducers dynamically. You might also need this if you\n\t   * implement a hot reloading mechanism for Redux.\n\t   *\n\t   * @param {Function} nextReducer The reducer for the store to use instead.\n\t   * @returns {void}\n\t   */\n\t  function replaceReducer(nextReducer) {\n\t    if (typeof nextReducer !== 'function') {\n\t      throw new Error('Expected the nextReducer to be a function.');\n\t    }\n\t\n\t    currentReducer = nextReducer;\n\t    dispatch({ type: ActionTypes.INIT });\n\t  }\n\t\n\t  /**\n\t   * Interoperability point for observable/reactive libraries.\n\t   * @returns {observable} A minimal observable of state changes.\n\t   * For more information, see the observable proposal:\n\t   * https://github.com/tc39/proposal-observable\n\t   */\n\t  function observable() {\n\t    var _ref;\n\t\n\t    var outerSubscribe = subscribe;\n\t    return _ref = {\n\t      /**\n\t       * The minimal observable subscription method.\n\t       * @param {Object} observer Any object that can be used as an observer.\n\t       * The observer object should have a `next` method.\n\t       * @returns {subscription} An object with an `unsubscribe` method that can\n\t       * be used to unsubscribe the observable from the store, and prevent further\n\t       * emission of values from the observable.\n\t       */\n\t      subscribe: function subscribe(observer) {\n\t        if (typeof observer !== 'object') {\n\t          throw new TypeError('Expected the observer to be an object.');\n\t        }\n\t\n\t        function observeState() {\n\t          if (observer.next) {\n\t            observer.next(getState());\n\t          }\n\t        }\n\t\n\t        observeState();\n\t        var unsubscribe = outerSubscribe(observeState);\n\t        return { unsubscribe: unsubscribe };\n\t      }\n\t    }, _ref[_symbolObservable2['default']] = function () {\n\t      return this;\n\t    }, _ref;\n\t  }\n\t\n\t  // When a store is created, an \"INIT\" action is dispatched so that every\n\t  // reducer returns their initial state. This effectively populates\n\t  // the initial state tree.\n\t  dispatch({ type: ActionTypes.INIT });\n\t\n\t  return _ref2 = {\n\t    dispatch: dispatch,\n\t    subscribe: subscribe,\n\t    getState: getState,\n\t    replaceReducer: replaceReducer\n\t  }, _ref2[_symbolObservable2['default']] = observable, _ref2;\n\t}\n\n/***/ }),\n\n/***/ 82:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\t\n\tvar _createStore = __webpack_require__(70);\n\t\n\tvar _createStore2 = _interopRequireDefault(_createStore);\n\t\n\tvar _combineReducers = __webpack_require__(149);\n\t\n\tvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\t\n\tvar _bindActionCreators = __webpack_require__(148);\n\t\n\tvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\t\n\tvar _applyMiddleware = __webpack_require__(147);\n\t\n\tvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\t\n\tvar _compose = __webpack_require__(69);\n\t\n\tvar _compose2 = _interopRequireDefault(_compose);\n\t\n\tvar _warning = __webpack_require__(71);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\t/*\n\t* This is a dummy function to check if the function name has been altered by minification.\n\t* If the function has been minified and NODE_ENV !== 'production', warn the user.\n\t*/\n\tfunction isCrushed() {}\n\t\n\tif (false) {\n\t  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n\t}\n\t\n\texports.createStore = _createStore2['default'];\n\texports.combineReducers = _combineReducers2['default'];\n\texports.bindActionCreators = _bindActionCreators2['default'];\n\texports.applyMiddleware = _applyMiddleware2['default'];\n\texports.compose = _compose2['default'];\n\n/***/ }),\n\n/***/ 71:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = warning;\n\t/**\n\t * Prints a warning in the console if it exists.\n\t *\n\t * @param {String} message The warning message.\n\t * @returns {void}\n\t */\n\tfunction warning(message) {\n\t  /* eslint-disable no-console */\n\t  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t    console.error(message);\n\t  }\n\t  /* eslint-enable no-console */\n\t  try {\n\t    // This error was thrown as a convenience so that if you enable\n\t    // \"break on all exceptions\" in your console,\n\t    // it would pause the execution at this line.\n\t    throw new Error(message);\n\t    /* eslint-disable no-empty */\n\t  } catch (e) {}\n\t  /* eslint-enable no-empty */\n\t}\n\n/***/ }),\n\n/***/ 274:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t      // Callback can either be a function or a string\n\t      if (typeof callback !== \"function\") {\n\t        callback = new Function(\"\" + callback);\n\t      }\n\t      // Copy function arguments\n\t      var args = new Array(arguments.length - 1);\n\t      for (var i = 0; i < args.length; i++) {\n\t          args[i] = arguments[i + 1];\n\t      }\n\t      // Store and register the task\n\t      var task = { callback: callback, args: args };\n\t      tasksByHandle[nextHandle] = task;\n\t      registerImmediate(nextHandle);\n\t      return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t        case 0:\n\t            callback();\n\t            break;\n\t        case 1:\n\t            callback(args[0]);\n\t            break;\n\t        case 2:\n\t            callback(args[0], args[1]);\n\t            break;\n\t        case 3:\n\t            callback(args[0], args[1], args[2]);\n\t            break;\n\t        default:\n\t            callback.apply(undefined, args);\n\t            break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function(handle) {\n\t            process.nextTick(function () { runIfPresent(handle); });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function() {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function(event) {\n\t            if (event.source === global &&\n\t                typeof event.data === \"string\" &&\n\t                event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function(event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(100)))\n\n/***/ }),\n\n/***/ 843:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t// Pulled from react-compat\n\t// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\n\tfunction shallowDiffers(a, b) {\n\t  for (var i in a) {\n\t    if (!(i in b)) return true;\n\t  }for (var _i in b) {\n\t    if (a[_i] !== b[_i]) return true;\n\t  }return false;\n\t}\n\t\n\texports.default = function (instance, nextProps, nextState) {\n\t  return shallowDiffers(instance.props, nextProps) || shallowDiffers(instance.state, nextState);\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 107:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t;(function (name, root, factory) {\n\t  if (true) {\n\t    module.exports = factory()\n\t    module.exports['default'] = factory()\n\t  }\n\t  /* istanbul ignore next */\n\t  else if (typeof define === 'function' && define.amd) {\n\t    define(factory)\n\t  }\n\t  else {\n\t    root[name] = factory()\n\t  }\n\t}('slugify', this, function () {\n\t  /* eslint-disable */\n\t  var charMap = JSON.parse('{\"$\":\"dollar\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₹\":\"indian rupee\",\"₽\":\"russian ruble\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\"}')\n\t  /* eslint-enable */\n\t\n\t  function replace (string, options) {\n\t    if (typeof string !== 'string') {\n\t      throw new Error('slugify: string argument expected')\n\t    }\n\t\n\t    options = (typeof options === 'string')\n\t      ? {replacement: options}\n\t      : options || {}\n\t\n\t    var slug = string.split('')\n\t      .reduce(function (result, ch) {\n\t        return result + (charMap[ch] || ch)\n\t          // allowed\n\t          .replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]/g, '')\n\t      }, '')\n\t      // trim leading/trailing spaces\n\t      .replace(/^\\s+|\\s+$/g, '')\n\t      // convert spaces\n\t      .replace(/[-\\s]+/g, options.replacement || '-')\n\t      // remove trailing separator\n\t      .replace('#{replacement}$', '')\n\t\n\t    return options.lower ? slug.toLowerCase() : slug\n\t  }\n\t\n\t  replace.extend = function (customMap) {\n\t    for (var key in customMap) {\n\t      charMap[key] = customMap[key]\n\t    }\n\t  }\n\t\n\t  return replace\n\t}))\n\n\n/***/ }),\n\n/***/ 151:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _ponyfill = __webpack_require__(152);\n\t\n\tvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar root; /* global window */\n\t\n\t\n\tif (typeof self !== 'undefined') {\n\t  root = self;\n\t} else if (typeof window !== 'undefined') {\n\t  root = window;\n\t} else if (typeof global !== 'undefined') {\n\t  root = global;\n\t} else if (true) {\n\t  root = module;\n\t} else {\n\t  root = Function('return this')();\n\t}\n\t\n\tvar result = (0, _ponyfill2['default'])(root);\n\texports['default'] = result;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(155)(module)))\n\n/***/ }),\n\n/***/ 152:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports['default'] = symbolObservablePonyfill;\n\tfunction symbolObservablePonyfill(root) {\n\t\tvar result;\n\t\tvar _Symbol = root.Symbol;\n\t\n\t\tif (typeof _Symbol === 'function') {\n\t\t\tif (_Symbol.observable) {\n\t\t\t\tresult = _Symbol.observable;\n\t\t\t} else {\n\t\t\t\tresult = _Symbol('observable');\n\t\t\t\t_Symbol.observable = result;\n\t\t\t}\n\t\t} else {\n\t\t\tresult = '@@observable';\n\t\t}\n\t\n\t\treturn result;\n\t};\n\n/***/ }),\n\n/***/ 153:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n\t            (typeof self !== \"undefined\" && self) ||\n\t            window;\n\tvar apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(scope, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(274);\n\t// On some exotic environments, it's not clear which object `setimmediate` was\n\t// able to install onto.  Search each possibility in the same order as the\n\t// `setimmediate` library.\n\texports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n\t                       (typeof global !== \"undefined\" && global.setImmediate) ||\n\t                       (this && this.setImmediate);\n\texports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n\t                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n\t                         (this && this.clearImmediate);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 155:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n\n/***/ 248:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"All\":\"All commodities\",\"Crude Oil\":\"Crude oil\",\"CO2\":\"Carbon dioxide\",\"Geothermal\":\"Geothermal\",\"Hardrock\":\"Hardrock minerals\",\"Natural Gas\":\"Natural gas\",\"NGL\":\"Natural gas liquids\",\"Wood and wood-derived fuels\":\"Wood-derived fuel\",\"Conventional Hydroelectric\":\"Hydroelectric\"}\n\n/***/ }),\n\n/***/ 249:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"States\":{\"name\":\"State and local governments\",\"description\":\"Funds disbursed to states fall under the jurisdiction of each state, and each state determines how the funds will be used.\"},\"U.S. Treasury\":{\"name\":\"U.S. Treasury\",\"description\":\"The federal government’s basic operating fund pays for roughly two-thirds of all federal expenditures, including the military, national parks, and schools.\"},\"Reclamation\":{\"name\":\"Reclamation Fund\",\"description\":\"Supports the establishment of critical infrastructure projects like dams and power plants.\"},\"Land & Water Conservation\":{\"name\":\"Land and Water Conservation Fund\",\"description\":\"Provides matching grants to states and local governments to buy and develop public outdoor recreation areas across the 50 states.\",\"link\":{\"name\":\"How this fund works\",\"to\":\"/how-it-works/land-and-water-conservation-fund/\"}},\"Historic Preservation\":{\"name\":\"Historic Preservation Fund\",\"description\":\"Helps preserve U.S. historical and archaeological sites and cultural heritage through grants to state and tribal historic preservation offices.\",\"link\":{\"name\":\"How this fund works\",\"to\":\"/how-it-works/historic-preservation-fund/\"}},\"American Indian Tribes\":{\"name\":\"Native American tribes and individuals\",\"description\":\"ONRR disburses 100% of revenue collected from resource extraction on Native American lands back to tribes, nations, and individuals.\"},\"Other\":{\"name\":\"Other funds\",\"description\":\"Some funds are directed back to federal agencies that administer these lands to help cover operational costs. The Ultra-Deepwater Research Program and the Mescal Settlement Agreement also receive $50 million each.\"}}\n\n/***/ }),\n\n/***/ 21:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _slugify = __webpack_require__(107);\n\t\n\tvar _slugify2 = _interopRequireDefault(_slugify);\n\t\n\tvar _currencyFormatter = __webpack_require__(235);\n\t\n\tvar _currencyFormatter2 = _interopRequireDefault(_currencyFormatter);\n\t\n\tvar _commodity_names = __webpack_require__(248);\n\t\n\tvar _commodity_names2 = _interopRequireDefault(_commodity_names);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar utils = {\n\t\tgetDisplayName: function getDisplayName(key) {\n\t\t\treturn _commodity_names2.default[key] || key;\n\t\t},\n\t\n\t\tformatToSlug: function formatToSlug(name) {\n\t\t\treturn (0, _slugify2.default)(name, { lower: true, remove: /[$*_+~.()'\"!\\:@,]/g }).replace('-and-', '-');\n\t\t},\n\t\n\t\tformatToDollarInt: function formatToDollarInt(value) {\n\t\t\treturn _currencyFormatter2.default.format(value, { symbol: '$', precision: 0, format: { pos: '%s%v', neg: '(%s%v)', zero: '%s%v' } });\n\t\t},\n\t\n\t\tformatToCommaInt: function formatToCommaInt(value) {\n\t\t\treturn _currencyFormatter2.default.format(value, { symbol: '', precision: 0, format: { pos: '%s%v', neg: '(%s%v)', zero: '%s%v' } });\n\t\t},\n\t\tthrottle: function throttle(callback, limit) {\n\t\t\tvar wait = true; // Initially, we're not waiting\n\t\t\treturn function () {\n\t\t\t\t// We return a throttled function\n\t\t\t\tif (wait) {\n\t\t\t\t\t// If we're not waiting  \t\t\t\t\t\n\t\t\t\t\twait = false; // Prevent future invocations\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t// After a period of time\n\t\t\t\t\t\tcallback.call(); // Execute users function\n\t\t\t\t\t\twait = true; // And allow future invocations\n\t\t\t\t\t}, limit);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tgroupBy: function groupBy(data, group) {\n\t\t\tvar _this = this;\n\t\n\t\t\tvar groups = {};\n\t\n\t\t\tdata.map(function (item, index) {\n\t\t\t\tvar itemGroup = _this.resolveByStringPath(group, item);\n\t\t\t\tvar list = groups[itemGroup];\n\t\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tgroups[itemGroup] = [item];\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\treturn groups;\n\t\t},\n\t\tresolveByStringPath: function resolveByStringPath(path, obj) {\n\t\t\treturn path.split('.').reduce(function (prev, curr) {\n\t\t\t\treturn prev ? prev[curr] : undefined;\n\t\t\t}, obj || self);\n\t\t},\n\t\trange: function range(start, end) {\n\t\t\treturn Array(end - start + 1).fill().map(function (_, idx) {\n\t\t\t\treturn start + idx;\n\t\t\t});\n\t\t}\n\t};\n\t\n\t// Import Display Name Yaml Files\n\texports.default = utils;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 712:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      52\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(162898551421021, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(420) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 713:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      52\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(10991734084388, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(421) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 714:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      52\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(257298155543294, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(422) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 278:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _redux = __webpack_require__(82);\n\t\n\tvar _index = __webpack_require__(423);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* global window:true */\n\t/* eslint no-underscore-dangle: 0 */\n\t\n\texports.default = function () {\n\t  var devtools =  false ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n\t    return f;\n\t  };\n\t\n\t  return (0, _redux.createStore)(_index2.default, devtools);\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 158:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.hydateDisbursements = exports.selectYear = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _fund_names = __webpack_require__(249);\n\t\n\tvar _fund_names2 = _interopRequireDefault(_fund_names);\n\t\n\tvar _utils = __webpack_require__(21);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _lazy = __webpack_require__(23);\n\t\n\tvar _lazy2 = _interopRequireDefault(_lazy);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Initial state is used for the pattern library and seeding any additional data\n\tvar initialState = {\n\t    year: 2018,\n\t    years: [2018],\n\t    disbursements: {\n\t        2017: {\n\t            year: \"2018\",\n\t            total: 10000,\n\t            highestFundValue: 10000,\n\t            disbursements: [{\n\t                States: {\n\t                    description: \"Fund Description\",\n\t                    name: \"Fund Display Name\",\n\t                    sortOrderIndex: 0,\n\t                    total: 10000,\n\t                    disbursements: [{ Onshore: 5000, GOMESA: 3000, Offshore: 2000 }]\n\t                }\n\t            }]\n\t        }\n\t    },\n\t    fundInfo: _fund_names2.default\n\t};\n\t\n\t// Define Action Types\n\tvar SELECT_YEAR = 'SELECT_YEAR';\n\tvar HYDRATE_DISBURSEMENTS = 'HYDRATE_DISBURSEMENTS';\n\t\n\t// Define Action Creators \n\tvar selectYear = exports.selectYear = function selectYear(year) {\n\t    return { type: SELECT_YEAR, payload: year };\n\t};\n\tvar hydateDisbursements = exports.hydateDisbursements = function hydateDisbursements(disbursements) {\n\t    return { type: HYDRATE_DISBURSEMENTS, payload: disbursements };\n\t};\n\t\n\t// Define Reducers\n\t\n\texports.default = function () {\n\t    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t    var action = arguments[1];\n\t    var type = action.type,\n\t        payload = action.payload;\n\t\n\t\n\t    switch (type) {\n\t        case SELECT_YEAR:\n\t            return _extends({}, state, { 'year': payload });\n\t        case HYDRATE_DISBURSEMENTS:\n\t            var newState = hydrateDisbursements(payload, state.year, state.fundInfo);\n\t            return _extends({}, state, newState);\n\t        default:\n\t            return state;\n\t    }\n\t};\n\t\n\tvar hydrateDisbursements = function hydrateDisbursements(data, year, fundInfo) {\n\t    var newState = {};\n\t    var sortedByYear = (0, _lazy2.default)(data).sortBy(\"Year\", true).toArray();\n\t    newState.years = (0, _lazy2.default)(_utils2.default.range(parseInt(sortedByYear[sortedByYear.length - 1].Year), parseInt(sortedByYear[0].Year))).sort(null, true).toArray();\n\t    newState.year = Math.max.apply(Math, newState.years);\n\t\n\t    var fundSortOrder = {};\n\t    newState.disbursements = {};\n\t    sortedByYear.map(function (disbursementsForYear, index) {\n\t        newState.disbursements[disbursementsForYear.Year] = hydrateDisbursementsForYear(disbursementsForYear, fundInfo, fundSortOrder);\n\t\n\t        // Set Sort order for funds by the highest year value\n\t        // The display order should not change from year to year and is set by the last year of data\n\t        // Using zero index since we already have the data sorted descending by year\n\t        if (index === 0) {\n\t            // Sort descending by total\n\t            newState.disbursements[disbursementsForYear.Year].disbursements.sort(function (a, b) {\n\t                return b[Object.keys(b)[0]].total - a[Object.keys(a)[0]].total;\n\t            });\n\t\n\t            newState.disbursements[disbursementsForYear.Year].disbursements.map(function (fund, index) {\n\t                fund[Object.keys(fund)[0]].sortOrderIndex = index;\n\t                fundSortOrder[Object.keys(fund)[0]] = index;\n\t            });\n\t        } else {\n\t            // Sort ascending by sortOrderIndex\n\t            newState.disbursements[disbursementsForYear.Year].disbursements.sort(function (a, b) {\n\t                return a[Object.keys(a)[0]].sortOrderIndex - b[Object.keys(b)[0]].sortOrderIndex;\n\t            });\n\t        }\n\t    });\n\t\n\t    return newState;\n\t};\n\t\n\tvar hydrateDisbursementsForYear = function hydrateDisbursementsForYear(disbursementsForYear, fundInfo, fundSortOrder) {\n\t    var newState = {\n\t        year: disbursementsForYear.Year,\n\t        total: 0,\n\t        highestFundValue: 0,\n\t        disbursements: []\n\t    };\n\t\n\t    if (disbursementsForYear) {\n\t        var disbursementsByFund = _utils2.default.groupBy(disbursementsForYear.disbursements, \"disbursement.Fund\");\n\t\n\t        // Go through all the funds if a fund has no data it will be zero, with no disbursements\n\t\n\t        var _loop = function _loop(fundKey) {\n\t            var fundToAdd = {};\n\t            fundToAdd[fundKey] = {\n\t                total: 0,\n\t                disbursements: [],\n\t                name: fundInfo[fundKey] ? fundInfo[fundKey].name : fundKey,\n\t                description: fundInfo[fundKey] ? fundInfo[fundKey].description : \"\",\n\t                link: fundInfo[fundKey] ? fundInfo[fundKey].link : undefined,\n\t                sortOrderIndex: fundSortOrder[fundKey]\n\t            };\n\t\n\t            var sourceData = void 0;\n\t\n\t            if (disbursementsByFund[fundKey]) {\n\t                sourceData = {};\n\t                disbursementsByFund[fundKey].map(function (fundData, index) {\n\t                    sourceData[fundData.disbursement.Source] = Math.round(fundData.disbursement.Disbursement);\n\t\n\t                    fundToAdd[fundKey].total += fundData.disbursement.Disbursement;\n\t                    newState.total += fundData.disbursement.Disbursement;\n\t                });\n\t            }\n\t            if (sourceData) {\n\t                fundToAdd[fundKey].disbursements.push(sourceData);\n\t            } else {\n\t                fundToAdd[fundKey].disbursements = undefined;\n\t            }\n\t\n\t            if (newState.highestFundValue < fundToAdd[fundKey].total) {\n\t                newState.highestFundValue = fundToAdd[fundKey].total;\n\t            }\n\t\n\t            newState.disbursements.push(fundToAdd);\n\t        };\n\t\n\t        for (var fundKey in fundInfo) {\n\t            _loop(fundKey);\n\t        }\n\t    }\n\t\n\t    return newState;\n\t};\n\n/***/ }),\n\n/***/ 55:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar initialState = {\n\t  glossaryTerm: \"\",\n\t  glossaryOpen: false\n\t};\n\t\n\t// Define Action Types\n\tvar GLOSSARY_TERM_SELECTED = 'GLOSSARY_TERM_SELECTED';\n\tvar YEAR_SELECTED = 'YEAR_SELECTED';\n\t\n\t// Define Action Creators \n\tvar glossaryTermSelected = exports.glossaryTermSelected = function glossaryTermSelected(term) {\n\t  var doOpen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t  return { type: GLOSSARY_TERM_SELECTED, payload: term, openGlossary: doOpen };\n\t};\n\t\n\t// Define Reducers\n\t\n\texports.default = function () {\n\t  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t  var action = arguments[1];\n\t  var type = action.type,\n\t      payload = action.payload;\n\t\n\t\n\t  switch (type) {\n\t    case GLOSSARY_TERM_SELECTED:\n\t      return _extends({}, state, { glossaryTerm: payload, glossaryOpen: action.openGlossary });\n\t    default:\n\t      return state;\n\t  }\n\t};\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.createReducer = undefined;\n\t\n\tvar _redux = __webpack_require__(82);\n\t\n\tvar _glossary = __webpack_require__(55);\n\t\n\tvar _glossary2 = _interopRequireDefault(_glossary);\n\t\n\tvar _disbursements = __webpack_require__(158);\n\t\n\tvar _disbursements2 = _interopRequireDefault(_disbursements);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = (0, _redux.combineReducers)({ glossary: _glossary2.default, disbursements: _disbursements2.default });\n\tvar createReducer = exports.createReducer = function createReducer(initialState, handlers) {\n\t\treturn function reducer() {\n\t\t\tvar state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t\t\tvar action = arguments[1];\n\t\n\t\t\tif (handlers.hasOwnProperty(action.type)) {\n\t\t\t\treturn handlers[action.type](state, action);\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t};\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// app-3b9f50df1dcce21f5ee1.js","var plugins = [{\n      plugin: require('C:/Development/doi-extractives-data/gatsby-site/gatsby-browser'),\n      options: {\"plugins\":[]},\n    }]\n// During bootstrap, we write requires at top of this file which looks\n// basically like:\n// var plugins = [\n//   {\n//     plugin: require(\"/path/to/plugin1/gatsby-browser.js\"),\n//     options: { ... },\n//   },\n//   {\n//     plugin: require(\"/path/to/plugin2/gatsby-browser.js\"),\n//     options: { ... },\n//   },\n// ]\n\nexport function apiRunner(api, args, defaultReturn) {\n  let results = plugins.map(plugin => {\n    if (plugin.plugin[api]) {\n      const result = plugin.plugin[api](args, plugin.options)\n      return result\n    }\n  })\n\n  // Filter out undefined results.\n  results = results.filter(result => typeof result !== `undefined`)\n\n  if (results.length > 0) {\n    return results\n  } else if (defaultReturn) {\n    return [defaultReturn]\n  } else {\n    return []\n  }\n}\n\nexport function apiRunnerAsync(api, args, defaultReturn) {\n  return plugins.reduce(\n    (previous, next) =>\n      next.plugin[api]\n        ? previous.then(() => next.plugin[api](args, next.options))\n        : previous,\n    Promise.resolve()\n  )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/api-runner-browser.js","// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\nexports.components = {\n  \"component---src-pages-404-js\": require(\"gatsby-module-loader?name=component---src-pages-404-js!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\src\\\\pages\\\\404.js\"),\n  \"component---src-pages-about-index-js\": require(\"gatsby-module-loader?name=component---src-pages-about-index-js!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\src\\\\pages\\\\About\\\\index.js\"),\n  \"component---src-pages-explore-index-js\": require(\"gatsby-module-loader?name=component---src-pages-explore-index-js!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\src\\\\pages\\\\Explore\\\\index.js\")\n}\n\nexports.json = {\n  \"layout-index.json\": require(\"gatsby-module-loader?name=path---!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\layout-index.json\"),\n  \"404.json\": require(\"gatsby-module-loader?name=path---404!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\404.json\"),\n  \"about.json\": require(\"gatsby-module-loader?name=path---about!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\about.json\"),\n  \"explore.json\": require(\"gatsby-module-loader?name=path---explore!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\explore.json\"),\n  \"404-html.json\": require(\"gatsby-module-loader?name=path---404-html!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\404-html.json\")\n}\n\nexports.layouts = {\n  \"layout---index\": require(\"gatsby-module-loader?name=component---src-layouts-index-js!C:/Development/doi-extractives-data/gatsby-site/.cache/layouts/index.js\")\n}\n\n\n// WEBPACK FOOTER //\n// ./.cache/async-requires.js","import React, { createElement } from \"react\"\nimport PropTypes from \"prop-types\"\nimport loader, { publicLoader } from \"./loader\"\nimport emitter from \"./emitter\"\nimport { apiRunner } from \"./api-runner-browser\"\nimport shallowCompare from \"shallow-compare\"\n\nconst DefaultLayout = ({ children }) => <div>{children()}</div>\n\n// Pass pathname in as prop.\n// component will try fetching resources. If they exist,\n// will just render, else will render null.\nclass ComponentRenderer extends React.Component {\n  constructor(props) {\n    super()\n    let location = props.location\n\n    // Set the pathname for 404 pages.\n    if (!loader.getPage(location.pathname)) {\n      location = Object.assign({}, location, {\n        pathname: `/404.html`,\n      })\n    }\n\n    this.state = {\n      location,\n      pageResources: loader.getResourcesForPathname(location.pathname),\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // During development, always pass a component's JSON through so graphql\n    // updates go through.\n    if (process.env.NODE_ENV !== `production`) {\n      if (\n        nextProps &&\n        nextProps.pageResources &&\n        nextProps.pageResources.json\n      ) {\n        this.setState({ pageResources: nextProps.pageResources })\n      }\n    }\n    if (this.state.location.pathname !== nextProps.location.pathname) {\n      const pageResources = loader.getResourcesForPathname(\n        nextProps.location.pathname\n      )\n      if (!pageResources) {\n        let location = nextProps.location\n\n        // Set the pathname for 404 pages.\n        if (!loader.getPage(location.pathname)) {\n          location = Object.assign({}, location, {\n            pathname: `/404.html`,\n          })\n        }\n\n        // Page resources won't be set in cases where the browser back button\n        // or forward button is pushed as we can't wait as normal for resources\n        // to load before changing the page.\n        loader.getResourcesForPathname(location.pathname, pageResources => {\n          this.setState({\n            location,\n            pageResources,\n          })\n        })\n      } else {\n        this.setState({\n          location: nextProps.location,\n          pageResources,\n        })\n      }\n    }\n  }\n\n  componentDidMount() {\n    // Listen to events so when our page gets updated, we can transition.\n    // This is only useful on delayed transitions as the page will get rendered\n    // without the necessary page resources and then re-render once those come in.\n    emitter.on(`onPostLoadPageResources`, e => {\n      if (\n        loader.getPage(this.state.location.pathname) &&\n        e.page.path === loader.getPage(this.state.location.pathname).path\n      ) {\n        this.setState({ pageResources: e.pageResources })\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // 404\n    if (!nextState.pageResources) {\n      return true\n    }\n    // Check if the component or json have changed.\n    if (!this.state.pageResources && nextState.pageResources) {\n      return true\n    }\n    if (\n      this.state.pageResources.component !== nextState.pageResources.component\n    ) {\n      return true\n    }\n\n    if (this.state.pageResources.json !== nextState.pageResources.json) {\n      return true\n    }\n\n    // Check if location has changed on a page using internal routing\n    // via matchPath configuration.\n    if (\n      this.state.location.key !== nextState.location.key &&\n      nextState.pageResources.page &&\n      (nextState.pageResources.page.matchPath ||\n        nextState.pageResources.page.path)\n    ) {\n      return true\n    }\n\n    return shallowCompare(this, nextProps, nextState)\n  }\n\n  render() {\n    const pluginResponses = apiRunner(`replaceComponentRenderer`, {\n      props: { ...this.props, pageResources: this.state.pageResources },\n      loader: publicLoader,\n    })\n    const replacementComponent = pluginResponses[0]\n    // If page.\n    if (this.props.page) {\n      if (this.state.pageResources) {\n        return (\n          replacementComponent ||\n          createElement(this.state.pageResources.component, {\n            key: this.props.location.pathname,\n            ...this.props,\n            ...this.state.pageResources.json,\n          })\n        )\n      } else {\n        return null\n      }\n      // If layout.\n    } else if (this.props.layout) {\n      return (\n        replacementComponent ||\n        createElement(\n          this.state.pageResources && this.state.pageResources.layout\n            ? this.state.pageResources.layout\n            : DefaultLayout,\n          {\n            key:\n              this.state.pageResources && this.state.pageResources.layout\n                ? this.state.pageResources.layout\n                : `DefaultLayout`,\n            ...this.props,\n          }\n        )\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nComponentRenderer.propTypes = {\n  page: PropTypes.bool,\n  layout: PropTypes.bool,\n  location: PropTypes.object,\n}\n\nexport default ComponentRenderer\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/component-renderer.js","import mitt from \"mitt\"\nconst emitter = mitt()\nmodule.exports = emitter\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/emitter.js","// TODO add tests especially for handling prefixed links.\nimport { matchPath } from \"react-router-dom\"\nimport stripPrefix from \"./strip-prefix\"\n\nconst pageCache = {}\n\nmodule.exports = (pages, pathPrefix = ``) => rawPathname => {\n  let pathname = decodeURIComponent(rawPathname)\n\n  // Remove the pathPrefix from the pathname.\n  let trimmedPathname = stripPrefix(pathname, pathPrefix)\n\n  // Remove any hashfragment\n  if (trimmedPathname.split(`#`).length > 1) {\n    trimmedPathname = trimmedPathname\n      .split(`#`)\n      .slice(0, -1)\n      .join(``)\n  }\n\n  // Remove search query\n  if (trimmedPathname.split(`?`).length > 1) {\n    trimmedPathname = trimmedPathname\n      .split(`?`)\n      .slice(0, -1)\n      .join(``)\n  }\n\n  if (pageCache[trimmedPathname]) {\n    return pageCache[trimmedPathname]\n  }\n\n  let foundPage\n  // Array.prototype.find is not supported in IE so we use this somewhat odd\n  // work around.\n  pages.some(page => {\n    if (page.matchPath) {\n      // Try both the path and matchPath\n      if (\n        matchPath(trimmedPathname, { path: page.path }) ||\n        matchPath(trimmedPathname, {\n          path: page.matchPath,\n        })\n      ) {\n        foundPage = page\n        pageCache[trimmedPathname] = page\n        return true\n      }\n    } else {\n      if (\n        matchPath(trimmedPathname, {\n          path: page.path,\n          exact: true,\n        })\n      ) {\n        foundPage = page\n        pageCache[trimmedPathname] = page\n        return true\n      }\n\n      // Finally, try and match request with default document.\n      if (\n        matchPath(trimmedPathname, {\n          path: page.path + `index.html`,\n        })\n      ) {\n        foundPage = page\n        pageCache[trimmedPathname] = page\n        return true\n      }\n    }\n\n    return false\n  })\n\n  return foundPage\n}\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/find-page.js","import createHistory from \"history/createBrowserHistory\"\nimport { apiRunner } from \"./api-runner-browser\"\n\nconst pluginResponses = apiRunner(`replaceHistory`)\nconst replacementHistory = pluginResponses[0]\nconst history = replacementHistory || createHistory()\nmodule.exports = history\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/history.js","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./404-html.json\") })\n        }\n      }, \"path---404-html\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---404-html!./.cache/json/404-html.json\n// module id = 717\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./404.json\") })\n        }\n      }, \"path---404\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---404!./.cache/json/404.json\n// module id = 716\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./about.json\") })\n        }\n      }, \"path---about\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---about!./.cache/json/about.json\n// module id = 718\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./explore.json\") })\n        }\n      }, \"path---explore\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---explore!./.cache/json/explore.json\n// module id = 719\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./layout-index.json\") })\n        }\n      }, \"path---\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---!./.cache/json/layout-index.json\n// module id = 715\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\gatsby\\\\\\\\dist\\\\\\\\utils\\\\\\\\babel-plugin-extract-graphql.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-add-module-exports\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-transform-object-assign\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"presets\\\":[[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-env\\\\\\\\lib\\\\\\\\index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-stage-0\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-react\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"cacheDirectory\\\":true}!./index.js\") })\n        }\n      }, \"component---src-layouts-index-js\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=component---src-layouts-index-js!./.cache/layouts/index.js\n// module id = 711\n// module chunks = 231608221292675","import React, { createElement } from \"react\"\nimport pageFinderFactory from \"./find-page\"\nimport emitter from \"./emitter\"\nimport stripPrefix from \"./strip-prefix\"\nlet findPage\n\nlet syncRequires = {}\nlet asyncRequires = {}\nlet pathScriptsCache = {}\nlet resourceStrCache = {}\nlet resourceCache = {}\nlet pages = []\n// Note we're not actively using the path data atm. There\n// could be future optimizations however around trying to ensure\n// we load all resources for likely-to-be-visited paths.\nlet pathArray = []\nlet pathCount = {}\nlet pathPrefix = ``\nlet resourcesArray = []\nlet resourcesCount = {}\nconst preferDefault = m => (m && m.default) || m\nlet prefetcher\nlet inInitialRender = true\nlet fetchHistory = []\nconst failedPaths = {}\nconst failedResources = {}\nconst MAX_HISTORY = 5\n\n// Prefetcher logic\nif (process.env.NODE_ENV === `production`) {\n  prefetcher = require(`./prefetcher`)({\n    getNextQueuedResources: () => resourcesArray.slice(-1)[0],\n    createResourceDownload: resourceName => {\n      fetchResource(resourceName, () => {\n        resourcesArray = resourcesArray.filter(r => r !== resourceName)\n        prefetcher.onResourcedFinished(resourceName)\n      })\n    },\n  })\n  emitter.on(`onPreLoadPageResources`, e => {\n    prefetcher.onPreLoadPageResources(e)\n  })\n  emitter.on(`onPostLoadPageResources`, e => {\n    prefetcher.onPostLoadPageResources(e)\n  })\n}\n\nconst sortResourcesByCount = (a, b) => {\n  if (resourcesCount[a] > resourcesCount[b]) {\n    return 1\n  } else if (resourcesCount[a] < resourcesCount[b]) {\n    return -1\n  } else {\n    return 0\n  }\n}\n\nconst sortPagesByCount = (a, b) => {\n  if (pathCount[a] > pathCount[b]) {\n    return 1\n  } else if (pathCount[a] < pathCount[b]) {\n    return -1\n  } else {\n    return 0\n  }\n}\n\nconst fetchResource = (resourceName, cb = () => {}) => {\n  if (resourceStrCache[resourceName]) {\n    process.nextTick(() => {\n      cb(null, resourceStrCache[resourceName])\n    })\n  } else {\n    // Find resource\n    let resourceFunction\n    if (resourceName.slice(0, 12) === `component---`) {\n      resourceFunction = asyncRequires.components[resourceName]\n    } else if (resourceName.slice(0, 9) === `layout---`) {\n      resourceFunction = asyncRequires.layouts[resourceName]\n    } else {\n      resourceFunction = asyncRequires.json[resourceName]\n    }\n\n    // Download the resource\n    resourceFunction((err, executeChunk) => {\n      resourceStrCache[resourceName] = executeChunk\n      fetchHistory.push({\n        resource: resourceName,\n        succeeded: !err,\n      })\n\n      if (!failedResources[resourceName]) {\n        failedResources[resourceName] = err\n      }\n\n      fetchHistory = fetchHistory.slice(-MAX_HISTORY)\n      cb(err, executeChunk)\n    })\n  }\n}\n\nconst getResourceModule = (resourceName, cb) => {\n  if (resourceCache[resourceName]) {\n    process.nextTick(() => {\n      cb(null, resourceCache[resourceName])\n    })\n  } else if (failedResources[resourceName]) {\n    process.nextTick(() => {\n      cb(failedResources[resourceName])\n    })\n  } else {\n    fetchResource(resourceName, (err, executeChunk) => {\n      if (err) {\n        cb(err)\n      } else {\n        const module = preferDefault(executeChunk())\n        resourceCache[resourceName] = module\n        cb(err, module)\n      }\n    })\n  }\n}\n\nconst appearsOnLine = () => {\n  const isOnLine = navigator.onLine\n  if (typeof isOnLine === `boolean`) {\n    return isOnLine\n  }\n\n  // If no navigator.onLine support assume onLine if any of last N fetches succeeded\n  const succeededFetch = fetchHistory.find(entry => entry.succeeded)\n  return !!succeededFetch\n}\n\nconst handleResourceLoadError = (path, message) => {\n  console.log(message)\n\n  if (!failedPaths[path]) {\n    failedPaths[path] = message\n  }\n\n  if (\n    appearsOnLine() &&\n    window.location.pathname.replace(/\\/$/g, ``) !== path.replace(/\\/$/g, ``)\n  ) {\n    window.location.pathname = path\n  }\n}\n\nlet mountOrder = 1\nconst queue = {\n  empty: () => {\n    pathArray = []\n    pathCount = {}\n    resourcesCount = {}\n    resourcesArray = []\n    pages = []\n    pathPrefix = ``\n  },\n  addPagesArray: newPages => {\n    pages = newPages\n    if (\n      typeof __PREFIX_PATHS__ !== `undefined` &&\n      typeof __PATH_PREFIX__ !== `undefined`\n    ) {\n      if (__PREFIX_PATHS__ === true) pathPrefix = __PATH_PREFIX__\n    }\n    findPage = pageFinderFactory(newPages, pathPrefix)\n  },\n  addDevRequires: devRequires => {\n    syncRequires = devRequires\n  },\n  addProdRequires: prodRequires => {\n    asyncRequires = prodRequires\n  },\n  dequeue: () => pathArray.pop(),\n  enqueue: rawPath => {\n    // Check page exists.\n    const path = stripPrefix(rawPath, pathPrefix)\n    if (!pages.some(p => p.path === path)) {\n      return false\n    }\n\n    const mountOrderBoost = 1 / mountOrder\n    mountOrder += 1\n    // console.log(\n    // `enqueue \"${path}\", mountOrder: \"${mountOrder}, mountOrderBoost: ${mountOrderBoost}`\n    // )\n\n    // Add to path counts.\n    if (!pathCount[path]) {\n      pathCount[path] = 1\n    } else {\n      pathCount[path] += 1\n    }\n\n    // Add path to queue.\n    if (!queue.has(path)) {\n      pathArray.unshift(path)\n    }\n\n    // Sort pages by pathCount\n    pathArray.sort(sortPagesByCount)\n\n    // Add resources to queue.\n    const page = findPage(path)\n    if (page.jsonName) {\n      if (!resourcesCount[page.jsonName]) {\n        resourcesCount[page.jsonName] = 1 + mountOrderBoost\n      } else {\n        resourcesCount[page.jsonName] += 1 + mountOrderBoost\n      }\n\n      // Before adding, checking that the JSON resource isn't either\n      // already queued or been downloading.\n      if (\n        resourcesArray.indexOf(page.jsonName) === -1 &&\n        !resourceStrCache[page.jsonName]\n      ) {\n        resourcesArray.unshift(page.jsonName)\n      }\n    }\n    if (page.componentChunkName) {\n      if (!resourcesCount[page.componentChunkName]) {\n        resourcesCount[page.componentChunkName] = 1 + mountOrderBoost\n      } else {\n        resourcesCount[page.componentChunkName] += 1 + mountOrderBoost\n      }\n\n      // Before adding, checking that the component resource isn't either\n      // already queued or been downloading.\n      if (\n        resourcesArray.indexOf(page.componentChunkName) === -1 &&\n        !resourceStrCache[page.jsonName]\n      ) {\n        resourcesArray.unshift(page.componentChunkName)\n      }\n    }\n\n    // Sort resources by resourcesCount.\n    resourcesArray.sort(sortResourcesByCount)\n    if (process.env.NODE_ENV === `production`) {\n      prefetcher.onNewResourcesAdded()\n    }\n\n    return true\n  },\n  getResources: () => {\n    return {\n      resourcesArray,\n      resourcesCount,\n    }\n  },\n  getPages: () => {\n    return {\n      pathArray,\n      pathCount,\n    }\n  },\n  getPage: pathname => findPage(pathname),\n  has: path => pathArray.some(p => p === path),\n  getResourcesForPathname: (path, cb = () => {}) => {\n    if (\n      inInitialRender &&\n      navigator &&\n      navigator.serviceWorker &&\n      navigator.serviceWorker.controller &&\n      navigator.serviceWorker.controller.state === `activated`\n    ) {\n      // If we're loading from a service worker (it's already activated on\n      // this initial render) and we can't find a page, there's a good chance\n      // we're on a new page that this (now old) service worker doesn't know\n      // about so we'll unregister it and reload.\n      if (!findPage(path)) {\n        navigator.serviceWorker\n          .getRegistrations()\n          .then(function(registrations) {\n            // We would probably need this to\n            // prevent unnecessary reloading of the page\n            // while unregistering of ServiceWorker is not happening\n            if (registrations.length) {\n              for (let registration of registrations) {\n                registration.unregister()\n              }\n              window.location.reload()\n            }\n          })\n      }\n    }\n    inInitialRender = false\n    // In development we know the code is loaded already\n    // so we just return with it immediately.\n    if (process.env.NODE_ENV !== `production`) {\n      const page = findPage(path)\n      if (!page) return cb()\n      const pageResources = {\n        component: syncRequires.components[page.componentChunkName],\n        json: syncRequires.json[page.jsonName],\n        layout: syncRequires.layouts[page.layout],\n        page,\n      }\n      cb(pageResources)\n      return pageResources\n      // Production code path\n    } else {\n      if (failedPaths[path]) {\n        handleResourceLoadError(\n          path,\n          `Previously detected load failure for \"${path}\"`\n        )\n\n        return cb()\n      }\n\n      const page = findPage(path)\n\n      if (!page) {\n        handleResourceLoadError(path, `A page wasn't found for \"${path}\"`)\n\n        return cb()\n      }\n\n      // Use the path from the page so the pathScriptsCache uses\n      // the normalized path.\n      path = page.path\n\n      // Check if it's in the cache already.\n      if (pathScriptsCache[path]) {\n        process.nextTick(() => {\n          cb(pathScriptsCache[path])\n          emitter.emit(`onPostLoadPageResources`, {\n            page,\n            pageResources: pathScriptsCache[path],\n          })\n        })\n        return pathScriptsCache[path]\n      }\n\n      emitter.emit(`onPreLoadPageResources`, { path })\n      // Nope, we need to load resource(s)\n      let component\n      let json\n      let layout\n      // Load the component/json/layout and parallel and call this\n      // function when they're done loading. When both are loaded,\n      // we move on.\n      const done = () => {\n        if (component && json && (!page.layoutComponentChunkName || layout)) {\n          pathScriptsCache[path] = { component, json, layout, page }\n          const pageResources = { component, json, layout, page }\n          cb(pageResources)\n          emitter.emit(`onPostLoadPageResources`, {\n            page,\n            pageResources,\n          })\n        }\n      }\n      getResourceModule(page.componentChunkName, (err, c) => {\n        if (err) {\n          handleResourceLoadError(\n            page.path,\n            `Loading the component for ${page.path} failed`\n          )\n        }\n        component = c\n        done()\n      })\n      getResourceModule(page.jsonName, (err, j) => {\n        if (err) {\n          handleResourceLoadError(\n            page.path,\n            `Loading the JSON for ${page.path} failed`\n          )\n        }\n        json = j\n        done()\n      })\n\n      page.layoutComponentChunkName &&\n        getResourceModule(page.layout, (err, l) => {\n          if (err) {\n            handleResourceLoadError(\n              page.path,\n              `Loading the Layout for ${page.path} failed`\n            )\n          }\n          layout = l\n          done()\n        })\n\n      return undefined\n    }\n  },\n  peek: path => pathArray.slice(-1)[0],\n  length: () => pathArray.length,\n  indexOf: path => pathArray.length - pathArray.indexOf(path) - 1,\n}\n\nexport const publicLoader = {\n  getResourcesForPathname: queue.getResourcesForPathname,\n}\n\nexport default queue\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/loader.js","module.exports = [{\"componentChunkName\":\"component---src-pages-404-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"404.json\",\"path\":\"/404/\"},{\"componentChunkName\":\"component---src-pages-about-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"about.json\",\"path\":\"/About/\"},{\"componentChunkName\":\"component---src-pages-explore-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"explore.json\",\"path\":\"/Explore/\"},{\"componentChunkName\":\"component---src-pages-404-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"404-html.json\",\"path\":\"/404.html\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.cache/pages.json\n// module id = 731\n// module chunks = 231608221292675","module.exports = ({ getNextQueuedResources, createResourceDownload }) => {\n  let pagesLoading = []\n  let resourcesDownloading = []\n\n  // Do things\n  const startResourceDownloading = () => {\n    const nextResource = getNextQueuedResources()\n    if (nextResource) {\n      resourcesDownloading.push(nextResource)\n      createResourceDownload(nextResource)\n    }\n  }\n\n  const reducer = action => {\n    switch (action.type) {\n      case `RESOURCE_FINISHED`:\n        resourcesDownloading = resourcesDownloading.filter(\n          r => r !== action.payload\n        )\n        break\n      case `ON_PRE_LOAD_PAGE_RESOURCES`:\n        pagesLoading.push(action.payload.path)\n        break\n      case `ON_POST_LOAD_PAGE_RESOURCES`:\n        pagesLoading = pagesLoading.filter(p => p !== action.payload.page.path)\n        break\n      case `ON_NEW_RESOURCES_ADDED`:\n        break\n    }\n\n    // Take actions.\n    // Wait for event loop queue to finish.\n    setTimeout(() => {\n      if (resourcesDownloading.length === 0 && pagesLoading.length === 0) {\n        // Start another resource downloading.\n        startResourceDownloading()\n      }\n    }, 0)\n  }\n\n  return {\n    onResourcedFinished: event => {\n      // Tell prefetcher that the resource finished downloading\n      // so it can grab the next one.\n      reducer({ type: `RESOURCE_FINISHED`, payload: event })\n    },\n    onPreLoadPageResources: event => {\n      // Tell prefetcher a page load has started so it should stop\n      // loading anything new\n      reducer({ type: `ON_PRE_LOAD_PAGE_RESOURCES`, payload: event })\n    },\n    onPostLoadPageResources: event => {\n      // Tell prefetcher a page load has finished so it should start\n      // loading resources again.\n      reducer({ type: `ON_POST_LOAD_PAGE_RESOURCES`, payload: event })\n    },\n    onNewResourcesAdded: () => {\n      // Tell prefetcher that more resources to be downloaded have\n      // been added.\n      reducer({ type: `ON_NEW_RESOURCES_ADDED` })\n    },\n    getState: () => {\n      return { pagesLoading, resourcesDownloading }\n    },\n    empty: () => {\n      pagesLoading = []\n      resourcesDownloading = []\n    },\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/prefetcher.js","if (__POLYFILL__) {\n  require(`core-js/fn/promise`)\n}\nimport { apiRunner, apiRunnerAsync } from \"./api-runner-browser\"\nimport React, { createElement } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Router, Route, withRouter, matchPath } from \"react-router-dom\"\nimport { ScrollContext } from \"gatsby-react-router-scroll\"\nimport domReady from \"domready\"\nimport { createLocation } from \"history\"\nimport history from \"./history\"\nwindow.___history = history\nimport emitter from \"./emitter\"\nwindow.___emitter = emitter\nimport pages from \"./pages.json\"\nimport redirects from \"./redirects.json\"\nimport ComponentRenderer from \"./component-renderer\"\nimport asyncRequires from \"./async-requires\"\nimport loader from \"./loader\"\nloader.addPagesArray(pages)\nloader.addProdRequires(asyncRequires)\nwindow.asyncRequires = asyncRequires\nwindow.___loader = loader\nwindow.matchPath = matchPath\n\n// Convert to a map for faster lookup in maybeRedirect()\nconst redirectMap = redirects.reduce((map, redirect) => {\n  map[redirect.fromPath] = redirect\n  return map\n}, {})\n\nconst maybeRedirect = pathname => {\n  const redirect = redirectMap[pathname]\n\n  if (redirect != null) {\n    history.replace(redirect.toPath)\n    return true\n  } else {\n    return false\n  }\n}\n\n// Check for initial page-load redirect\nmaybeRedirect(window.location.pathname)\n\n// Let the site/plugins run code very early.\napiRunnerAsync(`onClientEntry`).then(() => {\n  // Let plugins register a service worker. The plugin just needs\n  // to return true.\n  if (apiRunner(`registerServiceWorker`).length > 0) {\n    require(`./register-service-worker`)\n  }\n\n  const navigate = (to, replace) => {\n    const location = createLocation(to, null, null, history.location)\n    let { pathname } = location\n    const redirect = redirectMap[pathname]\n\n    // If we're redirecting, just replace the passed in pathname\n    // to the one we want to redirect to.\n    if (redirect) {\n      pathname = redirect.toPath\n    }\n    const wl = window.location\n\n    // If we're already at this location, do nothing.\n    if (\n      wl.pathname === location.pathname &&\n      wl.search === location.search &&\n      wl.hash === location.hash\n    ) {\n      return\n    }\n\n    const historyNavigateFunc = replace\n      ? window.___history.replace\n      : window.___history.push\n\n    // Listen to loading events. If page resources load before\n    // a second, navigate immediately.\n    function eventHandler(e) {\n      if (e.page.path === loader.getPage(pathname).path) {\n        emitter.off(`onPostLoadPageResources`, eventHandler)\n        clearTimeout(timeoutId)\n        historyNavigateFunc(location)\n      }\n    }\n\n    // Start a timer to wait for a second before transitioning and showing a\n    // loader in case resources aren't around yet.\n    const timeoutId = setTimeout(() => {\n      emitter.off(`onPostLoadPageResources`, eventHandler)\n      emitter.emit(`onDelayedLoadPageResources`, { pathname })\n      historyNavigateFunc(location)\n    }, 1000)\n\n    if (loader.getResourcesForPathname(pathname)) {\n      // The resources are already loaded so off we go.\n      clearTimeout(timeoutId)\n      historyNavigateFunc(location)\n    } else {\n      // They're not loaded yet so let's add a listener for when\n      // they finish loading.\n      emitter.on(`onPostLoadPageResources`, eventHandler)\n    }\n  }\n\n  // window.___loadScriptsForPath = loadScriptsForPath\n  window.___push = (to) => navigate(to, false)\n  window.___replace = (to) => navigate(to, true)\n  window.___navigateTo = window.___push\n\n  // Call onRouteUpdate on the initial page load.\n  apiRunner(`onRouteUpdate`, {\n    location: history.location,\n    action: history.action,\n  })\n\n  let initialAttachDone = false\n  function attachToHistory(history) {\n    if (!window.___history || initialAttachDone === false) {\n      window.___history = history\n      initialAttachDone = true\n\n      history.listen((location, action) => {\n        if (!maybeRedirect(location.pathname)) {\n          // Make sure React has had a chance to flush to DOM first.\n          setTimeout(() => {\n            apiRunner(`onRouteUpdate`, { location, action })\n          }, 0)\n        }\n      })\n    }\n  }\n\n  function shouldUpdateScroll(prevRouterProps, { location: { pathname } }) {\n    const results = apiRunner(`shouldUpdateScroll`, {\n      prevRouterProps,\n      pathname,\n    })\n    if (results.length > 0) {\n      return results[0]\n    }\n\n    if (prevRouterProps) {\n      const {\n        location: { pathname: oldPathname },\n      } = prevRouterProps\n      if (oldPathname === pathname) {\n        return false\n      }\n    }\n    return true\n  }\n\n  const AltRouter = apiRunner(`replaceRouterComponent`, { history })[0]\n  const DefaultRouter = ({ children }) => (\n    <Router history={history}>{children}</Router>\n  )\n\n  const ComponentRendererWithRouter = withRouter(ComponentRenderer)\n\n  loader.getResourcesForPathname(window.location.pathname, () => {\n    const Root = () =>\n      createElement(\n        AltRouter ? AltRouter : DefaultRouter,\n        null,\n        createElement(\n          ScrollContext,\n          { shouldUpdateScroll },\n          createElement(ComponentRendererWithRouter, {\n            layout: true,\n            children: layoutProps =>\n              createElement(Route, {\n                render: routeProps => {\n                  attachToHistory(routeProps.history)\n                  const props = layoutProps ? layoutProps : routeProps\n\n                  if (loader.getPage(props.location.pathname)) {\n                    return createElement(ComponentRenderer, {\n                      page: true,\n                      ...props,\n                    })\n                  } else {\n                    return createElement(ComponentRenderer, {\n                      page: true,\n                      location: { pathname: `/404.html` },\n                    })\n                  }\n                },\n              }),\n          })\n        )\n      )\n\n    const NewRoot = apiRunner(`wrapRootComponent`, { Root }, Root)[0]\n\n    const renderer = apiRunner(\n      `replaceHydrateFunction`,\n      undefined,\n      ReactDOM.render\n    )[0]\n\n    domReady(() =>\n      renderer(\n        <NewRoot />,\n        typeof window !== `undefined`\n          ? document.getElementById(`___gatsby`)\n          : void 0,\n        () => {\n          apiRunner(`onInitialClientRender`)\n        }\n      )\n    )\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/production-app.js","module.exports = []\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.cache/redirects.json\n// module id = 732\n// module chunks = 231608221292675","import emitter from \"./emitter\"\n\nlet pathPrefix = `/`\nif (__PREFIX_PATHS__) {\n  pathPrefix = __PATH_PREFIX__ + `/`\n}\n\nif (`serviceWorker` in navigator) {\n  navigator.serviceWorker\n    .register(`${pathPrefix}sw.js`)\n    .then(function(reg) {\n      reg.addEventListener(`updatefound`, () => {\n        // The updatefound event implies that reg.installing is set; see\n        // https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event\n        const installingWorker = reg.installing\n        console.log(`installingWorker`, installingWorker)\n        installingWorker.addEventListener(`statechange`, () => {\n          switch (installingWorker.state) {\n            case `installed`:\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and the fresh content will\n                // have been added to the cache.\n                // We reload immediately so the user sees the new content.\n                // This could/should be made configurable in the future.\n                window.location.reload()\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a \"Content is cached for offline use.\" message.\n                console.log(`Content is now available offline!`)\n                emitter.emit(`sw:installed`)\n              }\n              break\n\n            case `redundant`:\n              console.error(`The installing service worker became redundant.`)\n              break\n          }\n        })\n      })\n    })\n    .catch(function(e) {\n      console.error(`Error during service worker registration:`, e)\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/register-service-worker.js","/**\n * Remove a prefix from a string. Return the input string if the given prefix\n * isn't found.\n */\n\nexport default (str, prefix = ``) => {\n  if (str.substr(0, prefix.length) === prefix) return str.slice(prefix.length)\n  return str\n}\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/strip-prefix.js","/* globals window */\r\nimport 'core-js';\r\nimport React from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport createStore from './src/store/create-store';\r\n\r\nexports.replaceRouterComponent = ({ history }) => {\r\n  const store = createStore();\r\n\r\n  const ConnectedRouterWrapper = ({ children }) => (\r\n    <Provider store={store}>\r\n      <Router history={history}>{children}</Router>\r\n    </Provider>\r\n  );\r\n\r\n  return ConnectedRouterWrapper;\r\n};\r\n\r\n\r\nexports.onClientEntry = () => {\r\n  // Patch the resource loader\r\n  const loader = global.___loader;\r\n  if (!loader) return;\r\n\r\n  let path = window.location.pathname;\r\n\r\n  if(path.includes(\"/explore\")) {\r\n    loader.addPagesArray([{\"componentChunkName\":\"component---src-pages-explore-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"explore.json\",\"path\": path}]);\r\n  }\r\n  else if(path.includes(\"/about\")){\r\n    loader.addPagesArray([{\"componentChunkName\":\"component---src-pages-about-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"about.json\",\"path\": path}]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./gatsby-browser.js","/*!\n * accounting.js v0.4.1\n * Copyright 2014 Open Exchange Rates\n *\n * Freely distributable under the MIT license.\n * Portions of accounting.js are inspired or borrowed from underscore.js\n *\n * Full details and documentation:\n * http://openexchangerates.github.io/accounting.js/\n */\n\n(function(root, undefined) {\n\n\t/* --- Setup --- */\n\n\t// Create the local library object, to be exported or referenced globally later\n\tvar lib = {};\n\n\t// Current version\n\tlib.version = '0.4.1';\n\n\n\t/* --- Exposed settings --- */\n\n\t// The library's settings configuration object. Contains default parameters for\n\t// currency and number formatting\n\tlib.settings = {\n\t\tcurrency: {\n\t\t\tsymbol : \"$\",\t\t// default currency symbol is '$'\n\t\t\tformat : \"%s%v\",\t// controls output: %s = symbol, %v = value (can be object, see docs)\n\t\t\tdecimal : \".\",\t\t// decimal point separator\n\t\t\tthousand : \",\",\t\t// thousands separator\n\t\t\tprecision : 2,\t\t// decimal places\n\t\t\tgrouping : 3\t\t// digit grouping (not implemented yet)\n\t\t},\n\t\tnumber: {\n\t\t\tprecision : 0,\t\t// default precision on numbers is 0\n\t\t\tgrouping : 3,\t\t// digit grouping (not implemented yet)\n\t\t\tthousand : \",\",\n\t\t\tdecimal : \".\"\n\t\t}\n\t};\n\n\n\t/* --- Internal Helper Methods --- */\n\n\t// Store reference to possibly-available ECMAScript 5 methods for later\n\tvar nativeMap = Array.prototype.map,\n\t\tnativeIsArray = Array.isArray,\n\t\ttoString = Object.prototype.toString;\n\n\t/**\n\t * Tests whether supplied parameter is a string\n\t * from underscore.js\n\t */\n\tfunction isString(obj) {\n\t\treturn !!(obj === '' || (obj && obj.charCodeAt && obj.substr));\n\t}\n\n\t/**\n\t * Tests whether supplied parameter is a string\n\t * from underscore.js, delegates to ECMA5's native Array.isArray\n\t */\n\tfunction isArray(obj) {\n\t\treturn nativeIsArray ? nativeIsArray(obj) : toString.call(obj) === '[object Array]';\n\t}\n\n\t/**\n\t * Tests whether supplied parameter is a true object\n\t */\n\tfunction isObject(obj) {\n\t\treturn obj && toString.call(obj) === '[object Object]';\n\t}\n\n\t/**\n\t * Extends an object with a defaults object, similar to underscore's _.defaults\n\t *\n\t * Used for abstracting parameter handling from API methods\n\t */\n\tfunction defaults(object, defs) {\n\t\tvar key;\n\t\tobject = object || {};\n\t\tdefs = defs || {};\n\t\t// Iterate over object non-prototype properties:\n\t\tfor (key in defs) {\n\t\t\tif (defs.hasOwnProperty(key)) {\n\t\t\t\t// Replace values with defaults only if undefined (allow empty/zero values):\n\t\t\t\tif (object[key] == null) object[key] = defs[key];\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\t/**\n\t * Implementation of `Array.map()` for iteration loops\n\t *\n\t * Returns a new Array as a result of calling `iterator` on each array value.\n\t * Defers to native Array.map if available\n\t */\n\tfunction map(obj, iterator, context) {\n\t\tvar results = [], i, j;\n\n\t\tif (!obj) return results;\n\n\t\t// Use native .map method if it exists:\n\t\tif (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n\n\t\t// Fallback for native .map:\n\t\tfor (i = 0, j = obj.length; i < j; i++ ) {\n\t\t\tresults[i] = iterator.call(context, obj[i], i, obj);\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Check and normalise the value of precision (must be positive integer)\n\t */\n\tfunction checkPrecision(val, base) {\n\t\tval = Math.round(Math.abs(val));\n\t\treturn isNaN(val)? base : val;\n\t}\n\n\n\t/**\n\t * Parses a format string or object and returns format obj for use in rendering\n\t *\n\t * `format` is either a string with the default (positive) format, or object\n\t * containing `pos` (required), `neg` and `zero` values (or a function returning\n\t * either a string or object)\n\t *\n\t * Either string or format.pos must contain \"%v\" (value) to be valid\n\t */\n\tfunction checkCurrencyFormat(format) {\n\t\tvar defaults = lib.settings.currency.format;\n\n\t\t// Allow function as format parameter (should return string or object):\n\t\tif ( typeof format === \"function\" ) format = format();\n\n\t\t// Format can be a string, in which case `value` (\"%v\") must be present:\n\t\tif ( isString( format ) && format.match(\"%v\") ) {\n\n\t\t\t// Create and return positive, negative and zero formats:\n\t\t\treturn {\n\t\t\t\tpos : format,\n\t\t\t\tneg : format.replace(\"-\", \"\").replace(\"%v\", \"-%v\"),\n\t\t\t\tzero : format\n\t\t\t};\n\n\t\t// If no format, or object is missing valid positive value, use defaults:\n\t\t} else if ( !format || !format.pos || !format.pos.match(\"%v\") ) {\n\n\t\t\t// If defaults is a string, casts it to an object for faster checking next time:\n\t\t\treturn ( !isString( defaults ) ) ? defaults : lib.settings.currency.format = {\n\t\t\t\tpos : defaults,\n\t\t\t\tneg : defaults.replace(\"%v\", \"-%v\"),\n\t\t\t\tzero : defaults\n\t\t\t};\n\n\t\t}\n\t\t// Otherwise, assume format was fine:\n\t\treturn format;\n\t}\n\n\n\t/* --- API Methods --- */\n\n\t/**\n\t * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value\n\t * Alias: `accounting.parse(string)`\n\t *\n\t * Decimal must be included in the regular expression to match floats (defaults to\n\t * accounting.settings.number.decimal), so if the number uses a non-standard decimal \n\t * separator, provide it as the second argument.\n\t *\n\t * Also matches bracketed negatives (eg. \"$ (1.99)\" => -1.99)\n\t *\n\t * Doesn't throw any errors (`NaN`s become 0) but this may change in future\n\t */\n\tvar unformat = lib.unformat = lib.parse = function(value, decimal) {\n\t\t// Recursively unformat arrays:\n\t\tif (isArray(value)) {\n\t\t\treturn map(value, function(val) {\n\t\t\t\treturn unformat(val, decimal);\n\t\t\t});\n\t\t}\n\n\t\t// Fails silently (need decent errors):\n\t\tvalue = value || 0;\n\n\t\t// Return the value as-is if it's already a number:\n\t\tif (typeof value === \"number\") return value;\n\n\t\t// Default decimal point comes from settings, but could be set to eg. \",\" in opts:\n\t\tdecimal = decimal || lib.settings.number.decimal;\n\n\t\t // Build regex to strip out everything except digits, decimal point and minus sign:\n\t\tvar regex = new RegExp(\"[^0-9-\" + decimal + \"]\", [\"g\"]),\n\t\t\tunformatted = parseFloat(\n\t\t\t\t(\"\" + value)\n\t\t\t\t.replace(/\\((.*)\\)/, \"-$1\") // replace bracketed values with negatives\n\t\t\t\t.replace(regex, '')         // strip out any cruft\n\t\t\t\t.replace(decimal, '.')      // make sure decimal point is standard\n\t\t\t);\n\n\t\t// This will fail silently which may cause trouble, let's wait and see:\n\t\treturn !isNaN(unformatted) ? unformatted : 0;\n\t};\n\n\n\t/**\n\t * Implementation of toFixed() that treats floats more like decimals\n\t *\n\t * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present\n\t * problems for accounting- and finance-related software.\n\t */\n\tvar toFixed = lib.toFixed = function(value, precision) {\n\t\tprecision = checkPrecision(precision, lib.settings.number.precision);\n\t\tvar power = Math.pow(10, precision);\n\n\t\t// Multiply up by precision, round accurately, then divide and use native toFixed():\n\t\treturn (Math.round(lib.unformat(value) * power) / power).toFixed(precision);\n\t};\n\n\n\t/**\n\t * Format a number, with comma-separated thousands and custom precision/decimal places\n\t * Alias: `accounting.format()`\n\t *\n\t * Localise by overriding the precision and thousand / decimal separators\n\t * 2nd parameter `precision` can be an object matching `settings.number`\n\t */\n\tvar formatNumber = lib.formatNumber = lib.format = function(number, precision, thousand, decimal) {\n\t\t// Resursively format arrays:\n\t\tif (isArray(number)) {\n\t\t\treturn map(number, function(val) {\n\t\t\t\treturn formatNumber(val, precision, thousand, decimal);\n\t\t\t});\n\t\t}\n\n\t\t// Clean up number:\n\t\tnumber = unformat(number);\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(precision) ? precision : {\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal\n\t\t\t\t}),\n\t\t\t\tlib.settings.number\n\t\t\t),\n\n\t\t\t// Clean up precision\n\t\t\tusePrecision = checkPrecision(opts.precision),\n\n\t\t\t// Do some calc:\n\t\t\tnegative = number < 0 ? \"-\" : \"\",\n\t\t\tbase = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + \"\",\n\t\t\tmod = base.length > 3 ? base.length % 3 : 0;\n\n\t\t// Format the number:\n\t\treturn negative + (mod ? base.substr(0, mod) + opts.thousand : \"\") + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, \"$1\" + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : \"\");\n\t};\n\n\n\t/**\n\t * Format a number into currency\n\t *\n\t * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n\t * defaults: (0, \"$\", 2, \",\", \".\", \"%s%v\")\n\t *\n\t * Localise by overriding the symbol, precision, thousand / decimal separators and format\n\t * Second param can be an object matching `settings.currency` which is the easiest way.\n\t *\n\t * To do: tidy up the parameters\n\t */\n\tvar formatMoney = lib.formatMoney = function(number, symbol, precision, thousand, decimal, format) {\n\t\t// Resursively format arrays:\n\t\tif (isArray(number)) {\n\t\t\treturn map(number, function(val){\n\t\t\t\treturn formatMoney(val, symbol, precision, thousand, decimal, format);\n\t\t\t});\n\t\t}\n\n\t\t// Clean up number:\n\t\tnumber = unformat(number);\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\tformat : format\n\t\t\t\t}),\n\t\t\t\tlib.settings.currency\n\t\t\t),\n\n\t\t\t// Check format (returns object with pos, neg and zero):\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\n\t\t\t// Choose which format to use for this value:\n\t\t\tuseFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\n\n\t\t// Return with currency symbol added:\n\t\treturn useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t};\n\n\n\t/**\n\t * Format a list of numbers into an accounting column, padding with whitespace\n\t * to line up currency symbols, thousand separators and decimals places\n\t *\n\t * List should be an array of numbers\n\t * Second parameter can be an object containing keys that match the params\n\t *\n\t * Returns array of accouting-formatted number strings of same length\n\t *\n\t * NB: `white-space:pre` CSS rule is required on the list container to prevent\n\t * browsers from collapsing the whitespace in the output strings.\n\t */\n\tlib.formatColumn = function(list, symbol, precision, thousand, decimal, format) {\n\t\tif (!list) return [];\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\tformat : format\n\t\t\t\t}),\n\t\t\t\tlib.settings.currency\n\t\t\t),\n\n\t\t\t// Check format (returns object with pos, neg and zero), only need pos for now:\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\n\t\t\t// Whether to pad at start of string or after currency symbol:\n\t\t\tpadAfterSymbol = formats.pos.indexOf(\"%s\") < formats.pos.indexOf(\"%v\") ? true : false,\n\n\t\t\t// Store value for the length of the longest string in the column:\n\t\t\tmaxLength = 0,\n\n\t\t\t// Format the list according to options, store the length of the longest string:\n\t\t\tformatted = map(list, function(val, i) {\n\t\t\t\tif (isArray(val)) {\n\t\t\t\t\t// Recursively format columns if list is a multi-dimensional array:\n\t\t\t\t\treturn lib.formatColumn(val, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// Clean up the value\n\t\t\t\t\tval = unformat(val);\n\n\t\t\t\t\t// Choose which format to use for this value (pos, neg or zero):\n\t\t\t\t\tvar useFormat = val > 0 ? formats.pos : val < 0 ? formats.neg : formats.zero,\n\n\t\t\t\t\t\t// Format this value, push into formatted list and save the length:\n\t\t\t\t\t\tfVal = useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(val), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\n\t\t\t\t\tif (fVal.length > maxLength) maxLength = fVal.length;\n\t\t\t\t\treturn fVal;\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Pad each number in the list and send back the column of numbers:\n\t\treturn map(formatted, function(val, i) {\n\t\t\t// Only if this is a string (not a nested array, which would have already been padded):\n\t\t\tif (isString(val) && val.length < maxLength) {\n\t\t\t\t// Depending on symbol position, pad after symbol or at index 0:\n\t\t\t\treturn padAfterSymbol ? val.replace(opts.symbol, opts.symbol+(new Array(maxLength - val.length + 1).join(\" \"))) : (new Array(maxLength - val.length + 1).join(\" \")) + val;\n\t\t\t}\n\t\t\treturn val;\n\t\t});\n\t};\n\n\n\t/* --- Module Definition --- */\n\n\t// Export accounting for CommonJS. If being loaded as an AMD module, define it as such.\n\t// Otherwise, just add `accounting` to the global object\n\tif (typeof exports !== 'undefined') {\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\texports = module.exports = lib;\n\t\t}\n\t\texports.accounting = lib;\n\t} else if (typeof define === 'function' && define.amd) {\n\t\t// Return the library as an AMD module:\n\t\tdefine([], function() {\n\t\t\treturn lib;\n\t\t});\n\t} else {\n\t\t// Use accounting.noConflict to restore `accounting` back to its original value.\n\t\t// Returns a reference to the library's `accounting` object;\n\t\t// e.g. `var numbers = accounting.noConflict();`\n\t\tlib.noConflict = (function(oldAccounting) {\n\t\t\treturn function() {\n\t\t\t\t// Reset the value of the root's `accounting` variable:\n\t\t\t\troot.accounting = oldAccounting;\n\t\t\t\t// Delete the noConflict method:\n\t\t\t\tlib.noConflict = undefined;\n\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\treturn lib;\n\t\t\t};\n\t\t})(root.accounting);\n\n\t\t// Declare `fx` on the root (global/window) object:\n\t\troot['accounting'] = lib;\n\t}\n\n\t// Root will be `window` in browser or `global` on the server:\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/accounting/accounting.js\n// module id = 190\n// module chunks = 231608221292675 257298155543294","module.exports = {\"AED\":{\"code\":\"AED\",\"symbol\":\"د.إ.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"AFN\":{\"code\":\"AFN\",\"symbol\":\"؋\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ALL\":{\"code\":\"ALL\",\"symbol\":\"Lek\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AMD\":{\"code\":\"AMD\",\"symbol\":\"֏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ANG\":{\"code\":\"ANG\",\"symbol\":\"ƒ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AOA\":{\"code\":\"AOA\",\"symbol\":\"Kz\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ARS\":{\"code\":\"ARS\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"AUD\":{\"code\":\"AUD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AWG\":{\"code\":\"AWG\",\"symbol\":\"ƒ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AZN\":{\"code\":\"AZN\",\"symbol\":\"₼\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BAM\":{\"code\":\"BAM\",\"symbol\":\"КМ\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BBD\":{\"code\":\"BBD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BDT\":{\"code\":\"BDT\",\"symbol\":\"৳\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"BGN\":{\"code\":\"BGN\",\"symbol\":\"лв.\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BHD\":{\"code\":\"BHD\",\"symbol\":\"د.ب.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"BIF\":{\"code\":\"BIF\",\"symbol\":\"FBu\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"BMD\":{\"code\":\"BMD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BND\":{\"code\":\"BND\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"BOB\":{\"code\":\"BOB\",\"symbol\":\"Bs\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BRL\":{\"code\":\"BRL\",\"symbol\":\"R$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BSD\":{\"code\":\"BSD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BTC\":{\"code\":\"BTC\",\"symbol\":\"Ƀ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":8},\"BTN\":{\"code\":\"BTN\",\"symbol\":\"Nu.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"BWP\":{\"code\":\"BWP\",\"symbol\":\"P\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BYR\":{\"code\":\"BYR\",\"symbol\":\"р.\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BZD\":{\"code\":\"BZD\",\"symbol\":\"BZ$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CAD\":{\"code\":\"CAD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CDF\":{\"code\":\"CDF\",\"symbol\":\"FC\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CHF\":{\"code\":\"CHF\",\"symbol\":\"CHF\",\"thousandsSeparator\":\"'\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CLP\":{\"code\":\"CLP\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CNY\":{\"code\":\"CNY\",\"symbol\":\"¥\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"COP\":{\"code\":\"COP\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CRC\":{\"code\":\"CRC\",\"symbol\":\"₡\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CUC\":{\"code\":\"CUC\",\"symbol\":\"CUC\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CUP\":{\"code\":\"CUP\",\"symbol\":\"$MN\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CVE\":{\"code\":\"CVE\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CZK\":{\"code\":\"CZK\",\"symbol\":\"Kč\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"DJF\":{\"code\":\"DJF\",\"symbol\":\"Fdj\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"DKK\":{\"code\":\"DKK\",\"symbol\":\"kr.\",\"thousandsSeparator\":\"\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"DOP\":{\"code\":\"DOP\",\"symbol\":\"RD$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"DZD\":{\"code\":\"DZD\",\"symbol\":\"د.ج.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"EGP\":{\"code\":\"EGP\",\"symbol\":\"ج.م.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ERN\":{\"code\":\"ERN\",\"symbol\":\"Nfk\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ETB\":{\"code\":\"ETB\",\"symbol\":\"ETB\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"EUR\":{\"code\":\"EUR\",\"symbol\":\"€\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"FJD\":{\"code\":\"FJD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"FKP\":{\"code\":\"FKP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GBP\":{\"code\":\"GBP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GEL\":{\"code\":\"GEL\",\"symbol\":\"Lari\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"GHS\":{\"code\":\"GHS\",\"symbol\":\"₵\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GIP\":{\"code\":\"GIP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GMD\":{\"code\":\"GMD\",\"symbol\":\"D\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GNF\":{\"code\":\"GNF\",\"symbol\":\"FG\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"GTQ\":{\"code\":\"GTQ\",\"symbol\":\"Q\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GYD\":{\"code\":\"GYD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HKD\":{\"code\":\"HKD\",\"symbol\":\"HK$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HNL\":{\"code\":\"HNL\",\"symbol\":\"L.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"HRK\":{\"code\":\"HRK\",\"symbol\":\"kn\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"HTG\":{\"code\":\"HTG\",\"symbol\":\"G\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HUF\":{\"code\":\"HUF\",\"symbol\":\"Ft\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"IDR\":{\"code\":\"IDR\",\"symbol\":\"Rp\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"ILS\":{\"code\":\"ILS\",\"symbol\":\"₪\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"INR\":{\"code\":\"INR\",\"symbol\":\"₹\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"IQD\":{\"code\":\"IQD\",\"symbol\":\"د.ع.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"IRR\":{\"code\":\"IRR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\"/\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ISK\":{\"code\":\"ISK\",\"symbol\":\"kr.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"JMD\":{\"code\":\"JMD\",\"symbol\":\"J$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"JOD\":{\"code\":\"JOD\",\"symbol\":\"د.ا.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"JPY\":{\"code\":\"JPY\",\"symbol\":\"¥\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KES\":{\"code\":\"KES\",\"symbol\":\"KSh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KGS\":{\"code\":\"KGS\",\"symbol\":\"сом\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\"-\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"KHR\":{\"code\":\"KHR\",\"symbol\":\"៛\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KMF\":{\"code\":\"KMF\",\"symbol\":\"CF\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KPW\":{\"code\":\"KPW\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KRW\":{\"code\":\"KRW\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KWD\":{\"code\":\"KWD\",\"symbol\":\"د.ك.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"KYD\":{\"code\":\"KYD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KZT\":{\"code\":\"KZT\",\"symbol\":\"₸\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\"-\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LAK\":{\"code\":\"LAK\",\"symbol\":\"₭\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"LBP\":{\"code\":\"LBP\",\"symbol\":\"ل.ل.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"LKR\":{\"code\":\"LKR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"LRD\":{\"code\":\"LRD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LSL\":{\"code\":\"LSL\",\"symbol\":\"M\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LYD\":{\"code\":\"LYD\",\"symbol\":\"د.ل.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":3},\"MAD\":{\"code\":\"MAD\",\"symbol\":\"د.م.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MDL\":{\"code\":\"MDL\",\"symbol\":\"lei\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MGA\":{\"code\":\"MGA\",\"symbol\":\"Ar\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"MKD\":{\"code\":\"MKD\",\"symbol\":\"ден.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MMK\":{\"code\":\"MMK\",\"symbol\":\"K\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MNT\":{\"code\":\"MNT\",\"symbol\":\"₮\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MOP\":{\"code\":\"MOP\",\"symbol\":\"MOP$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MRO\":{\"code\":\"MRO\",\"symbol\":\"UM\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MTL\":{\"code\":\"MTL\",\"symbol\":\"₤\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MUR\":{\"code\":\"MUR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MVR\":{\"code\":\"MVR\",\"symbol\":\"MVR\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"MWK\":{\"code\":\"MWK\",\"symbol\":\"MK\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MXN\":{\"code\":\"MXN\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MYR\":{\"code\":\"MYR\",\"symbol\":\"RM\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MZN\":{\"code\":\"MZN\",\"symbol\":\"MT\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"NAD\":{\"code\":\"NAD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NGN\":{\"code\":\"NGN\",\"symbol\":\"₦\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NIO\":{\"code\":\"NIO\",\"symbol\":\"C$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"NOK\":{\"code\":\"NOK\",\"symbol\":\"kr\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"NPR\":{\"code\":\"NPR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NZD\":{\"code\":\"NZD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"OMR\":{\"code\":\"OMR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"PAB\":{\"code\":\"PAB\",\"symbol\":\"B/.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PEN\":{\"code\":\"PEN\",\"symbol\":\"S/.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PGK\":{\"code\":\"PGK\",\"symbol\":\"K\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PHP\":{\"code\":\"PHP\",\"symbol\":\"₱\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PKR\":{\"code\":\"PKR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PLN\":{\"code\":\"PLN\",\"symbol\":\"zł\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PYG\":{\"code\":\"PYG\",\"symbol\":\"₲\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"QAR\":{\"code\":\"QAR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RON\":{\"code\":\"RON\",\"symbol\":\"lei\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RSD\":{\"code\":\"RSD\",\"symbol\":\"Дин.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RUB\":{\"code\":\"RUB\",\"symbol\":\"₽\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RWF\":{\"code\":\"RWF\",\"symbol\":\"RWF\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SAR\":{\"code\":\"SAR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SBD\":{\"code\":\"SBD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SCR\":{\"code\":\"SCR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SDD\":{\"code\":\"SDD\",\"symbol\":\"LSd\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SDG\":{\"code\":\"SDG\",\"symbol\":\"£‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SEK\":{\"code\":\"SEK\",\"symbol\":\"kr\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SGD\":{\"code\":\"SGD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SHP\":{\"code\":\"SHP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SLL\":{\"code\":\"SLL\",\"symbol\":\"Le\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SOS\":{\"code\":\"SOS\",\"symbol\":\"S\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SRD\":{\"code\":\"SRD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"STD\":{\"code\":\"STD\",\"symbol\":\"Db\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SVC\":{\"code\":\"SVC\",\"symbol\":\"₡\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SYP\":{\"code\":\"SYP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SZL\":{\"code\":\"SZL\",\"symbol\":\"E\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"THB\":{\"code\":\"THB\",\"symbol\":\"฿\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TJS\":{\"code\":\"TJS\",\"symbol\":\"TJS\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\";\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"TMT\":{\"code\":\"TMT\",\"symbol\":\"m\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"TND\":{\"code\":\"TND\",\"symbol\":\"د.ت.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"TOP\":{\"code\":\"TOP\",\"symbol\":\"T$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TRY\":{\"code\":\"TRY\",\"symbol\":\"TL\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"TTD\":{\"code\":\"TTD\",\"symbol\":\"TT$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TVD\":{\"code\":\"TVD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TWD\":{\"code\":\"TWD\",\"symbol\":\"NT$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TZS\":{\"code\":\"TZS\",\"symbol\":\"TSh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UAH\":{\"code\":\"UAH\",\"symbol\":\"₴\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UGX\":{\"code\":\"UGX\",\"symbol\":\"USh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"USD\":{\"code\":\"USD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UYU\":{\"code\":\"UYU\",\"symbol\":\"$U\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"UZS\":{\"code\":\"UZS\",\"symbol\":\"сўм\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"VEB\":{\"code\":\"VEB\",\"symbol\":\"Bs.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"VEF\":{\"code\":\"VEF\",\"symbol\":\"Bs. F.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"VND\":{\"code\":\"VND\",\"symbol\":\"₫\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"VUV\":{\"code\":\"VUV\",\"symbol\":\"VT\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"WST\":{\"code\":\"WST\",\"symbol\":\"WS$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XAF\":{\"code\":\"XAF\",\"symbol\":\"F\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XCD\":{\"code\":\"XCD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XBT\":{\"code\":\"XBT\",\"symbol\":\"Ƀ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XOF\":{\"code\":\"XOF\",\"symbol\":\"F\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XPF\":{\"code\":\"XPF\",\"symbol\":\"F\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"YER\":{\"code\":\"YER\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ZAR\":{\"code\":\"ZAR\",\"symbol\":\"R\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ZMW\":{\"code\":\"ZMW\",\"symbol\":\"ZK\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"WON\":{\"code\":\"WON\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/currency-formatter/currencies.json\n// module id = 246\n// module chunks = 231608221292675 257298155543294","var accounting = require('accounting')\nvar assign = require('object-assign')\nvar localeCurrency = require('locale-currency')\nvar currencies = require('./currencies.json')\nvar localeFormats = require('./localeFormats.json')\n\nvar defaultCurrency = {\n  symbol: '',\n  thousandsSeparator: ',',\n  decimalSeparator: '.',\n  symbolOnLeft: true,\n  spaceBetweenAmountAndSymbol: false,\n  decimalDigits: 2\n}\n\nvar defaultLocaleFormat = {}\n\nvar formatMapping = [\n  {\n    symbolOnLeft: true,\n    spaceBetweenAmountAndSymbol: false,\n    format: {\n      pos: '%s%v',\n      neg: '-%s%v',\n      zero: '%s%v'\n    }\n  },\n  {\n    symbolOnLeft: true,\n    spaceBetweenAmountAndSymbol: true,\n    format: {\n      pos: '%s %v',\n      neg: '-%s %v',\n      zero: '%s %v'\n    }\n  },\n  {\n    symbolOnLeft: false,\n    spaceBetweenAmountAndSymbol: false,\n    format: {\n      pos: '%v%s',\n      neg: '-%v%s',\n      zero: '%v%s'\n    }\n  },\n  {\n    symbolOnLeft: false,\n    spaceBetweenAmountAndSymbol: true,\n    format: {\n      pos: '%v %s',\n      neg: '-%v %s',\n      zero: '%v %s'\n    }\n  }\n]\n\nfunction format(value, options) {\n  var code = options.code || (options.locale && localeCurrency.getCurrency(options.locale))\n  var localeMatch = /^([a-z]+)([_-]([a-z]+))?$/i.exec(options.locale) || []\n  var language = localeMatch[1]\n  var region = localeMatch[3]\n  var localeFormat = assign({}, defaultLocaleFormat,\n                            localeFormats[language] || {},\n                            localeFormats[language + '-' + region] || {})\n  var currency = assign({}, defaultCurrency, findCurrency(code), localeFormat)\n  \n  var symbolOnLeft = currency.symbolOnLeft\n  var spaceBetweenAmountAndSymbol = currency.spaceBetweenAmountAndSymbol\n\n  var format = formatMapping.filter(function(f) {\n    return f.symbolOnLeft == symbolOnLeft && f.spaceBetweenAmountAndSymbol == spaceBetweenAmountAndSymbol\n  })[0].format\n\n  return accounting.formatMoney(value, {\n    symbol: isUndefined(options.symbol)\n              ? currency.symbol\n              : options.symbol,\n\n    decimal: isUndefined(options.decimal)\n              ? currency.decimalSeparator\n              : options.decimal,\n\n    thousand: isUndefined(options.thousand)\n              ? currency.thousandsSeparator\n              : options.thousand,\n\n    precision: typeof options.precision === 'number'\n              ? options.precision\n              : currency.decimalDigits,\n\n    format: ['string', 'object'].indexOf(typeof options.format) > -1\n              ? options.format\n              : format\n  })\n}\n\nfunction findCurrency (currencyCode) {\n  return currencies[currencyCode]\n}\n\nfunction isUndefined (val) {\n  return typeof val === 'undefined'\n}\n\nfunction unformat(value, options) {\n  var code = options.code || (options.locale && localeCurrency.getCurrency(options.locale))\n  var localeFormat = localeFormats[options.locale] || defaultLocaleFormat\n  var currency = assign({}, defaultCurrency, findCurrency(code), localeFormat)\n  var decimal = isUndefined(options.decimal) ? currency.decimalSeparator : options.decimal\n  return accounting.unformat(value, decimal)\n}\n\nmodule.exports = {\n  defaultCurrency: defaultCurrency,\n  get currencies() {\n    // In favor of backwards compatibility, the currencies map is converted to an array here\n    return Object.keys(currencies).map(function(key) {\n      return currencies[key]\n    })\n  },\n  findCurrency: findCurrency,\n  format: format,\n  unformat: unformat\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/currency-formatter/index.js\n// module id = 235\n// module chunks = 231608221292675 257298155543294","module.exports = {\"de\":{\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"el\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2},\"en-IE\":{\"symbolOnLeft\":true,\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"es\":{\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"it\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2},\"nl\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/currency-formatter/localeFormats.json\n// module id = 247\n// module chunks = 231608221292675 257298155543294","/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domready/ready.js\n// module id = 697\n// module chunks = 231608221292675","\"use strict\";\n\n/* global document: false, __webpack_require__: false */\npatch();\n\nfunction patch() {\n  var head = document.querySelector(\"head\");\n  var ensure = __webpack_require__.e;\n  var chunks = __webpack_require__.s;\n  var failures;\n\n  __webpack_require__.e = function (chunkId, callback) {\n    var loaded = false;\n    var immediate = true;\n\n    var handler = function handler(error) {\n      if (!callback) return;\n\n      callback(__webpack_require__, error);\n      callback = null;\n    };\n\n    if (!chunks && failures && failures[chunkId]) {\n      handler(true);\n      return;\n    }\n\n    ensure(chunkId, function () {\n      if (loaded) return;\n      loaded = true;\n\n      if (immediate) {\n        // webpack fires callback immediately if chunk was already loaded\n        // IE also fires callback immediately if script was already\n        // in a cache (AppCache counts too)\n        setTimeout(function () {\n          handler();\n        });\n      } else {\n        handler();\n      }\n    });\n\n    // This is |true| if chunk is already loaded and does not need onError call.\n    // This happens because in such case ensure() is performed in sync way\n    if (loaded) {\n      return;\n    }\n\n    immediate = false;\n\n    onError(function () {\n      if (loaded) return;\n      loaded = true;\n\n      if (chunks) {\n        chunks[chunkId] = void 0;\n      } else {\n        failures || (failures = {});\n        failures[chunkId] = true;\n      }\n\n      handler(true);\n    });\n  };\n\n  function onError(callback) {\n    var script = head.lastChild;\n\n    if (script.tagName !== \"SCRIPT\") {\n      if (typeof console !== \"undefined\" && console.warn) {\n        console.warn(\"Script is not a script\", script);\n      }\n\n      return;\n    }\n\n    script.onload = script.onerror = function () {\n      script.onload = script.onerror = null;\n      setTimeout(callback, 0);\n    };\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader/patch.js\n// module id = 52\n// module chunks = 231608221292675","'use strict';\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n\n        var keys = getOwnPropertyNames(sourceComponent);\n\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try { // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n\n        return targetComponent;\n    }\n\n    return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n// module id = 99\n// module chunks = 10991734084388 231608221292675 257298155543294","/*\n * @name Lazy.js\n * Licensed under the MIT License (see LICENSE.txt)\n *\n * @fileOverview\n * Lazy.js is a lazy evaluation library for JavaScript.\n *\n * This has been done before. For examples see:\n *\n * - [wu.js](http://fitzgen.github.io/wu.js/)\n * - [Linq.js](http://linqjs.codeplex.com/)\n * - [from.js](https://github.com/suckgamoni/fromjs/)\n * - [IxJS](http://rx.codeplex.com/)\n * - [sloth.js](http://rfw.name/sloth.js/)\n *\n * However, at least at present, Lazy.js is faster (on average) than any of\n * those libraries. It is also more complete, with nearly all of the\n * functionality of [Underscore](http://underscorejs.org/) and\n * [Lo-Dash](http://lodash.com/).\n *\n * Finding your way around the code\n * --------------------------------\n *\n * At the heart of Lazy.js is the {@link Sequence} object. You create an initial\n * sequence using {@link Lazy}, which can accept an array, object, or string.\n * You can then \"chain\" together methods from this sequence, creating a new\n * sequence with each call.\n *\n * Here's an example:\n *\n *     var data = getReallyBigArray();\n *\n *     var statistics = Lazy(data)\n *       .map(transform)\n *       .filter(validate)\n *       .reduce(aggregate);\n *\n * {@link Sequence} is the foundation of other, more specific sequence types.\n *\n * An {@link ArrayLikeSequence} provides indexed access to its elements.\n *\n * An {@link ObjectLikeSequence} consists of key/value pairs.\n *\n * A {@link StringLikeSequence} is like a string (duh): actually, it is an\n * {@link ArrayLikeSequence} whose elements happen to be characters.\n *\n * An {@link AsyncSequence} is special: it iterates over its elements\n * asynchronously (so calling `each` generally begins an asynchronous loop and\n * returns immediately).\n *\n * For more information\n * --------------------\n *\n * I wrote a blog post that explains a little bit more about Lazy.js, which you\n * can read [here](http://philosopherdeveloper.com/posts/introducing-lazy-js.html).\n *\n * You can also [create an issue on GitHub](https://github.com/dtao/lazy.js/issues)\n * if you have any issues with the library. I work through them eventually.\n *\n * [@dtao](https://github.com/dtao)\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.Lazy = factory();\n  }\n})(this, function(context) {\n  /**\n   * Wraps an object and returns a {@link Sequence}. For `null` or `undefined`,\n   * simply returns an empty sequence (see {@link Lazy.strict} for a stricter\n   * implementation).\n   *\n   * - For **arrays**, Lazy will create a sequence comprising the elements in\n   *   the array (an {@link ArrayLikeSequence}).\n   * - For **objects**, Lazy will create a sequence of key/value pairs\n   *   (an {@link ObjectLikeSequence}).\n   * - For **strings**, Lazy will create a sequence of characters (a\n   *   {@link StringLikeSequence}).\n   *\n   * @public\n   * @param {Array|Object|string} source An array, object, or string to wrap.\n   * @returns {Sequence} The wrapped lazy object.\n   *\n   * @exampleHelpers\n   * // Utility functions to provide to all examples\n   * function increment(x) { return x + 1; }\n   * function isEven(x) { return x % 2 === 0; }\n   * function isPositive(x) { return x > 0; }\n   * function isNegative(x) { return x < 0; }\n   *\n   * // HACK!\n   * // autodoc tests for private methods don't pull in all variables defined\n   * // within the current scope :(\n   * var isArray = Array.isArray;\n   *\n   * @examples\n   * Lazy([1, 2, 4])       // instanceof Lazy.ArrayLikeSequence\n   * Lazy({ foo: \"bar\" })  // instanceof Lazy.ObjectLikeSequence\n   * Lazy(\"hello, world!\") // instanceof Lazy.StringLikeSequence\n   * Lazy()                // sequence: []\n   * Lazy(null)            // sequence: []\n   */\n  function Lazy(source) {\n    if (isArray(source)) {\n      return new ArrayWrapper(source);\n\n    } else if (typeof source === \"string\") {\n      return new StringWrapper(source);\n\n    } else if (source instanceof Sequence) {\n      return source;\n    }\n\n    if (Lazy.extensions) {\n      var extensions = Lazy.extensions, length = extensions.length, result;\n      while (!result && length--) {\n        result = extensions[length](source);\n      }\n      if (result) {\n        return result;\n      }\n    }\n\n    return new ObjectWrapper(source);\n  }\n\n  Lazy.VERSION = '0.5.1';\n\n  /*** Utility methods of questionable value ***/\n\n  Lazy.noop = function noop() {};\n  Lazy.identity = function identity(x) { return x; };\n  Lazy.equality = function equality(x, y) { return x === y; };\n\n  /**\n   * Provides a stricter version of {@link Lazy} which throws an error when\n   * attempting to wrap `null`, `undefined`, or numeric or boolean values as a\n   * sequence.\n   *\n   * @public\n   * @returns {Function} A stricter version of the {@link Lazy} helper function.\n   *\n   * @examples\n   * var Strict = Lazy.strict();\n   *\n   * Strict()                  // throws\n   * Strict(null)              // throws\n   * Strict(true)              // throws\n   * Strict(5)                 // throws\n   * Strict([1, 2, 3])         // instanceof Lazy.ArrayLikeSequence\n   * Strict({ foo: \"bar\" })    // instanceof Lazy.ObjectLikeSequence\n   * Strict(\"hello, world!\")   // instanceof Lazy.StringLikeSequence\n   *\n   * // Let's also ensure the static functions are still there.\n   * Strict.range(3)           // sequence: [0, 1, 2]\n   * Strict.generate(Date.now) // instanceof Lazy.GeneratedSequence\n   */\n  Lazy.strict = function strict() {\n    function StrictLazy(source) {\n      if (source == null) {\n        throw new Error(\"You cannot wrap null or undefined using Lazy.\");\n      }\n\n      if (typeof source === \"number\" || typeof source === \"boolean\") {\n        throw new Error(\"You cannot wrap primitive values using Lazy.\");\n      }\n\n      return Lazy(source);\n    };\n\n    Lazy(Lazy).each(function(property, name) {\n      StrictLazy[name] = property;\n    });\n\n    return StrictLazy;\n  };\n\n  /**\n   * The `Sequence` object provides a unified API encapsulating the notion of\n   * zero or more consecutive elements in a collection, stream, etc.\n   *\n   * Lazy evaluation\n   * ---------------\n   *\n   * Generally speaking, creating a sequence should not be an expensive operation,\n   * and should not iterate over an underlying source or trigger any side effects.\n   * This means that chaining together methods that return sequences incurs only\n   * the cost of creating the `Sequence` objects themselves and not the cost of\n   * iterating an underlying data source multiple times.\n   *\n   * The following code, for example, creates 4 sequences and does nothing with\n   * `source`:\n   *\n   *     var seq = Lazy(source) // 1st sequence\n   *       .map(func)           // 2nd\n   *       .filter(pred)        // 3rd\n   *       .reverse();          // 4th\n   *\n   * Lazy's convention is to hold off on iterating or otherwise *doing* anything\n   * (aside from creating `Sequence` objects) until you call `each`:\n   *\n   *     seq.each(function(x) { console.log(x); });\n   *\n   * Defining custom sequences\n   * -------------------------\n   *\n   * Defining your own type of sequence is relatively simple:\n   *\n   * 1. Pass a *method name* and an object containing *function overrides* to\n   *    {@link Sequence.define}. If the object includes a function called `init`,\n   *    this function will be called upon initialization.\n   * 2. The object should include at least either a `getIterator` method or an\n   *    `each` method. The former supports both asynchronous and synchronous\n   *    iteration, but is slightly more cumbersome to implement. The latter\n   *    supports synchronous iteration and can be automatically implemented in\n   *    terms of the former. You can also implement both if you want, e.g. to\n   *    optimize performance. For more info, see {@link Iterator} and\n   *    {@link AsyncSequence}.\n   *\n   * As a trivial example, the following code defines a new method, `sample`,\n   * which randomly may or may not include each element from its parent.\n   *\n   *     Lazy.Sequence.define(\"sample\", {\n   *       each: function(fn) {\n   *         return this.parent.each(function(e) {\n   *           // 50/50 chance of including this element.\n   *           if (Math.random() > 0.5) {\n   *             return fn(e);\n   *           }\n   *         });\n   *       }\n   *     });\n   *\n   * (Of course, the above could also easily have been implemented using\n   * {@link #filter} instead of creating a custom sequence. But I *did* say this\n   * was a trivial example, to be fair.)\n   *\n   * Now it will be possible to create this type of sequence from any parent\n   * sequence by calling the method name you specified. In other words, you can\n   * now do this:\n   *\n   *     Lazy(arr).sample();\n   *     Lazy(arr).map(func).sample();\n   *     Lazy(arr).map(func).filter(pred).sample();\n   *\n   * Etc., etc.\n   *\n   * @public\n   * @constructor\n   */\n  function Sequence() {}\n\n  /**\n   * Create a new constructor function for a type inheriting from `Sequence`.\n   *\n   * @public\n   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n   *     used for constructing the new sequence. The method will be attached to\n   *     the `Sequence` prototype so that it can be chained with any other\n   *     sequence methods, like {@link #map}, {@link #filter}, etc.\n   * @param {Object} overrides An object containing function overrides for this\n   *     new sequence type. **Must** include either `getIterator` or `each` (or\n   *     both). *May* include an `init` method as well. For these overrides,\n   *     `this` will be the new sequence, and `this.parent` will be the base\n   *     sequence from which the new sequence was constructed.\n   * @returns {Function} A constructor for a new type inheriting from `Sequence`.\n   *\n   * @examples\n   * // This sequence type logs every element to the specified logger as it\n   * // iterates over it.\n   * Lazy.Sequence.define(\"verbose\", {\n   *   init: function(logger) {\n   *     this.logger = logger;\n   *   },\n   *\n   *   each: function(fn) {\n   *     var logger = this.logger;\n   *     return this.parent.each(function(e, i) {\n   *       logger(e);\n   *       return fn(e, i);\n   *     });\n   *   }\n   * });\n   *\n   * Lazy([1, 2, 3]).verbose(logger).each(Lazy.noop) // calls logger 3 times\n   */\n  Sequence.define = function define(methodName, overrides) {\n    if (!overrides || (!overrides.getIterator && !overrides.each)) {\n      throw new Error(\"A custom sequence must implement *at least* getIterator or each!\");\n    }\n\n    return defineSequenceType(Sequence, methodName, overrides);\n  };\n\n  /**\n   * Gets the number of elements in the sequence. In some cases, this may\n   * require eagerly evaluating the sequence.\n   *\n   * @public\n   * @returns {number} The number of elements in the sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).size();                 // => 3\n   * Lazy([1, 2]).map(Lazy.identity).size(); // => 2\n   * Lazy([1, 2, 3]).reject(isEven).size();  // => 2\n   * Lazy([1, 2, 3]).take(1).size();         // => 1\n   * Lazy({ foo: 1, bar: 2 }).size();        // => 2\n   * Lazy('hello').size();                   // => 5\n   */\n  Sequence.prototype.size = function size() {\n    return this.getIndex().length();\n  };\n\n  /**\n   * Creates an {@link Iterator} object with two methods, `moveNext` -- returning\n   * true or false -- and `current` -- returning the current value.\n   *\n   * This method is used when asynchronously iterating over sequences. Any type\n   * inheriting from `Sequence` must implement this method or it can't support\n   * asynchronous iteration.\n   *\n   * Note that **this method is not intended to be used directly by application\n   * code.** Rather, it is intended as a means for implementors to potentially\n   * define custom sequence types that support either synchronous or\n   * asynchronous iteration.\n   *\n   * @public\n   * @returns {Iterator} An iterator object.\n   *\n   * @examples\n   * var iterator = Lazy([1, 2]).getIterator();\n   *\n   * iterator.moveNext(); // => true\n   * iterator.current();  // => 1\n   * iterator.moveNext(); // => true\n   * iterator.current();  // => 2\n   * iterator.moveNext(); // => false\n   */\n  Sequence.prototype.getIterator = function getIterator() {\n    return new Iterator(this);\n  };\n\n  /**\n   * Gets the root sequence underlying the current chain of sequences.\n   */\n  Sequence.prototype.root = function root() {\n    return this.parent.root();\n  };\n\n  /**\n   * Whether or not the current sequence is an asynchronous one. This is more\n   * accurate than checking `instanceof {@link AsyncSequence}` because, for\n   * example, `Lazy([1, 2, 3]).async().map(Lazy.identity)` returns a sequence\n   * that iterates asynchronously even though it's not an instance of\n   * `AsyncSequence`.\n   *\n   * @returns {boolean} Whether or not the current sequence is an asynchronous one.\n   */\n  Sequence.prototype.isAsync = function isAsync() {\n    return this.parent ? this.parent.isAsync() : false;\n  };\n\n  /**\n   * Evaluates the sequence and produces the appropriate value (an array in most\n   * cases, an object for {@link ObjectLikeSequence}s or a string for\n   * {@link StringLikeSequence}s).\n   *\n   * @returns {Array|string|Object} The value resulting from fully evaluating\n   *     the sequence.\n   */\n  Sequence.prototype.value = function value() {\n    return this.toArray();\n  };\n\n  /**\n   * Applies the current transformation chain to a given source, returning the\n   * resulting value.\n   *\n   * @examples\n   * var sequence = Lazy([])\n   *   .map(function(x) { return x * -1; })\n   *   .filter(function(x) { return x % 2 === 0; });\n   *\n   * sequence.apply([1, 2, 3, 4]); // => [-2, -4]\n   */\n  Sequence.prototype.apply = function apply(source) {\n    var root = this.root(),\n        previousSource = root.source,\n        result;\n\n    try {\n      root.source = source;\n      result = this.value();\n    } finally {\n      root.source = previousSource;\n    }\n\n    return result;\n  };\n\n  /**\n   * The Iterator object provides an API for iterating over a sequence.\n   *\n   * The purpose of the `Iterator` type is mainly to offer an agnostic way of\n   * iterating over a sequence -- either synchronous (i.e. with a `while` loop)\n   * or asynchronously (with recursive calls to either `setTimeout` or --- if\n   * available --- `setImmediate`). It is not intended to be used directly by\n   * application code.\n   *\n   * @public\n   * @constructor\n   * @param {Sequence} sequence The sequence to iterate over.\n   */\n  function Iterator(sequence) {\n    this.sequence = sequence;\n    this.index    = -1;\n  }\n\n  /**\n   * Gets the current item this iterator is pointing to.\n   *\n   * @public\n   * @returns {*} The current item.\n   */\n  Iterator.prototype.current = function current() {\n    return this.cachedIndex && this.cachedIndex.get(this.index);\n  };\n\n  /**\n   * Moves the iterator to the next item in a sequence, if possible.\n   *\n   * @public\n   * @returns {boolean} True if the iterator is able to move to a new item, or else\n   *     false.\n   */\n  Iterator.prototype.moveNext = function moveNext() {\n    var cachedIndex = this.cachedIndex;\n\n    if (!cachedIndex) {\n      cachedIndex = this.cachedIndex = this.sequence.getIndex();\n    }\n\n    if (this.index >= cachedIndex.length() - 1) {\n      return false;\n    }\n\n    ++this.index;\n    return true;\n  };\n\n  /**\n   * Creates an array snapshot of a sequence.\n   *\n   * Note that for indefinite sequences, this method may raise an exception or\n   * (worse) cause the environment to hang.\n   *\n   * @public\n   * @returns {Array} An array containing the current contents of the sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).toArray() // => [1, 2, 3]\n   */\n  Sequence.prototype.toArray = function toArray() {\n    return this.reduce(function(arr, element) {\n      arr.push(element);\n      return arr;\n    }, []);\n  };\n\n  /**\n   * Compare this to another sequence for equality.\n   *\n   * @public\n   * @param {Sequence} other The other sequence to compare this one to.\n   * @param {Function=} equalityFn An optional equality function, which should\n   *     take two arguments and return true or false to indicate whether those\n   *     values are considered equal.\n   * @returns {boolean} Whether the two sequences contain the same values in\n   *     the same order.\n   *\n   * @examples\n   * Lazy([1, 2]).equals(Lazy([1, 2]))   // => true\n   * Lazy([1, 2]).equals(Lazy([2, 1]))   // => false\n   * Lazy([1]).equals(Lazy([1, 2]))      // => false\n   * Lazy([1, 2]).equals(Lazy([1]))      // => false\n   * Lazy([]).equals(Lazy([]))           // => true\n   * Lazy(['foo']).equals(Lazy(['foo'])) // => true\n   * Lazy(['1']).equals(Lazy([1]))       // => false\n   * Lazy([false]).equals(Lazy([0]))     // => false\n   * Lazy([1, 2]).equals([1, 2])         // => false\n   * Lazy([1, 2]).equals('[1, 2]')       // => false\n   */\n  Sequence.prototype.equals = function equals(other, equalityFn) {\n    if (!(other instanceof Sequence)) {\n      return false;\n    }\n\n    var it  = this.getIterator(),\n        oit = other.getIterator(),\n        eq  = equalityFn || Lazy.equality;\n    while (it.moveNext()) {\n      if (!oit.moveNext()) {\n        return false;\n      }\n      if (!eq(it.current(), oit.current())) {\n        return false;\n      }\n    }\n    return !oit.moveNext();\n  };\n\n  /**\n   * Provides an indexed view into the sequence.\n   *\n   * For sequences that are already indexed, this will simply return the\n   * sequence. For non-indexed sequences, this will eagerly evaluate the\n   * sequence.\n   *\n   * @returns {ArrayLikeSequence} A sequence containing the current contents of\n   *     the sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).filter(isEven)            // instanceof Lazy.Sequence\n   * Lazy([1, 2, 3]).filter(isEven).getIndex() // instanceof Lazy.ArrayLikeSequence\n   */\n  Sequence.prototype.getIndex = function getIndex() {\n    return new ArrayWrapper(this.toArray());\n  };\n\n  /**\n   * Returns the element at the specified index. Note that, for sequences that\n   * are not {@link ArrayLikeSequence}s, this may require partially evaluating\n   * the sequence, iterating to reach the result. (In other words for such\n   * sequences this method is not O(1).)\n   *\n   * @public\n   * @param {number} i The index to access.\n   * @returns {*} The element.\n   *\n   */\n  Sequence.prototype.get = function get(i) {\n    var element;\n    this.each(function(e, index) {\n      if (index === i) {\n        element = e;\n        return false;\n      }\n    });\n    return element;\n  };\n\n  /**\n   * Provides an indexed, memoized view into the sequence. This will cache the\n   * result whenever the sequence is first iterated, so that subsequent\n   * iterations will access the same element objects.\n   *\n   * @public\n   * @returns {ArrayLikeSequence} An indexed, memoized sequence containing this\n   *     sequence's elements, cached after the first iteration.\n   *\n   * @example\n   * function createObject() { return new Object(); }\n   *\n   * var plain    = Lazy.generate(createObject, 10),\n   *     memoized = Lazy.generate(createObject, 10).memoize();\n   *\n   * plain.toArray()[0] === plain.toArray()[0];       // => false\n   * memoized.toArray()[0] === memoized.toArray()[0]; // => true\n   */\n  Sequence.prototype.memoize = function memoize() {\n    return new MemoizedSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function MemoizedSequence(parent) {\n    this.parent   = parent;\n    this.memo     = [];\n    this.iterator = undefined;\n    this.complete = false;\n  }\n\n  // MemoizedSequence needs to have its prototype set up after ArrayLikeSequence\n\n  /**\n   * Creates an object from a sequence of key/value pairs.\n   *\n   * @public\n   * @returns {Object} An object with keys and values corresponding to the pairs\n   *     of elements in the sequence.\n   *\n   * @examples\n   * var details = [\n   *   [\"first\", \"Dan\"],\n   *   [\"last\", \"Tao\"],\n   *   [\"age\", 29]\n   * ];\n   *\n   * Lazy(details).toObject() // => { first: \"Dan\", last: \"Tao\", age: 29 }\n   */\n  Sequence.prototype.toObject = function toObject() {\n    return this.reduce(function(object, pair) {\n      object[pair[0]] = pair[1];\n      return object;\n    }, {});\n  };\n\n  /**\n   * Iterates over this sequence and executes a function for every element.\n   *\n   * @public\n   * @aka forEach\n   * @param {Function} fn The function to call on each element in the sequence.\n   *     Return false from the function to end the iteration.\n   * @returns {boolean} `true` if the iteration evaluated the entire sequence,\n   *     or `false` if iteration was ended early.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4]).each(fn) // calls fn 4 times\n   */\n  Sequence.prototype.each = function each(fn) {\n    var iterator = this.getIterator(),\n        i = -1;\n\n    while (iterator.moveNext()) {\n      if (fn(iterator.current(), ++i) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  Sequence.prototype.forEach = function forEach(fn) {\n    return this.each(fn);\n  };\n\n  /**\n   * Creates a new sequence whose values are calculated by passing this sequence's\n   * elements through some mapping function.\n   *\n   * @public\n   * @aka collect\n   * @param {Function} mapFn The mapping function used to project this sequence's\n   *     elements onto a new sequence. This function takes up to two arguments:\n   *     the element, and the current index.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * function addIndexToValue(e, i) { return e + i; }\n   *\n   * Lazy([]).map(increment)              // sequence: []\n   * Lazy([1, 2, 3]).map(increment)       // sequence: [2, 3, 4]\n   * Lazy([1, 2, 3]).map(addIndexToValue) // sequence: [1, 3, 5]\n   *\n   * @benchmarks\n   * function increment(x) { return x + 1; }\n   *\n   * var smArr = Lazy.range(10).toArray(),\n   *     lgArr = Lazy.range(100).toArray();\n   *\n   * Lazy(smArr).map(increment).each(Lazy.noop) // lazy - 10 elements\n   * Lazy(lgArr).map(increment).each(Lazy.noop) // lazy - 100 elements\n   * _.each(_.map(smArr, increment), _.noop)    // lodash - 10 elements\n   * _.each(_.map(lgArr, increment), _.noop)    // lodash - 100 elements\n   */\n  Sequence.prototype.map = function map(mapFn) {\n    return new MappedSequence(this, createCallback(mapFn));\n  };\n\n  Sequence.prototype.collect = function collect(mapFn) {\n    return this.map(mapFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function MappedSequence(parent, mapFn) {\n    this.parent = parent;\n    this.mapFn  = mapFn;\n  }\n\n  MappedSequence.prototype = Object.create(Sequence.prototype);\n\n  MappedSequence.prototype.getIterator = function getIterator() {\n    return new MappingIterator(this.parent, this.mapFn);\n  };\n\n  MappedSequence.prototype.each = function each(fn) {\n    var mapFn = this.mapFn;\n    return this.parent.each(function(e, i) {\n      return fn(mapFn(e, i), i);\n    });\n  };\n\n  /**\n   * @constructor\n   */\n  function MappingIterator(sequence, mapFn) {\n    this.iterator = sequence.getIterator();\n    this.mapFn    = mapFn;\n    this.index    = -1;\n  }\n\n  MappingIterator.prototype.current = function current() {\n    return this.mapFn(this.iterator.current(), this.index);\n  };\n\n  MappingIterator.prototype.moveNext = function moveNext() {\n    if (this.iterator.moveNext()) {\n      ++this.index;\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * Creates a new sequence whose values are calculated by accessing the specified\n   * property from each element in this sequence.\n   *\n   * @public\n   * @param {string} propertyName The name of the property to access for every\n   *     element in this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var people = [\n   *   { first: \"Dan\", last: \"Tao\" },\n   *   { first: \"Bob\", last: \"Smith\" }\n   * ];\n   *\n   * Lazy(people).pluck(\"last\") // sequence: [\"Tao\", \"Smith\"]\n   */\n  Sequence.prototype.pluck = function pluck(property) {\n    return this.map(property);\n  };\n\n  /**\n   * Creates a new sequence whose values are calculated by invoking the specified\n   * function on each element in this sequence.\n   *\n   * @public\n   * @param {string} methodName The name of the method to invoke for every element\n   *     in this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * function Person(first, last) {\n   *   this.fullName = function fullName() {\n   *     return first + \" \" + last;\n   *   };\n   * }\n   *\n   * var people = [\n   *   new Person(\"Dan\", \"Tao\"),\n   *   new Person(\"Bob\", \"Smith\")\n   * ];\n   *\n   * Lazy(people).invoke(\"fullName\") // sequence: [\"Dan Tao\", \"Bob Smith\"]\n   */\n  Sequence.prototype.invoke = function invoke(methodName) {\n    return this.map(function(e) {\n      return e[methodName]();\n    });\n  };\n\n  /**\n   * Creates a new sequence whose values are the elements of this sequence which\n   * satisfy the specified predicate.\n   *\n   * @public\n   * @aka select\n   * @param {Function} filterFn The predicate to call on each element in this\n   *     sequence, which returns true if the element should be included.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var numbers = [1, 2, 3, 4, 5, 6];\n   *\n   * Lazy(numbers).filter(isEven) // sequence: [2, 4, 6]\n   *\n   * @benchmarks\n   * function isEven(x) { return x % 2 === 0; }\n   *\n   * var smArr = Lazy.range(10).toArray(),\n   *     lgArr = Lazy.range(100).toArray();\n   *\n   * Lazy(smArr).filter(isEven).each(Lazy.noop) // lazy - 10 elements\n   * Lazy(lgArr).filter(isEven).each(Lazy.noop) // lazy - 100 elements\n   * _.each(_.filter(smArr, isEven), _.noop)    // lodash - 10 elements\n   * _.each(_.filter(lgArr, isEven), _.noop)    // lodash - 100 elements\n   */\n  Sequence.prototype.filter = function filter(filterFn) {\n    return new FilteredSequence(this, createCallback(filterFn));\n  };\n\n  Sequence.prototype.select = function select(filterFn) {\n    return this.filter(filterFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function FilteredSequence(parent, filterFn) {\n    this.parent   = parent;\n    this.filterFn = filterFn;\n  }\n\n  FilteredSequence.prototype = Object.create(Sequence.prototype);\n\n  FilteredSequence.prototype.getIterator = function getIterator() {\n    return new FilteringIterator(this.parent, this.filterFn);\n  };\n\n  FilteredSequence.prototype.each = function each(fn) {\n    var filterFn = this.filterFn,\n        j = 0;\n\n    return this.parent.each(function(e, i) {\n      if (filterFn(e, i)) {\n        return fn(e, j++);\n      }\n    });\n  };\n\n  FilteredSequence.prototype.reverse = function reverse() {\n    return this.parent.reverse().filter(this.filterFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function FilteringIterator(sequence, filterFn) {\n    this.iterator = sequence.getIterator();\n    this.filterFn = filterFn;\n    this.index    = 0;\n  }\n\n  FilteringIterator.prototype.current = function current() {\n    return this.value;\n  };\n\n  FilteringIterator.prototype.moveNext = function moveNext() {\n    var iterator = this.iterator,\n        filterFn = this.filterFn,\n        value;\n\n    while (iterator.moveNext()) {\n      value = iterator.current();\n      if (filterFn(value, this.index++)) {\n        this.value = value;\n        return true;\n      }\n    }\n\n    this.value = undefined;\n    return false;\n  };\n\n  /**\n   * Creates a new sequence whose values exclude the elements of this sequence\n   * identified by the specified predicate.\n   *\n   * @public\n   * @param {Function} rejectFn The predicate to call on each element in this\n   *     sequence, which returns true if the element should be omitted.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4, 5]).reject(isEven)              // sequence: [1, 3, 5]\n   * Lazy([{ foo: 1 }, { bar: 2 }]).reject('foo')      // sequence: [{ bar: 2 }]\n   * Lazy([{ foo: 1 }, { foo: 2 }]).reject({ foo: 2 }) // sequence: [{ foo: 1 }]\n   */\n  Sequence.prototype.reject = function reject(rejectFn) {\n    rejectFn = createCallback(rejectFn);\n    return this.filter(function(e) { return !rejectFn(e); });\n  };\n\n  /**\n   * Creates a new sequence whose values have the specified type, as determined\n   * by the `typeof` operator.\n   *\n   * @public\n   * @param {string} type The type of elements to include from the underlying\n   *     sequence, i.e. where `typeof [element] === [type]`.\n   * @returns {Sequence} The new sequence, comprising elements of the specified\n   *     type.\n   *\n   * @examples\n   * Lazy([1, 2, 'foo', 'bar']).ofType('number')  // sequence: [1, 2]\n   * Lazy([1, 2, 'foo', 'bar']).ofType('string')  // sequence: ['foo', 'bar']\n   * Lazy([1, 2, 'foo', 'bar']).ofType('boolean') // sequence: []\n   */\n  Sequence.prototype.ofType = function ofType(type) {\n    return this.filter(function(e) { return typeof e === type; });\n  };\n\n  /**\n   * Creates a new sequence whose values are the elements of this sequence with\n   * property names and values matching those of the specified object.\n   *\n   * @public\n   * @param {Object} properties The properties that should be found on every\n   *     element that is to be included in this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var people = [\n   *   { first: \"Dan\", last: \"Tao\" },\n   *   { first: \"Bob\", last: \"Smith\" }\n   * ];\n   *\n   * Lazy(people).where({ first: \"Dan\" }) // sequence: [{ first: \"Dan\", last: \"Tao\" }]\n   *\n   * @benchmarks\n   * var animals = [\"dog\", \"cat\", \"mouse\", \"horse\", \"pig\", \"snake\"];\n   *\n   * Lazy(animals).where({ length: 3 }).each(Lazy.noop) // lazy\n   * _.each(_.where(animals, { length: 3 }), _.noop)    // lodash\n   */\n  Sequence.prototype.where = function where(properties) {\n    return this.filter(properties);\n  };\n\n  /**\n   * Creates a new sequence with the same elements as this one, but to be iterated\n   * in the opposite order.\n   *\n   * Note that in some (but not all) cases, the only way to create such a sequence\n   * may require iterating the entire underlying source when `each` is called.\n   *\n   * @public\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).reverse() // sequence: [3, 2, 1]\n   * Lazy([]).reverse()        // sequence: []\n   */\n  Sequence.prototype.reverse = function reverse() {\n    return new ReversedSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function ReversedSequence(parent) {\n    this.parent = parent;\n  }\n\n  ReversedSequence.prototype = Object.create(Sequence.prototype);\n\n  ReversedSequence.prototype.getIterator = function getIterator() {\n    return new ReversedIterator(this.parent);\n  };\n\n  /**\n   * @constuctor\n   */\n  function ReversedIterator(sequence) {\n    this.sequence = sequence;\n  }\n\n  ReversedIterator.prototype.current = function current() {\n    return this.getIndex().get(this.index);\n  };\n\n  ReversedIterator.prototype.moveNext = function moveNext() {\n    var index  = this.getIndex(),\n        length = index.length();\n\n    if (typeof this.index === \"undefined\") {\n      this.index = length;\n    }\n\n    return (--this.index >= 0);\n  };\n\n  ReversedIterator.prototype.getIndex = function getIndex() {\n    if (!this.cachedIndex) {\n      this.cachedIndex = this.sequence.getIndex();\n    }\n\n    return this.cachedIndex;\n  };\n\n  /**\n   * Creates a new sequence with all of the elements of this one, plus those of\n   * the given array(s).\n   *\n   * @public\n   * @param {...*} var_args One or more values (or arrays of values) to use for\n   *     additional items after this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var left  = [1, 2, 3];\n   * var right = [4, 5, 6];\n   *\n   * Lazy(left).concat(right)             // sequence: [1, 2, 3, 4, 5, 6]\n   * Lazy(left).concat(Lazy(right))       // sequence: [1, 2, 3, 4, 5, 6]\n   * Lazy(left).concat(right, [7, 8])     // sequence: [1, 2, 3, 4, 5, 6, 7, 8]\n   * Lazy(left).concat([4, [5, 6]])       // sequence: [1, 2, 3, 4, [5, 6]]\n   * Lazy(left).concat(Lazy([4, [5, 6]])) // sequence: [1, 2, 3, 4, [5, 6]]\n   */\n  Sequence.prototype.concat = function concat(var_args) {\n    return new ConcatenatedSequence(this, arraySlice.call(arguments, 0));\n  };\n\n  /**\n   * @constructor\n   */\n  function ConcatenatedSequence(parent, arrays) {\n    this.parent = parent;\n    this.arrays = arrays;\n  }\n\n  ConcatenatedSequence.prototype = Object.create(Sequence.prototype);\n\n  ConcatenatedSequence.prototype.each = function each(fn) {\n    var done = false,\n        i = 0;\n\n    this.parent.each(function(e) {\n      if (fn(e, i++) === false) {\n        done = true;\n        return false;\n      }\n    });\n\n    if (!done) {\n      Lazy(this.arrays).flatten(true).each(function(e) {\n        if (fn(e, i++) === false) {\n          return false;\n        }\n      });\n    }\n  };\n\n  /**\n   * Creates a new sequence comprising the first N elements from this sequence, OR\n   * (if N is `undefined`) simply returns the first element of this sequence.\n   *\n   * @public\n   * @aka head, take\n   * @param {number=} count The number of elements to take from this sequence. If\n   *     this value exceeds the length of the sequence, the resulting sequence\n   *     will be essentially the same as this one.\n   * @returns {*} The new sequence (or the first element from this sequence if\n   *     no count was given).\n   *\n   * @examples\n   * function powerOfTwo(exp) {\n   *   return Math.pow(2, exp);\n   * }\n   *\n   * Lazy.generate(powerOfTwo).first()          // => 1\n   * Lazy.generate(powerOfTwo).first(5)         // sequence: [1, 2, 4, 8, 16]\n   * Lazy.generate(powerOfTwo).skip(2).first()  // => 4\n   * Lazy.generate(powerOfTwo).skip(2).first(2) // sequence: [4, 8]\n   */\n  Sequence.prototype.first = function first(count) {\n    if (typeof count === \"undefined\") {\n      return getFirst(this);\n    }\n    return new TakeSequence(this, count);\n  };\n\n  Sequence.prototype.head =\n  Sequence.prototype.take = function (count) {\n    return this.first(count);\n  };\n\n  /**\n   * @constructor\n   */\n  function TakeSequence(parent, count) {\n    this.parent = parent;\n    this.count  = count;\n  }\n\n  TakeSequence.prototype = Object.create(Sequence.prototype);\n\n  TakeSequence.prototype.getIterator = function getIterator() {\n    return new TakeIterator(this.parent, this.count);\n  };\n\n  TakeSequence.prototype.each = function each(fn) {\n    var count = this.count,\n        i     = 0;\n\n    var result;\n    var handle = this.parent.each(function(e) {\n      if (i < count) { result = fn(e, i++); }\n      if (i >= count) { return false; }\n      return result;\n    });\n\n    if (handle instanceof AsyncHandle) {\n      return handle;\n    }\n\n    return i === count && result !== false;\n  };\n\n  /**\n   * @constructor\n   */\n  function TakeIterator(sequence, count) {\n    this.iterator = sequence.getIterator();\n    this.count    = count;\n  }\n\n  TakeIterator.prototype.current = function current() {\n    return this.iterator.current();\n  };\n\n  TakeIterator.prototype.moveNext = function moveNext() {\n    return ((--this.count >= 0) && this.iterator.moveNext());\n  };\n\n  /**\n   * Creates a new sequence comprising the elements from the head of this sequence\n   * that satisfy some predicate. Once an element is encountered that doesn't\n   * satisfy the predicate, iteration will stop.\n   *\n   * @public\n   * @param {Function} predicate\n   * @returns {Sequence} The new sequence\n   *\n   * @examples\n   * function lessThan(x) {\n   *   return function(y) {\n   *     return y < x;\n   *   };\n   * }\n   *\n   * Lazy([1, 2, 3, 4]).takeWhile(lessThan(3)) // sequence: [1, 2]\n   * Lazy([1, 2, 3, 4]).takeWhile(lessThan(0)) // sequence: []\n   */\n  Sequence.prototype.takeWhile = function takeWhile(predicate) {\n    return new TakeWhileSequence(this, predicate);\n  };\n\n  /**\n   * @constructor\n   */\n  function TakeWhileSequence(parent, predicate) {\n    this.parent    = parent;\n    this.predicate = predicate;\n  }\n\n  TakeWhileSequence.prototype = Object.create(Sequence.prototype);\n\n  TakeWhileSequence.prototype.each = function each(fn) {\n    var predicate = this.predicate,\n        finished = false,\n        j = 0;\n\n    var result = this.parent.each(function(e, i) {\n      if (!predicate(e, i)) {\n        finished = true;\n        return false;\n      }\n\n      return fn(e, j++);\n    });\n\n    if (result instanceof AsyncHandle) {\n      return result;\n    }\n\n    return finished;\n  };\n\n  /**\n   * Creates a new sequence comprising all but the last N elements of this\n   * sequence.\n   *\n   * @public\n   * @param {number=} count The number of items to omit from the end of the\n   *     sequence (defaults to 1).\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4]).initial()                    // sequence: [1, 2, 3]\n   * Lazy([1, 2, 3, 4]).initial(2)                   // sequence: [1, 2]\n   * Lazy([1, 2, 3]).filter(Lazy.identity).initial() // sequence: [1, 2]\n   */\n  Sequence.prototype.initial = function initial(count) {\n    return new InitialSequence(this, count);\n  };\n\n  function InitialSequence(parent, count) {\n    this.parent = parent;\n    this.count = typeof count === \"number\" ? count : 1;\n  }\n\n  InitialSequence.prototype = Object.create(Sequence.prototype);\n\n  InitialSequence.prototype.each = function each(fn) {\n    var index = this.parent.getIndex();\n    return index.take(index.length() - this.count).each(fn);\n  };\n\n  /**\n   * Creates a new sequence comprising the last N elements of this sequence, OR\n   * (if N is `undefined`) simply returns the last element of this sequence.\n   *\n   * @public\n   * @param {number=} count The number of items to take from the end of the\n   *     sequence.\n   * @returns {*} The new sequence (or the last element from this sequence\n   *     if no count was given).\n   *\n   * @examples\n   * Lazy([1, 2, 3]).last()                 // => 3\n   * Lazy([1, 2, 3]).last(2)                // sequence: [2, 3]\n   * Lazy([1, 2, 3]).filter(isEven).last(2) // sequence: [2]\n   */\n  Sequence.prototype.last = function last(count) {\n    if (typeof count === \"undefined\") {\n      return this.reverse().first();\n    }\n    return this.reverse().take(count).reverse();\n  };\n\n  /**\n   * Returns the first element in this sequence with property names and values\n   * matching those of the specified object.\n   *\n   * @public\n   * @param {Object} properties The properties that should be found on some\n   *     element in this sequence.\n   * @returns {*} The found element, or `undefined` if none exists in this\n   *     sequence.\n   *\n   * @examples\n   * var words = [\"foo\", \"bar\"];\n   *\n   * Lazy(words).findWhere({ 0: \"f\" }); // => \"foo\"\n   * Lazy(words).findWhere({ 0: \"z\" }); // => undefined\n   */\n  Sequence.prototype.findWhere = function findWhere(properties) {\n    return this.where(properties).first();\n  };\n\n  /**\n   * Creates a new sequence comprising all but the first N elements of this\n   * sequence.\n   *\n   * @public\n   * @aka skip, tail, rest\n   * @param {number=} count The number of items to omit from the beginning of the\n   *     sequence (defaults to 1).\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4]).rest()  // sequence: [2, 3, 4]\n   * Lazy([1, 2, 3, 4]).rest(0) // sequence: [1, 2, 3, 4]\n   * Lazy([1, 2, 3, 4]).rest(2) // sequence: [3, 4]\n   * Lazy([1, 2, 3, 4]).rest(5) // sequence: []\n   */\n  Sequence.prototype.rest = function rest(count) {\n    return new DropSequence(this, count);\n  };\n\n  Sequence.prototype.skip =\n  Sequence.prototype.tail =\n  Sequence.prototype.drop = function drop(count) {\n    return this.rest(count);\n  };\n\n  /**\n   * @constructor\n   */\n  function DropSequence(parent, count) {\n    this.parent = parent;\n    this.count  = typeof count === \"number\" ? count : 1;\n  }\n\n  DropSequence.prototype = Object.create(Sequence.prototype);\n\n  DropSequence.prototype.each = function each(fn) {\n    var count   = this.count,\n        dropped = 0,\n        i       = 0;\n\n    return this.parent.each(function(e) {\n      if (dropped++ < count) { return; }\n      return fn(e, i++);\n    });\n  };\n\n  /**\n   * Creates a new sequence comprising the elements from this sequence *after*\n   * those that satisfy some predicate. The sequence starts with the first\n   * element that does not match the predicate.\n   *\n   * @public\n   * @aka skipWhile\n   * @param {Function} predicate\n   * @returns {Sequence} The new sequence\n   */\n  Sequence.prototype.dropWhile = function dropWhile(predicate) {\n    return new DropWhileSequence(this, predicate);\n  };\n\n  Sequence.prototype.skipWhile = function skipWhile(predicate) {\n    return this.dropWhile(predicate);\n  };\n\n  /**\n   * @constructor\n   */\n  function DropWhileSequence(parent, predicate) {\n    this.parent    = parent;\n    this.predicate = predicate;\n  }\n\n  DropWhileSequence.prototype = Object.create(Sequence.prototype);\n\n  DropWhileSequence.prototype.each = function each(fn) {\n    var predicate = this.predicate,\n        done      = false;\n\n    return this.parent.each(function(e) {\n      if (!done) {\n        if (predicate(e)) {\n          return;\n        }\n\n        done = true;\n      }\n\n      return fn(e);\n    });\n  };\n\n  /**\n   * Creates a new sequence with the same elements as this one, but ordered\n   * using the specified comparison function.\n   *\n   * This has essentially the same behavior as calling\n   * [`Array#sort`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort),\n   * but obviously instead of modifying the collection it returns a new\n   * {@link Sequence} object.\n   *\n   * @public\n   * @param {Function=} sortFn The function used to compare elements in the\n   *     sequence. The function will be passed two elements and should return:\n   *     - 1 if the first is greater\n   *     - -1 if the second is greater\n   *     - 0 if the two values are the same\n   * @param {boolean} descending Whether or not the resulting sequence should be\n   *     in descending order (defaults to `false`).\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([5, 10, 1]).sort()                // sequence: [1, 5, 10]\n   * Lazy(['foo', 'bar']).sort()            // sequence: ['bar', 'foo']\n   * Lazy(['b', 'c', 'a']).sort(null, true) // sequence: ['c', 'b', 'a']\n   * Lazy([5, 10, 1]).sort(null, true)      // sequence: [10, 5, 1]\n   *\n   * // Sorting w/ custom comparison function\n   * Lazy(['a', 'ab', 'aa', 'ba', 'b', 'abc']).sort(function compare(x, y) {\n   *   if (x.length && (x.length !== y.length)) { return compare(x.length, y.length); }\n   *   if (x === y) { return 0; }\n   *   return x > y ? 1 : -1;\n   * });\n   * // => sequence: ['a', 'b', 'aa', 'ab', 'ba', 'abc']\n   */\n  Sequence.prototype.sort = function sort(sortFn, descending) {\n    sortFn || (sortFn = compare);\n    if (descending) { sortFn = reverseArguments(sortFn); }\n    return new SortedSequence(this, sortFn);\n  };\n\n  /**\n   * Creates a new sequence with the same elements as this one, but ordered by\n   * the results of the given function.\n   *\n   * You can pass:\n   *\n   * - a *string*, to sort by the named property\n   * - a function, to sort by the result of calling the function on each element\n   *\n   * @public\n   * @param {Function} sortFn The function to call on the elements in this\n   *     sequence, in order to sort them.\n   * @param {boolean} descending Whether or not the resulting sequence should be\n   *     in descending order (defaults to `false`).\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * function population(country) {\n   *   return country.pop;\n   * }\n   *\n   * function area(country) {\n   *   return country.sqkm;\n   * }\n   *\n   * var countries = [\n   *   { name: \"USA\", pop: 320000000, sqkm: 9600000 },\n   *   { name: \"Brazil\", pop: 194000000, sqkm: 8500000 },\n   *   { name: \"Nigeria\", pop: 174000000, sqkm: 924000 },\n   *   { name: \"China\", pop: 1350000000, sqkm: 9700000 },\n   *   { name: \"Russia\", pop: 143000000, sqkm: 17000000 },\n   *   { name: \"Australia\", pop: 23000000, sqkm: 7700000 }\n   * ];\n   *\n   * Lazy(countries).sortBy(population).last(3).pluck('name') // sequence: [\"Brazil\", \"USA\", \"China\"]\n   * Lazy(countries).sortBy(area).last(3).pluck('name')       // sequence: [\"USA\", \"China\", \"Russia\"]\n   * Lazy(countries).sortBy(area, true).first(3).pluck('name') // sequence: [\"Russia\", \"China\", \"USA\"]\n   *\n   * @benchmarks\n   * var randoms = Lazy.generate(Math.random).take(100).toArray();\n   *\n   * Lazy(randoms).sortBy(Lazy.identity).each(Lazy.noop) // lazy\n   * _.each(_.sortBy(randoms, Lazy.identity), _.noop)    // lodash\n   */\n  Sequence.prototype.sortBy = function sortBy(sortFn, descending) {\n    sortFn = createComparator(sortFn);\n    if (descending) { sortFn = reverseArguments(sortFn); }\n    return new SortedSequence(this, sortFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function SortedSequence(parent, sortFn) {\n    this.parent = parent;\n    this.sortFn = sortFn;\n  }\n\n  SortedSequence.prototype = Object.create(Sequence.prototype);\n\n  SortedSequence.prototype.each = function each(fn) {\n    var sortFn = this.sortFn,\n        result = this.parent.toArray();\n\n    result.sort(sortFn);\n\n    return forEach(result, fn);\n  };\n\n  /**\n   * @examples\n   * var items = [{ a: 4 }, { a: 3 }, { a: 5 }];\n   *\n   * Lazy(items).sortBy('a').reverse();\n   * // => sequence: [{ a: 5 }, { a: 4 }, { a: 3 }]\n   *\n   * Lazy(items).sortBy('a').reverse().reverse();\n   * // => sequence: [{ a: 3 }, { a: 4 }, { a: 5 }]\n   */\n  SortedSequence.prototype.reverse = function reverse() {\n    return new SortedSequence(this.parent, reverseArguments(this.sortFn));\n  };\n\n  /**\n   * Creates a new {@link ObjectLikeSequence} comprising the elements in this\n   * one, grouped together according to some key. The value associated with each\n   * key in the resulting object-like sequence is an array containing all of\n   * the elements in this sequence with that key.\n   *\n   * @public\n   * @param {Function|string} keyFn The function to call on the elements in this\n   *     sequence to obtain a key by which to group them, or a string representing\n   *     a parameter to read from all the elements in this sequence.\n   * @param {Function|string} valFn (Optional) The function to call on the elements\n   *     in this sequence to assign to the value for each instance to appear in the\n   *     group, or a string representing a parameter to read from all the elements\n   *     in this sequence.\n   * @returns {ObjectLikeSequence} The new sequence.\n   *\n   * @examples\n   * function oddOrEven(x) {\n   *   return x % 2 === 0 ? 'even' : 'odd';\n   * }\n   * function square(x) {\n   *   return x*x;\n   * }\n   *\n   * var numbers = [1, 2, 3, 4, 5];\n   *\n   * Lazy(numbers).groupBy(oddOrEven)                     // sequence: { odd: [1, 3, 5], even: [2, 4] }\n   * Lazy(numbers).groupBy(oddOrEven).get(\"odd\")          // => [1, 3, 5]\n   * Lazy(numbers).groupBy(oddOrEven).get(\"foo\")          // => undefined\n   * Lazy(numbers).groupBy(oddOrEven, square).get(\"even\") // => [4, 16]\n   *\n   * Lazy([\n   *   { name: 'toString' },\n   *   { name: 'toString' }\n   * ]).groupBy('name');\n   * // => sequence: {\n   *   'toString': [\n   *     { name: 'toString' },\n   *     { name: 'toString' }\n   *   ]\n   * }\n   */\n  Sequence.prototype.groupBy = function groupBy(keyFn, valFn) {\n    return new GroupedSequence(this, keyFn, valFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function GroupedSequence(parent, keyFn, valFn) {\n    this.parent = parent;\n    this.keyFn  = keyFn;\n    this.valFn  = valFn;\n  }\n\n  // GroupedSequence must have its prototype set after ObjectLikeSequence has\n  // been fully initialized.\n\n  /**\n   * Creates a new {@link ObjectLikeSequence} comprising the elements in this\n   * one, indexed according to some key.\n   *\n   * @public\n   * @param {Function|string} keyFn The function to call on the elements in this\n   *     sequence to obtain a key by which to index them, or a string\n   *     representing a property to read from all the elements in this sequence.\n   * @param {Function|string} valFn (Optional) The function to call on the elements\n   *     in this sequence to assign to the value of the indexed object, or a string\n   *     representing a parameter to read from all the elements in this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var people = [\n   *   { name: 'Bob', age: 25 },\n   *   { name: 'Fred', age: 34 }\n   * ];\n   *\n   * var bob  = people[0],\n   *     fred = people[1];\n   *\n   * Lazy(people).indexBy('name')        // sequence: { 'Bob': bob, 'Fred': fred }\n   * Lazy(people).indexBy('name', 'age') // sequence: { 'Bob': 25, 'Fred': 34 }\n   */\n  Sequence.prototype.indexBy = function(keyFn, valFn) {\n    return new IndexedSequence(this, keyFn, valFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedSequence(parent, keyFn, valFn) {\n    this.parent = parent;\n    this.keyFn  = keyFn;\n    this.valFn  = valFn;\n  }\n\n  // IndexedSequence must have its prototype set after ObjectLikeSequence has\n  // been fully initialized.\n\n  /**\n   * Creates a new {@link ObjectLikeSequence} containing the unique keys of all\n   * the elements in this sequence, each paired with the number of elements\n   * in this sequence having that key.\n   *\n   * @public\n   * @param {Function|string} keyFn The function to call on the elements in this\n   *     sequence to obtain a key by which to count them, or a string representing\n   *     a parameter to read from all the elements in this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * function oddOrEven(x) {\n   *   return x % 2 === 0 ? 'even' : 'odd';\n   * }\n   *\n   * var numbers = [1, 2, 3, 4, 5];\n   *\n   * Lazy(numbers).countBy(oddOrEven)            // sequence: { odd: 3, even: 2 }\n   * Lazy(numbers).countBy(oddOrEven).get(\"odd\") // => 3\n   * Lazy(numbers).countBy(oddOrEven).get(\"foo\") // => undefined\n   */\n  Sequence.prototype.countBy = function countBy(keyFn) {\n    return new CountedSequence(this, keyFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function CountedSequence(parent, keyFn) {\n    this.parent = parent;\n    this.keyFn  = keyFn;\n  }\n\n  // CountedSequence, like GroupedSequence, must have its prototype set after\n  // ObjectLikeSequence has been fully initialized.\n\n  /**\n   * Creates a new sequence with every unique element from this one appearing\n   * exactly once (i.e., with duplicates removed).\n   *\n   * @public\n   * @aka unique\n   * @param {Function=} keyFn An optional function to produce the key for each\n   *     object. This key is then tested for uniqueness as  opposed to the\n   *     object reference.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 2, 3, 3, 3]).uniq() // sequence: [1, 2, 3]\n   * Lazy([{ name: 'mike' }, \n   * \t{ name: 'sarah' }, \n   * \t{ name: 'mike' }\n   * ]).uniq('name')\n   * // sequence: [{ name: 'mike' }, { name: 'sarah' }]\n   *\n   * @benchmarks\n   * function randomOf(array) {\n   *   return function() {\n   *     return array[Math.floor(Math.random() * array.length)];\n   *   };\n   * }\n   *\n   * var mostUnique = Lazy.generate(randomOf(_.range(100)), 100).toArray(),\n   *     someUnique = Lazy.generate(randomOf(_.range(50)), 100).toArray(),\n   *     mostDupes  = Lazy.generate(randomOf(_.range(5)), 100).toArray();\n   *\n   * Lazy(mostUnique).uniq().each(Lazy.noop) // lazy - mostly unique elements\n   * Lazy(someUnique).uniq().each(Lazy.noop) // lazy - some unique elements\n   * Lazy(mostDupes).uniq().each(Lazy.noop)  // lazy - mostly duplicate elements\n   * _.each(_.uniq(mostUnique), _.noop)      // lodash - mostly unique elements\n   * _.each(_.uniq(someUnique), _.noop)      // lodash - some unique elements\n   * _.each(_.uniq(mostDupes), _.noop)       // lodash - mostly duplicate elements\n   */\n  Sequence.prototype.uniq = function uniq(keyFn) {\n    return new UniqueSequence(this, keyFn);\n  };\n\n  Sequence.prototype.unique = function unique(keyFn) {\n    return this.uniq(keyFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function UniqueSequence(parent, keyFn) {\n    this.parent = parent;\n    this.keyFn  = keyFn;\n  }\n\n  UniqueSequence.prototype = Object.create(Sequence.prototype);\n\n  UniqueSequence.prototype.each = function each(fn) {\n    var cache = new Set(),\n        keyFn = this.keyFn,\n        i     = 0;\n\n    if (keyFn) {\n      keyFn = createCallback(keyFn);\n      return this.parent.each(function(e) {\n        if (cache.add(keyFn(e))) {\n          return fn(e, i++);\n        }\n      });\n\n    } else {\n      return this.parent.each(function(e) {\n        if (cache.add(e)) {\n          return fn(e, i++);\n        }\n      });\n    }\n  };\n\n  /**\n   * Creates a new sequence by combining the elements from this sequence with\n   * corresponding elements from the specified array(s).\n   *\n   * @public\n   * @param {...Array} var_args One or more arrays of elements to combine with\n   *     those of this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2]).zip([3, 4])     // sequence: [[1, 3], [2, 4]]\n   * Lazy([]).zip([0])            // sequence: [[undefined, 0]]\n   * Lazy([0]).zip([])            // sequence: [[0, undefined]]\n   * Lazy([]).zip([1, 2], [3, 4]) // sequence: [[undefined, 1, 3], [undefined, 2, 4]]\n   * Lazy([]).zip([1], [2, 3])    // sequence: [[undefined, 1, 2], [undefined, undefined, 3]]\n   * Lazy([1, 2]).zip([3], [4])   // sequence: [[1, 3, 4], [2, undefined, undefined]]\n   *\n   * @benchmarks\n   * var smArrL = Lazy.range(10).toArray(),\n   *     smArrR = Lazy.range(10, 20).toArray(),\n   *     lgArrL = Lazy.range(100).toArray(),\n   *     lgArrR = Lazy.range(100, 200).toArray();\n   *\n   * Lazy(smArrL).zip(smArrR).each(Lazy.noop) // lazy - zipping 10-element arrays\n   * Lazy(lgArrL).zip(lgArrR).each(Lazy.noop) // lazy - zipping 100-element arrays\n   * _.each(_.zip(smArrL, smArrR), _.noop)    // lodash - zipping 10-element arrays\n   * _.each(_.zip(lgArrL, lgArrR), _.noop)    // lodash - zipping 100-element arrays\n   */\n  Sequence.prototype.zip = function zip(var_args) {\n    if (arguments.length === 1) {\n      return new SimpleZippedSequence(this, (/** @type {Array} */ var_args));\n    } else {\n      return new ZippedSequence(this, arraySlice.call(arguments, 0));\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  function ZippedSequence(parent, arrays) {\n    this.parent = parent;\n    this.arrays = arrays;\n  }\n\n  ZippedSequence.prototype = Object.create(Sequence.prototype);\n\n  ZippedSequence.prototype.each = function each(fn) {\n    var arrays = this.arrays,\n        i = 0;\n\n    var iteratedLeft = this.parent.each(function(e) {\n      var group = [e];\n      for (var j = 0; j < arrays.length; ++j) {\n        group.push(arrays[j][i]);\n      }\n      return fn(group, i++);\n    });\n\n    if (!iteratedLeft) {\n      return false;\n    }\n\n    var group,\n        keepGoing = true;\n\n    while (keepGoing) {\n      keepGoing = false;\n      group = [undefined];\n      for (var j = 0; j < arrays.length; ++j) {\n        group.push(arrays[j][i]);\n\n        // Check if *any* of the arrays have more elements to iterate.\n        if (arrays[j].length > i) {\n          keepGoing = true;\n        }\n      }\n\n      if (keepGoing && (fn(group, i++) === false)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Creates a new sequence with the same elements as this one, in a randomized\n   * order.\n   *\n   * @public\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4, 5]).shuffle().value() // =~ [1, 2, 3, 4, 5]\n   * Lazy([]).shuffle().value()              // => []\n   * Lazy([1]).shuffle().each(Lazy.noop)     // => true\n   * Lazy([]).shuffle().each(Lazy.noop)      // => true\n   */\n  Sequence.prototype.shuffle = function shuffle() {\n    return new ShuffledSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function ShuffledSequence(parent) {\n    this.parent = parent;\n  }\n\n  ShuffledSequence.prototype = Object.create(Sequence.prototype);\n\n  ShuffledSequence.prototype.each = function each(fn) {\n    var shuffled = this.parent.toArray(),\n        floor = Math.floor,\n        random = Math.random,\n        j = 0;\n\n    for (var i = shuffled.length - 1; i > 0; --i) {\n      swap(shuffled, i, floor(random() * (i + 1)));\n      if (fn(shuffled[i], j++) === false) {\n        return false;\n      }\n    }\n\n    if (shuffled.length) {\n      fn(shuffled[0], j);\n    }\n\n    return true;\n  };\n\n  /**\n   * Creates a new sequence with every element from this sequence, and with arrays\n   * exploded so that a sequence of arrays (of arrays) becomes a flat sequence of\n   * values.\n   *\n   * @public\n   * @param {boolean} shallow Option to flatten only one level deep (default is\n   *     recursive).\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, [2, 3], [4, [5]]]).flatten()     // sequence: [1, 2, 3, 4, 5]\n   * Lazy([1, [2, 3], [4, [5]]]).flatten(true) // sequence: [1, 2, 3, 4, [5]]\n   * Lazy([1, Lazy([2, 3])]).flatten()         // sequence: [1, 2, 3]\n   */\n  Sequence.prototype.flatten = function flatten(shallow) {\n    return new FlattenedSequence(this, shallow);\n  };\n\n  /**\n   * @constructor\n   */\n  function FlattenedSequence(parent, shallow) {\n    this.parent = parent;\n    this.each = shallow ? this.eachShallow : this.eachRecursive;\n  }\n\n  FlattenedSequence.prototype = Object.create(Sequence.prototype);\n\n  FlattenedSequence.prototype.eachShallow = function(fn) {\n    var index = 0;\n\n    return this.parent.each(function(e) {\n      if (isArray(e)) {\n        return forEach(e, function(val) {\n          return fn(val, index++);\n        });\n      }\n\n      if (e instanceof Sequence) {\n        return e.each(function(val) {\n          return fn(val, index++);\n        });\n      }\n\n      return fn(e, index++);\n    });\n  };\n\n  FlattenedSequence.prototype.eachRecursive = function each(fn) {\n    var index = 0;\n\n    return this.parent.each(function recurseVisitor(e) {\n      if (isArray(e)) {\n        return forEach(e, recurseVisitor);\n      }\n\n      if (e instanceof Sequence) {\n        return e.each(recurseVisitor);\n      }\n\n      return fn(e, index++);\n    });\n  };\n\n  /**\n   * Creates a new sequence with the same elements as this one, except for all\n   * falsy values (`false`, `0`, `\"\"`, `null`, and `undefined`).\n   *\n   * @public\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([\"foo\", null, \"bar\", undefined]).compact() // sequence: [\"foo\", \"bar\"]\n   */\n  Sequence.prototype.compact = function compact() {\n    return this.filter(function(e) { return !!e; });\n  };\n\n  /**\n   * Creates a new sequence with all the elements of this sequence that are not\n   * also among the specified arguments.\n   *\n   * @public\n   * @aka difference\n   * @param {...*} var_args The values, or array(s) of values, to be excluded from the\n   *     resulting sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4, 5]).without(2, 3)   // sequence: [1, 4, 5]\n   * Lazy([1, 2, 3, 4, 5]).without([4, 5]) // sequence: [1, 2, 3]\n   */\n  Sequence.prototype.without = function without(var_args) {\n    return new WithoutSequence(this, arraySlice.call(arguments, 0));\n  };\n\n  Sequence.prototype.difference = function difference(var_args) {\n    return this.without.apply(this, arguments);\n  };\n\n  /**\n   * @constructor\n   */\n  function WithoutSequence(parent, values) {\n    this.parent = parent;\n    this.values = values;\n  }\n\n  WithoutSequence.prototype = Object.create(Sequence.prototype);\n\n  WithoutSequence.prototype.each = function each(fn) {\n    var set = createSet(this.values),\n        i = 0;\n    return this.parent.each(function(e) {\n      if (!set.contains(e)) {\n        return fn(e, i++);\n      }\n    });\n  };\n\n  /**\n   * Creates a new sequence with all the unique elements either in this sequence\n   * or among the specified arguments.\n   *\n   * @public\n   * @param {...*} var_args The values, or array(s) of values, to be additionally\n   *     included in the resulting sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([\"foo\", \"bar\"]).union([])             // sequence: [\"foo\", \"bar\"]\n   * Lazy([\"foo\", \"bar\"]).union([\"bar\", \"baz\"]) // sequence: [\"foo\", \"bar\", \"baz\"]\n   */\n  Sequence.prototype.union = function union(var_args) {\n    return this.concat(var_args).uniq();\n  };\n\n  /**\n   * Creates a new sequence with all the elements of this sequence that also\n   * appear among the specified arguments.\n   *\n   * @public\n   * @param {...*} var_args The values, or array(s) of values, in which elements\n   *     from this sequence must also be included to end up in the resulting sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([\"foo\", \"bar\"]).intersection([])             // sequence: []\n   * Lazy([\"foo\", \"bar\"]).intersection([\"bar\", \"baz\"]) // sequence: [\"bar\"]\n   * Lazy([\"a\", \"a\"]).intersection([\"a\"])              // sequence: [\"a\"]\n   * Lazy([\"a\"]).intersection([\"a\", \"a\"])              // sequence: [\"a\"]\n   * Lazy([\"a\", \"a\"]).intersection([\"a\", \"a\"])         // sequence: [\"a\"]\n   * Lazy([\"a\", \"a\"]).intersection([\"a\"], [\"a\"])       // sequence: [\"a\"]\n   */\n  Sequence.prototype.intersection = function intersection(var_args) {\n    if (arguments.length === 1 && isArray(arguments[0])) {\n      return new SimpleIntersectionSequence(this, (/** @type {Array} */ var_args));\n    } else {\n      return new IntersectionSequence(this, arraySlice.call(arguments, 0));\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  function IntersectionSequence(parent, arrays) {\n    this.parent = parent;\n    this.arrays = arrays;\n  }\n\n  IntersectionSequence.prototype = Object.create(Sequence.prototype);\n\n  IntersectionSequence.prototype.each = function each(fn) {\n    var sets = Lazy(this.arrays).map(function(values) {\n      return new UniqueMemoizer(Lazy(values).getIterator());\n    });\n\n    var setIterator = new UniqueMemoizer(sets.getIterator()),\n        i = 0;\n\n    return this.parent.uniq().each(function(e) {\n      var includedInAll = true;\n      setIterator.each(function(set) {\n        if (!set.contains(e)) {\n          includedInAll = false;\n          return false;\n        }\n      });\n\n      if (includedInAll) {\n        return fn(e, i++);\n      }\n    });\n  };\n\n  /**\n   * @constructor\n   */\n  function Memoizer(memo, iterator) {\n    this.iterator     = iterator;\n    this.memo         = memo;\n    this.currentIndex = 0;\n    this.currentValue = undefined;\n  }\n\n  Memoizer.prototype.current = function current() {\n    return this.currentValue;\n  };\n\n  Memoizer.prototype.moveNext = function moveNext() {\n    var iterator = this.iterator,\n        memo = this.memo,\n        current;\n\n    if (this.currentIndex < memo.length) {\n      this.currentValue = memo[this.currentIndex++];\n      return true;\n    }\n\n    if (iterator.moveNext()) {\n      this.currentValue = memo[this.currentIndex++] = iterator.current();\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * @constructor\n   */\n  function UniqueMemoizer(iterator) {\n    this.iterator     = iterator;\n    this.set          = new Set();\n    this.memo         = [];\n    this.currentValue = undefined;\n  }\n\n  UniqueMemoizer.prototype.current = function current() {\n    return this.currentValue;\n  };\n\n  UniqueMemoizer.prototype.moveNext = function moveNext() {\n    var iterator = this.iterator,\n        set = this.set,\n        memo = this.memo,\n        current;\n\n    while (iterator.moveNext()) {\n      current = iterator.current();\n      if (set.add(current)) {\n        memo.push(current);\n        this.currentValue = current;\n        return true;\n      }\n    }\n    return false;\n  };\n\n  UniqueMemoizer.prototype.each = function each(fn) {\n    var memo = this.memo,\n        length = memo.length,\n        i = -1;\n\n    while (++i < length) {\n      if (fn(memo[i], i) === false) {\n        return false;\n      }\n    }\n\n    while (this.moveNext()) {\n      if (fn(this.currentValue, i++) === false) {\n        break;\n      }\n    }\n  };\n\n  UniqueMemoizer.prototype.contains = function contains(e) {\n    if (this.set.contains(e)) {\n      return true;\n    }\n\n    while (this.moveNext()) {\n      if (this.currentValue === e) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Checks whether every element in this sequence satisfies a given predicate.\n   *\n   * @public\n   * @aka all\n   * @param {Function} predicate A function to call on (potentially) every element\n   *     in this sequence.\n   * @returns {boolean} True if `predicate` returns true for every element in the\n   *     sequence (or the sequence is empty). False if `predicate` returns false\n   *     for at least one element.\n   *\n   * @examples\n   * var numbers = [1, 2, 3, 4, 5];\n   *\n   * var objects = [{ foo: true }, { foo: false, bar: true }];\n   *\n   * Lazy(numbers).every(isEven)     // => false\n   * Lazy(numbers).every(isPositive) // => true\n   * Lazy(objects).all('foo')        // => false\n   * Lazy(objects).all('bar')        // => false\n   */\n  Sequence.prototype.every = function every(predicate) {\n    predicate = createCallback(predicate);\n\n    return this.each(function(e, i) {\n      return !!predicate(e, i);\n    });\n  };\n\n  Sequence.prototype.all = function all(predicate) {\n    return this.every(predicate);\n  };\n\n  /**\n   * Checks whether at least one element in this sequence satisfies a given\n   * predicate (or, if no predicate is specified, whether the sequence contains at\n   * least one element).\n   *\n   * @public\n   * @aka any\n   * @param {Function=} predicate A function to call on (potentially) every element\n   *     in this sequence.\n   * @returns {boolean} True if `predicate` returns true for at least one element\n   *     in the sequence. False if `predicate` returns false for every element (or\n   *     the sequence is empty).\n   *\n   * @examples\n   * var numbers = [1, 2, 3, 4, 5];\n   *\n   * Lazy(numbers).some()           // => true\n   * Lazy(numbers).some(isEven)     // => true\n   * Lazy(numbers).some(isNegative) // => false\n   * Lazy([]).some()                // => false\n   */\n  Sequence.prototype.some = function some(predicate) {\n    predicate = createCallback(predicate, true);\n\n    var success = false;\n    this.each(function(e) {\n      if (predicate(e)) {\n        success = true;\n        return false;\n      }\n    });\n    return success;\n  };\n\n  Sequence.prototype.any = function any(predicate) {\n    return this.some(predicate);\n  };\n\n  /**\n   * Checks whether NO elements in this sequence satisfy the given predicate\n   * (the opposite of {@link Sequence#all}, basically).\n   *\n   * @public\n   * @param {Function=} predicate A function to call on (potentially) every element\n   *     in this sequence.\n   * @returns {boolean} True if `predicate` does not return true for any element\n   *     in the sequence. False if `predicate` returns true for at least one\n   *     element.\n   *\n   * @examples\n   * var numbers = [1, 2, 3, 4, 5];\n   *\n   * Lazy(numbers).none()           // => false\n   * Lazy(numbers).none(isEven)     // => false\n   * Lazy(numbers).none(isNegative) // => true\n   * Lazy([]).none(isEven)          // => true\n   * Lazy([]).none(isNegative)      // => true\n   * Lazy([]).none()                // => true\n   */\n  Sequence.prototype.none = function none(predicate) {\n    return !this.any(predicate);\n  };\n\n  /**\n   * Checks whether the sequence has no elements.\n   *\n   * @public\n   * @returns {boolean} True if the sequence is empty, false if it contains at\n   *     least one element.\n   *\n   * @examples\n   * Lazy([]).isEmpty()        // => true\n   * Lazy([1, 2, 3]).isEmpty() // => false\n   */\n  Sequence.prototype.isEmpty = function isEmpty() {\n    return !this.any();\n  };\n\n  /**\n   * Performs (at worst) a linear search from the head of this sequence,\n   * returning the first index at which the specified value is found.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @param {Function=} equalityFn An optional equality function, which should\n   *     take two arguments and return true or false to indicate whether those\n   *     values are considered equal.\n   * @returns {number} The index within this sequence where the given value is\n   *     located, or -1 if the sequence doesn't contain the value.\n   *\n   * @examples\n   * function reciprocal(x) { return 1 / x; }\n   *\n   * Lazy([\"foo\", \"bar\", \"baz\"]).indexOf(\"bar\")   // => 1\n   * Lazy([1, 2, 3]).indexOf(4)                   // => -1\n   * Lazy([1, 2, 3]).map(reciprocal).indexOf(0.5) // => 1\n   */\n  Sequence.prototype.indexOf = function indexOf(value, equalityFn) {\n    var eq = equalityFn || Lazy.equality,\n        foundIndex = -1;\n\n    this.each(function(e, i) {\n      if (eq(e, value)) {\n        foundIndex = i;\n        return false;\n      }\n    });\n    return foundIndex;\n  };\n\n  /**\n   * Performs (at worst) a linear search from the tail of this sequence,\n   * returning the last index at which the specified value is found.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @returns {number} The last index within this sequence where the given value\n   *     is located, or -1 if the sequence doesn't contain the value.\n   *\n   * @examples\n   * Lazy([\"a\", \"b\", \"c\", \"b\", \"a\"]).lastIndexOf(\"b\")    // => 3\n   * Lazy([1, 2, 3]).lastIndexOf(0)                      // => -1\n   * Lazy([2, 2, 1, 2, 4]).filter(isEven).lastIndexOf(2) // 2\n   */\n  Sequence.prototype.lastIndexOf = function lastIndexOf(value, equalityFn) {\n    var reversed = this.getIndex().reverse(),\n        index    = reversed.indexOf(value, equalityFn);\n    if (index !== -1) {\n      index = reversed.length() - index - 1;\n    }\n    return index;\n  };\n\n  /**\n   * Performs a binary search of this sequence, returning the lowest index where\n   * the given value is either found, or where it belongs (if it is not already\n   * in the sequence).\n   *\n   * This method assumes the sequence is in sorted order and will fail otherwise.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @returns {number} An index within this sequence where the given value is\n   *     located, or where it belongs in sorted order.\n   *\n   * @examples\n   * Lazy([1, 3, 6, 9]).sortedIndex(3)                    // => 1\n   * Lazy([1, 3, 6, 9]).sortedIndex(7)                    // => 3\n   * Lazy([5, 10, 15, 20]).filter(isEven).sortedIndex(10) // => 0\n   * Lazy([5, 10, 15, 20]).filter(isEven).sortedIndex(12) // => 1\n   */\n  Sequence.prototype.sortedIndex = function sortedIndex(value) {\n    var indexed = this.getIndex(),\n        lower   = 0,\n        upper   = indexed.length(),\n        i;\n\n    while (lower < upper) {\n      i = (lower + upper) >>> 1;\n      if (compare(indexed.get(i), value) === -1) {\n        lower = i + 1;\n      } else {\n        upper = i;\n      }\n    }\n    return lower;\n  };\n\n  /**\n   * Checks whether the given value is in this sequence.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @param {Function=} equalityFn An optional equality function, which should\n   *     take two arguments and return true or false to indicate whether those\n   *     values are considered equal.\n   * @returns {boolean} True if the sequence contains the value, false if not.\n   *\n   * @examples\n   * var numbers = [5, 10, 15, 20];\n   *\n   * Lazy(numbers).contains(15) // => true\n   * Lazy(numbers).contains(13) // => false\n   */\n  Sequence.prototype.contains = function contains(value, equalityFn) {\n    return this.indexOf(value, equalityFn) !== -1;\n  };\n\n  /**\n   * Aggregates a sequence into a single value according to some accumulator\n   * function.\n   *\n   * For an asynchronous sequence, instead of immediately returning a result\n   * (which it can't, obviously), this method returns an {@link AsyncHandle}\n   * whose `onComplete` method can be called to supply a callback to handle the\n   * final result once iteration has completed.\n   *\n   * @public\n   * @aka inject, foldl\n   * @param {Function} aggregator The function through which to pass every element\n   *     in the sequence. For every element, the function will be passed the total\n   *     aggregated result thus far and the element itself, and should return a\n   *     new aggregated result.\n   * @param {*=} memo The starting value to use for the aggregated result\n   *     (defaults to the first element in the sequence).\n   * @returns {*} The result of the aggregation, or, for asynchronous sequences,\n   *     an {@link AsyncHandle} whose `onComplete` method accepts a callback to\n   *     handle the final result.\n   *\n   * @examples\n   * function multiply(x, y) { return x * y; }\n   *\n   * var numbers = [1, 2, 3, 4];\n   *\n   * Lazy(numbers).reduce(multiply)    // => 24\n   * Lazy(numbers).reduce(multiply, 5) // => 120\n   */\n  Sequence.prototype.reduce = function reduce(aggregator, memo) {\n    if (arguments.length < 2) {\n      return this.tail().reduce(aggregator, this.head());\n    }\n\n    var eachResult = this.each(function(e, i) {\n      memo = aggregator(memo, e, i);\n    });\n\n    // TODO: Think of a way more efficient solution to this problem.\n    if (eachResult instanceof AsyncHandle) {\n      return eachResult.then(function() { return memo; });\n    }\n\n    return memo;\n  };\n\n  Sequence.prototype.inject =\n  Sequence.prototype.foldl = function foldl(aggregator, memo) {\n    return this.reduce(aggregator, memo);\n  };\n\n  /**\n   * Aggregates a sequence, from the tail, into a single value according to some\n   * accumulator function.\n   *\n   * @public\n   * @aka foldr\n   * @param {Function} aggregator The function through which to pass every element\n   *     in the sequence. For every element, the function will be passed the total\n   *     aggregated result thus far and the element itself, and should return a\n   *     new aggregated result.\n   * @param {*} memo The starting value to use for the aggregated result.\n   * @returns {*} The result of the aggregation.\n   *\n   * @examples\n   * function append(s1, s2) {\n   *   return s1 + s2;\n   * }\n   *\n   * function isVowel(str) {\n   *   return \"aeiou\".indexOf(str) !== -1;\n   * }\n   *\n   * Lazy(\"abcde\").reduceRight(append)                 // => \"edcba\"\n   * Lazy(\"abcde\").filter(isVowel).reduceRight(append) // => \"ea\"\n   */\n  Sequence.prototype.reduceRight = function reduceRight(aggregator, memo) {\n    if (arguments.length < 2) {\n      return this.initial(1).reduceRight(aggregator, this.last());\n    }\n\n    // This bothers me... but frankly, calling reverse().reduce() is potentially\n    // going to eagerly evaluate the sequence anyway; so it's really not an issue.\n    var indexed = this.getIndex(),\n        i = indexed.length() - 1;\n    return indexed.reverse().reduce(function(m, e) {\n      return aggregator(m, e, i--);\n    }, memo);\n  };\n\n  Sequence.prototype.foldr = function foldr(aggregator, memo) {\n    return this.reduceRight(aggregator, memo);\n  };\n\n  /**\n   * Groups this sequence into consecutive (overlapping) segments of a specified\n   * length. If the underlying sequence has fewer elements than the specified\n   * length, then this sequence will be empty.\n   *\n   * @public\n   * @param {number} length The length of each consecutive segment.\n   * @returns {Sequence} The resulting sequence of consecutive segments.\n   *\n   * @examples\n   * function sum(vals) { return Lazy(vals).sum(); }\n   * var pairs = Lazy([1, 2, 3, 4]).consecutive(2);\n   *\n   * // Make sure consecutive sequences are reusable.\n   * pairs.map(sum) // => sequence: [3, 5, 7]\n   * pairs.map(sum) // => sequence: [3, 5, 7]\n   *\n   * Lazy([]).consecutive(2)        // => sequence: []\n   * Lazy([1]).consecutive(2)       // => sequence: []\n   * Lazy([1, 2]).consecutive(2)    // => sequence: [[1, 2]]\n   * Lazy([1, 2, 3]).consecutive(2) // => sequence: [[1, 2], [2, 3]]\n   * Lazy([1, 2, 3]).consecutive(0) // => sequence: [[]]\n   * Lazy([1, 2, 3]).consecutive(1) // => sequence: [[1], [2], [3]]\n   */\n  Sequence.prototype.consecutive = function consecutive(count) {\n    return new ConsecutiveSequence(this, count);\n  };\n\n  function ConsecutiveSequence(parent, count) {\n    this.parent = parent;\n    this.count = count;\n  }\n\n  ConsecutiveSequence.prototype = Object.create(Sequence.prototype);\n\n  ConsecutiveSequence.prototype.each = function each(fn) {\n    var count = this.count,\n        queue = new Queue(count);\n    var segments = this.parent.map(function(element) {\n      if (queue.add(element).count === count) {\n        return queue.toArray();\n      }\n    });\n    return segments.compact().each(fn);\n  };\n\n  /**\n   * Breaks this sequence into chunks (arrays) of a specified length.\n   *\n   * @public\n   * @param {number} size The size of each chunk.\n   * @returns {Sequence} The resulting sequence of chunks.\n   *\n   * @examples\n   * Lazy([]).chunk(2)        // sequence: []\n   * Lazy([1, 2, 3]).chunk(2) // sequence: [[1, 2], [3]]\n   * Lazy([1, 2, 3]).chunk(1) // sequence: [[1], [2], [3]]\n   * Lazy([1, 2, 3]).chunk(4) // sequence: [[1, 2, 3]]\n   * Lazy([1, 2, 3]).chunk(0) // throws\n   */\n  Sequence.prototype.chunk = function chunk(size) {\n    if (size < 1) {\n      throw new Error(\"You must specify a positive chunk size.\");\n    }\n\n    return new ChunkedSequence(this, size);\n  };\n\n  /**\n   * @constructor\n   */\n  function ChunkedSequence(parent, size) {\n    this.parent    = parent;\n    this.chunkSize = size;\n  }\n\n  ChunkedSequence.prototype = Object.create(Sequence.prototype);\n\n  ChunkedSequence.prototype.getIterator = function getIterator() {\n    return new ChunkedIterator(this.parent, this.chunkSize);\n  };\n\n  /**\n   * @constructor\n   */\n  function ChunkedIterator(sequence, size) {\n    this.iterator = sequence.getIterator();\n    this.size     = size;\n  }\n\n  ChunkedIterator.prototype.current = function current() {\n    return this.currentChunk;\n  };\n\n  ChunkedIterator.prototype.moveNext = function moveNext() {\n    var iterator  = this.iterator,\n        chunkSize = this.size,\n        chunk     = [];\n\n    while (chunk.length < chunkSize && iterator.moveNext()) {\n      chunk.push(iterator.current());\n    }\n\n    if (chunk.length === 0) {\n      return false;\n    }\n\n    this.currentChunk = chunk;\n    return true;\n  };\n\n  /**\n   * Passes each element in the sequence to the specified callback during\n   * iteration. This is like {@link Sequence#each}, except that it can be\n   * inserted anywhere in the middle of a chain of methods to \"intercept\" the\n   * values in the sequence at that point.\n   *\n   * @public\n   * @param {Function} callback A function to call on every element in the\n   *     sequence during iteration. The return value of this function does not\n   *     matter.\n   * @returns {Sequence} A sequence comprising the same elements as this one.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).tap(fn).each(Lazy.noop); // calls fn 3 times\n   */\n  Sequence.prototype.tap = function tap(callback) {\n    return new TappedSequence(this, callback);\n  };\n\n  /**\n   * @constructor\n   */\n  function TappedSequence(parent, callback) {\n    this.parent = parent;\n    this.callback = callback;\n  }\n\n  TappedSequence.prototype = Object.create(Sequence.prototype);\n\n  TappedSequence.prototype.each = function each(fn) {\n    var callback = this.callback;\n    return this.parent.each(function(e, i) {\n      callback(e, i);\n      return fn(e, i);\n    });\n  };\n\n  /**\n   * Seaches for the first element in the sequence satisfying a given predicate.\n   *\n   * @public\n   * @aka detect\n   * @param {Function} predicate A function to call on (potentially) every element\n   *     in the sequence.\n   * @returns {*} The first element in the sequence for which `predicate` returns\n   *     `true`, or `undefined` if no such element is found.\n   *\n   * @examples\n   * function divisibleBy3(x) {\n   *   return x % 3 === 0;\n   * }\n   *\n   * var numbers = [5, 6, 7, 8, 9, 10];\n   *\n   * Lazy(numbers).find(divisibleBy3) // => 6\n   * Lazy(numbers).find(isNegative)   // => undefined\n   */\n  Sequence.prototype.find = function find(predicate) {\n    return this.filter(predicate).first();\n  };\n\n  Sequence.prototype.detect = function detect(predicate) {\n    return this.find(predicate);\n  };\n\n  /**\n   * Gets the minimum value in the sequence.\n   *\n   * @public\n   * @param {Function=} valueFn The function by which the value for comparison is\n   *     calculated for each element in the sequence.\n   * @returns {*} The element with the lowest value in the sequence, or\n   *     undefined` if the sequence is empty.\n   *\n   * @examples\n   * function negate(x) { return x * -1; }\n   *\n   * Lazy([]).min()                       // => undefined\n   * Lazy([1]).min()                      // => 1\n   * Lazy([1, 2]).min()                   // => 1\n   * Lazy([2, 1]).min()                   // => 1\n   * Lazy([6, 18, 2, 49, 34]).min()       // => 2\n   * Lazy([6, 18, 2, 49, 34]).min(negate) // => 49\n   * Lazy(['b', 'a', 'c']).min()          // => 'a'\n   */\n  Sequence.prototype.min = function min(valueFn) {\n    if (typeof valueFn !== \"undefined\") {\n      return this.minBy(valueFn);\n    }\n\n    return this.reduce(function(prev, current, i) {\n      if (typeof prev === \"undefined\") {\n        return current;\n      }\n      return current < prev ? current : prev;\n    });\n  };\n\n  Sequence.prototype.minBy = function minBy(valueFn) {\n    valueFn = createCallback(valueFn);\n    return this.reduce(function(x, y) { return valueFn(y) < valueFn(x) ? y : x; });\n  };\n\n  /**\n   * Gets the maximum value in the sequence.\n   *\n   * @public\n   * @param {Function=} valueFn The function by which the value for comparison is\n   *     calculated for each element in the sequence.\n   * @returns {*} The element with the highest value in the sequence, or\n   *     undefined if the sequence is empty.\n   *\n   * @examples\n   * function reverseDigits(x) {\n   *   return Number(String(x).split('').reverse().join(''));\n   * }\n   *\n   * Lazy([]).max()                              // => undefined\n   * Lazy([1]).max()                             // => 1\n   * Lazy([1, 2]).max()                          // => 2\n   * Lazy([2, 1]).max()                          // => 2\n   * Lazy([6, 18, 2, 48, 29]).max()              // => 48\n   * Lazy([6, 18, 2, 48, 29]).max(reverseDigits) // => 29\n   * Lazy(['b', 'c', 'a']).max()                 // => 'c'\n   */\n  Sequence.prototype.max = function max(valueFn) {\n    if (typeof valueFn !== \"undefined\") {\n      return this.maxBy(valueFn);\n    }\n\n    return this.reduce(function(prev, current, i) {\n      if (typeof prev === \"undefined\") {\n        return current;\n      }\n      return current > prev ? current : prev;\n    });\n  };\n\n  Sequence.prototype.maxBy = function maxBy(valueFn) {\n    valueFn = createCallback(valueFn);\n    return this.reduce(function(x, y) { return valueFn(y) > valueFn(x) ? y : x; });\n  };\n\n  /**\n   * Gets the sum of the numeric values in the sequence.\n   *\n   * @public\n   * @param {Function=} valueFn The function used to select the numeric values\n   *     that will be summed up.\n   * @returns {*} The sum.\n   *\n   * @examples\n   * Lazy([]).sum()                     // => 0\n   * Lazy([1, 2, 3, 4]).sum()           // => 10\n   * Lazy([1.2, 3.4]).sum(Math.floor)   // => 4\n   * Lazy(['foo', 'bar']).sum('length') // => 6\n   */\n  Sequence.prototype.sum = function sum(valueFn) {\n    if (typeof valueFn !== \"undefined\") {\n      return this.sumBy(valueFn);\n    }\n\n    return this.reduce(function(x, y) { return x + y; }, 0);\n  };\n\n  Sequence.prototype.sumBy = function sumBy(valueFn) {\n    valueFn = createCallback(valueFn);\n    return this.reduce(function(x, y) { return x + valueFn(y); }, 0);\n  };\n\n  /**\n   * Creates a string from joining together all of the elements in this sequence,\n   * separated by the given delimiter.\n   *\n   * @public\n   * @aka toString\n   * @param {string=} delimiter The separator to insert between every element from\n   *     this sequence in the resulting string (defaults to `\",\"`).\n   * @returns {string} The delimited string.\n   *\n   * @examples\n   * function toParam(v, k) {\n   *   return k + '=' + v;\n   * }\n   *\n   * Lazy([6, 29, 1984]).join(\"/\")  // => \"6/29/1984\"\n   * Lazy([\"a\", \"b\", \"c\"]).join()   // => \"a,b,c\"\n   * Lazy([\"a\", \"b\", \"c\"]).join(\"\") // => \"abc\"\n   * Lazy([1, 2, 3]).join()         // => \"1,2,3\"\n   * Lazy([1, 2, 3]).join(\"\")       // => \"123\"\n   * Lazy([\"\", \"\", \"\"]).join(\",\")   // => \",,\"\n   * Lazy([1, 2]).join(0)           // => \"102\"\n   * Lazy([\"cons\", \"d\"]).join(true) // => \"construed\"\n   * Lazy({foo: 1, bar: 2}).values().join()        // \"1,2\"\n   * Lazy({foo: 1, bar: 2}).keys().join()          // \"foo,bar\"\n   * Lazy({foo: 1, bar: 2}).map(toParam).join('&') // 'foo=1&bar=2'\n   */\n  Sequence.prototype.join = function join(delimiter) {\n    delimiter = typeof delimiter === \"undefined\" ? \",\" : String(delimiter);\n\n    var i = -1;\n    return this.reduce(function(str, e) {\n      if (++i > 0) {\n        str += delimiter;\n      }\n      return str + e;\n    }, \"\");\n  };\n\n  Sequence.prototype.toString = function toString(delimiter) {\n    return this.join(delimiter);\n  };\n\n  /**\n   * Creates a sequence, with the same elements as this one, that will be iterated\n   * over asynchronously when calling `each`.\n   *\n   * @public\n   * @param {number=} interval The approximate period, in milliseconds, that\n   *     should elapse between each element in the resulting sequence. Omitting\n   *     this argument will result in the fastest possible asynchronous iteration.\n   * @returns {AsyncSequence} The new asynchronous sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).async(100).each(fn) // calls fn 3 times asynchronously\n   */\n  Sequence.prototype.async = function async(interval) {\n    return new AsyncSequence(this, interval);\n  };\n\n  /**\n   * @constructor\n   */\n  function SimpleIntersectionSequence(parent, array) {\n    this.parent = parent;\n    this.array  = array;\n    this.each   = getEachForIntersection(array);\n  }\n\n  SimpleIntersectionSequence.prototype = Object.create(Sequence.prototype);\n\n  SimpleIntersectionSequence.prototype.eachMemoizerCache = function eachMemoizerCache(fn) {\n    var iterator = new UniqueMemoizer(Lazy(this.array).getIterator()),\n        i = 0;\n\n    return this.parent.uniq().each(function(e) {\n      if (iterator.contains(e)) {\n        return fn(e, i++);\n      }\n    });\n  };\n\n  SimpleIntersectionSequence.prototype.eachArrayCache = function eachArrayCache(fn) {\n    var array = this.array,\n        find  = arrayContains,\n        i = 0;\n\n    return this.parent.uniq().each(function(e) {\n      if (find(array, e)) {\n        return fn(e, i++);\n      }\n    });\n  };\n\n  function getEachForIntersection(source) {\n    if (source.length < 40) {\n      return SimpleIntersectionSequence.prototype.eachArrayCache;\n    } else {\n      return SimpleIntersectionSequence.prototype.eachMemoizerCache;\n    }\n  }\n\n  /**\n   * An optimized version of {@link ZippedSequence}, when zipping a sequence with\n   * only one array.\n   *\n   * @param {Sequence} parent The underlying sequence.\n   * @param {Array} array The array with which to zip the sequence.\n   * @constructor\n   */\n  function SimpleZippedSequence(parent, array) {\n    this.parent = parent;\n    this.array  = array;\n  }\n\n  SimpleZippedSequence.prototype = Object.create(Sequence.prototype);\n\n  SimpleZippedSequence.prototype.each = function each(fn) {\n    var array = this.array,\n        i = -1;\n\n    var iteratedLeft = this.parent.each(function(e) {\n      ++i;\n      return fn([e, array[i]], i);\n    });\n\n    if (!iteratedLeft) {\n      return false;\n    }\n\n    while (++i < array.length) {\n      if (fn([undefined, array[i]], i) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * An `ArrayLikeSequence` is a {@link Sequence} that provides random access to\n   * its elements. This extends the API for iterating with the additional methods\n   * {@link #get} and {@link #length}, allowing a sequence to act as a \"view\" into\n   * a collection or other indexed data source.\n   *\n   * The initial sequence created by wrapping an array with `Lazy(array)` is an\n   * `ArrayLikeSequence`.\n   *\n   * All methods of `ArrayLikeSequence` that conceptually should return\n   * something like a array (with indexed access) return another\n   * `ArrayLikeSequence`, for example:\n   *\n   * - {@link Sequence#map}\n   * - {@link ArrayLikeSequence#slice}\n   * - {@link Sequence#take} and {@link Sequence#drop}\n   * - {@link Sequence#reverse}\n   *\n   * The above is not an exhaustive list. There are also certain other cases\n   * where it might be possible to return an `ArrayLikeSequence` (e.g., calling\n   * {@link Sequence#concat} with a single array argument), but this is not\n   * guaranteed by the API.\n   *\n   * Note that in many cases, it is not possible to provide indexed access\n   * without first performing at least a partial iteration of the underlying\n   * sequence. In these cases an `ArrayLikeSequence` will not be returned:\n   *\n   * - {@link Sequence#filter}\n   * - {@link Sequence#uniq}\n   * - {@link Sequence#union}\n   * - {@link Sequence#intersect}\n   *\n   * etc. The above methods only return ordinary {@link Sequence} objects.\n   *\n   * Defining custom array-like sequences\n   * ------------------------------------\n   *\n   * Creating a custom `ArrayLikeSequence` is essentially the same as creating a\n   * custom {@link Sequence}. You just have a couple more methods you need to\n   * implement: `get` and (optionally) `length`.\n   *\n   * Here's an example. Let's define a sequence type called `OffsetSequence` that\n   * offsets each of its parent's elements by a set distance, and circles back to\n   * the beginning after reaching the end. **Remember**: the initialization\n   * function you pass to {@link #define} should always accept a `parent` as its\n   * first parameter.\n   *\n   *     ArrayLikeSequence.define(\"offset\", {\n   *       init: function(parent, offset) {\n   *         this.offset = offset;\n   *       },\n   *\n   *       get: function(i) {\n   *         return this.parent.get((i + this.offset) % this.parent.length());\n   *       }\n   *     });\n   *\n   * It's worth noting a couple of things here.\n   *\n   * First, Lazy's default implementation of `length` simply returns the parent's\n   * length. In this case, since an `OffsetSequence` will always have the same\n   * number of elements as its parent, that implementation is fine; so we don't\n   * need to override it.\n   *\n   * Second, the default implementation of `each` uses `get` and `length` to\n   * essentially create a `for` loop, which is fine here. If you want to implement\n   * `each` your own way, you can do that; but in most cases (as here), you can\n   * probably just stick with the default.\n   *\n   * So we're already done, after only implementing `get`! Pretty easy, huh?\n   *\n   * Now the `offset` method will be chainable from any `ArrayLikeSequence`. So\n   * for example:\n   *\n   *     Lazy([1, 2, 3]).map(mapFn).offset(3);\n   *\n   * ...will work, but:\n   *\n   *     Lazy([1, 2, 3]).filter(mapFn).offset(3);\n   *\n   * ...will not (because `filter` does not return an `ArrayLikeSequence`).\n   *\n   * (Also, as with the example provided for defining custom {@link Sequence}\n   * types, this example really could have been implemented using a function\n   * already available as part of Lazy.js: in this case, {@link Sequence#map}.)\n   *\n   * @public\n   * @constructor\n   *\n   * @examples\n   * Lazy([1, 2, 3])                    // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2, 3]).map(Lazy.identity) // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2, 3]).take(2)            // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2, 3]).drop(2)            // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2, 3]).reverse()          // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2, 3]).slice(1, 2)        // instanceof Lazy.ArrayLikeSequence\n   */\n  function ArrayLikeSequence() {}\n\n  ArrayLikeSequence.prototype = Object.create(Sequence.prototype);\n\n  /**\n   * Create a new constructor function for a type inheriting from\n   * `ArrayLikeSequence`.\n   *\n   * @public\n   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n   *     used for constructing the new sequence. The method will be attached to\n   *     the `ArrayLikeSequence` prototype so that it can be chained with any other\n   *     methods that return array-like sequences.\n   * @param {Object} overrides An object containing function overrides for this\n   *     new sequence type. **Must** include `get`. *May* include `init`,\n   *     `length`, `getIterator`, and `each`. For each function, `this` will be\n   *     the new sequence and `this.parent` will be the source sequence.\n   * @returns {Function} A constructor for a new type inheriting from\n   *     `ArrayLikeSequence`.\n   *\n   * @examples\n   * Lazy.ArrayLikeSequence.define(\"offset\", {\n   *   init: function(offset) {\n   *     this.offset = offset;\n   *   },\n   *\n   *   get: function(i) {\n   *     return this.parent.get((i + this.offset) % this.parent.length());\n   *   }\n   * });\n   *\n   * Lazy([1, 2, 3]).offset(1) // sequence: [2, 3, 1]\n   */\n  ArrayLikeSequence.define = function define(methodName, overrides) {\n    if (!overrides || typeof overrides.get !== 'function') {\n      throw new Error(\"A custom array-like sequence must implement *at least* get!\");\n    }\n\n    return defineSequenceType(ArrayLikeSequence, methodName, overrides);\n  };\n\n  /**\n   * Returns the element at the specified index.\n   *\n   * @public\n   * @param {number} i The index to access.\n   * @returns {*} The element.\n   *\n   * @examples\n   * function increment(x) { return x + 1; }\n   *\n   * Lazy([1, 2, 3]).get(1)                // => 2\n   * Lazy([1, 2, 3]).get(-1)               // => undefined\n   * Lazy([1, 2, 3]).map(increment).get(1) // => 3\n   */\n  ArrayLikeSequence.prototype.get = function get(i) {\n    return this.parent.get(i);\n  };\n\n  /**\n   * Returns the length of the sequence.\n   *\n   * @public\n   * @returns {number} The length.\n   *\n   * @examples\n   * function increment(x) { return x + 1; }\n   *\n   * Lazy([]).length()                       // => 0\n   * Lazy([1, 2, 3]).length()                // => 3\n   * Lazy([1, 2, 3]).map(increment).length() // => 3\n   */\n  ArrayLikeSequence.prototype.length = function length() {\n    return this.parent.length();\n  };\n\n  /**\n   * Returns the current sequence (since it is already indexed).\n   */\n  ArrayLikeSequence.prototype.getIndex = function getIndex() {\n    return this;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#getIterator}.\n   */\n  ArrayLikeSequence.prototype.getIterator = function getIterator() {\n    return new IndexedIterator(this);\n  };\n\n  /**\n   * An optimized version of {@link Iterator} meant to work with already-indexed\n   * sequences.\n   *\n   * @param {ArrayLikeSequence} sequence The sequence to iterate over.\n   * @constructor\n   */\n  function IndexedIterator(sequence) {\n    this.sequence = sequence;\n    this.index    = -1;\n  }\n\n  IndexedIterator.prototype.current = function current() {\n    return this.sequence.get(this.index);\n  };\n\n  IndexedIterator.prototype.moveNext = function moveNext() {\n    if (this.index >= this.sequence.length() - 1) {\n      return false;\n    }\n\n    ++this.index;\n    return true;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#each}.\n   */\n  ArrayLikeSequence.prototype.each = function each(fn) {\n    var length = this.length(),\n        i = -1;\n\n    while (++i < length) {\n      if (fn(this.get(i), i) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns a new sequence with the same elements as this one, plus the\n   * specified element at the end.\n   *\n   * @public\n   * @returns {ArrayLikeSequence} The new array-like sequence.\n   *\n   * @examples\n   * Lazy([1, 2]).push(3) // sequence: [1, 2, 3]\n   * Lazy([]).push(1)     // sequence: [1]\n   */\n  ArrayLikeSequence.prototype.push = function push(value) {\n    return this.concat([value]);\n  };\n\n  /**\n   * Returns a new sequence with the same elements as this one, minus the last\n   * element.\n   *\n   * @public\n   * @returns {ArrayLikeSequence} The new array-like sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).pop() // sequence: [1, 2]\n   * Lazy([]).pop()        // sequence: []\n   */\n  ArrayLikeSequence.prototype.pop = function pop() {\n    return this.initial();\n  };\n\n  /**\n   * Returns a new sequence with the same elements as this one, plus the\n   * specified element at the beginning.\n   *\n   * @public\n   * @returns {ArrayLikeSequence} The new array-like sequence.\n   *\n   * @examples\n   * Lazy([1, 2]).unshift(3) // sequence: [3, 1, 2]\n   * Lazy([]).unshift(1)     // sequence: [1]\n   */\n  ArrayLikeSequence.prototype.unshift = function unshift(value) {\n    return Lazy([value]).concat(this);\n  };\n\n  /**\n   * Returns a new sequence with the same elements as this one, minus the first\n   * element.\n   *\n   * @public\n   * @returns {ArrayLikeSequence} The new array-like sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).shift() // sequence: [2, 3]\n   * Lazy([]).shift()        // sequence: []\n   */\n  ArrayLikeSequence.prototype.shift = function shift() {\n    return this.drop();\n  };\n\n  /**\n   * Returns a new sequence comprising the portion of this sequence starting\n   * from the specified starting index and continuing until the specified ending\n   * index or to the end of the sequence.\n   *\n   * @public\n   * @param {number} begin The index at which the new sequence should start.\n   * @param {number=} end The index at which the new sequence should end.\n   * @returns {ArrayLikeSequence} The new array-like sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4, 5]).slice(0)     // sequence: [1, 2, 3, 4, 5]\n   * Lazy([1, 2, 3, 4, 5]).slice(2)     // sequence: [3, 4, 5]\n   * Lazy([1, 2, 3, 4, 5]).slice(2, 4)  // sequence: [3, 4]\n   * Lazy([1, 2, 3, 4, 5]).slice(-1)    // sequence: [5]\n   * Lazy([1, 2, 3, 4, 5]).slice(1, -1) // sequence: [2, 3, 4]\n   * Lazy([1, 2, 3, 4, 5]).slice(0, 10) // sequence: [1, 2, 3, 4, 5]\n   */\n  ArrayLikeSequence.prototype.slice = function slice(begin, end) {\n    var length = this.length();\n\n    if (begin < 0) {\n      begin = length + begin;\n    }\n\n    var result = this.drop(begin);\n\n    if (typeof end === \"number\") {\n      if (end < 0) {\n        end = length + end;\n      }\n      result = result.take(end - begin);\n    }\n\n    return result;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#map}, which creates an\n   * {@link ArrayLikeSequence} so that the result still provides random access.\n   *\n   * @public\n   *\n   * @examples\n   * Lazy([1, 2, 3]).map(Lazy.identity) // instanceof Lazy.ArrayLikeSequence\n   */\n  ArrayLikeSequence.prototype.map = function map(mapFn) {\n    return new IndexedMappedSequence(this, createCallback(mapFn));\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedMappedSequence(parent, mapFn) {\n    this.parent = parent;\n    this.mapFn  = mapFn;\n  }\n\n  IndexedMappedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  IndexedMappedSequence.prototype.get = function get(i) {\n    if (i < 0 || i >= this.parent.length()) {\n      return undefined;\n    }\n\n    return this.mapFn(this.parent.get(i), i);\n  };\n\n  /**\n   * An optimized version of {@link Sequence#filter}.\n   */\n  ArrayLikeSequence.prototype.filter = function filter(filterFn) {\n    return new IndexedFilteredSequence(this, createCallback(filterFn));\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedFilteredSequence(parent, filterFn) {\n    this.parent   = parent;\n    this.filterFn = filterFn;\n  }\n\n  IndexedFilteredSequence.prototype = Object.create(FilteredSequence.prototype);\n\n  IndexedFilteredSequence.prototype.each = function each(fn) {\n    var parent = this.parent,\n        filterFn = this.filterFn,\n        length = this.parent.length(),\n        i = -1,\n        j = 0,\n        e;\n\n    while (++i < length) {\n      e = parent.get(i);\n      if (filterFn(e, i) && fn(e, j++) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#reverse}, which creates an\n   * {@link ArrayLikeSequence} so that the result still provides random access.\n   *\n   * @public\n   *\n   * @examples\n   * Lazy([1, 2, 3]).reverse() // instanceof Lazy.ArrayLikeSequence\n   */\n  ArrayLikeSequence.prototype.reverse = function reverse() {\n    return new IndexedReversedSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedReversedSequence(parent) {\n    this.parent = parent;\n  }\n\n  IndexedReversedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  IndexedReversedSequence.prototype.get = function get(i) {\n    return this.parent.get(this.length() - i - 1);\n  };\n\n  /**\n   * An optimized version of {@link Sequence#first}, which creates an\n   * {@link ArrayLikeSequence} so that the result still provides random access.\n   *\n   * @public\n   *\n   * @examples\n   * Lazy([1, 2, 3]).first(2) // instanceof Lazy.ArrayLikeSequence\n   */\n  ArrayLikeSequence.prototype.first = function first(count) {\n    if (typeof count === \"undefined\") {\n      return this.get(0);\n    }\n\n    return new IndexedTakeSequence(this, count);\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedTakeSequence(parent, count) {\n    this.parent = parent;\n    this.count  = count;\n  }\n\n  IndexedTakeSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  IndexedTakeSequence.prototype.length = function length() {\n    var parentLength = this.parent.length();\n    return this.count <= parentLength ? this.count : parentLength;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#rest}, which creates an\n   * {@link ArrayLikeSequence} so that the result still provides random access.\n   *\n   * @public\n   *\n   * @examples\n   * Lazy([1, 2, 3]).rest() // instanceof Lazy.ArrayLikeSequence\n   */\n  ArrayLikeSequence.prototype.rest = function rest(count) {\n    return new IndexedDropSequence(this, count);\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedDropSequence(parent, count) {\n    this.parent = parent;\n    this.count  = typeof count === \"number\" ? count : 1;\n  }\n\n  IndexedDropSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  IndexedDropSequence.prototype.get = function get(i) {\n    return this.parent.get(this.count + i);\n  };\n\n  IndexedDropSequence.prototype.length = function length() {\n    var parentLength = this.parent.length();\n    return this.count <= parentLength ? parentLength - this.count : 0;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#concat} that returns another\n   * {@link ArrayLikeSequence} *if* the argument is an array.\n   *\n   * @public\n   * @param {...*} var_args\n   *\n   * @examples\n   * Lazy([1, 2]).concat([3, 4]) // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2]).concat([3, 4]) // sequence: [1, 2, 3, 4]\n   */\n  ArrayLikeSequence.prototype.concat = function concat(var_args) {\n    if (arguments.length === 1 && isArray(arguments[0])) {\n      return new IndexedConcatenatedSequence(this, (/** @type {Array} */ var_args));\n    } else {\n      return Sequence.prototype.concat.apply(this, arguments);\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedConcatenatedSequence(parent, other) {\n    this.parent = parent;\n    this.other  = other;\n  }\n\n  IndexedConcatenatedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  IndexedConcatenatedSequence.prototype.get = function get(i) {\n    var parentLength = this.parent.length();\n    if (i < parentLength) {\n      return this.parent.get(i);\n    } else {\n      return this.other[i - parentLength];\n    }\n  };\n\n  IndexedConcatenatedSequence.prototype.length = function length() {\n    return this.parent.length() + this.other.length;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#uniq}.\n   */\n  ArrayLikeSequence.prototype.uniq = function uniq(keyFn) {\n    return new IndexedUniqueSequence(this, createCallback(keyFn));\n  };\n\n  /**\n   * @param {ArrayLikeSequence} parent\n   * @constructor\n   */\n  function IndexedUniqueSequence(parent, keyFn) {\n    this.parent = parent;\n    this.each   = getEachForParent(parent);\n    this.keyFn  = keyFn;\n  }\n\n  IndexedUniqueSequence.prototype = Object.create(Sequence.prototype);\n\n  IndexedUniqueSequence.prototype.eachArrayCache = function eachArrayCache(fn) {\n    // Basically the same implementation as w/ the set, but using an array because\n    // it's cheaper for smaller sequences.\n    var parent = this.parent,\n        keyFn  = this.keyFn,\n        length = parent.length(),\n        cache  = [],\n        find   = arrayContains,\n        key, value,\n        i = -1,\n        j = 0;\n\n    while (++i < length) {\n      value = parent.get(i);\n      key = keyFn(value);\n      if (!find(cache, key)) {\n        cache.push(key);\n        if (fn(value, j++) === false) {\n          return false;\n        }\n      }\n    }\n  };\n\n  IndexedUniqueSequence.prototype.eachSetCache = UniqueSequence.prototype.each;\n\n  function getEachForParent(parent) {\n    if (parent.length() < 100) {\n      return IndexedUniqueSequence.prototype.eachArrayCache;\n    } else {\n      return UniqueSequence.prototype.each;\n    }\n  }\n\n  // Now that we've fully initialized the ArrayLikeSequence prototype, we can\n  // set the prototype for MemoizedSequence.\n\n  MemoizedSequence.prototype = Object.create(Sequence.prototype);\n\n  MemoizedSequence.prototype.getParentIterator = function getParentIterator() {\n    // Since the premise of this sequence is that it only iterates over each\n    // element of its parent a grand total of one (1) time, we should only ever\n    // need to get the parent iterator once.\n    if (!this.iterator) {\n      this.iterator = this.parent.getIterator();\n    }\n\n    return this.iterator;\n  };\n\n  MemoizedSequence.prototype.getIterator = function getIterator() {\n    return new Memoizer(this.memo, this.getParentIterator());\n  };\n\n  MemoizedSequence.prototype.iterateTo = function iterateTo(i) {\n    var memo = this.memo,\n        iterator = this.getParentIterator();\n\n    while (i >= memo.length) {\n      if (!iterator.moveNext()) {\n        this.complete = true;\n        return false;\n      }\n\n      memo.push(iterator.current());\n    }\n\n    return true;\n  };\n\n  MemoizedSequence.prototype.get = function get(i) {\n    var memo = this.memo;\n\n    if (i < memo.length) {\n      return memo[i];\n    }\n\n    if (!this.iterateTo(i)) {\n      return undefined;\n    }\n\n    return memo[i];\n  };\n\n  MemoizedSequence.prototype.length = function length() {\n    if (!this.complete) {\n      this.iterateTo(Infinity);\n    }\n\n    return this.memo.length;\n  };\n\n  MemoizedSequence.prototype.slice = function slice(begin, end) {\n    if (!this.complete) {\n      this.iterateTo(end);\n    }\n\n    return Lazy(this.memo.slice(begin, end));\n  };\n\n  MemoizedSequence.prototype.toArray = function toArray() {\n    if (!this.complete) {\n      this.iterateTo(Infinity);\n    }\n\n    return this.memo.slice(0);\n  };\n\n  /**\n   * ArrayWrapper is the most basic {@link Sequence}. It directly wraps an array\n   * and implements the same methods as {@link ArrayLikeSequence}, but more\n   * efficiently.\n   *\n   * @constructor\n   */\n  function ArrayWrapper(source) {\n    this.source = source;\n  }\n\n  ArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  ArrayWrapper.prototype.root = function root() {\n    return this;\n  };\n\n  ArrayWrapper.prototype.isAsync = function isAsync() {\n    return false;\n  };\n\n  /**\n   * Returns the element at the specified index in the source array.\n   *\n   * @param {number} i The index to access.\n   * @returns {*} The element.\n   */\n  ArrayWrapper.prototype.get = function get(i) {\n    return this.source[i];\n  };\n\n  /**\n   * Returns the length of the source array.\n   *\n   * @returns {number} The length.\n   */\n  ArrayWrapper.prototype.length = function length() {\n    return this.source.length;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#each}.\n   */\n  ArrayWrapper.prototype.each = function each(fn) {\n    return forEach(this.source, fn);\n  };\n\n  /**\n   * An optimized version of {@link Sequence#map}.\n   */\n  ArrayWrapper.prototype.map = function map(mapFn) {\n    return new MappedArrayWrapper(this, createCallback(mapFn));\n  };\n\n  /**\n   * An optimized version of {@link Sequence#filter}.\n   */\n  ArrayWrapper.prototype.filter = function filter(filterFn) {\n    return new FilteredArrayWrapper(this, createCallback(filterFn));\n  };\n\n  /**\n   * An optimized version of {@link Sequence#uniq}.\n   */\n  ArrayWrapper.prototype.uniq = function uniq(keyFn) {\n    return new UniqueArrayWrapper(this, keyFn);\n  };\n\n  /**\n   * An optimized version of {@link ArrayLikeSequence#concat}.\n   *\n   * @param {...*} var_args\n   */\n  ArrayWrapper.prototype.concat = function concat(var_args) {\n    if (arguments.length === 1 && isArray(arguments[0])) {\n      return new ConcatArrayWrapper(this, (/** @type {Array} */ var_args));\n    } else {\n      return ArrayLikeSequence.prototype.concat.apply(this, arguments);\n    }\n  };\n\n  /**\n   * An optimized version of {@link Sequence#toArray}.\n   */\n  ArrayWrapper.prototype.toArray = function toArray() {\n    return this.source.slice(0);\n  };\n\n  /**\n   * @constructor\n   */\n  function MappedArrayWrapper(parent, mapFn) {\n    this.parent = parent;\n    this.mapFn  = mapFn;\n  }\n\n  MappedArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  MappedArrayWrapper.prototype.get = function get(i) {\n    var source = this.parent.source;\n\n    if (i < 0 || i >= source.length) {\n      return undefined;\n    }\n\n    return this.mapFn(source[i]);\n  };\n\n  MappedArrayWrapper.prototype.length = function length() {\n    return this.parent.source.length;\n  };\n\n  MappedArrayWrapper.prototype.each = function each(fn) {\n    var source = this.parent.source,\n        length = source.length,\n        mapFn  = this.mapFn,\n        i = -1;\n\n    while (++i < length) {\n      if (fn(mapFn(source[i], i), i) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * @constructor\n   */\n  function FilteredArrayWrapper(parent, filterFn) {\n    this.parent   = parent;\n    this.filterFn = filterFn;\n  }\n\n  FilteredArrayWrapper.prototype = Object.create(FilteredSequence.prototype);\n\n  FilteredArrayWrapper.prototype.each = function each(fn) {\n    var source = this.parent.source,\n        filterFn = this.filterFn,\n        length = source.length,\n        i = -1,\n        j = 0,\n        e;\n\n    while (++i < length) {\n      e = source[i];\n      if (filterFn(e, i) && fn(e, j++) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * @constructor\n   */\n  function UniqueArrayWrapper(parent, keyFn) {\n    this.parent = parent;\n    this.each   = getEachForSource(parent.source);\n    this.keyFn  = keyFn;\n  }\n\n  UniqueArrayWrapper.prototype = Object.create(Sequence.prototype);\n\n  UniqueArrayWrapper.prototype.eachNoCache = function eachNoCache(fn) {\n    var source = this.parent.source,\n        keyFn  = this.keyFn,\n        length = source.length,\n        find   = arrayContainsBefore,\n        value,\n\n        // Yes, this is hideous.\n        // Trying to get performance first, will refactor next!\n        i = -1,\n        k = 0;\n\n    while (++i < length) {\n      value = source[i];\n      if (!find(source, value, i, keyFn) && fn(value, k++) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  UniqueArrayWrapper.prototype.eachArrayCache = function eachArrayCache(fn) {\n    // Basically the same implementation as w/ the set, but using an array because\n    // it's cheaper for smaller sequences.\n    var source = this.parent.source,\n        keyFn  = this.keyFn,\n        length = source.length,\n        cache  = [],\n        find   = arrayContains,\n        key, value,\n        i = -1,\n        j = 0;\n\n    if (keyFn) {\n      keyFn = createCallback(keyFn);\n      while (++i < length) {\n        value = source[i];\n        key = keyFn(value);\n        if (!find(cache, key)) {\n          cache.push(key);\n          if (fn(value, j++) === false) {\n            return false;\n          }\n        }\n      }\n\n    } else {\n      while (++i < length) {\n        value = source[i];\n        if (!find(cache, value)) {\n          cache.push(value);\n          if (fn(value, j++) === false) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  UniqueArrayWrapper.prototype.eachSetCache = UniqueSequence.prototype.each;\n\n  /**\n   * My latest findings here...\n   *\n   * So I hadn't really given the set-based approach enough credit. The main issue\n   * was that my Set implementation was totally not optimized at all. After pretty\n   * heavily optimizing it (just take a look; it's a monstrosity now!), it now\n   * becomes the fastest option for much smaller values of N.\n   */\n  function getEachForSource(source) {\n    if (source.length < 40) {\n      return UniqueArrayWrapper.prototype.eachNoCache;\n    } else if (source.length < 100) {\n      return UniqueArrayWrapper.prototype.eachArrayCache;\n    } else {\n      return UniqueArrayWrapper.prototype.eachSetCache;\n    }\n  }\n\n  /**\n   * @constructor\n   */\n  function ConcatArrayWrapper(parent, other) {\n    this.parent = parent;\n    this.other  = other;\n  }\n\n  ConcatArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  ConcatArrayWrapper.prototype.get = function get(i) {\n    var source = this.parent.source,\n        sourceLength = source.length;\n\n    if (i < sourceLength) {\n      return source[i];\n    } else {\n      return this.other[i - sourceLength];\n    }\n  };\n\n  ConcatArrayWrapper.prototype.length = function length() {\n    return this.parent.source.length + this.other.length;\n  };\n\n  ConcatArrayWrapper.prototype.each = function each(fn) {\n    var source = this.parent.source,\n        sourceLength = source.length,\n        other = this.other,\n        otherLength = other.length,\n        i = 0,\n        j = -1;\n\n    while (++j < sourceLength) {\n      if (fn(source[j], i++) === false) {\n        return false;\n      }\n    }\n\n    j = -1;\n    while (++j < otherLength) {\n      if (fn(other[j], i++) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * An `ObjectLikeSequence` object represents a sequence of key/value pairs.\n   *\n   * The initial sequence you get by wrapping an object with `Lazy(object)` is\n   * an `ObjectLikeSequence`.\n   *\n   * All methods of `ObjectLikeSequence` that conceptually should return\n   * something like an object return another `ObjectLikeSequence`.\n   *\n   * @public\n   * @constructor\n   *\n   * @examples\n   * var obj = { foo: 'bar' };\n   *\n   * Lazy(obj).assign({ bar: 'baz' })   // instanceof Lazy.ObjectLikeSequence\n   * Lazy(obj).defaults({ bar: 'baz' }) // instanceof Lazy.ObjectLikeSequence\n   * Lazy(obj).invert()                 // instanceof Lazy.ObjectLikeSequence\n   */\n  function ObjectLikeSequence() {}\n\n  ObjectLikeSequence.prototype = Object.create(Sequence.prototype);\n\n  /**\n   * Create a new constructor function for a type inheriting from\n   * `ObjectLikeSequence`.\n   *\n   * @public\n   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n   *     used for constructing the new sequence. The method will be attached to\n   *     the `ObjectLikeSequence` prototype so that it can be chained with any other\n   *     methods that return object-like sequences.\n   * @param {Object} overrides An object containing function overrides for this\n   *     new sequence type. **Must** include `each`. *May* include `init` and\n   *     `get` (for looking up an element by key).\n   * @returns {Function} A constructor for a new type inheriting from\n   *     `ObjectLikeSequence`.\n   *\n   * @examples\n   * function downcaseKey(value, key) {\n   *   return [key.toLowerCase(), value];\n   * }\n   *\n   * Lazy.ObjectLikeSequence.define(\"caseInsensitive\", {\n   *   init: function() {\n   *     var downcased = this.parent\n   *       .map(downcaseKey)\n   *       .toObject();\n   *     this.downcased = Lazy(downcased);\n   *   },\n   *\n   *   get: function(key) {\n   *     return this.downcased.get(key.toLowerCase());\n   *   },\n   *\n   *   each: function(fn) {\n   *     return this.downcased.each(fn);\n   *   }\n   * });\n   *\n   * Lazy({ Foo: 'bar' }).caseInsensitive()            // sequence: { foo: 'bar' }\n   * Lazy({ FOO: 'bar' }).caseInsensitive().get('foo') // => 'bar'\n   * Lazy({ FOO: 'bar' }).caseInsensitive().get('FOO') // => 'bar'\n   */\n  ObjectLikeSequence.define = function define(methodName, overrides) {\n    if (!overrides || typeof overrides.each !== 'function') {\n      throw new Error(\"A custom object-like sequence must implement *at least* each!\");\n    }\n\n    return defineSequenceType(ObjectLikeSequence, methodName, overrides);\n  };\n\n  ObjectLikeSequence.prototype.value = function value() {\n    return this.toObject();\n  };\n\n  /**\n   * Gets the element at the specified key in this sequence.\n   *\n   * @public\n   * @param {string} key The key.\n   * @returns {*} The element.\n   *\n   * @examples\n   * Lazy({ foo: \"bar\" }).get(\"foo\")                          // => \"bar\"\n   * Lazy({ foo: \"bar\" }).extend({ foo: \"baz\" }).get(\"foo\")   // => \"baz\"\n   * Lazy({ foo: \"bar\" }).defaults({ bar: \"baz\" }).get(\"bar\") // => \"baz\"\n   * Lazy({ foo: \"bar\" }).invert().get(\"bar\")                 // => \"foo\"\n   * Lazy({ foo: 1, bar: 2 }).pick([\"foo\"]).get(\"foo\")        // => 1\n   * Lazy({ foo: 1, bar: 2 }).pick([\"foo\"]).get(\"bar\")        // => undefined\n   * Lazy({ foo: 1, bar: 2 }).omit([\"foo\"]).get(\"bar\")        // => 2\n   * Lazy({ foo: 1, bar: 2 }).omit([\"foo\"]).get(\"foo\")        // => undefined\n   */\n  ObjectLikeSequence.prototype.get = function get(key) {\n    var pair = this.pairs().find(function(pair) {\n      return pair[0] === key;\n    });\n\n    return pair ? pair[1] : undefined;\n  };\n\n  /**\n   * Returns a {@link Sequence} whose elements are the keys of this object-like\n   * sequence.\n   *\n   * @public\n   * @returns {Sequence} The sequence based on this sequence's keys.\n   *\n   * @examples\n   * var obj = { hello: \"hola\", goodbye: \"hasta luego\" };\n   *\n   * Lazy(obj).keys() // sequence: [\"hello\", \"goodbye\"]\n   * Lazy(obj).keys().map(function(v, i) { return [v, i]; }) // sequence: [[\"hello\", 0], [\"goodbye\", 1]]\n   */\n  ObjectLikeSequence.prototype.keys = function keys() {\n    return new KeySequence(this);\n  };\n\n  function KeySequence(parent) {\n    this.parent = parent;\n  }\n\n  KeySequence.prototype = Object.create(Sequence.prototype);\n\n  KeySequence.prototype.each = function each(fn) {\n    var i = -1;\n\n    return this.parent.each(function(v, k) {\n      return fn(k, ++i);\n    });\n  };\n\n  /**\n   * Returns a {@link Sequence} whose elements are the values of this object-like\n   * sequence.\n   *\n   * @public\n   * @returns {Sequence} The sequence based on this sequence's values.\n   *\n   * @examples\n   * Lazy({ hello: \"hola\", goodbye: \"hasta luego\" }).values() // sequence: [\"hola\", \"hasta luego\"]\n   */\n  ObjectLikeSequence.prototype.values = function values() {\n    return new ValuesSequence(this);\n  };\n\n  function ValuesSequence(parent) {\n    this.parent = parent;\n  }\n\n  ValuesSequence.prototype = Object.create(Sequence.prototype);\n\n  ValuesSequence.prototype.each = function each(fn) {\n    var i = -1;\n\n    return this.parent.each(function(v, k) {\n      return fn(v, ++i);\n    });\n  };\n\n  /**\n   * Throws an exception. Asynchronous iteration over object-like sequences is\n   * not supported.\n   *\n   * @public\n   * @examples\n   * Lazy({ foo: 'bar' }).async() // throws\n   */\n  ObjectLikeSequence.prototype.async = function async() {\n    throw new Error('An ObjectLikeSequence does not support asynchronous iteration.');\n  };\n\n  ObjectLikeSequence.prototype.filter = function filter(filterFn) {\n    return new FilteredObjectLikeSequence(this, createCallback(filterFn));\n  };\n\n  function FilteredObjectLikeSequence(parent, filterFn) {\n    this.parent = parent;\n    this.filterFn = filterFn;\n  }\n\n  FilteredObjectLikeSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  FilteredObjectLikeSequence.prototype.each = function each(fn) {\n    var filterFn = this.filterFn;\n\n    return this.parent.each(function(v, k) {\n      if (filterFn(v, k)) {\n        return fn(v, k);\n      }\n    });\n  };\n\n  /**\n   * Returns this same sequence. (Reversing an object-like sequence doesn't make\n   * any sense.)\n   */\n  ObjectLikeSequence.prototype.reverse = function reverse() {\n    return this;\n  };\n\n  /**\n   * Returns an {@link ObjectLikeSequence} whose elements are the combination of\n   * this sequence and another object. In the case of a key appearing in both this\n   * sequence and the given object, the other object's value will override the\n   * one in this sequence.\n   *\n   * @public\n   * @aka extend\n   * @param {Object} other The other object to assign to this sequence.\n   * @returns {ObjectLikeSequence} A new sequence comprising elements from this\n   *     sequence plus the contents of `other`.\n   *\n   * @examples\n   * Lazy({ \"uno\": 1, \"dos\": 2 }).assign({ \"tres\": 3 })     // sequence: { uno: 1, dos: 2, tres: 3 }\n   * Lazy({ foo: \"bar\" }).assign({ foo: \"baz\" });           // sequence: { foo: \"baz\" }\n   * Lazy({ foo: 'foo' }).assign({ foo: false }).get('foo') // false\n   */\n  ObjectLikeSequence.prototype.assign = function assign(other) {\n    return new AssignSequence(this, other);\n  };\n\n  ObjectLikeSequence.prototype.extend = function extend(other) {\n    return this.assign(other);\n  };\n\n  /**\n   * @constructor\n   */\n  function AssignSequence(parent, other) {\n    this.parent = parent;\n    this.other  = other;\n  }\n\n  AssignSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  AssignSequence.prototype.get = function get(key) {\n    return key in this.other ? this.other[key] : this.parent.get(key);\n  };\n\n  AssignSequence.prototype.each = function each(fn) {\n    var merged = new Set(),\n        done   = false;\n\n    Lazy(this.other).each(function(value, key) {\n      if (fn(value, key) === false) {\n        done = true;\n        return false;\n      }\n\n      merged.add(key);\n    });\n\n    if (!done) {\n      return this.parent.each(function(value, key) {\n        if (!merged.contains(key) && fn(value, key) === false) {\n          return false;\n        }\n      });\n    }\n  };\n\n  /**\n   * Returns an {@link ObjectLikeSequence} whose elements are the combination of\n   * this sequence and a 'default' object. In the case of a key appearing in both\n   * this sequence and the given object, this sequence's value will override the\n   * default object's.\n   *\n   * @public\n   * @param {Object} defaults The 'default' object to use for missing keys in this\n   *     sequence.\n   * @returns {ObjectLikeSequence} A new sequence comprising elements from this\n   *     sequence supplemented by the contents of `defaults`.\n   *\n   * @examples\n   * Lazy({ name: \"Dan\" }).defaults({ name: \"User\", password: \"passw0rd\" }) // sequence: { name: \"Dan\", password: \"passw0rd\" }\n   * Lazy({ foo: false }).defaults({ foo: 'foo' }).get('foo') // false\n   * Lazy({ a: 1 }).defaults({ b: 2 }).defaults({ c: 3 }) // sequence: { a: 1, b: 2, c: 3 }\n   * Lazy({ a: 1 }).defaults({ b: 2 }).defaults({ a: 3 }) // sequence: { a: 1, b: 2 }\n   * Lazy({ a: 1, b: 2 }).defaults({ b: 5 }).defaults({ c: 3, d: 4 }) // sequence: { a: 1, b: 2, c: 3, d: 4 }\n   */\n  ObjectLikeSequence.prototype.defaults = function defaults(defaults) {\n    return new DefaultsSequence(this, defaults);\n  };\n\n  /**\n   * @constructor\n   */\n  function DefaultsSequence(parent, defaults) {\n    this.parent        = parent;\n    this.defaultValues = defaults;\n  }\n\n  DefaultsSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  DefaultsSequence.prototype.get = function get(key) {\n    var parentValue = this.parent.get(key);\n    return parentValue !== undefined ? parentValue : this.defaultValues[key];\n  };\n\n  DefaultsSequence.prototype.each = function each(fn) {\n    var merged = new Set(),\n        done   = false;\n\n    this.parent.each(function(value, key) {\n      if (fn(value, key) === false) {\n        done = true;\n        return false;\n      }\n\n      if (typeof value !== \"undefined\") {\n        merged.add(key);\n      }\n    });\n\n    if (!done) {\n      Lazy(this.defaultValues).each(function(value, key) {\n        if (!merged.contains(key) && fn(value, key) === false) {\n          return false;\n        }\n      });\n    }\n  };\n\n  /**\n   * Returns an {@link ObjectLikeSequence} whose values are this sequence's keys,\n   * and whose keys are this sequence's values.\n   *\n   * @public\n   * @returns {ObjectLikeSequence} A new sequence comprising the inverted keys and\n   *     values from this sequence.\n   *\n   * @examples\n   * Lazy({ first: \"Dan\", last: \"Tao\" }).invert() // sequence: { Dan: \"first\", Tao: \"last\" }\n   */\n  ObjectLikeSequence.prototype.invert = function invert() {\n    return new InvertedSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function InvertedSequence(parent) {\n    this.parent = parent;\n  }\n\n  InvertedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  InvertedSequence.prototype.each = function each(fn) {\n    this.parent.each(function(value, key) {\n      return fn(key, value);\n    });\n  };\n\n  /**\n   * Produces an {@link ObjectLikeSequence} consisting of all the recursively\n   * merged values from this and the given object(s) or sequence(s).\n   *\n   * Note that by default this method only merges \"vanilla\" objects (bags of\n   * key/value pairs), not arrays or any other custom object types. To customize\n   * how merging works, you can provide the mergeFn argument, e.g. to handling\n   * merging arrays, strings, or other types of objects.\n   *\n   * @public\n   * @param {...Object|ObjectLikeSequence} others The other object(s) or\n   *     sequence(s) whose values will be merged into this one.\n   * @param {Function=} mergeFn An optional function used to customize merging\n   *     behavior. The function should take two values as parameters and return\n   *     whatever the \"merged\" form of those values is. If the function returns\n   *     undefined then the new value will simply replace the old one in the\n   *     final result.\n   * @returns {ObjectLikeSequence} The new sequence consisting of merged values.\n   *\n   * @examples\n   * // These examples are completely stolen from Lo-Dash's documentation:\n   * // lodash.com/docs#merge\n   *\n   * var names = {\n   *   'characters': [\n   *     { 'name': 'barney' },\n   *     { 'name': 'fred' }\n   *   ]\n   * };\n   *\n   * var ages = {\n   *   'characters': [\n   *     { 'age': 36 },\n   *     { 'age': 40 }\n   *   ]\n   * };\n   *\n   * var food = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var otherFood = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * function mergeArrays(a, b) {\n   *   return Array.isArray(a) ? a.concat(b) : undefined;\n   * }\n   *\n   * Lazy(names).merge(ages); // => sequence: { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n   * Lazy(food).merge(otherFood, mergeArrays); // => sequence: { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n   *\n   * // ----- Now for my own tests: -----\n   *\n   * // merges objects\n   * Lazy({ foo: 1 }).merge({ foo: 2 }); // => sequence: { foo: 2 }\n   * Lazy({ foo: 1 }).merge({ bar: 2 }); // => sequence: { foo: 1, bar: 2 }\n   *\n   * // goes deep\n   * Lazy({ foo: { bar: 1 } }).merge({ foo: { bar: 2 } }); // => sequence: { foo: { bar: 2 } }\n   * Lazy({ foo: { bar: 1 } }).merge({ foo: { baz: 2 } }); // => sequence: { foo: { bar: 1, baz: 2 } }\n   * Lazy({ foo: { bar: 1 } }).merge({ foo: { baz: 2 } }); // => sequence: { foo: { bar: 1, baz: 2 } }\n   *\n   * // gives precedence to later sources\n   * Lazy({ foo: 1 }).merge({ bar: 2 }, { bar: 3 }); // => sequence: { foo: 1, bar: 3 }\n   *\n   * // undefined gets passed over\n   * Lazy({ foo: 1 }).merge({ foo: undefined }); // => sequence: { foo: 1 }\n   *\n   * // null doesn't get passed over\n   * Lazy({ foo: 1 }).merge({ foo: null }); // => sequence: { foo: null }\n   *\n   * // array contents get merged as well\n   * Lazy({ foo: [{ bar: 1 }] }).merge({ foo: [{ baz: 2 }] }); // => sequence: { foo: [{ bar: 1, baz: 2}] }\n   */\n  ObjectLikeSequence.prototype.merge = function merge(var_args) {\n    var mergeFn = arguments.length > 1 && typeof arguments[arguments.length - 1] === \"function\" ?\n      arrayPop.call(arguments) : null;\n    return new MergedSequence(this, arraySlice.call(arguments, 0), mergeFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function MergedSequence(parent, others, mergeFn) {\n    this.parent  = parent;\n    this.others  = others;\n    this.mergeFn = mergeFn;\n  }\n\n  MergedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  MergedSequence.prototype.each = function each(fn) {\n    var others  = this.others,\n        mergeFn = this.mergeFn || mergeObjects,\n        keys    = {};\n\n    var iteratedFullSource = this.parent.each(function(value, key) {\n      var merged = value;\n\n      forEach(others, function(other) {\n        if (key in other) {\n          merged = mergeFn(merged, other[key]);\n        }\n      });\n\n      keys[key] = true;\n\n      return fn(merged, key);\n    });\n\n    if (iteratedFullSource === false) {\n      return false;\n    }\n\n    var remaining = {};\n\n    forEach(others, function(other) {\n      for (var k in other) {\n        if (!keys[k]) {\n          remaining[k] = mergeFn(remaining[k], other[k]);\n        }\n      }\n    });\n\n    return Lazy(remaining).each(fn);\n  };\n\n  /**\n   * @private\n   * @examples\n   * mergeObjects({ foo: 1 }, { bar: 2 }); // => { foo: 1, bar: 2 }\n   * mergeObjects({ foo: { bar: 1 } }, { foo: { baz: 2 } }); // => { foo: { bar: 1, baz: 2 } }\n   * mergeObjects({ foo: { bar: 1 } }, { foo: undefined }); // => { foo: { bar: 1 } }\n   * mergeObjects({ foo: { bar: 1 } }, { foo: null }); // => { foo: null }\n   * mergeObjects({ array: [0, 1, 2] }, { array: [3, 4, 5] }).array; // instanceof Array\n   * mergeObjects({ date: new Date() }, { date: new Date() }).date; // instanceof Date\n   * mergeObjects([{ foo: 1 }], [{ bar: 2 }]); // => [{ foo: 1, bar: 2 }]\n   */\n  function mergeObjects(a, b) {\n    var merged, prop;\n\n    if (typeof b === 'undefined') {\n      return a;\n    }\n\n    // Check that we're dealing with two objects or two arrays.\n    if (isVanillaObject(a) && isVanillaObject(b)) {\n      merged = {};\n    } else if (isArray(a) && isArray(b)) {\n      merged = [];\n    } else {\n      // Otherwise there's no merging to do -- just replace a w/ b.\n      return b;\n    }\n\n    for (prop in a) {\n      merged[prop] = mergeObjects(a[prop], b[prop]);\n    }\n    for (prop in b) {\n      if (!merged[prop]) {\n        merged[prop] = b[prop];\n      }\n    }\n    return merged;\n  }\n\n  /**\n   * Checks whether an object is a \"vanilla\" object, i.e. {'foo': 'bar'} as\n   * opposed to an array, date, etc.\n   *\n   * @private\n   * @examples\n   * isVanillaObject({foo: 'bar'}); // => true\n   * isVanillaObject(new Date());   // => false\n   * isVanillaObject([1, 2, 3]);    // => false\n   */\n  function isVanillaObject(object) {\n    return object && object.constructor === Object;\n  }\n\n  /**\n   * Creates a {@link Sequence} consisting of the keys from this sequence whose\n   *     values are functions.\n   *\n   * @public\n   * @aka methods\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var dog = {\n   *   name: \"Fido\",\n   *   breed: \"Golden Retriever\",\n   *   bark: function() { console.log(\"Woof!\"); },\n   *   wagTail: function() { console.log(\"TODO: implement robotic dog interface\"); }\n   * };\n   *\n   * Lazy(dog).functions() // sequence: [\"bark\", \"wagTail\"]\n   */\n  ObjectLikeSequence.prototype.functions = function functions() {\n    return this\n      .filter(function(v, k) { return typeof(v) === \"function\"; })\n      .map(function(v, k) { return k; });\n  };\n\n  ObjectLikeSequence.prototype.methods = function methods() {\n    return this.functions();\n  };\n\n  /**\n   * Creates an {@link ObjectLikeSequence} consisting of the key/value pairs from\n   * this sequence whose keys are included in the given array of property names.\n   *\n   * @public\n   * @param {Array.<string>} properties An array of the properties to \"pick\" from this\n   *     sequence.\n   * @returns {ObjectLikeSequence} The new sequence.\n   *\n   * @examples\n   * var players = {\n   *   \"who\": \"first\",\n   *   \"what\": \"second\",\n   *   \"i don't know\": \"third\"\n   * };\n   *\n   * Lazy(players).pick([\"who\", \"what\"]) // sequence: { who: \"first\", what: \"second\" }\n   */\n  ObjectLikeSequence.prototype.pick = function pick(properties) {\n    return new PickSequence(this, properties);\n  };\n\n  /**\n   * @constructor\n   */\n  function PickSequence(parent, properties) {\n    this.parent     = parent;\n    this.properties = properties;\n  }\n\n  PickSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  PickSequence.prototype.get = function get(key) {\n    return arrayContains(this.properties, key) ? this.parent.get(key) : undefined;\n  };\n\n  PickSequence.prototype.each = function each(fn) {\n    var inArray    = arrayContains,\n        properties = this.properties;\n\n    return this.parent.each(function(value, key) {\n      if (inArray(properties, key)) {\n        return fn(value, key);\n      }\n    });\n  };\n\n  /**\n   * Creates an {@link ObjectLikeSequence} consisting of the key/value pairs from\n   * this sequence excluding those with the specified keys. Non-string keys are\n   * effectively ignored.\n   *\n   * @public\n   * @param {Array} properties An array of the properties to *omit* from this\n   *     sequence.\n   * @returns {ObjectLikeSequence} The new sequence.\n   *\n   * @examples\n   * var players = {\n   *   \"who\": \"first\",\n   *   \"what\": \"second\",\n   *   \"i don't know\": \"third\"\n   * };\n   *\n   * Lazy(players).omit([\"who\", \"what\"]) // sequence: { \"i don't know\": \"third\" }\n   *\n   * // Example to show handling of non-string keys\n   * Lazy({1: 2, true: false}).omit([1, true]) // sequence: { \"1\": 2, \"true\": false }\n   */\n  ObjectLikeSequence.prototype.omit = function omit(properties) {\n    return new OmitSequence(this, properties);\n  };\n\n  /**\n   * @constructor\n   */\n  function OmitSequence(parent, properties) {\n    this.parent     = parent;\n    this.properties = properties;\n  }\n\n  OmitSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  OmitSequence.prototype.get = function get(key) {\n    return arrayContains(this.properties, key) ? undefined : this.parent.get(key);\n  };\n\n  OmitSequence.prototype.each = function each(fn) {\n    var inArray    = arrayContains,\n        properties = this.properties;\n\n    return this.parent.each(function(value, key) {\n      if (!inArray(properties, key)) {\n        return fn(value, key);\n      }\n    });\n  };\n\n  /**\n   * Maps the key/value pairs in this sequence to arrays.\n   *\n   * @public\n   * @aka toArray\n   * @returns {Sequence} An sequence of `[key, value]` pairs.\n   *\n   * @examples\n   * var colorCodes = {\n   *   red: \"#f00\",\n   *   green: \"#0f0\",\n   *   blue: \"#00f\"\n   * };\n   *\n   * Lazy(colorCodes).pairs() // sequence: [[\"red\", \"#f00\"], [\"green\", \"#0f0\"], [\"blue\", \"#00f\"]]\n   */\n  ObjectLikeSequence.prototype.pairs = function pairs() {\n    return this.map(function(v, k) { return [k, v]; });\n  };\n\n  /**\n   * Creates an array from the key/value pairs in this sequence.\n   *\n   * @public\n   * @returns {Array} An array of `[key, value]` elements.\n   *\n   * @examples\n   * var colorCodes = {\n   *   red: \"#f00\",\n   *   green: \"#0f0\",\n   *   blue: \"#00f\"\n   * };\n   *\n   * Lazy(colorCodes).toArray() // => [[\"red\", \"#f00\"], [\"green\", \"#0f0\"], [\"blue\", \"#00f\"]]\n   */\n  ObjectLikeSequence.prototype.toArray = function toArray() {\n    return this.pairs().toArray();\n  };\n\n  /**\n   * Creates an object with the key/value pairs from this sequence.\n   *\n   * @public\n   * @returns {Object} An object with the same key/value pairs as this sequence.\n   *\n   * @examples\n   * var colorCodes = {\n   *   red: \"#f00\",\n   *   green: \"#0f0\",\n   *   blue: \"#00f\"\n   * };\n   *\n   * Lazy(colorCodes).toObject() // => { red: \"#f00\", green: \"#0f0\", blue: \"#00f\" }\n   */\n  ObjectLikeSequence.prototype.toObject = function toObject() {\n    return this.reduce(function(object, value, key) {\n      object[key] = value;\n      return object;\n    }, {});\n  };\n\n  // Now that we've fully initialized the ObjectLikeSequence prototype, we can\n  // actually set the prototypes for GroupedSequence, IndexedSequence, and\n  // CountedSequence.\n\n  GroupedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  /**\n   * @examples\n   * var objects = [{a: 'x'}, {a: 'x'}];\n   *\n   * Lazy(objects).groupBy('a') // sequence: {x: [{a: 'x'}, {a: 'x'}]}\n   * Lazy(objects).groupBy('a').each(Lazy.noop) // true\n   */\n  GroupedSequence.prototype.each = function each(fn) {\n    var keyFn   = createCallback(this.keyFn),\n        valFn   = createCallback(this.valFn),\n        result;\n\n    result = this.parent.reduce(function(grouped,e) {\n      var key = keyFn(e),\n          val = valFn(e);\n      if (!isArray(grouped[key])) {\n        grouped[key] = [val];\n      } else {\n        grouped[key].push(val);\n      }\n      return grouped;\n    },{});\n\n    return transform(function(grouped) {\n      for (var key in grouped) {\n        if (fn(grouped[key], key) === false) {\n          return false;\n        }\n      }\n      return true;\n    }, result);\n  };\n\n  IndexedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  IndexedSequence.prototype.each = function each(fn) {\n    var keyFn   = createCallback(this.keyFn),\n        valFn   = createCallback(this.valFn),\n        indexed = {};\n\n    return this.parent.each(function(e) {\n      var key = keyFn(e),\n          val = valFn(e);\n\n      if (!indexed[key]) {\n        indexed[key] = val;\n        return fn(val, key);\n      }\n    });\n  };\n\n  CountedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  CountedSequence.prototype.each = function each(fn) {\n    var keyFn   = createCallback(this.keyFn),\n        counted = {};\n\n    this.parent.each(function(e) {\n      var key = keyFn(e);\n      if (!counted[key]) {\n        counted[key] = 1;\n      } else {\n        counted[key] += 1;\n      }\n    });\n\n    for (var key in counted) {\n      if (fn(counted[key], key) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Watches for all changes to a specified property (or properties) of an\n   * object and produces a sequence whose elements have the properties\n   * `{ property, value }` indicating which property changed and what it was\n   * changed to.\n   *\n   * Note that this method **only works on directly wrapped objects**; it will\n   * *not* work on any arbitrary {@link ObjectLikeSequence}.\n   *\n   * @public\n   * @param {(string|Array)=} propertyNames A property name or array of property\n   *     names to watch. If this parameter is `undefined`, all of the object's\n   *     current (enumerable) properties will be watched.\n   * @returns {Sequence} A sequence comprising `{ property, value }` objects\n   *     describing each change to the specified property/properties.\n   *\n   * @examples\n   * var obj = {},\n   *     changes = [];\n   *\n   * Lazy(obj).watch('foo').each(function(change) {\n   *   changes.push(change);\n   * });\n   *\n   * obj.foo = 1;\n   * obj.bar = 2;\n   * obj.foo = 3;\n   *\n   * obj.foo; // => 3\n   * changes; // => [{ property: 'foo', value: 1 }, { property: 'foo', value: 3 }]\n   */\n  ObjectLikeSequence.prototype.watch = function watch(propertyNames) {\n    throw new Error('You can only call #watch on a directly wrapped object.');\n  };\n\n  /**\n   * @constructor\n   */\n  function ObjectWrapper(source) {\n    this.source = source;\n  }\n\n  ObjectWrapper.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  ObjectWrapper.prototype.root = function root() {\n    return this;\n  };\n\n  ObjectWrapper.prototype.isAsync = function isAsync() {\n    return false;\n  };\n\n  ObjectWrapper.prototype.get = function get(key) {\n    return this.source[key];\n  };\n\n  ObjectWrapper.prototype.each = function each(fn) {\n    var source = this.source,\n        keys = source ? Object.keys(source) : [],\n        length = keys.length,\n        key,\n        index;\n\n    for (index = 0; index < length; ++index) {\n      key = keys[index];\n\n      if (fn(source[key], key) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * A `StringLikeSequence` represents a sequence of characters.\n   *\n   * The initial sequence you get by wrapping a string with `Lazy(string)` is a\n   * `StringLikeSequence`.\n   *\n   * All methods of `StringLikeSequence` that conceptually should return\n   * something like a string return another `StringLikeSequence`.\n   *\n   * @public\n   * @constructor\n   *\n   * @examples\n   * function upcase(str) { return str.toUpperCase(); }\n   *\n   * Lazy('foo')               // instanceof Lazy.StringLikeSequence\n   * Lazy('foo').toUpperCase() // instanceof Lazy.StringLikeSequence\n   * Lazy('foo').reverse()     // instanceof Lazy.StringLikeSequence\n   * Lazy('foo').take(2)       // instanceof Lazy.StringLikeSequence\n   * Lazy('foo').drop(1)       // instanceof Lazy.StringLikeSequence\n   * Lazy('foo').substring(1)  // instanceof Lazy.StringLikeSequence\n   *\n   * // Note that `map` does not create a `StringLikeSequence` because there's\n   * // no guarantee the mapping function will return characters. In the event\n   * // you do want to map a string onto a string-like sequence, use\n   * // `mapString`:\n   * Lazy('foo').map(Lazy.identity)       // instanceof Lazy.ArrayLikeSequence\n   * Lazy('foo').mapString(Lazy.identity) // instanceof Lazy.StringLikeSequence\n   */\n  function StringLikeSequence() {}\n\n  StringLikeSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  /**\n   * Create a new constructor function for a type inheriting from\n   * `StringLikeSequence`.\n   *\n   * @public\n   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n   *     used for constructing the new sequence. The method will be attached to\n   *     the `StringLikeSequence` prototype so that it can be chained with any other\n   *     methods that return string-like sequences.\n   * @param {Object} overrides An object containing function overrides for this\n   *     new sequence type. Has the same requirements as\n   *     {@link ArrayLikeSequence.define}.\n   * @returns {Function} A constructor for a new type inheriting from\n   *     `StringLikeSequence`.\n   *\n   * @examples\n   * Lazy.StringLikeSequence.define(\"zomg\", {\n   *   length: function() {\n   *     return this.parent.length() + \"!!ZOMG!!!1\".length;\n   *   },\n   *\n   *   get: function(i) {\n   *     if (i < this.parent.length()) {\n   *       return this.parent.get(i);\n   *     }\n   *     return \"!!ZOMG!!!1\".charAt(i - this.parent.length());\n   *   }\n   * });\n   *\n   * Lazy('foo').zomg() // sequence: \"foo!!ZOMG!!!1\"\n   */\n  StringLikeSequence.define = function define(methodName, overrides) {\n    if (!overrides || typeof overrides.get !== 'function') {\n      throw new Error(\"A custom string-like sequence must implement *at least* get!\");\n    }\n\n    return defineSequenceType(StringLikeSequence, methodName, overrides);\n  };\n\n  StringLikeSequence.prototype.value = function value() {\n    return this.toString();\n  };\n\n  /**\n   * Returns an {@link IndexedIterator} that will step over each character in this\n   * sequence one by one.\n   *\n   * @returns {IndexedIterator} The iterator.\n   */\n  StringLikeSequence.prototype.getIterator = function getIterator() {\n    return new CharIterator(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function CharIterator(source) {\n    this.source = Lazy(source);\n    this.index = -1;\n  }\n\n  CharIterator.prototype.current = function current() {\n    return this.source.charAt(this.index);\n  };\n\n  CharIterator.prototype.moveNext = function moveNext() {\n    return (++this.index < this.source.length());\n  };\n\n  /**\n   * Returns the character at the given index of this sequence, or the empty\n   * string if the specified index lies outside the bounds of the sequence.\n   *\n   * @public\n   * @param {number} i The index of this sequence.\n   * @returns {string} The character at the specified index.\n   *\n   * @examples\n   * Lazy(\"foo\").charAt(0)  // => \"f\"\n   * Lazy(\"foo\").charAt(-1) // => \"\"\n   * Lazy(\"foo\").charAt(10) // => \"\"\n   */\n  StringLikeSequence.prototype.charAt = function charAt(i) {\n    return this.get(i);\n  };\n\n  /**\n   * Returns the character code at the given index of this sequence, or `NaN` if\n   * the index lies outside the bounds of the sequence.\n   *\n   * @public\n   * @param {number} i The index of the character whose character code you want.\n   * @returns {number} The character code.\n   *\n   * @examples\n   * Lazy(\"abc\").charCodeAt(0)  // => 97\n   * Lazy(\"abc\").charCodeAt(-1) // => NaN\n   * Lazy(\"abc\").charCodeAt(10) // => NaN\n   */\n  StringLikeSequence.prototype.charCodeAt = function charCodeAt(i) {\n    var char = this.charAt(i);\n    if (!char) { return NaN; }\n\n    return char.charCodeAt(0);\n  };\n\n  /**\n   * Returns a {@link StringLikeSequence} comprising the characters from *this*\n   * sequence starting at `start` and ending at `stop` (exclusive), or---if\n   * `stop` is `undefined`, including the rest of the sequence.\n   *\n   * @public\n   * @param {number} start The index where this sequence should begin.\n   * @param {number=} stop The index (exclusive) where this sequence should end.\n   * @returns {StringLikeSequence} The new sequence.\n   *\n   * @examples\n   * Lazy(\"foo\").substring(1)      // sequence: \"oo\"\n   * Lazy(\"foo\").substring(-1)     // sequence: \"foo\"\n   * Lazy(\"hello\").substring(1, 3) // sequence: \"el\"\n   * Lazy(\"hello\").substring(1, 9) // sequence: \"ello\"\n   * Lazy(\"foo\").substring(0, 0)   // sequence: \"\"\n   * Lazy(\"foo\").substring(3, 3)   // sequence: \"\"\n   */\n  StringLikeSequence.prototype.substring = function substring(start, stop) {\n    return new StringSegment(this, start, stop);\n  };\n\n  /**\n   * @constructor\n   */\n  function StringSegment(parent, start, stop) {\n    this.parent = parent;\n    this.start  = Math.max(0, start);\n    this.stop   = stop;\n  }\n\n  StringSegment.prototype = Object.create(StringLikeSequence.prototype);\n\n  StringSegment.prototype.get = function get(i) {\n    return this.parent.get(i + this.start);\n  };\n\n  StringSegment.prototype.length = function length() {\n    return (typeof this.stop === \"number\" ? this.stop : this.parent.length()) - this.start;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#first} that returns another\n   * {@link StringLikeSequence} (or just the first character, if `count` is\n   * undefined).\n   *\n   * @public\n   * @examples\n   * Lazy('foo').first()                // => 'f'\n   * Lazy('fo').first(2)                // sequence: 'fo'\n   * Lazy('foo').first(10)              // sequence: 'foo'\n   * Lazy('foo').toUpperCase().first()  // => 'F'\n   * Lazy('foo').toUpperCase().first(2) // sequence: 'FO'\n   */\n  StringLikeSequence.prototype.first = function first(count) {\n    if (typeof count === \"undefined\") {\n      return this.charAt(0);\n    }\n\n    return this.substring(0, count);\n  };\n\n  /**\n   * An optimized version of {@link Sequence#last} that returns another\n   * {@link StringLikeSequence} (or just the last character, if `count` is\n   * undefined).\n   *\n   * @public\n   * @examples\n   * Lazy('foo').last()                // => 'o'\n   * Lazy('foo').last(2)               // sequence: 'oo'\n   * Lazy('foo').last(10)              // sequence: 'foo'\n   * Lazy('foo').toUpperCase().last()  // => 'O'\n   * Lazy('foo').toUpperCase().last(2) // sequence: 'OO'\n   */\n  StringLikeSequence.prototype.last = function last(count) {\n    if (typeof count === \"undefined\") {\n      return this.charAt(this.length() - 1);\n    }\n\n    return this.substring(this.length() - count);\n  };\n\n  StringLikeSequence.prototype.drop = function drop(count) {\n    return this.substring(count);\n  };\n\n  /**\n   * Finds the index of the first occurrence of the given substring within this\n   * sequence, starting from the specified index (or the beginning of the\n   * sequence).\n   *\n   * @public\n   * @param {string} substring The substring to search for.\n   * @param {number=} startIndex The index from which to start the search.\n   * @returns {number} The first index where the given substring is found, or\n   *     -1 if it isn't in the sequence.\n   *\n   * @examples\n   * Lazy('canal').indexOf('a')    // => 1\n   * Lazy('canal').indexOf('a', 2) // => 3\n   * Lazy('canal').indexOf('ana')  // => 1\n   * Lazy('canal').indexOf('andy') // => -1\n   * Lazy('canal').indexOf('x')    // => -1\n   */\n  StringLikeSequence.prototype.indexOf = function indexOf(substring, startIndex) {\n    return this.toString().indexOf(substring, startIndex);\n  };\n\n  /**\n   * Finds the index of the last occurrence of the given substring within this\n   * sequence, starting from the specified index (or the end of the sequence)\n   * and working backwards.\n   *\n   * @public\n   * @param {string} substring The substring to search for.\n   * @param {number=} startIndex The index from which to start the search.\n   * @returns {number} The last index where the given substring is found, or\n   *     -1 if it isn't in the sequence.\n   *\n   * @examples\n   * Lazy('canal').lastIndexOf('a')    // => 3\n   * Lazy('canal').lastIndexOf('a', 2) // => 1\n   * Lazy('canal').lastIndexOf('ana')  // => 1\n   * Lazy('canal').lastIndexOf('andy') // => -1\n   * Lazy('canal').lastIndexOf('x')    // => -1\n   */\n  StringLikeSequence.prototype.lastIndexOf = function lastIndexOf(substring, startIndex) {\n    return this.toString().lastIndexOf(substring, startIndex);\n  };\n\n  /**\n   * Checks if this sequence contains a given substring.\n   *\n   * @public\n   * @param {string} substring The substring to check for.\n   * @returns {boolean} Whether or not this sequence contains `substring`.\n   *\n   * @examples\n   * Lazy('hello').contains('ell') // => true\n   * Lazy('hello').contains('')    // => true\n   * Lazy('hello').contains('abc') // => false\n   */\n  StringLikeSequence.prototype.contains = function contains(substring) {\n    return this.indexOf(substring) !== -1;\n  };\n\n  /**\n   * Checks if this sequence ends with a given suffix.\n   *\n   * @public\n   * @param {string} suffix The suffix to check for.\n   * @returns {boolean} Whether or not this sequence ends with `suffix`.\n   *\n   * @examples\n   * Lazy('foo').endsWith('oo')  // => true\n   * Lazy('foo').endsWith('')    // => true\n   * Lazy('foo').endsWith('abc') // => false\n   */\n  StringLikeSequence.prototype.endsWith = function endsWith(suffix) {\n    return this.substring(this.length() - suffix.length).toString() === suffix;\n  };\n\n  /**\n   * Checks if this sequence starts with a given prefix.\n   *\n   * @public\n   * @param {string} prefix The prefix to check for.\n   * @returns {boolean} Whether or not this sequence starts with `prefix`.\n   *\n   * @examples\n   * Lazy('foo').startsWith('fo')  // => true\n   * Lazy('foo').startsWith('')    // => true\n   * Lazy('foo').startsWith('abc') // => false\n   */\n  StringLikeSequence.prototype.startsWith = function startsWith(prefix) {\n    return this.substring(0, prefix.length).toString() === prefix;\n  };\n\n  /**\n   * Converts all of the characters in this string to uppercase.\n   *\n   * @public\n   * @returns {StringLikeSequence} A new sequence with the same characters as\n   *     this sequence, all uppercase.\n   *\n   * @examples\n   * function nextLetter(a) {\n   *   return String.fromCharCode(a.charCodeAt(0) + 1);\n   * }\n   *\n   * Lazy('foo').toUpperCase()                       // sequence: 'FOO'\n   * Lazy('foo').substring(1).toUpperCase()          // sequence: 'OO'\n   * Lazy('abc').mapString(nextLetter).toUpperCase() // sequence: 'BCD'\n   */\n  StringLikeSequence.prototype.toUpperCase = function toUpperCase() {\n    return this.mapString(function(char) { return char.toUpperCase(); });\n  };\n\n  /**\n   * Converts all of the characters in this string to lowercase.\n   *\n   * @public\n   * @returns {StringLikeSequence} A new sequence with the same characters as\n   *     this sequence, all lowercase.\n   *\n   * @examples\n   * function nextLetter(a) {\n   *   return String.fromCharCode(a.charCodeAt(0) + 1);\n   * }\n   *\n   * Lazy('FOO').toLowerCase()                       // sequence: 'foo'\n   * Lazy('FOO').substring(1).toLowerCase()          // sequence: 'oo'\n   * Lazy('ABC').mapString(nextLetter).toLowerCase() // sequence: 'bcd'\n   */\n  StringLikeSequence.prototype.toLowerCase = function toLowerCase() {\n    return this.mapString(function(char) { return char.toLowerCase(); });\n  };\n\n  /**\n   * Maps the characters of this sequence onto a new {@link StringLikeSequence}.\n   *\n   * @public\n   * @param {Function} mapFn The function used to map characters from this\n   *     sequence onto the new sequence.\n   * @returns {StringLikeSequence} The new sequence.\n   *\n   * @examples\n   * function upcase(char) { return char.toUpperCase(); }\n   *\n   * Lazy(\"foo\").mapString(upcase)               // sequence: \"FOO\"\n   * Lazy(\"foo\").mapString(upcase).charAt(0)     // => \"F\"\n   * Lazy(\"foo\").mapString(upcase).charCodeAt(0) // => 70\n   * Lazy(\"foo\").mapString(upcase).substring(1)  // sequence: \"OO\"\n   */\n  StringLikeSequence.prototype.mapString = function mapString(mapFn) {\n    return new MappedStringLikeSequence(this, mapFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function MappedStringLikeSequence(parent, mapFn) {\n    this.parent = parent;\n    this.mapFn  = mapFn;\n  }\n\n  MappedStringLikeSequence.prototype = Object.create(StringLikeSequence.prototype);\n  MappedStringLikeSequence.prototype.get = IndexedMappedSequence.prototype.get;\n  MappedStringLikeSequence.prototype.length = IndexedMappedSequence.prototype.length;\n\n  /**\n   * Returns a copy of this sequence that reads back to front.\n   *\n   * @public\n   *\n   * @examples\n   * Lazy(\"abcdefg\").reverse() // sequence: \"gfedcba\"\n   */\n  StringLikeSequence.prototype.reverse = function reverse() {\n    return new ReversedStringLikeSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function ReversedStringLikeSequence(parent) {\n    this.parent = parent;\n  }\n\n  ReversedStringLikeSequence.prototype = Object.create(StringLikeSequence.prototype);\n  ReversedStringLikeSequence.prototype.get = IndexedReversedSequence.prototype.get;\n  ReversedStringLikeSequence.prototype.length = IndexedReversedSequence.prototype.length;\n\n  StringLikeSequence.prototype.toString = function toString() {\n    return this.join(\"\");\n  };\n\n  /**\n   * Creates a {@link Sequence} comprising all of the matches for the specified\n   * pattern in the underlying string.\n   *\n   * @public\n   * @param {RegExp} pattern The pattern to match.\n   * @returns {Sequence} A sequence of all the matches.\n   *\n   * @examples\n   * Lazy(\"abracadabra\").match(/a[bcd]/) // sequence: [\"ab\", \"ac\", \"ad\", \"ab\"]\n   * Lazy(\"fee fi fo fum\").match(/\\w+/)  // sequence: [\"fee\", \"fi\", \"fo\", \"fum\"]\n   * Lazy(\"hello\").match(/xyz/)          // sequence: []\n   */\n  StringLikeSequence.prototype.match = function match(pattern) {\n    return new StringMatchSequence(this, pattern);\n  };\n\n  /**\n   * @constructor\n   */\n  function StringMatchSequence(parent, pattern) {\n    this.parent = parent;\n    this.pattern = pattern;\n  }\n\n  StringMatchSequence.prototype = Object.create(Sequence.prototype);\n\n  StringMatchSequence.prototype.getIterator = function getIterator() {\n    return new StringMatchIterator(this.parent.toString(), this.pattern);\n  };\n\n  /**\n   * @constructor\n   */\n  function StringMatchIterator(source, pattern) {\n    this.source  = source;\n    this.pattern = cloneRegex(pattern);\n  }\n\n  StringMatchIterator.prototype.current = function current() {\n    return this.match[0];\n  };\n\n  StringMatchIterator.prototype.moveNext = function moveNext() {\n    return !!(this.match = this.pattern.exec(this.source));\n  };\n\n  /**\n   * Creates a {@link Sequence} comprising all of the substrings of this string\n   * separated by the given delimiter, which can be either a string or a regular\n   * expression.\n   *\n   * @public\n   * @param {string|RegExp} delimiter The delimiter to use for recognizing\n   *     substrings.\n   * @returns {Sequence} A sequence of all the substrings separated by the given\n   *     delimiter.\n   *\n   * @examples\n   * Lazy(\"foo\").split(\"\")                      // sequence: [\"f\", \"o\", \"o\"]\n   * Lazy(\"yo dawg\").split(\" \")                 // sequence: [\"yo\", \"dawg\"]\n   * Lazy(\"bah bah\\tblack  sheep\").split(/\\s+/) // sequence: [\"bah\", \"bah\", \"black\", \"sheep\"]\n   */\n  StringLikeSequence.prototype.split = function split(delimiter) {\n    return new SplitStringSequence(this, delimiter);\n  };\n\n  /**\n   * @constructor\n   */\n  function SplitStringSequence(parent, pattern) {\n    this.parent = parent;\n    this.pattern = pattern;\n  }\n\n  SplitStringSequence.prototype = Object.create(Sequence.prototype);\n\n  SplitStringSequence.prototype.getIterator = function getIterator() {\n    var source = this.parent.toString();\n\n    if (this.pattern instanceof RegExp) {\n      if (this.pattern.source === \"\" || this.pattern.source === \"(?:)\") {\n        return new CharIterator(source);\n      } else {\n        return new SplitWithRegExpIterator(source, this.pattern);\n      }\n    } else if (this.pattern === \"\") {\n      return new CharIterator(source);\n    } else {\n      return new SplitWithStringIterator(source, this.pattern);\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  function SplitWithRegExpIterator(source, pattern) {\n    this.source  = source;\n    this.pattern = cloneRegex(pattern);\n  }\n\n  SplitWithRegExpIterator.prototype.current = function current() {\n    return this.source.substring(this.start, this.end);\n  };\n\n  SplitWithRegExpIterator.prototype.moveNext = function moveNext() {\n    if (!this.pattern) {\n      return false;\n    }\n\n    var match = this.pattern.exec(this.source);\n\n    if (match) {\n      this.start = this.nextStart ? this.nextStart : 0;\n      this.end = match.index;\n      this.nextStart = match.index + match[0].length;\n      return true;\n\n    } else if (this.pattern) {\n      this.start = this.nextStart;\n      this.end = undefined;\n      this.nextStart = undefined;\n      this.pattern = undefined;\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * @constructor\n   */\n  function SplitWithStringIterator(source, delimiter) {\n    this.source = source;\n    this.delimiter = delimiter;\n  }\n\n  SplitWithStringIterator.prototype.current = function current() {\n    return this.source.substring(this.leftIndex, this.rightIndex);\n  };\n\n  SplitWithStringIterator.prototype.moveNext = function moveNext() {\n    if (!this.finished) {\n      this.leftIndex = typeof this.leftIndex !== \"undefined\" ?\n        this.rightIndex + this.delimiter.length :\n        0;\n      this.rightIndex = this.source.indexOf(this.delimiter, this.leftIndex);\n    }\n\n    if (this.rightIndex === -1) {\n      this.finished = true;\n      this.rightIndex = undefined;\n      return true;\n    }\n\n    return !this.finished;\n  };\n\n  /**\n   * Wraps a string exposing {@link #match} and {@link #split} methods that return\n   * {@link Sequence} objects instead of arrays, improving on the efficiency of\n   * JavaScript's built-in `String#split` and `String.match` methods and\n   * supporting asynchronous iteration.\n   *\n   * @param {string} source The string to wrap.\n   * @constructor\n   */\n  function StringWrapper(source) {\n    this.source = source;\n  }\n\n  StringWrapper.prototype = Object.create(StringLikeSequence.prototype);\n\n  StringWrapper.prototype.root = function root() {\n    return this;\n  };\n\n  StringWrapper.prototype.isAsync = function isAsync() {\n    return false;\n  };\n\n  StringWrapper.prototype.get = function get(i) {\n    return this.source.charAt(i);\n  };\n\n  StringWrapper.prototype.length = function length() {\n    return this.source.length;\n  };\n\n  StringWrapper.prototype.toString = function toString() {\n    return this.source;\n  };\n\n  /**\n   * A `GeneratedSequence` does not wrap an in-memory collection but rather\n   * determines its elements on-the-fly during iteration according to a generator\n   * function.\n   *\n   * You create a `GeneratedSequence` by calling {@link Lazy.generate}.\n   *\n   * @public\n   * @constructor\n   * @param {function(number):*} generatorFn A function which accepts an index\n   *     and returns a value for the element at that position in the sequence.\n   * @param {number=} length The length of the sequence. If this argument is\n   *     omitted, the sequence will go on forever.\n   */\n  function GeneratedSequence(generatorFn, length) {\n    this.get = generatorFn;\n    this.fixedLength = length;\n  }\n\n  GeneratedSequence.prototype = Object.create(Sequence.prototype);\n\n  GeneratedSequence.prototype.isAsync = function isAsync() {\n    return false;\n  };\n\n  /**\n   * Returns the length of this sequence.\n   *\n   * @public\n   * @returns {number} The length, or `undefined` if this is an indefinite\n   *     sequence.\n   */\n  GeneratedSequence.prototype.length = function length() {\n    return this.fixedLength;\n  };\n\n  /**\n   * Iterates over the sequence produced by invoking this sequence's generator\n   * function up to its specified length, or, if length is `undefined`,\n   * indefinitely (in which case the sequence will go on forever--you would need\n   * to call, e.g., {@link Sequence#take} to limit iteration).\n   *\n   * @public\n   * @param {Function} fn The function to call on each output from the generator\n   *     function.\n   */\n  GeneratedSequence.prototype.each = function each(fn) {\n    var generatorFn = this.get,\n        length = this.fixedLength,\n        i = 0;\n\n    while (typeof length === \"undefined\" || i < length) {\n      if (fn(generatorFn(i), i++) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  GeneratedSequence.prototype.getIterator = function getIterator() {\n    return new GeneratedIterator(this);\n  };\n\n  /**\n   * Iterates over a generated sequence. (This allows generated sequences to be\n   * iterated asynchronously.)\n   *\n   * @param {GeneratedSequence} sequence The generated sequence to iterate over.\n   * @constructor\n   */\n  function GeneratedIterator(sequence) {\n    this.sequence     = sequence;\n    this.index        = 0;\n    this.currentValue = null;\n  }\n\n  GeneratedIterator.prototype.current = function current() {\n    return this.currentValue;\n  };\n\n  GeneratedIterator.prototype.moveNext = function moveNext() {\n    var sequence = this.sequence;\n\n    if (typeof sequence.fixedLength === \"number\" && this.index >= sequence.fixedLength) {\n      return false;\n    }\n\n    this.currentValue = sequence.get(this.index++);\n    return true;\n  };\n\n  /**\n   * An `AsyncSequence` iterates over its elements asynchronously when\n   * {@link #each} is called.\n   *\n   * You get an `AsyncSequence` by calling {@link Sequence#async} on any\n   * sequence. Note that some sequence types may not support asynchronous\n   * iteration.\n   *\n   * Returning values\n   * ----------------\n   *\n   * Because of its asynchronous nature, an `AsyncSequence` cannot be used in the\n   * same way as other sequences for functions that return values directly (e.g.,\n   * `reduce`, `max`, `any`, even `toArray`).\n   *\n   * Instead, these methods return an `AsyncHandle` whose `onComplete` method\n   * accepts a callback that will be called with the final result once iteration\n   * has finished.\n   *\n   * Defining custom asynchronous sequences\n   * --------------------------------------\n   *\n   * There are plenty of ways to define an asynchronous sequence. Here's one.\n   *\n   * 1. First, implement an {@link Iterator}. This is an object whose prototype\n   *    has the methods {@link Iterator#moveNext} (which returns a `boolean`) and\n   *    {@link current} (which returns the current value).\n   * 2. Next, create a simple wrapper that inherits from `AsyncSequence`, whose\n   *    `getIterator` function returns an instance of the iterator type you just\n   *    defined.\n   *\n   * The default implementation for {@link #each} on an `AsyncSequence` is to\n   * create an iterator and then asynchronously call {@link Iterator#moveNext}\n   * (using `setImmediate`, if available, otherwise `setTimeout`) until the iterator\n   * can't move ahead any more.\n   *\n   * @public\n   * @constructor\n   * @param {Sequence} parent A {@link Sequence} to wrap, to expose asynchronous\n   *     iteration.\n   * @param {number=} interval How many milliseconds should elapse between each\n   *     element when iterating over this sequence. Note that this interval\n   *     applies even to the first value in the sequence; i.e., when calling\n   *     each(), this much time will elapse before the first element is\n   *     iterated.\n   *\n   *     If this argument is omitted, asynchronous iteration will be executed\n   *     as fast as possible.\n   */\n  function AsyncSequence(parent, interval) {\n    if (parent instanceof AsyncSequence) {\n      throw new Error(\"Sequence is already asynchronous!\");\n    }\n\n    this.parent         = parent;\n    this.interval       = interval;\n    this.onNextCallback = getOnNextCallback(interval);\n    this.cancelCallback = getCancelCallback(interval);\n  }\n\n  AsyncSequence.prototype = Object.create(Sequence.prototype);\n\n  AsyncSequence.prototype.isAsync = function isAsync() {\n    return true;\n  };\n\n  /**\n   * Throws an exception. You cannot manually iterate over an asynchronous\n   * sequence.\n   *\n   * @public\n   * @example\n   * Lazy([1, 2, 3]).async().getIterator() // throws\n   */\n  AsyncSequence.prototype.getIterator = function getIterator() {\n    throw new Error('An AsyncSequence does not support synchronous iteration.');\n  };\n\n  /**\n   * An asynchronous version of {@link Sequence#each}.\n   *\n   * @public\n   * @param {Function} fn The function to invoke asynchronously on each element in\n   *     the sequence one by one.\n   * @returns {AsyncHandle} An {@link AsyncHandle} providing the ability to\n   *     cancel the asynchronous iteration (by calling `cancel()`) as well as\n   *     supply callback(s) for when an error is encountered (`onError`) or when\n   *     iteration is complete (`onComplete`).\n   */\n  AsyncSequence.prototype.each = function each(fn) {\n    var iterator = this.parent.getIterator(),\n        onNextCallback = this.onNextCallback,\n        cancelCallback = this.cancelCallback,\n        i = 0;\n\n    var handle = new AsyncHandle(function cancel() {\n      if (cancellationId) {\n        cancelCallback(cancellationId);\n      }\n    });\n\n    var cancellationId = onNextCallback(function iterate() {\n      cancellationId = null;\n\n      try {\n        if (iterator.moveNext() && fn(iterator.current(), i++) !== false) {\n          cancellationId = onNextCallback(iterate);\n\n        } else {\n          handle._resolve();\n        }\n\n      } catch (e) {\n        handle._reject(e);\n      }\n    });\n\n    return handle;\n  };\n\n  /**\n   * An `AsyncHandle` provides a [Promises/A+](http://promises-aplus.github.io/promises-spec/)\n   * compliant interface for an {@link AsyncSequence} that is currently (or was)\n   * iterating over its elements.\n   *\n   * In addition to behaving as a promise, an `AsyncHandle` provides the ability\n   * to {@link AsyncHandle#cancel} iteration (if `cancelFn` is provided)\n   * and also offers convenient {@link AsyncHandle#onComplete} and\n   * {@link AsyncHandle#onError} methods to attach listeners for when iteration\n   * is complete or an error is thrown during iteration.\n   *\n   * @public\n   * @param {Function} cancelFn A function to cancel asynchronous iteration.\n   *     This is passed in to support different cancellation mechanisms for\n   *     different forms of asynchronous sequences (e.g., timeout-based\n   *     sequences, sequences based on I/O, etc.).\n   * @constructor\n   *\n   * @example\n   * // Create a sequence of 100,000 random numbers, in chunks of 100.\n   * var sequence = Lazy.generate(Math.random)\n   *   .chunk(100)\n   *   .async()\n   *   .take(1000);\n   *\n   * // Reduce-style operations -- i.e., operations that return a *value* (as\n   * // opposed to a *sequence*) -- return an AsyncHandle for async sequences.\n   * var handle = sequence.toArray();\n   *\n   * handle.onComplete(function(array) {\n   *   // Do something w/ 1,000-element array.\n   * });\n   *\n   * // Since an AsyncHandle is a promise, you can also use it to create\n   * // subsequent promises using `then` (see the Promises/A+ spec for more\n   * // info).\n   * var flattened = handle.then(function(array) {\n   *   return Lazy(array).flatten();\n   * });\n   */\n  function AsyncHandle(cancelFn) {\n    this.resolveListeners = [];\n    this.rejectListeners = [];\n    this.state = PENDING;\n    this.cancelFn = cancelFn;\n  }\n\n  // Async handle states\n  var PENDING  = 1,\n      RESOLVED = 2,\n      REJECTED = 3;\n\n  AsyncHandle.prototype.then = function then(onFulfilled, onRejected) {\n    var promise = new AsyncHandle(this.cancelFn);\n\n    this.resolveListeners.push(function(value) {\n      try {\n        if (typeof onFulfilled !== 'function') {\n          resolve(promise, value);\n          return;\n        }\n\n        resolve(promise, onFulfilled(value));\n\n      } catch (e) {\n        promise._reject(e);\n      }\n    });\n\n    this.rejectListeners.push(function(reason) {\n      try {\n        if (typeof onRejected !== 'function') {\n          promise._reject(reason);\n          return;\n        }\n\n        resolve(promise, onRejected(reason));\n\n      } catch (e) {\n        promise._reject(e);\n      }\n    });\n\n    if (this.state === RESOLVED) {\n      this._resolve(this.value);\n    }\n\n    if (this.state === REJECTED) {\n      this._reject(this.reason);\n    }\n\n    return promise;\n  };\n\n  AsyncHandle.prototype._resolve = function _resolve(value) {\n    if (this.state === REJECTED) {\n      return;\n    }\n\n    if (this.state === PENDING) {\n      this.state = RESOLVED;\n      this.value = value;\n    }\n\n    consumeListeners(this.resolveListeners, this.value);\n  };\n\n  AsyncHandle.prototype._reject = function _reject(reason) {\n    if (this.state === RESOLVED) {\n      return;\n    }\n\n    if (this.state === PENDING) {\n      this.state = REJECTED;\n      this.reason = reason;\n    }\n\n    consumeListeners(this.rejectListeners, this.reason);\n  };\n\n  /**\n   * Cancels asynchronous iteration.\n   *\n   * @public\n   */\n  AsyncHandle.prototype.cancel = function cancel() {\n    if (this.cancelFn) {\n      this.cancelFn();\n      this.cancelFn = null;\n      this._resolve(false);\n    }\n  };\n\n  /**\n   * Updates the handle with a callback to execute when iteration is completed.\n   *\n   * @public\n   * @param {Function} callback The function to call when the asynchronous\n   *     iteration is completed.\n   * @return {AsyncHandle} A reference to the handle (for chaining).\n   */\n  AsyncHandle.prototype.onComplete = function onComplete(callback) {\n    this.resolveListeners.push(callback);\n    return this;\n  };\n\n  /**\n   * Updates the handle with a callback to execute if/when any error is\n   * encountered during asynchronous iteration.\n   *\n   * @public\n   * @param {Function} callback The function to call, with any associated error\n   *     object, when an error occurs.\n   * @return {AsyncHandle} A reference to the handle (for chaining).\n   */\n  AsyncHandle.prototype.onError = function onError(callback) {\n    this.rejectListeners.push(callback);\n    return this;\n  };\n\n  /**\n   * Promise resolution procedure:\n   * http://promises-aplus.github.io/promises-spec/#the_promise_resolution_procedure\n   */\n  function resolve(promise, x) {\n    if (promise === x) {\n      promise._reject(new TypeError('Cannot resolve a promise to itself'));\n      return;\n    }\n\n    if (x instanceof AsyncHandle) {\n      x.then(\n        function(value) { resolve(promise, value); },\n        function(reason) { promise._reject(reason); }\n      );\n      return;\n    }\n\n    var then;\n    try {\n      then = (/function|object/).test(typeof x) && x != null && x.then;\n    } catch (e) {\n      promise._reject(e);\n      return;\n    }\n\n    var thenableState = PENDING;\n    if (typeof then === 'function') {\n      try {\n        then.call(\n          x,\n          function resolvePromise(value) {\n            if (thenableState !== PENDING) {\n              return;\n            }\n            thenableState = RESOLVED;\n            resolve(promise, value);\n          },\n          function rejectPromise(reason) {\n            if (thenableState !== PENDING) {\n              return;\n            }\n            thenableState = REJECTED;\n            promise._reject(reason);\n          }\n        );\n      } catch (e) {\n        if (thenableState !== PENDING) {\n          return;\n        }\n\n        promise._reject(e);\n      }\n\n      return;\n    }\n\n    promise._resolve(x);\n  }\n\n  function consumeListeners(listeners, value, callback) {\n    callback || (callback = getOnNextCallback());\n\n    callback(function() {\n      if (listeners.length > 0) {\n        listeners.shift()(value);\n        consumeListeners(listeners, value, callback);\n      }\n    });\n  }\n\n  function getOnNextCallback(interval) {\n    if (typeof interval === \"undefined\") {\n      if (typeof setImmediate === \"function\") {\n        return setImmediate;\n      }\n    }\n\n    interval = interval || 0;\n    return function(fn) {\n      return setTimeout(fn, interval);\n    };\n  }\n\n  function getCancelCallback(interval) {\n    if (typeof interval === \"undefined\") {\n      if (typeof clearImmediate === \"function\") {\n        return clearImmediate;\n      }\n    }\n\n    return clearTimeout;\n  }\n\n  /**\n   * Transform a value, whether the value is retrieved asynchronously or directly.\n   *\n   * @private\n   * @param {Function} fn The function that transforms the value.\n   * @param {*} value The value to be transformed. This can be an {@link AsyncHandle} when the value\n   *     is retrieved asynchronously, otherwise it can be anything.\n   * @returns {*} An {@link AsyncHandle} when `value` is also an {@link AsyncHandle}, otherwise\n   *     whatever `fn` resulted in.\n   */\n  function transform(fn, value) {\n    if (value instanceof AsyncHandle) {\n      return value.then(function() { fn(value); });\n    }\n    return fn(value);\n  }\n\n  /**\n   * An async version of {@link Sequence#reverse}.\n   */\n  AsyncSequence.prototype.reverse = function reverse() {\n    return this.parent.reverse().async();\n  };\n\n  /**\n   * A version of {@link Sequence#find} which returns an {@link AsyncHandle}.\n   *\n   * @public\n   * @param {Function} predicate A function to call on (potentially) every element\n   *     in the sequence.\n   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n   *     the found element, once it is detected, or else `undefined`.\n   */\n  AsyncSequence.prototype.find = function find(predicate) {\n    var found;\n\n    var handle = this.each(function(e, i) {\n      if (predicate(e, i)) {\n        found = e;\n        return false;\n      }\n    });\n\n    return handle.then(function() { return found; });\n  };\n\n  /**\n   * A version of {@link Sequence#indexOf} which returns an {@link AsyncHandle}.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n   *     the found index, once it is detected, or -1.\n   */\n  AsyncSequence.prototype.indexOf = function indexOf(value) {\n    var foundIndex = -1;\n\n    var handle = this.each(function(e, i) {\n      if (e === value) {\n        foundIndex = i;\n        return false;\n      }\n    });\n\n    return handle.then(function() {\n      return foundIndex;\n    });\n  };\n\n  /**\n   * A version of {@link Sequence#contains} which returns an {@link AsyncHandle}.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n   *     either `true` or `false` to indicate whether the element was found.\n   */\n  AsyncSequence.prototype.contains = function contains(value) {\n    var found = false;\n\n    var handle = this.each(function(e) {\n      if (e === value) {\n        found = true;\n        return false;\n      }\n    });\n\n    return handle.then(function() {\n      return found;\n    });\n  };\n\n  /**\n   * Just return the same sequence for `AsyncSequence#async` (I see no harm in this).\n   */\n  AsyncSequence.prototype.async = function async() {\n    return this;\n  };\n\n  /**\n   * See {@link ObjectLikeSequence#watch} for docs.\n   */\n  ObjectWrapper.prototype.watch = function watch(propertyNames) {\n    return new WatchedPropertySequence(this.source, propertyNames);\n  };\n\n  function WatchedPropertySequence(object, propertyNames) {\n    this.listeners = [];\n\n    if (!propertyNames) {\n      propertyNames = Lazy(object).keys().toArray();\n    } else if (!isArray(propertyNames)) {\n      propertyNames = [propertyNames];\n    }\n\n    var listeners = this.listeners,\n        index     = 0;\n\n    Lazy(propertyNames).each(function(propertyName) {\n      var propertyValue = object[propertyName];\n\n      Object.defineProperty(object, propertyName, {\n        get: function() {\n          return propertyValue;\n        },\n\n        set: function(value) {\n          for (var i = listeners.length - 1; i >= 0; --i) {\n            if (listeners[i]({ property: propertyName, value: value }, index) === false) {\n              listeners.splice(i, 1);\n            }\n          }\n          propertyValue = value;\n          ++index;\n        }\n      });\n    });\n  }\n\n  WatchedPropertySequence.prototype = Object.create(AsyncSequence.prototype);\n\n  WatchedPropertySequence.prototype.each = function each(fn) {\n    this.listeners.push(fn);\n  };\n\n  /**\n   * A StreamLikeSequence comprises a sequence of 'chunks' of data, which are\n   * typically multiline strings.\n   *\n   * @constructor\n   */\n  function StreamLikeSequence() {}\n\n  StreamLikeSequence.prototype = Object.create(AsyncSequence.prototype);\n\n  StreamLikeSequence.prototype.isAsync = function isAsync() {\n    return true;\n  };\n\n  StreamLikeSequence.prototype.split = function split(delimiter) {\n    return new SplitStreamSequence(this, delimiter);\n  };\n\n  /**\n   * @constructor\n   */\n  function SplitStreamSequence(parent, delimiter) {\n    this.parent    = parent;\n    this.delimiter = delimiter;\n    this.each      = this.getEachForDelimiter(delimiter);\n  }\n\n  SplitStreamSequence.prototype = Object.create(Sequence.prototype);\n\n  SplitStreamSequence.prototype.getEachForDelimiter = function getEachForDelimiter(delimiter) {\n    if (delimiter instanceof RegExp) {\n      return this.regexEach;\n    }\n\n    return this.stringEach;\n  };\n\n  SplitStreamSequence.prototype.regexEach = function each(fn) {\n    var delimiter = cloneRegex(this.delimiter),\n        buffer = '',\n        start = 0, end,\n        index = 0;\n\n    var handle = this.parent.each(function(chunk) {\n      buffer += chunk;\n\n      var match;\n      while (match = delimiter.exec(buffer)) {\n        end = match.index;\n        if (fn(buffer.substring(start, end), index++) === false) {\n          return false;\n        }\n        start = end + match[0].length;\n      }\n\n      buffer = buffer.substring(start);\n      start = 0;\n    });\n\n    handle.onComplete(function() {\n      if (buffer.length > 0) {\n        fn(buffer, index++);\n      }\n    });\n\n    return handle;\n  };\n\n  SplitStreamSequence.prototype.stringEach = function each(fn) {\n    var delimiter  = this.delimiter,\n        pieceIndex = 0,\n        buffer = '',\n        bufferIndex = 0;\n\n    var handle = this.parent.each(function(chunk) {\n      buffer += chunk;\n      var delimiterIndex;\n      while ((delimiterIndex = buffer.indexOf(delimiter)) >= 0) {\n        var piece = buffer.substr(0,delimiterIndex);\n        buffer = buffer.substr(delimiterIndex+delimiter.length);\n        if (fn(piece,pieceIndex++) === false) {\n          return false;\n        }\n      }\n      return true;\n    });\n\n    handle.onComplete(function() {\n      fn(buffer, pieceIndex++);\n    });\n\n    return handle;\n  };\n\n  StreamLikeSequence.prototype.lines = function lines() {\n    return this.split(\"\\n\");\n  };\n\n  StreamLikeSequence.prototype.match = function match(pattern) {\n    return new MatchedStreamSequence(this, pattern);\n  };\n\n  /**\n   * @constructor\n   */\n  function MatchedStreamSequence(parent, pattern) {\n    this.parent  = parent;\n    this.pattern = cloneRegex(pattern);\n  }\n\n  MatchedStreamSequence.prototype = Object.create(AsyncSequence.prototype);\n\n  MatchedStreamSequence.prototype.each = function each(fn) {\n    var pattern = this.pattern,\n        done      = false,\n        i         = 0;\n\n    return this.parent.each(function(chunk) {\n      Lazy(chunk).match(pattern).each(function(match) {\n        if (fn(match, i++) === false) {\n          done = true;\n          return false;\n        }\n      });\n\n      return !done;\n    });\n  };\n\n  /**\n   * Defines a wrapper for custom {@link StreamLikeSequence}s. This is useful\n   * if you want a way to handle a stream of events as a sequence, but you can't\n   * use Lazy's existing interface (i.e., you're wrapping an object from a\n   * library with its own custom events).\n   *\n   * This method defines a *factory*: that is, it produces a function that can\n   * be used to wrap objects and return a {@link Sequence}. Hopefully the\n   * example will make this clear.\n   *\n   * @public\n   * @param {Function} initializer An initialization function called on objects\n   *     created by this factory. `this` will be bound to the created object,\n   *     which is an instance of {@link StreamLikeSequence}. Use `emit` to\n   *     generate data for the sequence.\n   * @returns {Function} A function that creates a new {@link StreamLikeSequence},\n   *     initializes it using the specified function, and returns it.\n   *\n   * @example\n   * var factory = Lazy.createWrapper(function(eventSource) {\n   *   var sequence = this;\n   *\n   *   eventSource.handleEvent(function(data) {\n   *     sequence.emit(data);\n   *   });\n   * });\n   *\n   * var eventEmitter = {\n   *   triggerEvent: function(data) {\n   *     eventEmitter.eventHandler(data);\n   *   },\n   *   handleEvent: function(handler) {\n   *     eventEmitter.eventHandler = handler;\n   *   },\n   *   eventHandler: function() {}\n   * };\n   *\n   * var events = [];\n   *\n   * factory(eventEmitter).each(function(e) {\n   *   events.push(e);\n   * });\n   *\n   * eventEmitter.triggerEvent('foo');\n   * eventEmitter.triggerEvent('bar');\n   *\n   * events // => ['foo', 'bar']\n   */\n  Lazy.createWrapper = function createWrapper(initializer) {\n    var ctor = function() {\n      this.listeners = [];\n    };\n\n    ctor.prototype = Object.create(StreamLikeSequence.prototype);\n\n    ctor.prototype.each = function(listener) {\n      this.listeners.push(listener);\n    };\n\n    ctor.prototype.emit = function(data) {\n      var listeners = this.listeners;\n\n      for (var len = listeners.length, i = len - 1; i >= 0; --i) {\n        if (listeners[i](data) === false) {\n          listeners.splice(i, 1);\n        }\n      }\n    };\n\n    return function() {\n      var sequence = new ctor();\n      initializer.apply(sequence, arguments);\n      return sequence;\n    };\n  };\n\n  /**\n   * Creates a {@link GeneratedSequence} using the specified generator function\n   * and (optionally) length.\n   *\n   * @public\n   * @param {function(number):*} generatorFn The function used to generate the\n   *     sequence. This function accepts an index as a parameter and should return\n   *     a value for that index in the resulting sequence.\n   * @param {number=} length The length of the sequence, for sequences with a\n   *     definite length.\n   * @returns {GeneratedSequence} The generated sequence.\n   *\n   * @examples\n   * var randomNumbers = Lazy.generate(Math.random);\n   * var countingNumbers = Lazy.generate(function(i) { return i + 1; }, 5);\n   *\n   * randomNumbers          // instanceof Lazy.GeneratedSequence\n   * randomNumbers.length() // => undefined\n   * countingNumbers          // sequence: [1, 2, 3, 4, 5]\n   * countingNumbers.length() // => 5\n   */\n  Lazy.generate = function generate(generatorFn, length) {\n    return new GeneratedSequence(generatorFn, length);\n  };\n\n  /**\n   * Creates a sequence from a given starting value, up to a specified stopping\n   * value, incrementing by a given step. Invalid values for any of these\n   * arguments (e.g., a step of 0) result in an empty sequence.\n   *\n   * @public\n   * @returns {GeneratedSequence} The sequence defined by the given ranges.\n   *\n   * @examples\n   * Lazy.range(3)         // sequence: [0, 1, 2]\n   * Lazy.range(1, 4)      // sequence: [1, 2, 3]\n   * Lazy.range(2, 10, 2)  // sequence: [2, 4, 6, 8]\n   * Lazy.range(5, 1, 2)   // sequence: []\n   * Lazy.range(5, 15, -2) // sequence: []\n   * Lazy.range(3, 10, 3)  // sequence: [3, 6, 9]\n   * Lazy.range(5, 2)      // sequence: [5, 4, 3]\n   * Lazy.range(7, 2, -2)  // sequence: [7, 5, 3]\n   * Lazy.range(3, 5, 0)   // sequence: []\n   */\n  Lazy.range = function range() {\n    var start = arguments.length > 1 ? arguments[0] : 0,\n        stop  = arguments.length > 1 ? arguments[1] : arguments[0],\n        step  = arguments.length > 2 && arguments[2];\n\n    if (step === false) {\n      step = stop > start ? 1 : -1;\n    }\n\n    if (step === 0) {\n      return Lazy([]);\n    }\n\n    return Lazy.generate(function(i) { return start + (step * i); })\n      .take(Math.ceil((stop - start) / step));\n  };\n\n  /**\n   * Creates a sequence consisting of the given value repeated a specified number\n   * of times.\n   *\n   * @public\n   * @param {*} value The value to repeat.\n   * @param {number=} count The number of times the value should be repeated in\n   *     the sequence. If this argument is omitted, the value will repeat forever.\n   * @returns {GeneratedSequence} The sequence containing the repeated value.\n   *\n   * @examples\n   * Lazy.repeat(\"hi\", 3)          // sequence: [\"hi\", \"hi\", \"hi\"]\n   * Lazy.repeat(\"young\")          // instanceof Lazy.GeneratedSequence\n   * Lazy.repeat(\"young\").length() // => undefined\n   * Lazy.repeat(\"young\").take(3)  // sequence: [\"young\", \"young\", \"young\"]\n   */\n  Lazy.repeat = function repeat(value, count) {\n    return Lazy.generate(function() { return value; }, count);\n  };\n\n  Lazy.Sequence           = Sequence;\n  Lazy.ArrayLikeSequence  = ArrayLikeSequence;\n  Lazy.ObjectLikeSequence = ObjectLikeSequence;\n  Lazy.StringLikeSequence = StringLikeSequence;\n  Lazy.StreamLikeSequence = StreamLikeSequence;\n  Lazy.GeneratedSequence  = GeneratedSequence;\n  Lazy.AsyncSequence      = AsyncSequence;\n  Lazy.AsyncHandle        = AsyncHandle;\n\n  /*** Useful utility methods ***/\n\n  /**\n   * Creates a shallow copy of an array or object.\n   *\n   * @examples\n   * var array  = [1, 2, 3], clonedArray,\n   *     object = { foo: 1, bar: 2 }, clonedObject;\n   *\n   * clonedArray = Lazy.clone(array); // => [1, 2, 3]\n   * clonedArray.push(4); // clonedArray == [1, 2, 3, 4]\n   * array; // => [1, 2, 3]\n   *\n   * clonedObject = Lazy.clone(object); // => { foo: 1, bar: 2 }\n   * clonedObject.baz = 3; // clonedObject == { foo: 1, bar: 2, baz: 3 }\n   * object; // => { foo: 1, bar: 2 }\n   */\n  Lazy.clone = function clone(target) {\n    return Lazy(target).value();\n  };\n\n  /**\n   * Marks a method as deprecated, so calling it will issue a console warning.\n   */\n  Lazy.deprecate = function deprecate(message, fn) {\n    return function() {\n      console.warn(message);\n      return fn.apply(this, arguments);\n    };\n  };\n\n  var isArray    = Array.isArray || function(x) { return x instanceof Array; },\n      arrayPop   = Array.prototype.pop,\n      arraySlice = Array.prototype.slice;\n\n  /**\n   * If you know what function currying is, then you know what this does.\n   *\n   * @param {Function} fn The function to curry.\n   * @returns {Function} The curried function.\n   *\n   * @examples\n   * function abc(a, b, c) { return [a, b, c]; }\n   * var curried = Lazy.curry(abc);\n   *\n   * curried(1)(2)(3) // => [1, 2, 3]\n   * curried(1, 2)(3) // => [1, 2, 3]\n   * curried(1)(2, 3) // => [1, 2, 3]\n   * curried(1, 2, 3) // => [1, 2, 3]\n   * Lazy([1, 2, 3]).map(curried(1, 2)) // sequence: [[1, 2, 1], [1, 2, 2], [1, 2, 3]]\n   */\n  function curry(fn, arity) {\n    arity || (arity = fn.length);\n\n    function curried(args) {\n      if (args.length < arity) {\n        return function() {\n          return curried(args.concat(arraySlice.call(arguments, 0)));\n        };\n      }\n\n      return fn.apply(null, args);\n    }\n\n    return curried([]);\n  }\n\n  /**\n   * Same as Lazy.curry, but... you know... from the right.\n   *\n   * @param {Function} fn The function to curry from the right.\n   * @returns {Function} The curried-from-the-right function.\n   *\n   * @examples\n   * function abc(a, b, c) { return [a, b, c]; }\n   * var curriedRight = Lazy.curryRight(abc);\n   *\n   * curriedRight(3)(2)(1) // => [1, 2, 3]\n   * curriedRight(2, 3)(1) // => [1, 2, 3]\n   * curriedRight(3)(1, 2) // => [1, 2, 3]\n   * curriedRight(1, 2, 3) // => [1, 2, 3]\n   * Lazy([1, 2, 3]).map(curriedRight(3)) // sequence: [[1, 0, 3], [2, 1, 3], [3, 2, 3]]\n   */\n  function curryRight(fn, arity) {\n    arity || (arity = fn.length);\n\n    function curriedRight(args) {\n      if (args.length < arity) {\n        return function() {\n          return curriedRight(arraySlice.call(arguments, 0).concat(args));\n        };\n      }\n\n      return fn.apply(null, args);\n    }\n\n    return curriedRight([]);\n  }\n\n  Lazy.curry = curry;\n  Lazy.curryRight = curryRight;\n\n  /**\n   * Creates a callback... you know, Lo-Dash style.\n   *\n   * - for functions, just returns the function\n   * - for strings, returns a pluck-style callback\n   * - for objects, returns a where-style callback\n   *\n   * @param {Function|string|Object} callback A function, string, or object to\n   *     convert to a callback.\n   * @param {*} defaultReturn If the callback is undefined, a default return\n   *     value to use for the function.\n   * @returns {Function} The callback function.\n   *\n   * @examples\n   * Lazy.createCallback(function() {})                  // instanceof Function\n   * Lazy.createCallback('foo')                          // instanceof Function\n   * Lazy.createCallback('foo')({ foo: 'bar'})           // => 'bar'\n   * Lazy.createCallback({ foo: 'bar' })({ foo: 'bar' }) // => true\n   * Lazy.createCallback({ foo: 'bar' })({ foo: 'baz' }) // => false\n   */\n  function createCallback(callback, defaultValue) {\n    switch (typeof callback) {\n      case \"function\":\n        return callback;\n\n      case \"string\":\n        return function(e) {\n          return e[callback];\n        };\n\n      case \"object\":\n        return function(e) {\n          return Lazy(callback).all(function(value, key) {\n            return e[key] === value;\n          });\n        };\n\n      case \"undefined\":\n        return defaultValue ?\n          function() { return defaultValue; } :\n          Lazy.identity;\n\n      default:\n        throw new Error(\"Don't know how to make a callback from a \" + typeof callback + \"!\");\n    }\n  }\n\n  Lazy.createCallback = createCallback;\n\n  /**\n   * Takes a function that returns a value for one argument and produces a\n   * function that compares two arguments.\n   *\n   * @param {Function|string|Object} callback A function, string, or object to\n   *     convert to a callback using `createCallback`.\n   * @returns {Function} A function that accepts two values and returns 1 if\n   *     the first is greater, -1 if the second is greater, or 0 if they are\n   *     equivalent.\n   *\n   * @examples\n   * Lazy.createComparator('a')({ a: 1 }, { a: 2 });       // => -1\n   * Lazy.createComparator('a')({ a: 6 }, { a: 2 });       // => 1\n   * Lazy.createComparator('a')({ a: 1 }, { a: 1 });       // => 0\n   * Lazy.createComparator()(3, 5);                        // => -1\n   * Lazy.createComparator()(7, 5);                        // => 1\n   * Lazy.createComparator()(3, 3);                        // => 0\n   */\n  function createComparator(callback) {\n    if (!callback) { return compare; }\n\n    callback = createCallback(callback);\n\n    return function(x, y) {\n      return compare(callback(x), callback(y));\n    };\n  }\n\n  Lazy.createComparator = createComparator;\n\n  /**\n   * Takes a function and returns a function with the same logic but the\n   * arguments reversed. Only applies to functions w/ arity=2 as this is private\n   * and I can do what I want.\n   *\n   * @private\n   * @param {Function} fn The function to \"reverse\"\n   * @returns {Function} The \"reversed\" function\n   *\n   * @examples\n   * reverseArguments(function(x, y) { return x + y; })('a', 'b'); // => 'ba'\n   */\n  function reverseArguments(fn) {\n    return function(x, y) { return fn(y, x); };\n  }\n\n  /**\n   * Creates a Set containing the specified values.\n   *\n   * @param {...Array} values One or more array(s) of values used to populate the\n   *     set.\n   * @returns {Set} A new set containing the values passed in.\n   */\n  function createSet(values) {\n    var set = new Set();\n    Lazy(values || []).flatten().each(function(e) {\n      set.add(e);\n    });\n    return set;\n  }\n\n  /**\n   * Compares two elements for sorting purposes.\n   *\n   * @private\n   * @param {*} x The left element to compare.\n   * @param {*} y The right element to compare.\n   * @returns {number} 1 if x > y, -1 if x < y, or 0 if x and y are equal.\n   *\n   * @examples\n   * compare(1, 2)     // => -1\n   * compare(1, 1)     // => 0\n   * compare(2, 1)     // => 1\n   * compare('a', 'b') // => -1\n   */\n  function compare(x, y) {\n    if (x === y) {\n      return 0;\n    }\n\n    return x > y ? 1 : -1;\n  }\n\n  /**\n   * Iterates over every element in an array.\n   *\n   * @param {Array} array The array.\n   * @param {Function} fn The function to call on every element, which can return\n   *     false to stop the iteration early.\n   * @returns {boolean} True if every element in the entire sequence was iterated,\n   *     otherwise false.\n   */\n  function forEach(array, fn) {\n    var i = -1,\n        len = array.length;\n\n    while (++i < len) {\n      if (fn(array[i], i) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function getFirst(sequence) {\n    var result;\n    sequence.each(function(e) {\n      result = e;\n      return false;\n    });\n    return result;\n  }\n\n  /**\n   * Checks if an element exists in an array.\n   *\n   * @private\n   * @param {Array} array\n   * @param {*} element\n   * @returns {boolean} Whether or not the element exists in the array.\n   *\n   * @examples\n   * arrayContains([1, 2], 2)              // => true\n   * arrayContains([1, 2], 3)              // => false\n   * arrayContains([undefined], undefined) // => true\n   * arrayContains([NaN], NaN)             // => true\n   */\n  function arrayContains(array, element) {\n    var i = -1,\n        length = array.length;\n\n    // Special handling for NaN\n    if (element !== element) {\n      while (++i < length) {\n        if (array[i] !== array[i]) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    while (++i < length) {\n      if (array[i] === element) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Checks if an element exists in an array before a given index.\n   *\n   * @private\n   * @param {Array} array\n   * @param {*} element\n   * @param {number} index\n   * @param {Function} keyFn\n   * @returns {boolean}\n   *\n   * @examples\n   * arrayContainsBefore([1, 2, 3], 3, 2) // => false\n   * arrayContainsBefore([1, 2, 3], 3, 3) // => true\n   */\n  function arrayContainsBefore(array, element, index, keyFn) {\n    var i = -1;\n\n    if (keyFn) {\n      keyFn = createCallback(keyFn);\n      while (++i < index) {\n        if (keyFn(array[i]) === keyFn(element)) {\n          return true;\n        }\n      }\n\n    } else {\n      while (++i < index) {\n        if (array[i] === element) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Swaps the elements at two specified positions of an array.\n   *\n   * @private\n   * @param {Array} array\n   * @param {number} i\n   * @param {number} j\n   *\n   * @examples\n   * var array = [1, 2, 3, 4, 5];\n   *\n   * swap(array, 2, 3) // array == [1, 2, 4, 3, 5]\n   */\n  function swap(array, i, j) {\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  /**\n   * \"Clones\" a regular expression (but makes it always global).\n   *\n   * @private\n   * @param {RegExp|string} pattern\n   * @returns {RegExp}\n   */\n  function cloneRegex(pattern) {\n    return eval(\"\" + pattern + (!pattern.global ? \"g\" : \"\"));\n  };\n\n  /**\n   * A collection of unique elements.\n   *\n   * @private\n   * @constructor\n   *\n   * @examples\n   * var set  = new Set(),\n   *     obj1 = {},\n   *     obj2 = {},\n   *     fn1 = function fn1() {},\n   *     fn2 = function fn2() {};\n   *\n   * set.add('foo')            // => true\n   * set.add('foo')            // => false\n   * set.add(1)                // => true\n   * set.add(1)                // => false\n   * set.add('1')              // => true\n   * set.add('1')              // => false\n   * set.add(obj1)             // => true\n   * set.add(obj1)             // => false\n   * set.add(obj2)             // => true\n   * set.add(fn1)              // => true\n   * set.add(fn2)              // => true\n   * set.add(fn2)              // => false\n   * set.contains('__proto__') // => false\n   * set.add('__proto__')      // => true\n   * set.add('__proto__')      // => false\n   * set.contains('add')       // => false\n   * set.add('add')            // => true\n   * set.add('add')            // => false\n   * set.contains(undefined)   // => false\n   * set.add(undefined)        // => true\n   * set.contains(undefined)   // => true\n   * set.contains('undefined') // => false\n   * set.add('undefined')      // => true\n   * set.contains('undefined') // => true\n   * set.contains(NaN)         // => false\n   * set.add(NaN)              // => true\n   * set.contains(NaN)         // => true\n   * set.contains('NaN')       // => false\n   * set.add('NaN')            // => true\n   * set.contains('NaN')       // => true\n   * set.contains('@foo')      // => false\n   * set.add('@foo')           // => true\n   * set.contains('@foo')      // => true\n   */\n  function Set() {\n    this.table   = {};\n    this.objects = [];\n  }\n\n  /**\n   * Attempts to add a unique value to the set.\n   *\n   * @param {*} value The value to add.\n   * @returns {boolean} True if the value was added to the set (meaning an equal\n   *     value was not already present), or else false.\n   */\n  Set.prototype.add = function add(value) {\n    var table = this.table,\n        type  = typeof value,\n\n        // only applies for strings\n        firstChar,\n\n        // only applies for objects\n        objects;\n\n    switch (type) {\n      case \"number\":\n      case \"boolean\":\n      case \"undefined\":\n        if (!table[value]) {\n          table[value] = true;\n          return true;\n        }\n        return false;\n\n      case \"string\":\n        // Essentially, escape the first character if it could possibly collide\n        // with a number, boolean, or undefined (or a string that happens to start\n        // with the escape character!), OR if it could override a special property\n        // such as '__proto__' or 'constructor'.\n        switch (value.charAt(0)) {\n          case \"_\": // e.g., __proto__\n          case \"f\": // for 'false'\n          case \"t\": // for 'true'\n          case \"c\": // for 'constructor'\n          case \"u\": // for 'undefined'\n          case \"@\": // escaped\n          case \"0\":\n          case \"1\":\n          case \"2\":\n          case \"3\":\n          case \"4\":\n          case \"5\":\n          case \"6\":\n          case \"7\":\n          case \"8\":\n          case \"9\":\n          case \"N\": // for NaN\n            value = \"@\" + value;\n        }\n        if (!table[value]) {\n          table[value] = true;\n          return true;\n        }\n        return false;\n\n      default:\n        // For objects and functions, we can't really do anything other than store\n        // them in an array and do a linear search for reference equality.\n        objects = this.objects;\n        if (!arrayContains(objects, value)) {\n          objects.push(value);\n          return true;\n        }\n        return false;\n    }\n  };\n\n  /**\n   * Checks whether the set contains a value.\n   *\n   * @param {*} value The value to check for.\n   * @returns {boolean} True if the set contains the value, or else false.\n   */\n  Set.prototype.contains = function contains(value) {\n    var type = typeof value,\n\n        // only applies for strings\n        firstChar;\n\n    switch (type) {\n      case \"number\":\n      case \"boolean\":\n      case \"undefined\":\n        return !!this.table[value];\n\n      case \"string\":\n        // Essentially, escape the first character if it could possibly collide\n        // with a number, boolean, or undefined (or a string that happens to start\n        // with the escape character!), OR if it could override a special property\n        // such as '__proto__' or 'constructor'.\n        switch (value.charAt(0)) {\n          case \"_\": // e.g., __proto__\n          case \"f\": // for 'false'\n          case \"t\": // for 'true'\n          case \"c\": // for 'constructor'\n          case \"u\": // for 'undefined'\n          case \"@\": // escaped\n          case \"0\":\n          case \"1\":\n          case \"2\":\n          case \"3\":\n          case \"4\":\n          case \"5\":\n          case \"6\":\n          case \"7\":\n          case \"8\":\n          case \"9\":\n          case \"N\": // for NaN\n            value = \"@\" + value;\n        }\n        return !!this.table[value];\n\n      default:\n        // For objects and functions, we can't really do anything other than store\n        // them in an array and do a linear search for reference equality.\n        return arrayContains(this.objects, value);\n    }\n  };\n\n  /**\n   * A \"rolling\" queue, with a fixed capacity. As items are added to the head,\n   * excess items are dropped from the tail.\n   *\n   * @private\n   * @constructor\n   *\n   * @examples\n   * var queue = new Queue(3);\n   *\n   * queue.add(1).toArray()        // => [1]\n   * queue.add(2).toArray()        // => [1, 2]\n   * queue.add(3).toArray()        // => [1, 2, 3]\n   * queue.add(4).toArray()        // => [2, 3, 4]\n   * queue.add(5).add(6).toArray() // => [4, 5, 6]\n   * queue.add(7).add(8).toArray() // => [6, 7, 8]\n   *\n   * // also want to check corner cases\n   * new Queue(1).add('foo').add('bar').toArray() // => ['bar']\n   * new Queue(0).add('foo').toArray()            // => []\n   * new Queue(-1)                                // throws\n   *\n   * @benchmarks\n   * function populateQueue(count, capacity) {\n   *   var q = new Queue(capacity);\n   *   for (var i = 0; i < count; ++i) {\n   *     q.add(i);\n   *   }\n   * }\n   *\n   * function populateArray(count, capacity) {\n   *   var arr = [];\n   *   for (var i = 0; i < count; ++i) {\n   *     if (arr.length === capacity) { arr.shift(); }\n   *     arr.push(i);\n   *   }\n   * }\n   *\n   * populateQueue(100, 10); // populating a Queue\n   * populateArray(100, 10); // populating an Array\n   */\n  function Queue(capacity) {\n    this.contents = new Array(capacity);\n    this.start    = 0;\n    this.count    = 0;\n  }\n\n  /**\n   * Adds an item to the queue, and returns the queue.\n   */\n  Queue.prototype.add = function add(element) {\n    var contents = this.contents,\n        capacity = contents.length,\n        start    = this.start;\n\n    if (this.count === capacity) {\n      contents[start] = element;\n      this.start = (start + 1) % capacity;\n\n    } else {\n      contents[this.count++] = element;\n    }\n\n    return this;\n  };\n\n  /**\n   * Returns an array containing snapshot of the queue's contents.\n   */\n  Queue.prototype.toArray = function toArray() {\n    var contents = this.contents,\n        start    = this.start,\n        count    = this.count;\n\n    var snapshot = contents.slice(start, start + count);\n    if (snapshot.length < count) {\n      snapshot = snapshot.concat(contents.slice(0, count - snapshot.length));\n    }\n\n    return snapshot;\n  };\n\n  /**\n   * Shared base method for defining new sequence types.\n   */\n  function defineSequenceType(base, name, overrides) {\n    /** @constructor */\n    var ctor = function ctor() {};\n\n    // Make this type inherit from the specified base.\n    ctor.prototype = new base();\n\n    // Attach overrides to the new sequence type's prototype.\n    for (var override in overrides) {\n      ctor.prototype[override] = overrides[override];\n    }\n\n    // Define a factory method that sets the new sequence's parent to the caller\n    // and (optionally) applies any additional initialization logic.\n    // Expose this as a chainable method so that we can do:\n    // Lazy(...).map(...).filter(...).blah(...);\n    var factory = function factory() {\n      var sequence = new ctor();\n\n      // Every sequence needs a reference to its parent in order to work.\n      sequence.parent = this;\n\n      // If a custom init function was supplied, call it now.\n      if (sequence.init) {\n        sequence.init.apply(sequence, arguments);\n      }\n\n      return sequence;\n    };\n\n    var methodNames = typeof name === 'string' ? [name] : name;\n    for (var i = 0; i < methodNames.length; ++i) {\n      base.prototype[methodNames[i]] = factory;\n    }\n\n    return ctor;\n  }\n\n  return Lazy;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lazy.js/lazy.js\n// module id = 23\n// module chunks = 231608221292675 257298155543294","var map = require(\"./map\");\n\nvar getCountryCode = function(localeString) {\n    var components = localeString.split(\"_\");\n    if (components.length == 2) {\n        return components.pop();\n    }\n    components = localeString.split(\"-\");\n    if (components.length == 2) {\n        return components.pop();\n    }\n    return localeString;\n}\n\nexports.getCurrency = function(locale) {\n    var countryCode = getCountryCode(locale).toUpperCase();\n    if (countryCode in map) {\n        return map[countryCode];\n    }\n    return null;\n}\n\nexports.getLocales = function(currencyCode) {\n    currencyCode = currencyCode.toUpperCase();\n    var locales = [];\n    for (countryCode in map) {\n        if (map[countryCode] === currencyCode) {\n            locales.push(countryCode);\n        }\n    }\n    return locales;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/locale-currency/index.js\n// module id = 253\n// module chunks = 231608221292675 257298155543294","// Generated using ShowCurrencies.java\nvar map = {\nAD: 'EUR',\nAE: 'AED',\nAF: 'AFN',\nAG: 'XCD',\nAI: 'XCD',\nAL: 'ALL',\nAM: 'AMD',\nAN: 'ANG',\nAO: 'AOA',\nAR: 'ARS',\nAS: 'USD',\nAT: 'EUR',\nAU: 'AUD',\nAW: 'AWG',\nAX: 'EUR',\nAZ: 'AZN',\nBA: 'BAM',\nBB: 'BBD',\nBD: 'BDT',\nBE: 'EUR',\nBF: 'XOF',\nBG: 'BGN',\nBH: 'BHD',\nBI: 'BIF',\nBJ: 'XOF',\nBL: 'EUR',\nBM: 'BMD',\nBN: 'BND',\nBO: 'BOB',\nBQ: 'USD',\nBR: 'BRL',\nBS: 'BSD',\nBT: 'BTN',\nBV: 'NOK',\nBW: 'BWP',\nBY: 'BYR',\nBZ: 'BZD',\nCA: 'CAD',\nCC: 'AUD',\nCD: 'CDF',\nCF: 'XAF',\nCG: 'XAF',\nCH: 'CHF',\nCI: 'XOF',\nCK: 'NZD',\nCL: 'CLP',\nCM: 'XAF',\nCN: 'CNY',\nCO: 'COP',\nCR: 'CRC',\nCU: 'CUP',\nCV: 'CVE',\nCW: 'ANG',\nCX: 'AUD',\nCY: 'EUR',\nCZ: 'CZK',\nDE: 'EUR',\nDJ: 'DJF',\nDK: 'DKK',\nDM: 'XCD',\nDO: 'DOP',\nDZ: 'DZD',\nEC: 'USD',\nEE: 'EUR',\nEG: 'EGP',\nEH: 'MAD',\nER: 'ERN',\nES: 'EUR',\nET: 'ETB',\nFI: 'EUR',\nFJ: 'FJD',\nFK: 'FKP',\nFM: 'USD',\nFO: 'DKK',\nFR: 'EUR',\nGA: 'XAF',\nGB: 'GBP',\nGD: 'XCD',\nGE: 'GEL',\nGF: 'EUR',\nGG: 'GBP',\nGH: 'GHS',\nGI: 'GIP',\nGL: 'DKK',\nGM: 'GMD',\nGN: 'GNF',\nGP: 'EUR',\nGQ: 'XAF',\nGR: 'EUR',\nGS: 'GBP',\nGT: 'GTQ',\nGU: 'USD',\nGW: 'XOF',\nGY: 'GYD',\nHK: 'HKD',\nHM: 'AUD',\nHN: 'HNL',\nHR: 'HRK',\nHT: 'HTG',\nHU: 'HUF',\nID: 'IDR',\nIE: 'EUR',\nIL: 'ILS',\nIM: 'GBP',\nIN: 'INR',\nIO: 'USD',\nIQ: 'IQD',\nIR: 'IRR',\nIS: 'ISK',\nIT: 'EUR',\nJE: 'GBP',\nJM: 'JMD',\nJO: 'JOD',\nJP: 'JPY',\nKE: 'KES',\nKG: 'KGS',\nKH: 'KHR',\nKI: 'AUD',\nKM: 'KMF',\nKN: 'XCD',\nKP: 'KPW',\nKR: 'KRW',\nKW: 'KWD',\nKY: 'KYD',\nKZ: 'KZT',\nLA: 'LAK',\nLB: 'LBP',\nLC: 'XCD',\nLI: 'CHF',\nLK: 'LKR',\nLR: 'LRD',\nLS: 'LSL',\nLT: 'LTL',\nLU: 'EUR',\nLV: 'LVL',\nLY: 'LYD',\nMA: 'MAD',\nMC: 'EUR',\nMD: 'MDL',\nME: 'EUR',\nMF: 'EUR',\nMG: 'MGA',\nMH: 'USD',\nMK: 'MKD',\nML: 'XOF',\nMM: 'MMK',\nMN: 'MNT',\nMO: 'MOP',\nMP: 'USD',\nMQ: 'EUR',\nMR: 'MRO',\nMS: 'XCD',\nMT: 'EUR',\nMU: 'MUR',\nMV: 'MVR',\nMW: 'MWK',\nMX: 'MXN',\nMY: 'MYR',\nMZ: 'MZN',\nNA: 'NAD',\nNC: 'XPF',\nNE: 'XOF',\nNF: 'AUD',\nNG: 'NGN',\nNI: 'NIO',\nNL: 'EUR',\nNO: 'NOK',\nNP: 'NPR',\nNR: 'AUD',\nNU: 'NZD',\nNZ: 'NZD',\nOM: 'OMR',\nPA: 'PAB',\nPE: 'PEN',\nPF: 'XPF',\nPG: 'PGK',\nPH: 'PHP',\nPK: 'PKR',\nPL: 'PLN',\nPM: 'EUR',\nPN: 'NZD',\nPR: 'USD',\nPS: 'ILS',\nPT: 'EUR',\nPW: 'USD',\nPY: 'PYG',\nQA: 'QAR',\nRE: 'EUR',\nRO: 'RON',\nRS: 'RSD',\nRU: 'RUB',\nRW: 'RWF',\nSA: 'SAR',\nSB: 'SBD',\nSC: 'SCR',\nSD: 'SDG',\nSE: 'SEK',\nSG: 'SGD',\nSH: 'SHP',\nSI: 'EUR',\nSJ: 'NOK',\nSK: 'EUR',\nSL: 'SLL',\nSM: 'EUR',\nSN: 'XOF',\nSO: 'SOS',\nSR: 'SRD',\nST: 'STD',\nSV: 'SVC',\nSX: 'ANG',\nSY: 'SYP',\nSZ: 'SZL',\nTC: 'USD',\nTD: 'XAF',\nTF: 'EUR',\nTG: 'XOF',\nTH: 'THB',\nTJ: 'TJS',\nTK: 'NZD',\nTL: 'USD',\nTM: 'TMT',\nTN: 'TND',\nTO: 'TOP',\nTR: 'TRY',\nTT: 'TTD',\nTV: 'AUD',\nTW: 'TWD',\nTZ: 'TZS',\nUA: 'UAH',\nUG: 'UGX',\nUM: 'USD',\nUS: 'USD',\nUY: 'UYU',\nUZ: 'UZS',\nVA: 'EUR',\nVC: 'XCD',\nVE: 'VEF',\nVG: 'USD',\nVI: 'USD',\nVN: 'VND',\nVU: 'VUV',\nWF: 'XPF',\nWS: 'WST',\nYE: 'YER',\nYT: 'EUR',\nZA: 'ZAR',\nZM: 'ZMK',\nZW: 'ZWL'\n};\n\nmodule.exports = map;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/locale-currency/map.js\n// module id = 254\n// module chunks = 231608221292675 257298155543294","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_Symbol.js\n// module id = 63\n// module chunks = 10991734084388 231608221292675 257298155543294","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_baseGetTag.js\n// module id = 121\n// module chunks = 10991734084388 231608221292675 257298155543294","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_freeGlobal.js\n// module id = 122\n// module chunks = 10991734084388 231608221292675 257298155543294","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getPrototype.js\n// module id = 123\n// module chunks = 10991734084388 231608221292675 257298155543294","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_getRawTag.js\n// module id = 124\n// module chunks = 10991734084388 231608221292675 257298155543294","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_objectToString.js\n// module id = 125\n// module chunks = 10991734084388 231608221292675 257298155543294","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_overArg.js\n// module id = 126\n// module chunks = 10991734084388 231608221292675 257298155543294","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/_root.js\n// module id = 127\n// module chunks = 10991734084388 231608221292675 257298155543294","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isObjectLike.js\n// module id = 128\n// module chunks = 10991734084388 231608221292675 257298155543294","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/isPlainObject.js\n// module id = 36\n// module chunks = 10991734084388 231608221292675 257298155543294","function n(n){return n=n||Object.create(null),{on:function(c,e){(n[c]||(n[c]=[])).push(e)},off:function(c,e){n[c]&&n[c].splice(n[c].indexOf(e)>>>0,1)},emit:function(c,e){(n[c]||[]).slice().map(function(n){n(e)}),(n[\"*\"]||[]).slice().map(function(n){n(c,e)})}}}module.exports=n;\n//# sourceMappingURL=mitt.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mitt/dist/mitt.js\n// module id = 742\n// module chunks = 231608221292675","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 100\n// module chunks = 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.createProvider = createProvider;\n\nvar _react = require('react');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _PropTypes = require('../utils/PropTypes');\n\nvar _warning = require('../utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar didWarnAboutReceivingStore = false;\nfunction warnAboutReceivingStore() {\n  if (didWarnAboutReceivingStore) {\n    return;\n  }\n  didWarnAboutReceivingStore = true;\n\n  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');\n}\n\nfunction createProvider() {\n  var _Provider$childContex;\n\n  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';\n  var subKey = arguments[1];\n\n  var subscriptionKey = subKey || storeKey + 'Subscription';\n\n  var Provider = function (_Component) {\n    _inherits(Provider, _Component);\n\n    Provider.prototype.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;\n    };\n\n    function Provider(props, context) {\n      _classCallCheck(this, Provider);\n\n      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n      _this[storeKey] = props.store;\n      return _this;\n    }\n\n    Provider.prototype.render = function render() {\n      return _react.Children.only(this.props.children);\n    };\n\n    return Provider;\n  }(_react.Component);\n\n  if (process.env.NODE_ENV !== 'production') {\n    Provider.prototype.componentWillReceiveProps = function (nextProps) {\n      if (this[storeKey] !== nextProps.store) {\n        warnAboutReceivingStore();\n      }\n    };\n  }\n\n  Provider.propTypes = {\n    store: _PropTypes.storeShape.isRequired,\n    children: _propTypes2.default.element.isRequired\n  };\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);\n\n  return Provider;\n}\n\nexports.default = createProvider();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/components/Provider.js\n// module id = 135\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = connectAdvanced;\n\nvar _hoistNonReactStatics = require('hoist-non-react-statics');\n\nvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _react = require('react');\n\nvar _Subscription = require('../utils/Subscription');\n\nvar _Subscription2 = _interopRequireDefault(_Subscription);\n\nvar _PropTypes = require('../utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar hotReloadingVersion = 0;\nvar dummyState = {};\nfunction noop() {}\nfunction makeSelectorStateful(sourceSelector, store) {\n  // wrap the selector in an object that tracks its results between runs.\n  var selector = {\n    run: function runComponentSelector(props) {\n      try {\n        var nextProps = sourceSelector(store.getState(), props);\n        if (nextProps !== selector.props || selector.error) {\n          selector.shouldComponentUpdate = true;\n          selector.props = nextProps;\n          selector.error = null;\n        }\n      } catch (error) {\n        selector.shouldComponentUpdate = true;\n        selector.error = error;\n      }\n    }\n  };\n\n  return selector;\n}\n\nfunction connectAdvanced(\n/*\n  selectorFactory is a func that is responsible for returning the selector function used to\n  compute new props from state, props, and dispatch. For example:\n     export default connectAdvanced((dispatch, options) => (state, props) => ({\n      thing: state.things[props.thingId],\n      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\n    }))(YourComponent)\n   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\n  outside of their selector as an optimization. Options passed to connectAdvanced are passed to\n  the selectorFactory, along with displayName and WrappedComponent, as the second argument.\n   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\n  props. Do not use connectAdvanced directly without memoizing results between calls to your\n  selector, otherwise the Connect component will re-render on every state or props change.\n*/\nselectorFactory) {\n  var _contextTypes, _childContextTypes;\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$getDisplayName = _ref.getDisplayName,\n      getDisplayName = _ref$getDisplayName === undefined ? function (name) {\n    return 'ConnectAdvanced(' + name + ')';\n  } : _ref$getDisplayName,\n      _ref$methodName = _ref.methodName,\n      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,\n      _ref$renderCountProp = _ref.renderCountProp,\n      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,\n      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,\n      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,\n      _ref$storeKey = _ref.storeKey,\n      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,\n      _ref$withRef = _ref.withRef,\n      withRef = _ref$withRef === undefined ? false : _ref$withRef,\n      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);\n\n  var subscriptionKey = storeKey + 'Subscription';\n  var version = hotReloadingVersion++;\n\n  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);\n  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);\n\n  return function wrapWithConnect(WrappedComponent) {\n    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + (methodName + '. Instead received ' + JSON.stringify(WrappedComponent)));\n\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\n    var displayName = getDisplayName(wrappedComponentName);\n\n    var selectorFactoryOptions = _extends({}, connectOptions, {\n      getDisplayName: getDisplayName,\n      methodName: methodName,\n      renderCountProp: renderCountProp,\n      shouldHandleStateChanges: shouldHandleStateChanges,\n      storeKey: storeKey,\n      withRef: withRef,\n      displayName: displayName,\n      wrappedComponentName: wrappedComponentName,\n      WrappedComponent: WrappedComponent\n    });\n\n    var Connect = function (_Component) {\n      _inherits(Connect, _Component);\n\n      function Connect(props, context) {\n        _classCallCheck(this, Connect);\n\n        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n        _this.version = version;\n        _this.state = {};\n        _this.renderCount = 0;\n        _this.store = props[storeKey] || context[storeKey];\n        _this.propsMode = Boolean(props[storeKey]);\n        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n\n        (0, _invariant2.default)(_this.store, 'Could not find \"' + storeKey + '\" in either the context or props of ' + ('\"' + displayName + '\". Either wrap the root component in a <Provider>, ') + ('or explicitly pass \"' + storeKey + '\" as a prop to \"' + displayName + '\".'));\n\n        _this.initSelector();\n        _this.initSubscription();\n        return _this;\n      }\n\n      Connect.prototype.getChildContext = function getChildContext() {\n        var _ref2;\n\n        // If this component received store from props, its subscription should be transparent\n        // to any descendants receiving store+subscription from context; it passes along\n        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows\n        // Connect to control ordering of notifications to flow top-down.\n        var subscription = this.propsMode ? null : this.subscription;\n        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;\n      };\n\n      Connect.prototype.componentDidMount = function componentDidMount() {\n        if (!shouldHandleStateChanges) return;\n\n        // componentWillMount fires during server side rendering, but componentDidMount and\n        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.\n        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.\n        // To handle the case where a child component may have triggered a state change by\n        // dispatching an action in its componentWillMount, we have to re-run the select and maybe\n        // re-render.\n        this.subscription.trySubscribe();\n        this.selector.run(this.props);\n        if (this.selector.shouldComponentUpdate) this.forceUpdate();\n      };\n\n      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        this.selector.run(nextProps);\n      };\n\n      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {\n        return this.selector.shouldComponentUpdate;\n      };\n\n      Connect.prototype.componentWillUnmount = function componentWillUnmount() {\n        if (this.subscription) this.subscription.tryUnsubscribe();\n        this.subscription = null;\n        this.notifyNestedSubs = noop;\n        this.store = null;\n        this.selector.run = noop;\n        this.selector.shouldComponentUpdate = false;\n      };\n\n      Connect.prototype.getWrappedInstance = function getWrappedInstance() {\n        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));\n        return this.wrappedInstance;\n      };\n\n      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {\n        this.wrappedInstance = ref;\n      };\n\n      Connect.prototype.initSelector = function initSelector() {\n        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);\n        this.selector = makeSelectorStateful(sourceSelector, this.store);\n        this.selector.run(this.props);\n      };\n\n      Connect.prototype.initSubscription = function initSubscription() {\n        if (!shouldHandleStateChanges) return;\n\n        // parentSub's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];\n        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));\n\n        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in\n        // the middle of the notification loop, where `this.subscription` will then be null. An\n        // extra null check every change can be avoided by copying the method onto `this` and then\n        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's\n        // listeners logic is changed to not call listeners that have been unsubscribed in the\n        // middle of the notification loop.\n        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);\n      };\n\n      Connect.prototype.onStateChange = function onStateChange() {\n        this.selector.run(this.props);\n\n        if (!this.selector.shouldComponentUpdate) {\n          this.notifyNestedSubs();\n        } else {\n          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;\n          this.setState(dummyState);\n        }\n      };\n\n      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {\n        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it\n        // needs to notify nested subs. Once called, it unimplements itself until further state\n        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does\n        // a boolean check every time avoids an extra method call most of the time, resulting\n        // in some perf boost.\n        this.componentDidUpdate = undefined;\n        this.notifyNestedSubs();\n      };\n\n      Connect.prototype.isSubscribed = function isSubscribed() {\n        return Boolean(this.subscription) && this.subscription.isSubscribed();\n      };\n\n      Connect.prototype.addExtraProps = function addExtraProps(props) {\n        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;\n        // make a shallow copy so that fields added don't leak to the original selector.\n        // this is especially important for 'ref' since that's a reference back to the component\n        // instance. a singleton memoized selector would then be holding a reference to the\n        // instance, preventing the instance from being garbage collected, and that would be bad\n        var withExtras = _extends({}, props);\n        if (withRef) withExtras.ref = this.setWrappedInstance;\n        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;\n        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;\n        return withExtras;\n      };\n\n      Connect.prototype.render = function render() {\n        var selector = this.selector;\n        selector.shouldComponentUpdate = false;\n\n        if (selector.error) {\n          throw selector.error;\n        } else {\n          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));\n        }\n      };\n\n      return Connect;\n    }(_react.Component);\n\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = displayName;\n    Connect.childContextTypes = childContextTypes;\n    Connect.contextTypes = contextTypes;\n    Connect.propTypes = contextTypes;\n\n    if (process.env.NODE_ENV !== 'production') {\n      Connect.prototype.componentWillUpdate = function componentWillUpdate() {\n        var _this2 = this;\n\n        // We are hot reloading!\n        if (this.version !== version) {\n          this.version = version;\n          this.initSelector();\n\n          // If any connected descendants don't hot reload (and resubscribe in the process), their\n          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all\n          // listeners, this does mean that the old versions of connected descendants will still be\n          // notified of state changes; however, their onStateChange function is a no-op so this\n          // isn't a huge deal.\n          var oldListeners = [];\n\n          if (this.subscription) {\n            oldListeners = this.subscription.listeners.get();\n            this.subscription.tryUnsubscribe();\n          }\n          this.initSubscription();\n          if (shouldHandleStateChanges) {\n            this.subscription.trySubscribe();\n            oldListeners.forEach(function (listener) {\n              return _this2.subscription.listeners.subscribe(listener);\n            });\n          }\n        }\n      };\n    }\n\n    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/components/connectAdvanced.js\n// module id = 65\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.createConnect = createConnect;\n\nvar _connectAdvanced = require('../components/connectAdvanced');\n\nvar _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);\n\nvar _shallowEqual = require('../utils/shallowEqual');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nvar _mapDispatchToProps = require('./mapDispatchToProps');\n\nvar _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);\n\nvar _mapStateToProps = require('./mapStateToProps');\n\nvar _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);\n\nvar _mergeProps = require('./mergeProps');\n\nvar _mergeProps2 = _interopRequireDefault(_mergeProps);\n\nvar _selectorFactory = require('./selectorFactory');\n\nvar _selectorFactory2 = _interopRequireDefault(_selectorFactory);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n/*\n  connect is a facade over connectAdvanced. It turns its args into a compatible\n  selectorFactory, which has the signature:\n\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\n  \n  connect passes its args to connectAdvanced as options, which will in turn pass them to\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\n\n  selectorFactory returns a final props selector from its mapStateToProps,\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\n  mergePropsFactories, and pure args.\n\n  The resulting final props selector is called by the Connect component instance whenever\n  it receives new props or store state.\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n\n// createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\nfunction createConnect() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {\n    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n        _ref2$pure = _ref2.pure,\n        pure = _ref2$pure === undefined ? true : _ref2$pure,\n        _ref2$areStatesEqual = _ref2.areStatesEqual,\n        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,\n        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,\n        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,\n        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,\n        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,\n        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,\n        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,\n        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');\n    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');\n\n    return connectHOC(selectorFactory, _extends({\n      // used in error messages\n      methodName: 'connect',\n\n      // used to compute Connect's displayName from the wrapped component's displayName.\n      getDisplayName: function getDisplayName(name) {\n        return 'Connect(' + name + ')';\n      },\n\n      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n\n    }, extraOptions));\n  };\n}\n\nexports.default = createConnect();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/connect/connect.js\n// module id = 136\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;\nexports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;\nexports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;\n\nvar _redux = require('redux');\n\nvar _wrapMapToProps = require('./wrapMapToProps');\n\nfunction whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;\n}\n\nfunction whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {\n    return { dispatch: dispatch };\n  }) : undefined;\n}\n\nfunction whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {\n    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);\n  }) : undefined;\n}\n\nexports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/connect/mapDispatchToProps.js\n// module id = 137\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;\nexports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;\n\nvar _wrapMapToProps = require('./wrapMapToProps');\n\nfunction whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;\n}\n\nfunction whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {\n    return {};\n  }) : undefined;\n}\n\nexports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/connect/mapStateToProps.js\n// module id = 138\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.defaultMergeProps = defaultMergeProps;\nexports.wrapMergePropsFunc = wrapMergePropsFunc;\nexports.whenMergePropsIsFunction = whenMergePropsIsFunction;\nexports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;\n\nvar _verifyPlainObject = require('../utils/verifyPlainObject');\n\nvar _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\n\nfunction wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n\n    var hasRunOnce = false;\n    var mergedProps = void 0;\n\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n\n        if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\n\nfunction whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\n\nfunction whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\n\nexports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/connect/mergeProps.js\n// module id = 139\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;\nexports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;\nexports.default = finalPropsSelectorFactory;\n\nvar _verifySubselectors = require('./verifySubselectors');\n\nvar _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n  };\n}\n\nfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n  var areStatesEqual = _ref.areStatesEqual,\n      areOwnPropsEqual = _ref.areOwnPropsEqual,\n      areStatePropsEqual = _ref.areStatePropsEqual;\n\n  var hasRunAtLeastOnce = false;\n  var state = void 0;\n  var ownProps = void 0;\n  var stateProps = void 0;\n  var dispatchProps = void 0;\n  var mergedProps = void 0;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    var nextStateProps = mapStateToProps(state, ownProps);\n    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    var stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n}\n\n// TODO: Add more comments\n\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\nfunction finalPropsSelectorFactory(dispatch, _ref2) {\n  var initMapStateToProps = _ref2.initMapStateToProps,\n      initMapDispatchToProps = _ref2.initMapDispatchToProps,\n      initMergeProps = _ref2.initMergeProps,\n      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);\n\n  var mapStateToProps = initMapStateToProps(dispatch, options);\n  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  var mergeProps = initMergeProps(dispatch, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);\n  }\n\n  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n\n  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/connect/selectorFactory.js\n// module id = 140\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.default = verifySubselectors;\n\nvar _warning = require('../utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction verify(selector, methodName, displayName) {\n  if (!selector) {\n    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');\n  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {\n    if (!selector.hasOwnProperty('dependsOnOwnProps')) {\n      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');\n    }\n  }\n}\n\nfunction verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {\n  verify(mapStateToProps, 'mapStateToProps', displayName);\n  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);\n  verify(mergeProps, 'mergeProps', displayName);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/connect/verifySubselectors.js\n// module id = 141\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.wrapMapToPropsConstant = wrapMapToPropsConstant;\nexports.getDependsOnOwnProps = getDependsOnOwnProps;\nexports.wrapMapToPropsFunc = wrapMapToPropsFunc;\n\nvar _verifyPlainObject = require('../utils/verifyPlainObject');\n\nvar _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction wrapMapToPropsConstant(getConstant) {\n  return function initConstantSelector(dispatch, options) {\n    var constant = getConstant(dispatch, options);\n\n    function constantSelector() {\n      return constant;\n    }\n    constantSelector.dependsOnOwnProps = false;\n    return constantSelector;\n  };\n}\n\n// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n// \n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\nfunction getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n}\n\n// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n// \n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//    \n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//    \n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//    \nfunction wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, _ref) {\n    var displayName = _ref.displayName;\n\n    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);\n    };\n\n    // allow detectFactoryAndVerify to get ownProps\n    proxy.dependsOnOwnProps = true;\n\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps;\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n      var props = proxy(stateOrDispatch, ownProps);\n\n      if (typeof props === 'function') {\n        proxy.mapToProps = props;\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n        props = proxy(stateOrDispatch, ownProps);\n      }\n\n      if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(props, displayName, methodName);\n\n      return props;\n    };\n\n    return proxy;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/connect/wrapMapToProps.js\n// module id = 66\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;\n\nvar _Provider = require('./components/Provider');\n\nvar _Provider2 = _interopRequireDefault(_Provider);\n\nvar _connectAdvanced = require('./components/connectAdvanced');\n\nvar _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);\n\nvar _connect = require('./connect/connect');\n\nvar _connect2 = _interopRequireDefault(_connect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Provider = _Provider2.default;\nexports.createProvider = _Provider.createProvider;\nexports.connectAdvanced = _connectAdvanced2.default;\nexports.connect = _connect2.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/index.js\n// module id = 33\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.storeShape = exports.subscriptionShape = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({\n  trySubscribe: _propTypes2.default.func.isRequired,\n  tryUnsubscribe: _propTypes2.default.func.isRequired,\n  notifyNestedSubs: _propTypes2.default.func.isRequired,\n  isSubscribed: _propTypes2.default.func.isRequired\n});\n\nvar storeShape = exports.storeShape = _propTypes2.default.shape({\n  subscribe: _propTypes2.default.func.isRequired,\n  dispatch: _propTypes2.default.func.isRequired,\n  getState: _propTypes2.default.func.isRequired\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/utils/PropTypes.js\n// module id = 67\n// module chunks = 10991734084388 231608221292675 257298155543294","\"use strict\";\n\nexports.__esModule = true;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nvar CLEARED = null;\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  // the current/next pattern is copied from redux's createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  var current = [];\n  var next = [];\n\n  return {\n    clear: function clear() {\n      next = CLEARED;\n      current = CLEARED;\n    },\n    notify: function notify() {\n      var listeners = current = next;\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i]();\n      }\n    },\n    get: function get() {\n      return next;\n    },\n    subscribe: function subscribe(listener) {\n      var isSubscribed = true;\n      if (next === current) next = current.slice();\n      next.push(listener);\n\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return;\n        isSubscribed = false;\n\n        if (next === current) next = current.slice();\n        next.splice(next.indexOf(listener), 1);\n      };\n    }\n  };\n}\n\nvar Subscription = function () {\n  function Subscription(store, parentSub, onStateChange) {\n    _classCallCheck(this, Subscription);\n\n    this.store = store;\n    this.parentSub = parentSub;\n    this.onStateChange = onStateChange;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n  }\n\n  Subscription.prototype.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  Subscription.prototype.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  Subscription.prototype.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);\n\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\nexports.default = Subscription;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/utils/Subscription.js\n// module id = 142\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.default = shallowEqual;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) return false;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/utils/shallowEqual.js\n// module id = 143\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.default = verifyPlainObject;\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = require('./warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction verifyPlainObject(value, displayName, methodName) {\n  if (!(0, _isPlainObject2.default)(value)) {\n    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/utils/verifyPlainObject.js\n// module id = 68\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.default = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-redux/lib/utils/warning.js\n// module id = 38\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports['default'] = applyMiddleware;\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/applyMiddleware.js\n// module id = 147\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports['default'] = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/bindActionCreators.js\n// module id = 148\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports['default'] = combineReducers;\n\nvar _createStore = require('./createStore');\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2['default'])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        (0, _warning2['default'])('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        (0, _warning2['default'])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/combineReducers.js\n// module id = 149\n// module chunks = 10991734084388 231608221292675 257298155543294","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/compose.js\n// module id = 69\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports['default'] = createStore;\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2['default'])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2['default']] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2['default']] = observable, _ref2;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/createStore.js\n// module id = 70\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\nvar _createStore = require('./createStore');\n\nvar _createStore2 = _interopRequireDefault(_createStore);\n\nvar _combineReducers = require('./combineReducers');\n\nvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\nvar _bindActionCreators = require('./bindActionCreators');\n\nvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\nvar _applyMiddleware = require('./applyMiddleware');\n\nvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = _createStore2['default'];\nexports.combineReducers = _combineReducers2['default'];\nexports.bindActionCreators = _bindActionCreators2['default'];\nexports.applyMiddleware = _applyMiddleware2['default'];\nexports.compose = _compose2['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/index.js\n// module id = 82\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nexports.__esModule = true;\nexports['default'] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/redux/lib/utils/warning.js\n// module id = 71\n// module chunks = 10991734084388 231608221292675 257298155543294","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 274\n// module chunks = 231608221292675 257298155543294","\"use strict\";\n\nexports.__esModule = true;\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(a, b) {\n  for (var i in a) {\n    if (!(i in b)) return true;\n  }for (var _i in b) {\n    if (a[_i] !== b[_i]) return true;\n  }return false;\n}\n\nexports.default = function (instance, nextProps, nextState) {\n  return shallowDiffers(instance.props, nextProps) || shallowDiffers(instance.state, nextState);\n};\n\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shallow-compare/lib/index.js\n// module id = 843\n// module chunks = 231608221292675","\n;(function (name, root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n    module.exports['default'] = factory()\n  }\n  /* istanbul ignore next */\n  else if (typeof define === 'function' && define.amd) {\n    define(factory)\n  }\n  else {\n    root[name] = factory()\n  }\n}('slugify', this, function () {\n  /* eslint-disable */\n  var charMap = JSON.parse('{\"$\":\"dollar\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₹\":\"indian rupee\",\"₽\":\"russian ruble\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\"}')\n  /* eslint-enable */\n\n  function replace (string, options) {\n    if (typeof string !== 'string') {\n      throw new Error('slugify: string argument expected')\n    }\n\n    options = (typeof options === 'string')\n      ? {replacement: options}\n      : options || {}\n\n    var slug = string.split('')\n      .reduce(function (result, ch) {\n        return result + (charMap[ch] || ch)\n          // allowed\n          .replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]/g, '')\n      }, '')\n      // trim leading/trailing spaces\n      .replace(/^\\s+|\\s+$/g, '')\n      // convert spaces\n      .replace(/[-\\s]+/g, options.replacement || '-')\n      // remove trailing separator\n      .replace('#{replacement}$', '')\n\n    return options.lower ? slug.toLowerCase() : slug\n  }\n\n  replace.extend = function (customMap) {\n    for (var key in customMap) {\n      charMap[key] = customMap[key]\n    }\n  }\n\n  return replace\n}))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/slugify/index.js\n// module id = 107\n// module chunks = 231608221292675 257298155543294","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill.js');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/index.js\n// module id = 151\n// module chunks = 10991734084388 231608221292675 257298155543294","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/symbol-observable/lib/ponyfill.js\n// module id = 152\n// module chunks = 10991734084388 231608221292675 257298155543294","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 153\n// module chunks = 231608221292675 257298155543294","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 155\n// module chunks = 10991734084388 231608221292675 257298155543294","module.exports = {\"All\":\"All commodities\",\"Crude Oil\":\"Crude oil\",\"CO2\":\"Carbon dioxide\",\"Geothermal\":\"Geothermal\",\"Hardrock\":\"Hardrock minerals\",\"Natural Gas\":\"Natural gas\",\"NGL\":\"Natural gas liquids\",\"Wood and wood-derived fuels\":\"Wood-derived fuel\",\"Conventional Hydroelectric\":\"Hydroelectric\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/data/commodity_names.yml\n// module id = 248\n// module chunks = 231608221292675 257298155543294","module.exports = {\"States\":{\"name\":\"State and local governments\",\"description\":\"Funds disbursed to states fall under the jurisdiction of each state, and each state determines how the funds will be used.\"},\"U.S. Treasury\":{\"name\":\"U.S. Treasury\",\"description\":\"The federal government’s basic operating fund pays for roughly two-thirds of all federal expenditures, including the military, national parks, and schools.\"},\"Reclamation\":{\"name\":\"Reclamation Fund\",\"description\":\"Supports the establishment of critical infrastructure projects like dams and power plants.\"},\"Land & Water Conservation\":{\"name\":\"Land and Water Conservation Fund\",\"description\":\"Provides matching grants to states and local governments to buy and develop public outdoor recreation areas across the 50 states.\",\"link\":{\"name\":\"How this fund works\",\"to\":\"/how-it-works/land-and-water-conservation-fund/\"}},\"Historic Preservation\":{\"name\":\"Historic Preservation Fund\",\"description\":\"Helps preserve U.S. historical and archaeological sites and cultural heritage through grants to state and tribal historic preservation offices.\",\"link\":{\"name\":\"How this fund works\",\"to\":\"/how-it-works/historic-preservation-fund/\"}},\"American Indian Tribes\":{\"name\":\"Native American tribes and individuals\",\"description\":\"ONRR disburses 100% of revenue collected from resource extraction on Native American lands back to tribes, nations, and individuals.\"},\"Other\":{\"name\":\"Other funds\",\"description\":\"Some funds are directed back to federal agencies that administer these lands to help cover operational costs. The Ultra-Deepwater Research Program and the Mescal Settlement Agreement also receive $50 million each.\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/data/fund_names.yml\n// module id = 249\n// module chunks = 231608221292675 257298155543294","import slugify from 'slugify';\r\nimport currencyFormatter from 'currency-formatter';\r\n\r\n// Import Display Name Yaml Files\r\nimport commodityNames from '../data/commodity_names.yml';\r\n\r\nconst utils = {\r\n\tgetDisplayName: (key) => {\r\n\t\treturn commodityNames[key] || key;\r\n\t},\r\n\r\n\tformatToSlug: (name) => {\r\n\t\treturn slugify(name, {lower:true, remove: /[$*_+~.()'\"!\\:@,]/g}).replace('-and-','-');\r\n\t},\r\n\r\n\tformatToDollarInt: (value) => {\r\n\t\treturn currencyFormatter.format(value, { symbol:'$', precision: 0, format: {pos: '%s%v',neg: '(%s%v)', zero: '%s%v'}});\r\n\t},\r\n\r\n\tformatToCommaInt: (value) => {\r\n\t\treturn currencyFormatter.format(value, { symbol:'', precision: 0, format: {pos: '%s%v',neg: '(%s%v)', zero: '%s%v'}});\r\n\t},\r\n\tthrottle: (callback, limit) => {\r\n\t    var wait = true;                  \t// Initially, we're not waiting\r\n\t    return function () {               \t// We return a throttled function\r\n\t        if (wait) {                   \t// If we're not waiting  \t\t\t\t\t\r\n\t            wait = false;               // Prevent future invocations\r\n\t            setTimeout(function () {   \t// After a period of time\r\n\t                callback.call();        // Execute users function\r\n\t                wait = true;\t\t\t// And allow future invocations\r\n\t            }, limit);\r\n\t        }\r\n\t    }\r\n\t},\r\n\tgroupBy(data, group) {\r\n\t\tlet groups = {};\r\n\r\n\t\tdata.map((item, index) => {\r\n\t\t\tlet itemGroup = this.resolveByStringPath(group, item);\r\n\t\t\tlet list = groups[itemGroup];\r\n\r\n\t\t\tif(list) {\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgroups[itemGroup] = [item];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groups;\r\n\t},\r\n\tresolveByStringPath(path, obj) {\r\n\t    return path.split('.').reduce(function(prev, curr) {\r\n\t        return prev ? prev[curr] : undefined\r\n\t    }, obj || self)\r\n\t},\r\n\trange(start, end) {\r\n\t\treturn Array(end - start + 1).fill().map((_, idx) => start + idx)\r\n\t}\r\n}\r\n\r\nexport default utils;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils.js","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\gatsby\\\\\\\\dist\\\\\\\\utils\\\\\\\\babel-plugin-extract-graphql.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-add-module-exports\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-transform-object-assign\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"presets\\\":[[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-env\\\\\\\\lib\\\\\\\\index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-stage-0\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-react\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"cacheDirectory\\\":true}!./404.js\") })\n        }\n      }, \"component---src-pages-404-js\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=component---src-pages-404-js!./src/pages/404.js\n// module id = 712\n// module chunks = 231608221292675","require(\n      \"!../../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../../node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\gatsby\\\\\\\\dist\\\\\\\\utils\\\\\\\\babel-plugin-extract-graphql.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-add-module-exports\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-transform-object-assign\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"presets\\\":[[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-env\\\\\\\\lib\\\\\\\\index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-stage-0\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-react\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"cacheDirectory\\\":true}!./index.js\") })\n        }\n      }, \"component---src-pages-about-index-js\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=component---src-pages-about-index-js!./src/pages/About/index.js\n// module id = 713\n// module chunks = 231608221292675","require(\n      \"!../../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../../node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\gatsby\\\\\\\\dist\\\\\\\\utils\\\\\\\\babel-plugin-extract-graphql.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-add-module-exports\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-transform-object-assign\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"presets\\\":[[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-env\\\\\\\\lib\\\\\\\\index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-stage-0\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-react\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"cacheDirectory\\\":true}!./index.js\") })\n        }\n      }, \"component---src-pages-explore-index-js\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=component---src-pages-explore-index-js!./src/pages/Explore/index.js\n// module id = 714\n// module chunks = 231608221292675","/* global window:true */\r\n/* eslint no-underscore-dangle: 0 */\r\n\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers/index';\r\n\r\nexport default () => {  \r\n  const devtools =\r\n    process.env.NODE_ENV === 'development' && window.devToolsExtension\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f;\r\n\r\n  return createStore(rootReducer, devtools);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/create-store.js","'use strict';\r\n\r\nimport FUND_INFO from '../../data/fund_names.yml';\r\nimport utils from '../../js/utils';\r\nimport lazy from 'lazy.js';\r\n\r\n// Initial state is used for the pattern library and seeding any additional data\r\nconst initialState = {\r\n    year: 2018,\r\n    years: [2018],    \r\n    disbursements: {\r\n        2017: {\r\n            year: \"2018\",\r\n            total: 10000,\r\n            highestFundValue: 10000,\r\n            disbursements: [{\r\n                States: {\r\n                    description: \"Fund Description\",\r\n                    name: \"Fund Display Name\",\r\n                    sortOrderIndex: 0,\r\n                    total: 10000,\r\n                    disbursements: [{Onshore: 5000, GOMESA: 3000, Offshore: 2000}]\r\n                }\r\n            }]\r\n        }\r\n    },\r\n    fundInfo: FUND_INFO\r\n};\r\n\r\n// Define Action Types\r\nconst SELECT_YEAR = 'SELECT_YEAR';\r\nconst HYDRATE_DISBURSEMENTS = 'HYDRATE_DISBURSEMENTS';\r\n\r\n// Define Action Creators \r\nexport const selectYear = (year) => ({ type: SELECT_YEAR, payload: year});\r\nexport const hydateDisbursements = (disbursements) => ({ type: HYDRATE_DISBURSEMENTS, payload: disbursements});\r\n\r\n// Define Reducers\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SELECT_YEAR:\r\n            return ({...state, 'year': payload});\r\n        case HYDRATE_DISBURSEMENTS:\r\n            let newState = hydrateDisbursements(payload, state.year, state.fundInfo);\r\n            return ({...state, ...newState});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst hydrateDisbursements = (data, year, fundInfo) => {\r\n    let newState = {};\r\n    let sortedByYear = lazy(data).sortBy(\"Year\", true).toArray();\r\n    newState.years = lazy(utils.range(parseInt(sortedByYear[sortedByYear.length-1].Year), parseInt(sortedByYear[0].Year))).sort(null,true).toArray();\r\n    newState.year = Math.max(...newState.years);\r\n    \r\n    let fundSortOrder = {};\r\n    newState.disbursements = {};\r\n    sortedByYear.map((disbursementsForYear, index) => {\r\n        newState.disbursements[disbursementsForYear.Year] = hydrateDisbursementsForYear(disbursementsForYear, fundInfo, fundSortOrder);\r\n\r\n        // Set Sort order for funds by the highest year value\r\n        // The display order should not change from year to year and is set by the last year of data\r\n        // Using zero index since we already have the data sorted descending by year\r\n        if(index === 0) {\r\n            // Sort descending by total\r\n            newState.disbursements[disbursementsForYear.Year].disbursements.sort(function(a, b) {\r\n                return (b[Object.keys(b)[0]].total - a[Object.keys(a)[0]].total);\r\n            }); \r\n\r\n            newState.disbursements[disbursementsForYear.Year].disbursements.map((fund, index) => {\r\n                fund[Object.keys(fund)[0]].sortOrderIndex = index\r\n                fundSortOrder[Object.keys(fund)[0]] = index;\r\n            });\r\n        }\r\n        else {\r\n            // Sort ascending by sortOrderIndex\r\n            newState.disbursements[disbursementsForYear.Year].disbursements.sort(function(a, b) {\r\n                return (a[Object.keys(a)[0]].sortOrderIndex - b[Object.keys(b)[0]].sortOrderIndex);\r\n            });         \r\n        }\r\n\r\n    });\r\n\r\n    return newState;\r\n}\r\n\r\nconst hydrateDisbursementsForYear = (disbursementsForYear, fundInfo, fundSortOrder) => {\r\n    let newState = {\r\n        year: disbursementsForYear.Year,\r\n        total: 0,\r\n        highestFundValue: 0,\r\n        disbursements: []\r\n    };\r\n\r\n    if(disbursementsForYear) {\r\n        let disbursementsByFund = utils.groupBy(disbursementsForYear.disbursements, \"disbursement.Fund\");\r\n        \r\n        // Go through all the funds if a fund has no data it will be zero, with no disbursements\r\n        for(let fundKey in fundInfo) {\r\n            let fundToAdd = {};\r\n            fundToAdd[fundKey] = {\r\n                total: 0,\r\n                disbursements: [],\r\n                name: (fundInfo[fundKey])? fundInfo[fundKey].name : fundKey,\r\n                description: (fundInfo[fundKey])? fundInfo[fundKey].description : \"\",\r\n                link: (fundInfo[fundKey])? fundInfo[fundKey].link : undefined,\r\n                sortOrderIndex: fundSortOrder[fundKey]\r\n            }\r\n\r\n            let sourceData;\r\n\r\n            if(disbursementsByFund[fundKey]) {\r\n                sourceData = {};\r\n                disbursementsByFund[fundKey].map((fundData, index) => {\r\n                    sourceData[fundData.disbursement.Source] = Math.round(fundData.disbursement.Disbursement);\r\n                    \r\n                    fundToAdd[fundKey].total += fundData.disbursement.Disbursement;\r\n                    newState.total += fundData.disbursement.Disbursement;\r\n                });\r\n            }\r\n            if(sourceData){\r\n                fundToAdd[fundKey].disbursements.push(sourceData);\r\n            }\r\n            else{\r\n                fundToAdd[fundKey].disbursements = undefined;\r\n            }\r\n            \r\n\r\n            if(newState.highestFundValue < fundToAdd[fundKey].total) {\r\n                newState.highestFundValue = fundToAdd[fundKey].total;\r\n            }\r\n\r\n            newState.disbursements.push(fundToAdd);\r\n        }\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/reducers/disbursements.js","const initialState = {\r\n  glossaryTerm: \"\",\r\n  glossaryOpen: false\r\n};\r\n\r\n\r\n// Define Action Types\r\nconst GLOSSARY_TERM_SELECTED = 'GLOSSARY_TERM_SELECTED';\r\nconst YEAR_SELECTED = 'YEAR_SELECTED';\r\n\r\n// Define Action Creators \r\nexport const glossaryTermSelected = (term, doOpen=true) => ({ type: GLOSSARY_TERM_SELECTED, payload: term,  openGlossary: doOpen});\r\n\r\n// Define Reducers\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GLOSSARY_TERM_SELECTED:\r\n      return ({...state, glossaryTerm: payload, glossaryOpen: action.openGlossary});\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/store/reducers/glossary.js","\"use strict\";\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nimport glossary from './glossary';\r\nimport disbursements from './disbursements';\r\n\r\nexport default combineReducers({ glossary, disbursements });\r\n\r\nexport const createReducer = (initialState, handlers) => {\r\n\treturn function reducer(state = initialState, action) {\r\n\t\tif (handlers.hasOwnProperty(action.type)) {\r\n\t\t\treturn handlers[action.type](state, action);\r\n\t\t} else {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/reducers/index.js"],"sourceRoot":""}