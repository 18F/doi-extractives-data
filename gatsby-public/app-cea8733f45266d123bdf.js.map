{"version":3,"sources":["webpack:///app-cea8733f45266d123bdf.js","webpack:///./.cache/api-runner-browser.js","webpack:///./.cache/async-requires.js","webpack:///./.cache/component-renderer.js","webpack:///./.cache/emitter.js","webpack:///./.cache/find-page.js","webpack:///./.cache/history.js","webpack:///./.cache/json/404-html.json?780a","webpack:///./.cache/json/404.json?2d21","webpack:///./.cache/json/about.json?e030","webpack:///./.cache/json/explore.json?b242","webpack:///./.cache/json/index.json?9cdc","webpack:///./.cache/json/layout-index.json?fda3","webpack:///./.cache/layouts/index.js?666a","webpack:///./.cache/loader.js","webpack:///./.cache/pages.json","webpack:///./.cache/prefetcher.js","webpack:///./.cache/production-app.js","webpack:///./.cache/redirects.json","webpack:///./.cache/register-service-worker.js","webpack:///./.cache/strip-prefix.js","webpack:///./gatsby-browser.js","webpack:///./~/accounting/accounting.js?502a","webpack:///./~/currency-formatter/currencies.json?3630","webpack:///./~/currency-formatter/index.js?e0ec","webpack:///./~/currency-formatter/localeFormats.json?6f14","webpack:///./~/domready/ready.js","webpack:///./~/gatsby-module-loader/patch.js","webpack:///./~/gatsby-remark-autolink-headers/gatsby-browser.js","webpack:///./~/lazy.js/lazy.js","webpack:///./~/locale-currency/index.js?9b76","webpack:///./~/locale-currency/map.js?af21","webpack:///./~/mitt/dist/mitt.js","webpack:///./~/process/browser.js?82e4","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/shallow-compare/lib/index.js","webpack:///./~/slugify/index.js?ae82","webpack:///./~/timers-browserify/main.js","webpack:///./src/data/commodity_names.yml?a27a","webpack:///./src/data/fund_names.yml","webpack:///./src/js/constants.js?8ce8","webpack:///./src/js/utils.js?985d","webpack:///./src/pages/404.js?7ff6","webpack:///./src/pages/about/index.js?119b","webpack:///./src/pages/explore/index.js?6ac5","webpack:///./src/pages/index.js?76e9","webpack:///./src/state/create-store.js","webpack:///./src/state/reducers/disbursements.js","webpack:///./src/state/reducers/federal-disbursements.js?a338","webpack:///./src/state/reducers/glossary.js?cf18","webpack:///./src/state/reducers/index.js","webpack:///./src/state/reducers/production-volumes.js?3519","webpack:///./src/state/reducers/revenues.js?171d","webpack:///./wrap-with-provider.js"],"names":["webpackJsonp","194","module","exports","__webpack_require__","apiRunner","api","args","defaultReturn","results","plugins","map","plugin","result","options","filter","length","apiRunnerAsync","reduce","previous","next","then","Promise","resolve","__esModule","435","components","component---src-pages-404-js","component---src-pages-about-index-js","component---src-pages-explore-index-js","component---src-pages-index-js","json","layout-index.json","404.json","about.json","explore.json","index.json","404-html.json","layouts","layout---index","436","_interopRequireDefault","obj","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_extends","assign","target","i","arguments","source","key","hasOwnProperty","_react","_react2","_propTypes","_propTypes2","_loader","_loader2","_emitter","_emitter2","_apiRunnerBrowser","_shallowCompare","_shallowCompare2","DefaultLayout","_ref","children","createElement","ComponentRenderer","_React$Component","props","this","_this","location","loader","getPage","pathname","state","pageResources","getResourcesForPathname","componentWillReceiveProps","nextProps","_this2","setState","componentDidMount","_this3","emitter","on","e","page","path","shouldComponentUpdate","nextState","component","matchPath","render","pluginResponses","publicLoader","replacementComponent","layout","React","Component","propTypes","PropTypes","bool","object","149","_mitt","_mitt2","437","_reactRouterDom","_stripPrefix","_stripPrefix2","pageCache","pages","pathPrefix","undefined","rawPathname","decodeURIComponent","trimmedPathname","split","slice","join","foundPage","some","exact","438","_createBrowserHistory","_createBrowserHistory2","replacementHistory","history","800","cb","_","error","console","log","799","801","802","803","798","793","302","process","_findPage","_findPage2","findPage","syncRequires","asyncRequires","pathScriptsCache","resourceStrCache","resourceCache","pathArray","pathCount","resourcesArray","resourcesCount","preferDefault","m","prefetcher","inInitialRender","fetchHistory","failedPaths","failedResources","MAX_HISTORY","getNextQueuedResources","createResourceDownload","resourceName","fetchResource","r","onResourcedFinished","onPreLoadPageResources","onPostLoadPageResources","sortResourcesByCount","a","b","sortPagesByCount","nextTick","resourceFunction","err","executeChunk","push","resource","succeeded","getResourceModule","appearsOnLine","isOnLine","navigator","onLine","succeededFetch","find","entry","handleResourceLoadError","message","window","replace","mountOrder","queue","empty","addPagesArray","newPages","addDevRequires","devRequires","addProdRequires","prodRequires","dequeue","pop","enqueue","rawPath","p","mountOrderBoost","has","unshift","sort","jsonName","indexOf","componentChunkName","onNewResourcesAdded","getResources","getPages","serviceWorker","controller","getRegistrations","registrations","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","done","registration","unregister","reload","emit","layoutComponentChunkName","c","j","l","peek","817","440","pagesLoading","resourcesDownloading","startResourceDownloading","nextResource","reducer","action","type","payload","setTimeout","event","getState","0","_reactDom","_reactDom2","_gatsbyReactRouterScroll","_domready","_domready2","_history","_history2","_history3","_pages","_pages2","_redirects","_redirects2","_componentRenderer","_componentRenderer2","_asyncRequires","_asyncRequires2","___history","___emitter","___loader","redirectMap","redirects","redirect","fromPath","maybeRedirect","toPath","attachToHistory","initialAttachDone","listen","shouldUpdateScroll","prevRouterProps","oldPathname","navigate","to","eventHandler","off","clearTimeout","timeoutId","historyNavigateFunc","createLocation","wl","search","hash","___push","___replace","___navigateTo","AltRouter","DefaultRouter","_ref2","Router","ComponentRendererWithRouter","withRouter","Root","ScrollContext","layoutProps","Route","routeProps","NewRoot","renderer","ReactDOM","document","getElementById","818","441","register","reg","addEventListener","installingWorker","installing","catch","303","str","prefix","substr","442","global","replaceRouterComponent","_wrapWithProvider","_wrapWithProvider2","usStateIds","wrapWithProvider","onClientEntry","statePathId","substring","includes","endsWith","toLowerCase","120","root","isString","charCodeAt","nativeIsArray","toString","isObject","defaults","defs","context","nativeMap","checkPrecision","val","base","Math","round","abs","isNaN","checkCurrencyFormat","format","lib","settings","currency","match","pos","neg","zero","version","symbol","decimal","thousand","precision","grouping","number","unformat","parse","regex","RegExp","unformatted","parseFloat","toFixed","power","pow","formatNumber","opts","usePrecision","negative","parseInt","mod","formatMoney","formats","useFormat","formatColumn","list","padAfterSymbol","maxLength","formatted","fVal","accounting","134","AED","code","thousandsSeparator","decimalSeparator","symbolOnLeft","spaceBetweenAmountAndSymbol","decimalDigits","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTC","BTN","BWP","BYR","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MTL","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDD","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEB","VEF","VND","VUV","WST","XAF","XCD","XBT","XOF","XPF","YER","ZAR","ZMW","WON","127","locale","localeCurrency","getCurrency","localeMatch","exec","language","region","localeFormat","defaultLocaleFormat","localeFormats","defaultCurrency","findCurrency","formatMapping","f","isUndefined","currencyCode","currencies","keys","135","de","el","en-IE","es","it","nl","759","name","definition","listener","fns","doc","hack","documentElement","doScroll","domContentLoaded","loaded","test","readyState","removeEventListener","shift","fn","38","patch","onError","callback","script","head","lastChild","tagName","warn","onload","onerror","failures","querySelector","ensure","chunks","s","chunkId","immediate","handler","808","scrollToHash","offsetY","decodeURI","element","offset","offsetTop","scrollTo","pluginOptions","onRouteUpdate","23","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","setImmediate","clearImmediate","factory","Lazy","ArrayWrapper","StringWrapper","Sequence","extensions","ObjectWrapper","Iterator","sequence","index","MemoizedSequence","parent","memo","complete","MappedSequence","mapFn","MappingIterator","getIterator","FilteredSequence","filterFn","FilteringIterator","ReversedSequence","ReversedIterator","ConcatenatedSequence","arrays","TakeSequence","count","TakeIterator","TakeWhileSequence","predicate","InitialSequence","DropSequence","DropWhileSequence","SortedSequence","sortFn","GroupedSequence","keyFn","valFn","IndexedSequence","CountedSequence","UniqueSequence","ZippedSequence","ShuffledSequence","FlattenedSequence","shallow","each","eachShallow","eachRecursive","WithoutSequence","values","IntersectionSequence","Memoizer","currentIndex","currentValue","UniqueMemoizer","set","Set","ConsecutiveSequence","ChunkedSequence","size","chunkSize","ChunkedIterator","TappedSequence","SimpleIntersectionSequence","array","getEachForIntersection","eachArrayCache","eachMemoizerCache","SimpleZippedSequence","ArrayLikeSequence","IndexedIterator","IndexedMappedSequence","IndexedFilteredSequence","IndexedReversedSequence","IndexedTakeSequence","IndexedDropSequence","IndexedConcatenatedSequence","other","IndexedUniqueSequence","getEachForParent","MappedArrayWrapper","FilteredArrayWrapper","UniqueArrayWrapper","getEachForSource","eachNoCache","eachSetCache","ConcatArrayWrapper","ObjectLikeSequence","KeySequence","ValuesSequence","FilteredObjectLikeSequence","AssignSequence","DefaultsSequence","defaultValues","InvertedSequence","MergedSequence","others","mergeFn","mergeObjects","merged","prop","isVanillaObject","PickSequence","properties","OmitSequence","StringLikeSequence","CharIterator","StringSegment","start","stop","max","MappedStringLikeSequence","ReversedStringLikeSequence","StringMatchSequence","pattern","StringMatchIterator","cloneRegex","SplitStringSequence","SplitWithRegExpIterator","SplitWithStringIterator","delimiter","GeneratedSequence","generatorFn","get","fixedLength","GeneratedIterator","AsyncSequence","interval","Error","onNextCallback","getOnNextCallback","cancelCallback","getCancelCallback","AsyncHandle","cancelFn","resolveListeners","rejectListeners","PENDING","promise","x","_reject","reason","thenableState","_resolve","RESOLVED","REJECTED","consumeListeners","listeners","transform","WatchedPropertySequence","propertyNames","toArray","propertyName","propertyValue","defineProperty","property","splice","StreamLikeSequence","SplitStreamSequence","getEachForDelimiter","MatchedStreamSequence","curry","arity","curried","concat","arraySlice","apply","curryRight","curriedRight","createCallback","defaultValue","all","identity","createComparator","y","compare","reverseArguments","createSet","flatten","add","forEach","len","getFirst","arrayContains","arrayContainsBefore","swap","temp","eval","table","objects","Queue","capacity","contents","defineSequenceType","overrides","ctor","override","init","methodNames","VERSION","noop","equality","strict","StrictLazy","define","methodName","getIndex","isAsync","previousSource","current","cachedIndex","moveNext","arr","equals","equalityFn","oit","eq","memoize","toObject","pair","collect","pluck","invoke","select","reverse","reject","rejectFn","ofType","where","var_args","first","take","handle","takeWhile","finished","initial","last","findWhere","rest","skip","tail","drop","dropped","dropWhile","skipWhile","descending","sortBy","groupBy","indexBy","countBy","uniq","unique","cache","zip","iteratedLeft","group","keepGoing","shuffle","shuffled","floor","random","recurseVisitor","compact","without","difference","contains","union","intersection","sets","setIterator","includedInAll","every","success","any","none","isEmpty","foundIndex","lastIndexOf","reversed","sortedIndex","indexed","lower","upper","aggregator","eachResult","inject","foldl","reduceRight","foldr","consecutive","segments","chunk","currentChunk","tap","detect","min","valueFn","minBy","prev","maxBy","sum","sumBy","String","async","begin","end","parentLength","getParentIterator","iterateTo","Infinity","k","sourceLength","otherLength","pairs","v","extend","parentValue","invert","merge","arrayPop","iteratedFullSource","remaining","functions","methods","pick","inArray","omit","grouped","counted","watch","charAt","char","NaN","startIndex","suffix","startsWith","toUpperCase","mapString","nextStart","leftIndex","rightIndex","cancellationId","iterate","onFulfilled","onRejected","cancel","onComplete","found","regexEach","stringEach","buffer","pieceIndex","delimiterIndex","piece","lines","createWrapper","initializer","data","generate","range","step","ceil","repeat","clone","deprecate","snapshot","137","getCountryCode","localeString","countryCode","getLocales","locales","138","AD","AE","AF","AG","AI","AL","AM","AN","AO","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","913","n","70","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","timeout","run","Item","title","browser","env","argv","versions","addListener","once","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","300","Function","task","tasksByHandle","nextHandle","registerImmediate","runIfPresent","currentlyRunningATask","installNextTickImplementation","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","installPostMessageImplementation","messagePrefix","onGlobalMessage","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","onreadystatechange","removeChild","appendChild","installSetTimeoutImplementation","attachTo","getPrototypeOf","1031","shallowDiffers","72","string","replacement","slug","ch","charMap","remove","JSON","customMap","147","Timeout","id","clearFn","_id","_clearFn","scope","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","136","All","Crude Oil","CO2","Geothermal","Hardrock","Natural Gas","NGL","Wood and wood-derived fuels","Conventional Hydroelectric","263","States","description","U.S. Treasury","Reclamation","Land & Water Conservation","link","Historic Preservation","American Indian Tribes","Other","53","freeze","REVENUES_KEY","PRODUCTION_VOLUMES_KEY","DISBURSEMENTS_KEY","DISBURSEMENTS_ALL_KEY","REVENUES_ALL_KEY","PRODUCTION_VOLUMES_OIL_KEY","PRODUCTION_VOLUMES_GAS_KEY","PRODUCTION_VOLUMES_COAL_KEY","FEDERAL_OFFSHORE","FEDERAL_ONSHORE","NATIVE_AMERICAN","OFFSHORE","ONSHORE","FEDERAL","CALENDAR_YEAR","FISCAL_YEAR","13","_slugify","_slugify2","_currencyFormatter","_currencyFormatter2","_commodity_names","_commodity_names2","utils","getDisplayName_CommodityName","commodityNames","formatToSlug","formatToDollarInt","currencyFormatter","formatToCommaInt","throttle","limit","wait","groups","itemGroup","resolveByStringPath","curr","fill","idx","794","795","796","797","498","_redux","_reducers","_reducers2","devtools","createStore","rootReducer","151","hydateDisbursements","selectYear","_fund_names","_fund_names2","_utils","_utils2","_lazy","_lazy2","initialState","year","years","disbursements","2017","total","highestFundValue","sortOrderIndex","Onshore","GOMESA","Offshore","fundInfo","FUND_INFO","SELECT_YEAR","HYDRATE_DISBURSEMENTS","newState","hydrateDisbursements","sortedByYear","Year","fundSortOrder","disbursementsForYear","hydrateDisbursementsForYear","fund","disbursementsByFund","_loop","fundKey","fundToAdd","sourceData","fundData","disbursement","Source","Disbursement","152","byYear","hydrate","_FiscalYear","_CalendarYear","_SourceData","_initialState","_constants","_constants2","FiscalYear","CONSTANTS","CalendarYear","SourceData","HYDRATE","BY_YEAR","_extends2","groupByYear","displayNames","groupNames","entries","displayName","DisplayYear","subGroupName","yearData","sums","Data","Units","LongUnits","DisplayNames","GroupNames","62","glossaryTerm","glossaryOpen","GLOSSARY_TERM_SELECTED","glossaryTermSelected","term","doOpen","openGlossary","499","createReducer","_glossary","_glossary2","_disbursements","_disbursements2","_productionVolumes","_productionVolumes2","_revenues","_revenues2","_federalDisbursements","_federalDisbursements2","combineReducers","glossary","productionVolumes","revenues","federalDisbursements","handlers","153","byMonth","BY_MONTH","_extends3","getFiscalCalendarYear","groupByMonth","fiscalYear","calendarYear","fiscalYearItem","ProductionMonth","calendarYearItem","ProductionYear","currentYear","Date","getFullYear","Volume","ProductName","stringify","period","resultsGroupedByDate","_ref3","resultsLimited","monthData","ProductionDate","fiscalYearStart","fiscalYearEnd","_ref4","aDate","bDate","DisplayMonth","subGroup","_ref5","month","154","RevenueMonth","RevenueYear","Revenue","RevenueDate","500","_reactRedux","_createStore","_createStore2","store","ConnectedRouterWrapper","Provider"],"mappings":"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","file":"app-cea8733f45266d123bdf.js","sourcesContent":["webpackJsonp([231608221292675],{\n\n/***/ 194:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.apiRunner = apiRunner;\n\texports.apiRunnerAsync = apiRunnerAsync;\n\tvar plugins = [{\n\t  plugin: __webpack_require__(808),\n\t  options: { \"plugins\": [] }\n\t}, {\n\t  plugin: __webpack_require__(442),\n\t  options: { \"plugins\": [] }\n\t}];\n\t// During bootstrap, we write requires at top of this file which looks\n\t// basically like:\n\t// var plugins = [\n\t//   {\n\t//     plugin: require(\"/path/to/plugin1/gatsby-browser.js\"),\n\t//     options: { ... },\n\t//   },\n\t//   {\n\t//     plugin: require(\"/path/to/plugin2/gatsby-browser.js\"),\n\t//     options: { ... },\n\t//   },\n\t// ]\n\t\n\tfunction apiRunner(api, args, defaultReturn) {\n\t  var results = plugins.map(function (plugin) {\n\t    if (plugin.plugin[api]) {\n\t      var result = plugin.plugin[api](args, plugin.options);\n\t      return result;\n\t    }\n\t  });\n\t\n\t  // Filter out undefined results.\n\t  results = results.filter(function (result) {\n\t    return typeof result !== 'undefined';\n\t  });\n\t\n\t  if (results.length > 0) {\n\t    return results;\n\t  } else if (defaultReturn) {\n\t    return [defaultReturn];\n\t  } else {\n\t    return [];\n\t  }\n\t}\n\t\n\tfunction apiRunnerAsync(api, args, defaultReturn) {\n\t  return plugins.reduce(function (previous, next) {\n\t    return next.plugin[api] ? previous.then(function () {\n\t      return next.plugin[api](args, next.options);\n\t    }) : previous;\n\t  }, Promise.resolve());\n\t}\n\n/***/ }),\n\n/***/ 435:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t// prefer default export if available\n\tvar preferDefault = function preferDefault(m) {\n\t  return m && m.default || m;\n\t};\n\t\n\texports.components = {\n\t  \"component---src-pages-404-js\": __webpack_require__(794),\n\t  \"component---src-pages-about-index-js\": __webpack_require__(795),\n\t  \"component---src-pages-explore-index-js\": __webpack_require__(796),\n\t  \"component---src-pages-index-js\": __webpack_require__(797)\n\t};\n\t\n\texports.json = {\n\t  \"layout-index.json\": __webpack_require__(798),\n\t  \"404.json\": __webpack_require__(799),\n\t  \"about.json\": __webpack_require__(801),\n\t  \"explore.json\": __webpack_require__(802),\n\t  \"index.json\": __webpack_require__(803),\n\t  \"404-html.json\": __webpack_require__(800)\n\t};\n\t\n\texports.layouts = {\n\t  \"layout---index\": __webpack_require__(793)\n\t};\n\n/***/ }),\n\n/***/ 436:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(3);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _loader = __webpack_require__(302);\n\t\n\tvar _loader2 = _interopRequireDefault(_loader);\n\t\n\tvar _emitter = __webpack_require__(149);\n\t\n\tvar _emitter2 = _interopRequireDefault(_emitter);\n\t\n\tvar _apiRunnerBrowser = __webpack_require__(194);\n\t\n\tvar _shallowCompare = __webpack_require__(1031);\n\t\n\tvar _shallowCompare2 = _interopRequireDefault(_shallowCompare);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar DefaultLayout = function DefaultLayout(_ref) {\n\t  var children = _ref.children;\n\t  return _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    children()\n\t  );\n\t};\n\t\n\t// Pass pathname in as prop.\n\t// component will try fetching resources. If they exist,\n\t// will just render, else will render null.\n\t\n\tvar ComponentRenderer = function (_React$Component) {\n\t  _inherits(ComponentRenderer, _React$Component);\n\t\n\t  function ComponentRenderer(props) {\n\t    _classCallCheck(this, ComponentRenderer);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this));\n\t\n\t    var location = props.location;\n\t\n\t    // Set the pathname for 404 pages.\n\t    if (!_loader2.default.getPage(location.pathname)) {\n\t      location = _extends({}, location, {\n\t        pathname: \"/404.html\"\n\t      });\n\t    }\n\t\n\t    _this.state = {\n\t      location: location,\n\t      pageResources: _loader2.default.getResourcesForPathname(location.pathname)\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  ComponentRenderer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n\t    var _this2 = this;\n\t\n\t    // During development, always pass a component's JSON through so graphql\n\t    // updates go through.\n\t    if (false) {\n\t      if (nextProps && nextProps.pageResources && nextProps.pageResources.json) {\n\t        this.setState({ pageResources: nextProps.pageResources });\n\t      }\n\t    }\n\t    if (this.state.location.pathname !== nextProps.location.pathname) {\n\t      var pageResources = _loader2.default.getResourcesForPathname(nextProps.location.pathname);\n\t      if (!pageResources) {\n\t        var location = nextProps.location;\n\t\n\t        // Set the pathname for 404 pages.\n\t        if (!_loader2.default.getPage(location.pathname)) {\n\t          location = _extends({}, location, {\n\t            pathname: \"/404.html\"\n\t          });\n\t        }\n\t\n\t        // Page resources won't be set in cases where the browser back button\n\t        // or forward button is pushed as we can't wait as normal for resources\n\t        // to load before changing the page.\n\t        _loader2.default.getResourcesForPathname(location.pathname, function (pageResources) {\n\t          _this2.setState({\n\t            location: location,\n\t            pageResources: pageResources\n\t          });\n\t        });\n\t      } else {\n\t        this.setState({\n\t          location: nextProps.location,\n\t          pageResources: pageResources\n\t        });\n\t      }\n\t    }\n\t  };\n\t\n\t  ComponentRenderer.prototype.componentDidMount = function componentDidMount() {\n\t    var _this3 = this;\n\t\n\t    // Listen to events so when our page gets updated, we can transition.\n\t    // This is only useful on delayed transitions as the page will get rendered\n\t    // without the necessary page resources and then re-render once those come in.\n\t    _emitter2.default.on(\"onPostLoadPageResources\", function (e) {\n\t      if (_loader2.default.getPage(_this3.state.location.pathname) && e.page.path === _loader2.default.getPage(_this3.state.location.pathname).path) {\n\t        _this3.setState({ pageResources: e.pageResources });\n\t      }\n\t    });\n\t  };\n\t\n\t  ComponentRenderer.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n\t    // 404\n\t    if (!nextState.pageResources) {\n\t      return true;\n\t    }\n\t    // Check if the component or json have changed.\n\t    if (!this.state.pageResources && nextState.pageResources) {\n\t      return true;\n\t    }\n\t    if (this.state.pageResources.component !== nextState.pageResources.component) {\n\t      return true;\n\t    }\n\t\n\t    if (this.state.pageResources.json !== nextState.pageResources.json) {\n\t      return true;\n\t    }\n\t\n\t    // Check if location has changed on a page using internal routing\n\t    // via matchPath configuration.\n\t    if (this.state.location.key !== nextState.location.key && nextState.pageResources.page && (nextState.pageResources.page.matchPath || nextState.pageResources.page.path)) {\n\t      return true;\n\t    }\n\t\n\t    return (0, _shallowCompare2.default)(this, nextProps, nextState);\n\t  };\n\t\n\t  ComponentRenderer.prototype.render = function render() {\n\t    var pluginResponses = (0, _apiRunnerBrowser.apiRunner)(\"replaceComponentRenderer\", {\n\t      props: _extends({}, this.props, { pageResources: this.state.pageResources }),\n\t      loader: _loader.publicLoader\n\t    });\n\t    var replacementComponent = pluginResponses[0];\n\t    // If page.\n\t    if (this.props.page) {\n\t      if (this.state.pageResources) {\n\t        return replacementComponent || (0, _react.createElement)(this.state.pageResources.component, _extends({\n\t          key: this.props.location.pathname\n\t        }, this.props, this.state.pageResources.json));\n\t      } else {\n\t        return null;\n\t      }\n\t      // If layout.\n\t    } else if (this.props.layout) {\n\t      return replacementComponent || (0, _react.createElement)(this.state.pageResources && this.state.pageResources.layout ? this.state.pageResources.layout : DefaultLayout, _extends({\n\t        key: this.state.pageResources && this.state.pageResources.layout ? this.state.pageResources.layout : \"DefaultLayout\"\n\t      }, this.props));\n\t    } else {\n\t      return null;\n\t    }\n\t  };\n\t\n\t  return ComponentRenderer;\n\t}(_react2.default.Component);\n\t\n\tComponentRenderer.propTypes = {\n\t  page: _propTypes2.default.bool,\n\t  layout: _propTypes2.default.bool,\n\t  location: _propTypes2.default.object\n\t};\n\t\n\texports.default = ComponentRenderer;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 149:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _mitt = __webpack_require__(913);\n\t\n\tvar _mitt2 = _interopRequireDefault(_mitt);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar emitter = (0, _mitt2.default)();\n\tmodule.exports = emitter;\n\n/***/ }),\n\n/***/ 437:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _reactRouterDom = __webpack_require__(144);\n\t\n\tvar _stripPrefix = __webpack_require__(303);\n\t\n\tvar _stripPrefix2 = _interopRequireDefault(_stripPrefix);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// TODO add tests especially for handling prefixed links.\n\tvar pageCache = {};\n\t\n\tmodule.exports = function (pages) {\n\t  var pathPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\t  return function (rawPathname) {\n\t    var pathname = decodeURIComponent(rawPathname);\n\t\n\t    // Remove the pathPrefix from the pathname.\n\t    var trimmedPathname = (0, _stripPrefix2.default)(pathname, pathPrefix);\n\t\n\t    // Remove any hashfragment\n\t    if (trimmedPathname.split(\"#\").length > 1) {\n\t      trimmedPathname = trimmedPathname.split(\"#\").slice(0, -1).join(\"\");\n\t    }\n\t\n\t    // Remove search query\n\t    if (trimmedPathname.split(\"?\").length > 1) {\n\t      trimmedPathname = trimmedPathname.split(\"?\").slice(0, -1).join(\"\");\n\t    }\n\t\n\t    if (pageCache[trimmedPathname]) {\n\t      return pageCache[trimmedPathname];\n\t    }\n\t\n\t    var foundPage = void 0;\n\t    // Array.prototype.find is not supported in IE so we use this somewhat odd\n\t    // work around.\n\t    pages.some(function (page) {\n\t      if (page.matchPath) {\n\t        // Try both the path and matchPath\n\t        if ((0, _reactRouterDom.matchPath)(trimmedPathname, { path: page.path }) || (0, _reactRouterDom.matchPath)(trimmedPathname, {\n\t          path: page.matchPath\n\t        })) {\n\t          foundPage = page;\n\t          pageCache[trimmedPathname] = page;\n\t          return true;\n\t        }\n\t      } else {\n\t        if ((0, _reactRouterDom.matchPath)(trimmedPathname, {\n\t          path: page.path,\n\t          exact: true\n\t        })) {\n\t          foundPage = page;\n\t          pageCache[trimmedPathname] = page;\n\t          return true;\n\t        }\n\t\n\t        // Finally, try and match request with default document.\n\t        if ((0, _reactRouterDom.matchPath)(trimmedPathname, {\n\t          path: page.path + \"index.html\"\n\t        })) {\n\t          foundPage = page;\n\t          pageCache[trimmedPathname] = page;\n\t          return true;\n\t        }\n\t      }\n\t\n\t      return false;\n\t    });\n\t\n\t    return foundPage;\n\t  };\n\t};\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createBrowserHistory = __webpack_require__(361);\n\t\n\tvar _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);\n\t\n\tvar _apiRunnerBrowser = __webpack_require__(194);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar pluginResponses = (0, _apiRunnerBrowser.apiRunner)(\"replaceHistory\");\n\tvar replacementHistory = pluginResponses[0];\n\tvar history = replacementHistory || (0, _createBrowserHistory2.default)();\n\tmodule.exports = history;\n\n/***/ }),\n\n/***/ 800:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(178698757827068, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(812) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 799:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(254022195166212, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(813) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 801:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(273950069227526, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(814) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 802:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(23951649087997, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(815) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 803:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(142629428675168, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(816) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 798:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(60335399758886, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(262) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 793:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(114276838955818, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(439) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 302:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.publicLoader = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _findPage = __webpack_require__(437);\n\t\n\tvar _findPage2 = _interopRequireDefault(_findPage);\n\t\n\tvar _emitter = __webpack_require__(149);\n\t\n\tvar _emitter2 = _interopRequireDefault(_emitter);\n\t\n\tvar _stripPrefix = __webpack_require__(303);\n\t\n\tvar _stripPrefix2 = _interopRequireDefault(_stripPrefix);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar findPage = void 0;\n\t\n\tvar syncRequires = {};\n\tvar asyncRequires = {};\n\tvar pathScriptsCache = {};\n\tvar resourceStrCache = {};\n\tvar resourceCache = {};\n\tvar pages = [];\n\t// Note we're not actively using the path data atm. There\n\t// could be future optimizations however around trying to ensure\n\t// we load all resources for likely-to-be-visited paths.\n\tvar pathArray = [];\n\tvar pathCount = {};\n\tvar pathPrefix = \"\";\n\tvar resourcesArray = [];\n\tvar resourcesCount = {};\n\tvar preferDefault = function preferDefault(m) {\n\t  return m && m.default || m;\n\t};\n\tvar prefetcher = void 0;\n\tvar inInitialRender = true;\n\tvar fetchHistory = [];\n\tvar failedPaths = {};\n\tvar failedResources = {};\n\tvar MAX_HISTORY = 5;\n\t\n\t// Prefetcher logic\n\tif (true) {\n\t  prefetcher = __webpack_require__(440)({\n\t    getNextQueuedResources: function getNextQueuedResources() {\n\t      return resourcesArray.slice(-1)[0];\n\t    },\n\t    createResourceDownload: function createResourceDownload(resourceName) {\n\t      fetchResource(resourceName, function () {\n\t        resourcesArray = resourcesArray.filter(function (r) {\n\t          return r !== resourceName;\n\t        });\n\t        prefetcher.onResourcedFinished(resourceName);\n\t      });\n\t    }\n\t  });\n\t  _emitter2.default.on(\"onPreLoadPageResources\", function (e) {\n\t    prefetcher.onPreLoadPageResources(e);\n\t  });\n\t  _emitter2.default.on(\"onPostLoadPageResources\", function (e) {\n\t    prefetcher.onPostLoadPageResources(e);\n\t  });\n\t}\n\t\n\tvar sortResourcesByCount = function sortResourcesByCount(a, b) {\n\t  if (resourcesCount[a] > resourcesCount[b]) {\n\t    return 1;\n\t  } else if (resourcesCount[a] < resourcesCount[b]) {\n\t    return -1;\n\t  } else {\n\t    return 0;\n\t  }\n\t};\n\t\n\tvar sortPagesByCount = function sortPagesByCount(a, b) {\n\t  if (pathCount[a] > pathCount[b]) {\n\t    return 1;\n\t  } else if (pathCount[a] < pathCount[b]) {\n\t    return -1;\n\t  } else {\n\t    return 0;\n\t  }\n\t};\n\t\n\tvar fetchResource = function fetchResource(resourceName) {\n\t  var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\t\n\t  if (resourceStrCache[resourceName]) {\n\t    process.nextTick(function () {\n\t      cb(null, resourceStrCache[resourceName]);\n\t    });\n\t  } else {\n\t    // Find resource\n\t    var resourceFunction = void 0;\n\t    if (resourceName.slice(0, 12) === \"component---\") {\n\t      resourceFunction = asyncRequires.components[resourceName];\n\t    } else if (resourceName.slice(0, 9) === \"layout---\") {\n\t      resourceFunction = asyncRequires.layouts[resourceName];\n\t    } else {\n\t      resourceFunction = asyncRequires.json[resourceName];\n\t    }\n\t\n\t    // Download the resource\n\t    resourceFunction(function (err, executeChunk) {\n\t      resourceStrCache[resourceName] = executeChunk;\n\t      fetchHistory.push({\n\t        resource: resourceName,\n\t        succeeded: !err\n\t      });\n\t\n\t      if (!failedResources[resourceName]) {\n\t        failedResources[resourceName] = err;\n\t      }\n\t\n\t      fetchHistory = fetchHistory.slice(-MAX_HISTORY);\n\t      cb(err, executeChunk);\n\t    });\n\t  }\n\t};\n\t\n\tvar getResourceModule = function getResourceModule(resourceName, cb) {\n\t  if (resourceCache[resourceName]) {\n\t    process.nextTick(function () {\n\t      cb(null, resourceCache[resourceName]);\n\t    });\n\t  } else if (failedResources[resourceName]) {\n\t    process.nextTick(function () {\n\t      cb(failedResources[resourceName]);\n\t    });\n\t  } else {\n\t    fetchResource(resourceName, function (err, executeChunk) {\n\t      if (err) {\n\t        cb(err);\n\t      } else {\n\t        var module = preferDefault(executeChunk());\n\t        resourceCache[resourceName] = module;\n\t        cb(err, module);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\tvar appearsOnLine = function appearsOnLine() {\n\t  var isOnLine = navigator.onLine;\n\t  if (typeof isOnLine === \"boolean\") {\n\t    return isOnLine;\n\t  }\n\t\n\t  // If no navigator.onLine support assume onLine if any of last N fetches succeeded\n\t  var succeededFetch = fetchHistory.find(function (entry) {\n\t    return entry.succeeded;\n\t  });\n\t  return !!succeededFetch;\n\t};\n\t\n\tvar handleResourceLoadError = function handleResourceLoadError(path, message) {\n\t  console.log(message);\n\t\n\t  if (!failedPaths[path]) {\n\t    failedPaths[path] = message;\n\t  }\n\t\n\t  if (appearsOnLine() && window.location.pathname.replace(/\\/$/g, \"\") !== path.replace(/\\/$/g, \"\")) {\n\t    window.location.pathname = path;\n\t  }\n\t};\n\t\n\tvar mountOrder = 1;\n\tvar queue = {\n\t  empty: function empty() {\n\t    pathArray = [];\n\t    pathCount = {};\n\t    resourcesCount = {};\n\t    resourcesArray = [];\n\t    pages = [];\n\t    pathPrefix = \"\";\n\t  },\n\t  addPagesArray: function addPagesArray(newPages) {\n\t    pages = newPages;\n\t    if (true) {\n\t      if (true) pathPrefix = (\"/gatsby-public\");\n\t    }\n\t    findPage = (0, _findPage2.default)(newPages, pathPrefix);\n\t  },\n\t  addDevRequires: function addDevRequires(devRequires) {\n\t    syncRequires = devRequires;\n\t  },\n\t  addProdRequires: function addProdRequires(prodRequires) {\n\t    asyncRequires = prodRequires;\n\t  },\n\t  dequeue: function dequeue() {\n\t    return pathArray.pop();\n\t  },\n\t  enqueue: function enqueue(rawPath) {\n\t    // Check page exists.\n\t    var path = (0, _stripPrefix2.default)(rawPath, pathPrefix);\n\t    if (!pages.some(function (p) {\n\t      return p.path === path;\n\t    })) {\n\t      return false;\n\t    }\n\t\n\t    var mountOrderBoost = 1 / mountOrder;\n\t    mountOrder += 1;\n\t    // console.log(\n\t    // `enqueue \"${path}\", mountOrder: \"${mountOrder}, mountOrderBoost: ${mountOrderBoost}`\n\t    // )\n\t\n\t    // Add to path counts.\n\t    if (!pathCount[path]) {\n\t      pathCount[path] = 1;\n\t    } else {\n\t      pathCount[path] += 1;\n\t    }\n\t\n\t    // Add path to queue.\n\t    if (!queue.has(path)) {\n\t      pathArray.unshift(path);\n\t    }\n\t\n\t    // Sort pages by pathCount\n\t    pathArray.sort(sortPagesByCount);\n\t\n\t    // Add resources to queue.\n\t    var page = findPage(path);\n\t    if (page.jsonName) {\n\t      if (!resourcesCount[page.jsonName]) {\n\t        resourcesCount[page.jsonName] = 1 + mountOrderBoost;\n\t      } else {\n\t        resourcesCount[page.jsonName] += 1 + mountOrderBoost;\n\t      }\n\t\n\t      // Before adding, checking that the JSON resource isn't either\n\t      // already queued or been downloading.\n\t      if (resourcesArray.indexOf(page.jsonName) === -1 && !resourceStrCache[page.jsonName]) {\n\t        resourcesArray.unshift(page.jsonName);\n\t      }\n\t    }\n\t    if (page.componentChunkName) {\n\t      if (!resourcesCount[page.componentChunkName]) {\n\t        resourcesCount[page.componentChunkName] = 1 + mountOrderBoost;\n\t      } else {\n\t        resourcesCount[page.componentChunkName] += 1 + mountOrderBoost;\n\t      }\n\t\n\t      // Before adding, checking that the component resource isn't either\n\t      // already queued or been downloading.\n\t      if (resourcesArray.indexOf(page.componentChunkName) === -1 && !resourceStrCache[page.jsonName]) {\n\t        resourcesArray.unshift(page.componentChunkName);\n\t      }\n\t    }\n\t\n\t    // Sort resources by resourcesCount.\n\t    resourcesArray.sort(sortResourcesByCount);\n\t    if (true) {\n\t      prefetcher.onNewResourcesAdded();\n\t    }\n\t\n\t    return true;\n\t  },\n\t  getResources: function getResources() {\n\t    return {\n\t      resourcesArray: resourcesArray,\n\t      resourcesCount: resourcesCount\n\t    };\n\t  },\n\t  getPages: function getPages() {\n\t    return {\n\t      pathArray: pathArray,\n\t      pathCount: pathCount\n\t    };\n\t  },\n\t  getPage: function getPage(pathname) {\n\t    return findPage(pathname);\n\t  },\n\t  has: function has(path) {\n\t    return pathArray.some(function (p) {\n\t      return p === path;\n\t    });\n\t  },\n\t  getResourcesForPathname: function getResourcesForPathname(path) {\n\t    var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\t\n\t    if (inInitialRender && navigator && navigator.serviceWorker && navigator.serviceWorker.controller && navigator.serviceWorker.controller.state === \"activated\") {\n\t      // If we're loading from a service worker (it's already activated on\n\t      // this initial render) and we can't find a page, there's a good chance\n\t      // we're on a new page that this (now old) service worker doesn't know\n\t      // about so we'll unregister it and reload.\n\t      if (!findPage(path)) {\n\t        navigator.serviceWorker.getRegistrations().then(function (registrations) {\n\t          // We would probably need this to\n\t          // prevent unnecessary reloading of the page\n\t          // while unregistering of ServiceWorker is not happening\n\t          if (registrations.length) {\n\t            for (var _iterator = registrations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t              var _ref;\n\t\n\t              if (_isArray) {\n\t                if (_i >= _iterator.length) break;\n\t                _ref = _iterator[_i++];\n\t              } else {\n\t                _i = _iterator.next();\n\t                if (_i.done) break;\n\t                _ref = _i.value;\n\t              }\n\t\n\t              var registration = _ref;\n\t\n\t              registration.unregister();\n\t            }\n\t            window.location.reload();\n\t          }\n\t        });\n\t      }\n\t    }\n\t    inInitialRender = false;\n\t    // In development we know the code is loaded already\n\t    // so we just return with it immediately.\n\t    if (false) {\n\t      var page = findPage(path);\n\t      if (!page) return cb();\n\t      var pageResources = {\n\t        component: syncRequires.components[page.componentChunkName],\n\t        json: syncRequires.json[page.jsonName],\n\t        layout: syncRequires.layouts[page.layout],\n\t        page: page\n\t      };\n\t      cb(pageResources);\n\t      return pageResources;\n\t      // Production code path\n\t    } else {\n\t      if (failedPaths[path]) {\n\t        handleResourceLoadError(path, \"Previously detected load failure for \\\"\" + path + \"\\\"\");\n\t\n\t        return cb();\n\t      }\n\t\n\t      var _page = findPage(path);\n\t\n\t      if (!_page) {\n\t        handleResourceLoadError(path, \"A page wasn't found for \\\"\" + path + \"\\\"\");\n\t\n\t        return cb();\n\t      }\n\t\n\t      // Use the path from the page so the pathScriptsCache uses\n\t      // the normalized path.\n\t      path = _page.path;\n\t\n\t      // Check if it's in the cache already.\n\t      if (pathScriptsCache[path]) {\n\t        process.nextTick(function () {\n\t          cb(pathScriptsCache[path]);\n\t          _emitter2.default.emit(\"onPostLoadPageResources\", {\n\t            page: _page,\n\t            pageResources: pathScriptsCache[path]\n\t          });\n\t        });\n\t        return pathScriptsCache[path];\n\t      }\n\t\n\t      _emitter2.default.emit(\"onPreLoadPageResources\", { path: path });\n\t      // Nope, we need to load resource(s)\n\t      var component = void 0;\n\t      var json = void 0;\n\t      var layout = void 0;\n\t      // Load the component/json/layout and parallel and call this\n\t      // function when they're done loading. When both are loaded,\n\t      // we move on.\n\t      var done = function done() {\n\t        if (component && json && (!_page.layoutComponentChunkName || layout)) {\n\t          pathScriptsCache[path] = { component: component, json: json, layout: layout, page: _page };\n\t          var _pageResources = { component: component, json: json, layout: layout, page: _page };\n\t          cb(_pageResources);\n\t          _emitter2.default.emit(\"onPostLoadPageResources\", {\n\t            page: _page,\n\t            pageResources: _pageResources\n\t          });\n\t        }\n\t      };\n\t      getResourceModule(_page.componentChunkName, function (err, c) {\n\t        if (err) {\n\t          handleResourceLoadError(_page.path, \"Loading the component for \" + _page.path + \" failed\");\n\t        }\n\t        component = c;\n\t        done();\n\t      });\n\t      getResourceModule(_page.jsonName, function (err, j) {\n\t        if (err) {\n\t          handleResourceLoadError(_page.path, \"Loading the JSON for \" + _page.path + \" failed\");\n\t        }\n\t        json = j;\n\t        done();\n\t      });\n\t\n\t      _page.layoutComponentChunkName && getResourceModule(_page.layout, function (err, l) {\n\t        if (err) {\n\t          handleResourceLoadError(_page.path, \"Loading the Layout for \" + _page.path + \" failed\");\n\t        }\n\t        layout = l;\n\t        done();\n\t      });\n\t\n\t      return undefined;\n\t    }\n\t  },\n\t  peek: function peek(path) {\n\t    return pathArray.slice(-1)[0];\n\t  },\n\t  length: function length() {\n\t    return pathArray.length;\n\t  },\n\t  indexOf: function indexOf(path) {\n\t    return pathArray.length - pathArray.indexOf(path) - 1;\n\t  }\n\t};\n\t\n\tvar publicLoader = exports.publicLoader = {\n\t  getResourcesForPathname: queue.getResourcesForPathname\n\t};\n\t\n\texports.default = queue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(70)))\n\n/***/ }),\n\n/***/ 817:\n/***/ (function(module, exports) {\n\n\tmodule.exports = [{\"componentChunkName\":\"component---src-pages-404-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"404.json\",\"path\":\"/404/\"},{\"componentChunkName\":\"component---src-pages-about-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"about.json\",\"path\":\"/about/\"},{\"componentChunkName\":\"component---src-pages-explore-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"explore.json\",\"path\":\"/explore/\"},{\"componentChunkName\":\"component---src-pages-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"index.json\",\"path\":\"/\"},{\"componentChunkName\":\"component---src-pages-404-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"404-html.json\",\"path\":\"/404.html\"}]\n\n/***/ }),\n\n/***/ 440:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function (_ref) {\n\t  var getNextQueuedResources = _ref.getNextQueuedResources,\n\t      createResourceDownload = _ref.createResourceDownload;\n\t\n\t  var pagesLoading = [];\n\t  var resourcesDownloading = [];\n\t\n\t  // Do things\n\t  var startResourceDownloading = function startResourceDownloading() {\n\t    var nextResource = getNextQueuedResources();\n\t    if (nextResource) {\n\t      resourcesDownloading.push(nextResource);\n\t      createResourceDownload(nextResource);\n\t    }\n\t  };\n\t\n\t  var reducer = function reducer(action) {\n\t    switch (action.type) {\n\t      case \"RESOURCE_FINISHED\":\n\t        resourcesDownloading = resourcesDownloading.filter(function (r) {\n\t          return r !== action.payload;\n\t        });\n\t        break;\n\t      case \"ON_PRE_LOAD_PAGE_RESOURCES\":\n\t        pagesLoading.push(action.payload.path);\n\t        break;\n\t      case \"ON_POST_LOAD_PAGE_RESOURCES\":\n\t        pagesLoading = pagesLoading.filter(function (p) {\n\t          return p !== action.payload.page.path;\n\t        });\n\t        break;\n\t      case \"ON_NEW_RESOURCES_ADDED\":\n\t        break;\n\t    }\n\t\n\t    // Take actions.\n\t    // Wait for event loop queue to finish.\n\t    setTimeout(function () {\n\t      if (resourcesDownloading.length === 0 && pagesLoading.length === 0) {\n\t        // Start another resource downloading.\n\t        startResourceDownloading();\n\t      }\n\t    }, 0);\n\t  };\n\t\n\t  return {\n\t    onResourcedFinished: function onResourcedFinished(event) {\n\t      // Tell prefetcher that the resource finished downloading\n\t      // so it can grab the next one.\n\t      reducer({ type: \"RESOURCE_FINISHED\", payload: event });\n\t    },\n\t    onPreLoadPageResources: function onPreLoadPageResources(event) {\n\t      // Tell prefetcher a page load has started so it should stop\n\t      // loading anything new\n\t      reducer({ type: \"ON_PRE_LOAD_PAGE_RESOURCES\", payload: event });\n\t    },\n\t    onPostLoadPageResources: function onPostLoadPageResources(event) {\n\t      // Tell prefetcher a page load has finished so it should start\n\t      // loading resources again.\n\t      reducer({ type: \"ON_POST_LOAD_PAGE_RESOURCES\", payload: event });\n\t    },\n\t    onNewResourcesAdded: function onNewResourcesAdded() {\n\t      // Tell prefetcher that more resources to be downloaded have\n\t      // been added.\n\t      reducer({ type: \"ON_NEW_RESOURCES_ADDED\" });\n\t    },\n\t    getState: function getState() {\n\t      return { pagesLoading: pagesLoading, resourcesDownloading: resourcesDownloading };\n\t    },\n\t    empty: function empty() {\n\t      pagesLoading = [];\n\t      resourcesDownloading = [];\n\t    }\n\t  };\n\t};\n\n/***/ }),\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _apiRunnerBrowser = __webpack_require__(194);\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(71);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _reactRouterDom = __webpack_require__(144);\n\t\n\tvar _gatsbyReactRouterScroll = __webpack_require__(807);\n\t\n\tvar _domready = __webpack_require__(759);\n\t\n\tvar _domready2 = _interopRequireDefault(_domready);\n\t\n\tvar _history = __webpack_require__(69);\n\t\n\tvar _history2 = __webpack_require__(438);\n\t\n\tvar _history3 = _interopRequireDefault(_history2);\n\t\n\tvar _emitter = __webpack_require__(149);\n\t\n\tvar _emitter2 = _interopRequireDefault(_emitter);\n\t\n\tvar _pages = __webpack_require__(817);\n\t\n\tvar _pages2 = _interopRequireDefault(_pages);\n\t\n\tvar _redirects = __webpack_require__(818);\n\t\n\tvar _redirects2 = _interopRequireDefault(_redirects);\n\t\n\tvar _componentRenderer = __webpack_require__(436);\n\t\n\tvar _componentRenderer2 = _interopRequireDefault(_componentRenderer);\n\t\n\tvar _asyncRequires = __webpack_require__(435);\n\t\n\tvar _asyncRequires2 = _interopRequireDefault(_asyncRequires);\n\t\n\tvar _loader = __webpack_require__(302);\n\t\n\tvar _loader2 = _interopRequireDefault(_loader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tif (true) {\n\t  __webpack_require__(511);\n\t}\n\t\n\twindow.___history = _history3.default;\n\t\n\twindow.___emitter = _emitter2.default;\n\t\n\t_loader2.default.addPagesArray(_pages2.default);\n\t_loader2.default.addProdRequires(_asyncRequires2.default);\n\twindow.asyncRequires = _asyncRequires2.default;\n\twindow.___loader = _loader2.default;\n\twindow.matchPath = _reactRouterDom.matchPath;\n\t\n\t// Convert to a map for faster lookup in maybeRedirect()\n\tvar redirectMap = _redirects2.default.reduce(function (map, redirect) {\n\t  map[redirect.fromPath] = redirect;\n\t  return map;\n\t}, {});\n\t\n\tvar maybeRedirect = function maybeRedirect(pathname) {\n\t  var redirect = redirectMap[pathname];\n\t\n\t  if (redirect != null) {\n\t    _history3.default.replace(redirect.toPath);\n\t    return true;\n\t  } else {\n\t    return false;\n\t  }\n\t};\n\t\n\t// Check for initial page-load redirect\n\tmaybeRedirect(window.location.pathname);\n\t\n\t// Let the site/plugins run code very early.\n\t(0, _apiRunnerBrowser.apiRunnerAsync)(\"onClientEntry\").then(function () {\n\t  // Let plugins register a service worker. The plugin just needs\n\t  // to return true.\n\t  if ((0, _apiRunnerBrowser.apiRunner)(\"registerServiceWorker\").length > 0) {\n\t    __webpack_require__(441);\n\t  }\n\t\n\t  var navigate = function navigate(to, replace) {\n\t    var location = (0, _history.createLocation)(to, null, null, _history3.default.location);\n\t    var pathname = location.pathname;\n\t\n\t    var redirect = redirectMap[pathname];\n\t\n\t    // If we're redirecting, just replace the passed in pathname\n\t    // to the one we want to redirect to.\n\t    if (redirect) {\n\t      pathname = redirect.toPath;\n\t    }\n\t    var wl = window.location;\n\t\n\t    // If we're already at this location, do nothing.\n\t    if (wl.pathname === location.pathname && wl.search === location.search && wl.hash === location.hash) {\n\t      return;\n\t    }\n\t\n\t    var historyNavigateFunc = replace ? window.___history.replace : window.___history.push;\n\t\n\t    // Listen to loading events. If page resources load before\n\t    // a second, navigate immediately.\n\t    function eventHandler(e) {\n\t      if (e.page.path === _loader2.default.getPage(pathname).path) {\n\t        _emitter2.default.off(\"onPostLoadPageResources\", eventHandler);\n\t        clearTimeout(timeoutId);\n\t        historyNavigateFunc(location);\n\t      }\n\t    }\n\t\n\t    // Start a timer to wait for a second before transitioning and showing a\n\t    // loader in case resources aren't around yet.\n\t    var timeoutId = setTimeout(function () {\n\t      _emitter2.default.off(\"onPostLoadPageResources\", eventHandler);\n\t      _emitter2.default.emit(\"onDelayedLoadPageResources\", { pathname: pathname });\n\t      historyNavigateFunc(location);\n\t    }, 1000);\n\t\n\t    if (_loader2.default.getResourcesForPathname(pathname)) {\n\t      // The resources are already loaded so off we go.\n\t      clearTimeout(timeoutId);\n\t      historyNavigateFunc(location);\n\t    } else {\n\t      // They're not loaded yet so let's add a listener for when\n\t      // they finish loading.\n\t      _emitter2.default.on(\"onPostLoadPageResources\", eventHandler);\n\t    }\n\t  };\n\t\n\t  // window.___loadScriptsForPath = loadScriptsForPath\n\t  window.___push = function (to) {\n\t    return navigate(to, false);\n\t  };\n\t  window.___replace = function (to) {\n\t    return navigate(to, true);\n\t  };\n\t  window.___navigateTo = window.___push;\n\t\n\t  // Call onRouteUpdate on the initial page load.\n\t  (0, _apiRunnerBrowser.apiRunner)(\"onRouteUpdate\", {\n\t    location: _history3.default.location,\n\t    action: _history3.default.action\n\t  });\n\t\n\t  var initialAttachDone = false;\n\t  function attachToHistory(history) {\n\t    if (!window.___history || initialAttachDone === false) {\n\t      window.___history = history;\n\t      initialAttachDone = true;\n\t\n\t      history.listen(function (location, action) {\n\t        if (!maybeRedirect(location.pathname)) {\n\t          // Make sure React has had a chance to flush to DOM first.\n\t          setTimeout(function () {\n\t            (0, _apiRunnerBrowser.apiRunner)(\"onRouteUpdate\", { location: location, action: action });\n\t          }, 0);\n\t        }\n\t      });\n\t    }\n\t  }\n\t\n\t  function shouldUpdateScroll(prevRouterProps, _ref) {\n\t    var pathname = _ref.location.pathname;\n\t\n\t    var results = (0, _apiRunnerBrowser.apiRunner)(\"shouldUpdateScroll\", {\n\t      prevRouterProps: prevRouterProps,\n\t      pathname: pathname\n\t    });\n\t    if (results.length > 0) {\n\t      return results[0];\n\t    }\n\t\n\t    if (prevRouterProps) {\n\t      var oldPathname = prevRouterProps.location.pathname;\n\t\n\t      if (oldPathname === pathname) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  var AltRouter = (0, _apiRunnerBrowser.apiRunner)(\"replaceRouterComponent\", { history: _history3.default })[0];\n\t  var DefaultRouter = function DefaultRouter(_ref2) {\n\t    var children = _ref2.children;\n\t    return _react2.default.createElement(\n\t      _reactRouterDom.Router,\n\t      { history: _history3.default },\n\t      children\n\t    );\n\t  };\n\t\n\t  var ComponentRendererWithRouter = (0, _reactRouterDom.withRouter)(_componentRenderer2.default);\n\t\n\t  _loader2.default.getResourcesForPathname(window.location.pathname, function () {\n\t    var Root = function Root() {\n\t      return (0, _react.createElement)(AltRouter ? AltRouter : DefaultRouter, null, (0, _react.createElement)(_gatsbyReactRouterScroll.ScrollContext, { shouldUpdateScroll: shouldUpdateScroll }, (0, _react.createElement)(ComponentRendererWithRouter, {\n\t        layout: true,\n\t        children: function children(layoutProps) {\n\t          return (0, _react.createElement)(_reactRouterDom.Route, {\n\t            render: function render(routeProps) {\n\t              attachToHistory(routeProps.history);\n\t              var props = layoutProps ? layoutProps : routeProps;\n\t\n\t              if (_loader2.default.getPage(props.location.pathname)) {\n\t                return (0, _react.createElement)(_componentRenderer2.default, _extends({\n\t                  page: true\n\t                }, props));\n\t              } else {\n\t                return (0, _react.createElement)(_componentRenderer2.default, {\n\t                  page: true,\n\t                  location: { pathname: \"/404.html\" }\n\t                });\n\t              }\n\t            }\n\t          });\n\t        }\n\t      })));\n\t    };\n\t\n\t    var NewRoot = (0, _apiRunnerBrowser.apiRunner)(\"wrapRootComponent\", { Root: Root }, Root)[0];\n\t\n\t    var renderer = (0, _apiRunnerBrowser.apiRunner)(\"replaceHydrateFunction\", undefined, _reactDom2.default.render)[0];\n\t\n\t    (0, _domready2.default)(function () {\n\t      return renderer(_react2.default.createElement(NewRoot, null), typeof window !== \"undefined\" ? document.getElementById(\"___gatsby\") : void 0, function () {\n\t        (0, _apiRunnerBrowser.apiRunner)(\"onInitialClientRender\");\n\t      });\n\t    });\n\t  });\n\t});\n\n/***/ }),\n\n/***/ 818:\n/***/ (function(module, exports) {\n\n\tmodule.exports = []\n\n/***/ }),\n\n/***/ 441:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _emitter = __webpack_require__(149);\n\t\n\tvar _emitter2 = _interopRequireDefault(_emitter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar pathPrefix = \"/\";\n\tif (true) {\n\t  pathPrefix = (\"/gatsby-public\") + \"/\";\n\t}\n\t\n\tif (\"serviceWorker\" in navigator) {\n\t  navigator.serviceWorker.register(pathPrefix + \"sw.js\").then(function (reg) {\n\t    reg.addEventListener(\"updatefound\", function () {\n\t      // The updatefound event implies that reg.installing is set; see\n\t      // https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event\n\t      var installingWorker = reg.installing;\n\t      console.log(\"installingWorker\", installingWorker);\n\t      installingWorker.addEventListener(\"statechange\", function () {\n\t        switch (installingWorker.state) {\n\t          case \"installed\":\n\t            if (navigator.serviceWorker.controller) {\n\t              // At this point, the old content will have been purged and the fresh content will\n\t              // have been added to the cache.\n\t              // We reload immediately so the user sees the new content.\n\t              // This could/should be made configurable in the future.\n\t              window.location.reload();\n\t            } else {\n\t              // At this point, everything has been precached.\n\t              // It's the perfect time to display a \"Content is cached for offline use.\" message.\n\t              console.log(\"Content is now available offline!\");\n\t              _emitter2.default.emit(\"sw:installed\");\n\t            }\n\t            break;\n\t\n\t          case \"redundant\":\n\t            console.error(\"The installing service worker became redundant.\");\n\t            break;\n\t        }\n\t      });\n\t    });\n\t  }).catch(function (e) {\n\t    console.error(\"Error during service worker registration:\", e);\n\t  });\n\t}\n\n/***/ }),\n\n/***/ 303:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\t/**\n\t * Remove a prefix from a string. Return the input string if the given prefix\n\t * isn't found.\n\t */\n\t\n\texports.default = function (str) {\n\t  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\t\n\t  if (str.substr(0, prefix.length) === prefix) return str.slice(prefix.length);\n\t  return str;\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 442:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\texports.__esModule = true;\n\texports.replaceRouterComponent = undefined;\n\t\n\t__webpack_require__(512);\n\t\n\tvar _reactDom = __webpack_require__(71);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _wrapWithProvider = __webpack_require__(500);\n\t\n\tvar _wrapWithProvider2 = _interopRequireDefault(_wrapWithProvider);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* used for IE 11 compatibility */\n\t\n\tvar replaceRouterComponent = exports.replaceRouterComponent = _wrapWithProvider2.default;\n\t\n\t/* Add Redux store provider */\n\t/* globals window */\n\t\n\t\n\tvar usStateIds = [\"AK\", \"AL\", \"AR\", \"AZ\", \"CA\", \"CO\", \"CT\", \"DC\", \"DE\", \"FL\", \"GA\", \"HI\", \"IA\", \"IL\", \"IN\", \"KS\", \"KY\", \"LA\", \"MA\", \"MD\", \"ME\", \"MI\", \"MN\", \"MO\", \"MS\", \"MT\", \"NC\", \"ND\", \"NE\", \"NH\", \"NJ\", \"NM\", \"NV\", \"NY\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VA\", \"VT\", \"WA\", \"WI\", \"WV\", \"WY\"];\n\t\n\texports.onClientEntry = function () {\n\t  // Patch the resource loader\n\t  var loader = global.___loader;\n\t  if (!loader) return;\n\t\n\t  var path = window.location.pathname;\n\t  var statePathId = path.substring(path.length - 3, path.length - 1);\n\t\n\t  if (path.includes(\"/explore\") && (path.endsWith(\"e/\") || path.endsWith(\"e\"))) {\n\t    loader.addPagesArray([{ \"componentChunkName\": \"component---src-pages-explore-index-js\", \"layout\": \"layout---index\", \"layoutComponentChunkName\": \"component---src-layouts-index-js\", \"jsonName\": \"explore.json\", \"path\": path }]);\n\t  } else if (path.includes(\"/about\")) {\n\t    loader.addPagesArray([{ \"componentChunkName\": \"component---src-pages-about-index-js\", \"layout\": \"layout---index\", \"layoutComponentChunkName\": \"component---src-layouts-index-js\", \"jsonName\": \"about.json\", \"path\": path }]);\n\t  } else if (path.includes(\"/explore\") && usStateIds.includes(statePathId)) {\n\t    loader.addPagesArray([{ \"componentChunkName\": \"component---src-templates-state-page-js\", \"layout\": \"layout---index\", \"layoutComponentChunkName\": \"component---src-layouts-index-js\", \"jsonName\": \"explore-\" + statePathId.toLowerCase() + \".json\", \"path\": path }]);\n\t  } else {\n\t    loader.addPagesArray([{ \"componentChunkName\": \"component---src-pages-index-js\", \"layout\": \"layout---index\", \"layoutComponentChunkName\": \"component---src-layouts-index-js\", \"jsonName\": \"index.json\", \"path\": path }]);\n\t  }\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 120:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * accounting.js v0.4.1\n\t * Copyright 2014 Open Exchange Rates\n\t *\n\t * Freely distributable under the MIT license.\n\t * Portions of accounting.js are inspired or borrowed from underscore.js\n\t *\n\t * Full details and documentation:\n\t * http://openexchangerates.github.io/accounting.js/\n\t */\n\t\n\t(function(root, undefined) {\n\t\n\t\t/* --- Setup --- */\n\t\n\t\t// Create the local library object, to be exported or referenced globally later\n\t\tvar lib = {};\n\t\n\t\t// Current version\n\t\tlib.version = '0.4.1';\n\t\n\t\n\t\t/* --- Exposed settings --- */\n\t\n\t\t// The library's settings configuration object. Contains default parameters for\n\t\t// currency and number formatting\n\t\tlib.settings = {\n\t\t\tcurrency: {\n\t\t\t\tsymbol : \"$\",\t\t// default currency symbol is '$'\n\t\t\t\tformat : \"%s%v\",\t// controls output: %s = symbol, %v = value (can be object, see docs)\n\t\t\t\tdecimal : \".\",\t\t// decimal point separator\n\t\t\t\tthousand : \",\",\t\t// thousands separator\n\t\t\t\tprecision : 2,\t\t// decimal places\n\t\t\t\tgrouping : 3\t\t// digit grouping (not implemented yet)\n\t\t\t},\n\t\t\tnumber: {\n\t\t\t\tprecision : 0,\t\t// default precision on numbers is 0\n\t\t\t\tgrouping : 3,\t\t// digit grouping (not implemented yet)\n\t\t\t\tthousand : \",\",\n\t\t\t\tdecimal : \".\"\n\t\t\t}\n\t\t};\n\t\n\t\n\t\t/* --- Internal Helper Methods --- */\n\t\n\t\t// Store reference to possibly-available ECMAScript 5 methods for later\n\t\tvar nativeMap = Array.prototype.map,\n\t\t\tnativeIsArray = Array.isArray,\n\t\t\ttoString = Object.prototype.toString;\n\t\n\t\t/**\n\t\t * Tests whether supplied parameter is a string\n\t\t * from underscore.js\n\t\t */\n\t\tfunction isString(obj) {\n\t\t\treturn !!(obj === '' || (obj && obj.charCodeAt && obj.substr));\n\t\t}\n\t\n\t\t/**\n\t\t * Tests whether supplied parameter is a string\n\t\t * from underscore.js, delegates to ECMA5's native Array.isArray\n\t\t */\n\t\tfunction isArray(obj) {\n\t\t\treturn nativeIsArray ? nativeIsArray(obj) : toString.call(obj) === '[object Array]';\n\t\t}\n\t\n\t\t/**\n\t\t * Tests whether supplied parameter is a true object\n\t\t */\n\t\tfunction isObject(obj) {\n\t\t\treturn obj && toString.call(obj) === '[object Object]';\n\t\t}\n\t\n\t\t/**\n\t\t * Extends an object with a defaults object, similar to underscore's _.defaults\n\t\t *\n\t\t * Used for abstracting parameter handling from API methods\n\t\t */\n\t\tfunction defaults(object, defs) {\n\t\t\tvar key;\n\t\t\tobject = object || {};\n\t\t\tdefs = defs || {};\n\t\t\t// Iterate over object non-prototype properties:\n\t\t\tfor (key in defs) {\n\t\t\t\tif (defs.hasOwnProperty(key)) {\n\t\t\t\t\t// Replace values with defaults only if undefined (allow empty/zero values):\n\t\t\t\t\tif (object[key] == null) object[key] = defs[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn object;\n\t\t}\n\t\n\t\t/**\n\t\t * Implementation of `Array.map()` for iteration loops\n\t\t *\n\t\t * Returns a new Array as a result of calling `iterator` on each array value.\n\t\t * Defers to native Array.map if available\n\t\t */\n\t\tfunction map(obj, iterator, context) {\n\t\t\tvar results = [], i, j;\n\t\n\t\t\tif (!obj) return results;\n\t\n\t\t\t// Use native .map method if it exists:\n\t\t\tif (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n\t\n\t\t\t// Fallback for native .map:\n\t\t\tfor (i = 0, j = obj.length; i < j; i++ ) {\n\t\t\t\tresults[i] = iterator.call(context, obj[i], i, obj);\n\t\t\t}\n\t\t\treturn results;\n\t\t}\n\t\n\t\t/**\n\t\t * Check and normalise the value of precision (must be positive integer)\n\t\t */\n\t\tfunction checkPrecision(val, base) {\n\t\t\tval = Math.round(Math.abs(val));\n\t\t\treturn isNaN(val)? base : val;\n\t\t}\n\t\n\t\n\t\t/**\n\t\t * Parses a format string or object and returns format obj for use in rendering\n\t\t *\n\t\t * `format` is either a string with the default (positive) format, or object\n\t\t * containing `pos` (required), `neg` and `zero` values (or a function returning\n\t\t * either a string or object)\n\t\t *\n\t\t * Either string or format.pos must contain \"%v\" (value) to be valid\n\t\t */\n\t\tfunction checkCurrencyFormat(format) {\n\t\t\tvar defaults = lib.settings.currency.format;\n\t\n\t\t\t// Allow function as format parameter (should return string or object):\n\t\t\tif ( typeof format === \"function\" ) format = format();\n\t\n\t\t\t// Format can be a string, in which case `value` (\"%v\") must be present:\n\t\t\tif ( isString( format ) && format.match(\"%v\") ) {\n\t\n\t\t\t\t// Create and return positive, negative and zero formats:\n\t\t\t\treturn {\n\t\t\t\t\tpos : format,\n\t\t\t\t\tneg : format.replace(\"-\", \"\").replace(\"%v\", \"-%v\"),\n\t\t\t\t\tzero : format\n\t\t\t\t};\n\t\n\t\t\t// If no format, or object is missing valid positive value, use defaults:\n\t\t\t} else if ( !format || !format.pos || !format.pos.match(\"%v\") ) {\n\t\n\t\t\t\t// If defaults is a string, casts it to an object for faster checking next time:\n\t\t\t\treturn ( !isString( defaults ) ) ? defaults : lib.settings.currency.format = {\n\t\t\t\t\tpos : defaults,\n\t\t\t\t\tneg : defaults.replace(\"%v\", \"-%v\"),\n\t\t\t\t\tzero : defaults\n\t\t\t\t};\n\t\n\t\t\t}\n\t\t\t// Otherwise, assume format was fine:\n\t\t\treturn format;\n\t\t}\n\t\n\t\n\t\t/* --- API Methods --- */\n\t\n\t\t/**\n\t\t * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value\n\t\t * Alias: `accounting.parse(string)`\n\t\t *\n\t\t * Decimal must be included in the regular expression to match floats (defaults to\n\t\t * accounting.settings.number.decimal), so if the number uses a non-standard decimal \n\t\t * separator, provide it as the second argument.\n\t\t *\n\t\t * Also matches bracketed negatives (eg. \"$ (1.99)\" => -1.99)\n\t\t *\n\t\t * Doesn't throw any errors (`NaN`s become 0) but this may change in future\n\t\t */\n\t\tvar unformat = lib.unformat = lib.parse = function(value, decimal) {\n\t\t\t// Recursively unformat arrays:\n\t\t\tif (isArray(value)) {\n\t\t\t\treturn map(value, function(val) {\n\t\t\t\t\treturn unformat(val, decimal);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Fails silently (need decent errors):\n\t\t\tvalue = value || 0;\n\t\n\t\t\t// Return the value as-is if it's already a number:\n\t\t\tif (typeof value === \"number\") return value;\n\t\n\t\t\t// Default decimal point comes from settings, but could be set to eg. \",\" in opts:\n\t\t\tdecimal = decimal || lib.settings.number.decimal;\n\t\n\t\t\t // Build regex to strip out everything except digits, decimal point and minus sign:\n\t\t\tvar regex = new RegExp(\"[^0-9-\" + decimal + \"]\", [\"g\"]),\n\t\t\t\tunformatted = parseFloat(\n\t\t\t\t\t(\"\" + value)\n\t\t\t\t\t.replace(/\\((.*)\\)/, \"-$1\") // replace bracketed values with negatives\n\t\t\t\t\t.replace(regex, '')         // strip out any cruft\n\t\t\t\t\t.replace(decimal, '.')      // make sure decimal point is standard\n\t\t\t\t);\n\t\n\t\t\t// This will fail silently which may cause trouble, let's wait and see:\n\t\t\treturn !isNaN(unformatted) ? unformatted : 0;\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Implementation of toFixed() that treats floats more like decimals\n\t\t *\n\t\t * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present\n\t\t * problems for accounting- and finance-related software.\n\t\t */\n\t\tvar toFixed = lib.toFixed = function(value, precision) {\n\t\t\tprecision = checkPrecision(precision, lib.settings.number.precision);\n\t\t\tvar power = Math.pow(10, precision);\n\t\n\t\t\t// Multiply up by precision, round accurately, then divide and use native toFixed():\n\t\t\treturn (Math.round(lib.unformat(value) * power) / power).toFixed(precision);\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Format a number, with comma-separated thousands and custom precision/decimal places\n\t\t * Alias: `accounting.format()`\n\t\t *\n\t\t * Localise by overriding the precision and thousand / decimal separators\n\t\t * 2nd parameter `precision` can be an object matching `settings.number`\n\t\t */\n\t\tvar formatNumber = lib.formatNumber = lib.format = function(number, precision, thousand, decimal) {\n\t\t\t// Resursively format arrays:\n\t\t\tif (isArray(number)) {\n\t\t\t\treturn map(number, function(val) {\n\t\t\t\t\treturn formatNumber(val, precision, thousand, decimal);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Clean up number:\n\t\t\tnumber = unformat(number);\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(\n\t\t\t\t\t(isObject(precision) ? precision : {\n\t\t\t\t\t\tprecision : precision,\n\t\t\t\t\t\tthousand : thousand,\n\t\t\t\t\t\tdecimal : decimal\n\t\t\t\t\t}),\n\t\t\t\t\tlib.settings.number\n\t\t\t\t),\n\t\n\t\t\t\t// Clean up precision\n\t\t\t\tusePrecision = checkPrecision(opts.precision),\n\t\n\t\t\t\t// Do some calc:\n\t\t\t\tnegative = number < 0 ? \"-\" : \"\",\n\t\t\t\tbase = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + \"\",\n\t\t\t\tmod = base.length > 3 ? base.length % 3 : 0;\n\t\n\t\t\t// Format the number:\n\t\t\treturn negative + (mod ? base.substr(0, mod) + opts.thousand : \"\") + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, \"$1\" + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : \"\");\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Format a number into currency\n\t\t *\n\t\t * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n\t\t * defaults: (0, \"$\", 2, \",\", \".\", \"%s%v\")\n\t\t *\n\t\t * Localise by overriding the symbol, precision, thousand / decimal separators and format\n\t\t * Second param can be an object matching `settings.currency` which is the easiest way.\n\t\t *\n\t\t * To do: tidy up the parameters\n\t\t */\n\t\tvar formatMoney = lib.formatMoney = function(number, symbol, precision, thousand, decimal, format) {\n\t\t\t// Resursively format arrays:\n\t\t\tif (isArray(number)) {\n\t\t\t\treturn map(number, function(val){\n\t\t\t\t\treturn formatMoney(val, symbol, precision, thousand, decimal, format);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Clean up number:\n\t\t\tnumber = unformat(number);\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(\n\t\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\t\tprecision : precision,\n\t\t\t\t\t\tthousand : thousand,\n\t\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\t\tformat : format\n\t\t\t\t\t}),\n\t\t\t\t\tlib.settings.currency\n\t\t\t\t),\n\t\n\t\t\t\t// Check format (returns object with pos, neg and zero):\n\t\t\t\tformats = checkCurrencyFormat(opts.format),\n\t\n\t\t\t\t// Choose which format to use for this value:\n\t\t\t\tuseFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\n\t\n\t\t\t// Return with currency symbol added:\n\t\t\treturn useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t\t};\n\t\n\t\n\t\t/**\n\t\t * Format a list of numbers into an accounting column, padding with whitespace\n\t\t * to line up currency symbols, thousand separators and decimals places\n\t\t *\n\t\t * List should be an array of numbers\n\t\t * Second parameter can be an object containing keys that match the params\n\t\t *\n\t\t * Returns array of accouting-formatted number strings of same length\n\t\t *\n\t\t * NB: `white-space:pre` CSS rule is required on the list container to prevent\n\t\t * browsers from collapsing the whitespace in the output strings.\n\t\t */\n\t\tlib.formatColumn = function(list, symbol, precision, thousand, decimal, format) {\n\t\t\tif (!list) return [];\n\t\n\t\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\t\tvar opts = defaults(\n\t\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\t\tprecision : precision,\n\t\t\t\t\t\tthousand : thousand,\n\t\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\t\tformat : format\n\t\t\t\t\t}),\n\t\t\t\t\tlib.settings.currency\n\t\t\t\t),\n\t\n\t\t\t\t// Check format (returns object with pos, neg and zero), only need pos for now:\n\t\t\t\tformats = checkCurrencyFormat(opts.format),\n\t\n\t\t\t\t// Whether to pad at start of string or after currency symbol:\n\t\t\t\tpadAfterSymbol = formats.pos.indexOf(\"%s\") < formats.pos.indexOf(\"%v\") ? true : false,\n\t\n\t\t\t\t// Store value for the length of the longest string in the column:\n\t\t\t\tmaxLength = 0,\n\t\n\t\t\t\t// Format the list according to options, store the length of the longest string:\n\t\t\t\tformatted = map(list, function(val, i) {\n\t\t\t\t\tif (isArray(val)) {\n\t\t\t\t\t\t// Recursively format columns if list is a multi-dimensional array:\n\t\t\t\t\t\treturn lib.formatColumn(val, opts);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Clean up the value\n\t\t\t\t\t\tval = unformat(val);\n\t\n\t\t\t\t\t\t// Choose which format to use for this value (pos, neg or zero):\n\t\t\t\t\t\tvar useFormat = val > 0 ? formats.pos : val < 0 ? formats.neg : formats.zero,\n\t\n\t\t\t\t\t\t\t// Format this value, push into formatted list and save the length:\n\t\t\t\t\t\t\tfVal = useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(val), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t\n\t\t\t\t\t\tif (fVal.length > maxLength) maxLength = fVal.length;\n\t\t\t\t\t\treturn fVal;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t// Pad each number in the list and send back the column of numbers:\n\t\t\treturn map(formatted, function(val, i) {\n\t\t\t\t// Only if this is a string (not a nested array, which would have already been padded):\n\t\t\t\tif (isString(val) && val.length < maxLength) {\n\t\t\t\t\t// Depending on symbol position, pad after symbol or at index 0:\n\t\t\t\t\treturn padAfterSymbol ? val.replace(opts.symbol, opts.symbol+(new Array(maxLength - val.length + 1).join(\" \"))) : (new Array(maxLength - val.length + 1).join(\" \")) + val;\n\t\t\t\t}\n\t\t\t\treturn val;\n\t\t\t});\n\t\t};\n\t\n\t\n\t\t/* --- Module Definition --- */\n\t\n\t\t// Export accounting for CommonJS. If being loaded as an AMD module, define it as such.\n\t\t// Otherwise, just add `accounting` to the global object\n\t\tif (true) {\n\t\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\t\texports = module.exports = lib;\n\t\t\t}\n\t\t\texports.accounting = lib;\n\t\t} else if (typeof define === 'function' && define.amd) {\n\t\t\t// Return the library as an AMD module:\n\t\t\tdefine([], function() {\n\t\t\t\treturn lib;\n\t\t\t});\n\t\t} else {\n\t\t\t// Use accounting.noConflict to restore `accounting` back to its original value.\n\t\t\t// Returns a reference to the library's `accounting` object;\n\t\t\t// e.g. `var numbers = accounting.noConflict();`\n\t\t\tlib.noConflict = (function(oldAccounting) {\n\t\t\t\treturn function() {\n\t\t\t\t\t// Reset the value of the root's `accounting` variable:\n\t\t\t\t\troot.accounting = oldAccounting;\n\t\t\t\t\t// Delete the noConflict method:\n\t\t\t\t\tlib.noConflict = undefined;\n\t\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\t\treturn lib;\n\t\t\t\t};\n\t\t\t})(root.accounting);\n\t\n\t\t\t// Declare `fx` on the root (global/window) object:\n\t\t\troot['accounting'] = lib;\n\t\t}\n\t\n\t\t// Root will be `window` in browser or `global` on the server:\n\t}(this));\n\n\n/***/ }),\n\n/***/ 134:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"AED\":{\"code\":\"AED\",\"symbol\":\"د.إ.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"AFN\":{\"code\":\"AFN\",\"symbol\":\"؋\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ALL\":{\"code\":\"ALL\",\"symbol\":\"Lek\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AMD\":{\"code\":\"AMD\",\"symbol\":\"֏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ANG\":{\"code\":\"ANG\",\"symbol\":\"ƒ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AOA\":{\"code\":\"AOA\",\"symbol\":\"Kz\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ARS\":{\"code\":\"ARS\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"AUD\":{\"code\":\"AUD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AWG\":{\"code\":\"AWG\",\"symbol\":\"ƒ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AZN\":{\"code\":\"AZN\",\"symbol\":\"₼\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BAM\":{\"code\":\"BAM\",\"symbol\":\"КМ\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BBD\":{\"code\":\"BBD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BDT\":{\"code\":\"BDT\",\"symbol\":\"৳\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"BGN\":{\"code\":\"BGN\",\"symbol\":\"лв.\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BHD\":{\"code\":\"BHD\",\"symbol\":\"د.ب.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"BIF\":{\"code\":\"BIF\",\"symbol\":\"FBu\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"BMD\":{\"code\":\"BMD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BND\":{\"code\":\"BND\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"BOB\":{\"code\":\"BOB\",\"symbol\":\"Bs\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BRL\":{\"code\":\"BRL\",\"symbol\":\"R$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BSD\":{\"code\":\"BSD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BTC\":{\"code\":\"BTC\",\"symbol\":\"Ƀ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":8},\"BTN\":{\"code\":\"BTN\",\"symbol\":\"Nu.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"BWP\":{\"code\":\"BWP\",\"symbol\":\"P\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BYR\":{\"code\":\"BYR\",\"symbol\":\"р.\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BZD\":{\"code\":\"BZD\",\"symbol\":\"BZ$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CAD\":{\"code\":\"CAD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CDF\":{\"code\":\"CDF\",\"symbol\":\"FC\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CHF\":{\"code\":\"CHF\",\"symbol\":\"CHF\",\"thousandsSeparator\":\"'\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CLP\":{\"code\":\"CLP\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CNY\":{\"code\":\"CNY\",\"symbol\":\"¥\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"COP\":{\"code\":\"COP\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CRC\":{\"code\":\"CRC\",\"symbol\":\"₡\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CUC\":{\"code\":\"CUC\",\"symbol\":\"CUC\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CUP\":{\"code\":\"CUP\",\"symbol\":\"$MN\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CVE\":{\"code\":\"CVE\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CZK\":{\"code\":\"CZK\",\"symbol\":\"Kč\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"DJF\":{\"code\":\"DJF\",\"symbol\":\"Fdj\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"DKK\":{\"code\":\"DKK\",\"symbol\":\"kr.\",\"thousandsSeparator\":\"\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"DOP\":{\"code\":\"DOP\",\"symbol\":\"RD$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"DZD\":{\"code\":\"DZD\",\"symbol\":\"د.ج.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"EGP\":{\"code\":\"EGP\",\"symbol\":\"ج.م.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ERN\":{\"code\":\"ERN\",\"symbol\":\"Nfk\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ETB\":{\"code\":\"ETB\",\"symbol\":\"ETB\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"EUR\":{\"code\":\"EUR\",\"symbol\":\"€\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"FJD\":{\"code\":\"FJD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"FKP\":{\"code\":\"FKP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GBP\":{\"code\":\"GBP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GEL\":{\"code\":\"GEL\",\"symbol\":\"Lari\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"GHS\":{\"code\":\"GHS\",\"symbol\":\"₵\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GIP\":{\"code\":\"GIP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GMD\":{\"code\":\"GMD\",\"symbol\":\"D\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GNF\":{\"code\":\"GNF\",\"symbol\":\"FG\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"GTQ\":{\"code\":\"GTQ\",\"symbol\":\"Q\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GYD\":{\"code\":\"GYD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HKD\":{\"code\":\"HKD\",\"symbol\":\"HK$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HNL\":{\"code\":\"HNL\",\"symbol\":\"L.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"HRK\":{\"code\":\"HRK\",\"symbol\":\"kn\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"HTG\":{\"code\":\"HTG\",\"symbol\":\"G\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HUF\":{\"code\":\"HUF\",\"symbol\":\"Ft\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"IDR\":{\"code\":\"IDR\",\"symbol\":\"Rp\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"ILS\":{\"code\":\"ILS\",\"symbol\":\"₪\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"INR\":{\"code\":\"INR\",\"symbol\":\"₹\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"IQD\":{\"code\":\"IQD\",\"symbol\":\"د.ع.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"IRR\":{\"code\":\"IRR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\"/\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ISK\":{\"code\":\"ISK\",\"symbol\":\"kr.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"JMD\":{\"code\":\"JMD\",\"symbol\":\"J$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"JOD\":{\"code\":\"JOD\",\"symbol\":\"د.ا.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"JPY\":{\"code\":\"JPY\",\"symbol\":\"¥\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KES\":{\"code\":\"KES\",\"symbol\":\"KSh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KGS\":{\"code\":\"KGS\",\"symbol\":\"сом\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\"-\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"KHR\":{\"code\":\"KHR\",\"symbol\":\"៛\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KMF\":{\"code\":\"KMF\",\"symbol\":\"CF\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KPW\":{\"code\":\"KPW\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KRW\":{\"code\":\"KRW\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KWD\":{\"code\":\"KWD\",\"symbol\":\"د.ك.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"KYD\":{\"code\":\"KYD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KZT\":{\"code\":\"KZT\",\"symbol\":\"₸\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\"-\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LAK\":{\"code\":\"LAK\",\"symbol\":\"₭\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"LBP\":{\"code\":\"LBP\",\"symbol\":\"ل.ل.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"LKR\":{\"code\":\"LKR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"LRD\":{\"code\":\"LRD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LSL\":{\"code\":\"LSL\",\"symbol\":\"M\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LYD\":{\"code\":\"LYD\",\"symbol\":\"د.ل.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":3},\"MAD\":{\"code\":\"MAD\",\"symbol\":\"د.م.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MDL\":{\"code\":\"MDL\",\"symbol\":\"lei\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MGA\":{\"code\":\"MGA\",\"symbol\":\"Ar\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"MKD\":{\"code\":\"MKD\",\"symbol\":\"ден.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MMK\":{\"code\":\"MMK\",\"symbol\":\"K\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MNT\":{\"code\":\"MNT\",\"symbol\":\"₮\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MOP\":{\"code\":\"MOP\",\"symbol\":\"MOP$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MRO\":{\"code\":\"MRO\",\"symbol\":\"UM\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MTL\":{\"code\":\"MTL\",\"symbol\":\"₤\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MUR\":{\"code\":\"MUR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MVR\":{\"code\":\"MVR\",\"symbol\":\"MVR\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"MWK\":{\"code\":\"MWK\",\"symbol\":\"MK\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MXN\":{\"code\":\"MXN\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MYR\":{\"code\":\"MYR\",\"symbol\":\"RM\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MZN\":{\"code\":\"MZN\",\"symbol\":\"MT\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"NAD\":{\"code\":\"NAD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NGN\":{\"code\":\"NGN\",\"symbol\":\"₦\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NIO\":{\"code\":\"NIO\",\"symbol\":\"C$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"NOK\":{\"code\":\"NOK\",\"symbol\":\"kr\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"NPR\":{\"code\":\"NPR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NZD\":{\"code\":\"NZD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"OMR\":{\"code\":\"OMR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"PAB\":{\"code\":\"PAB\",\"symbol\":\"B/.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PEN\":{\"code\":\"PEN\",\"symbol\":\"S/.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PGK\":{\"code\":\"PGK\",\"symbol\":\"K\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PHP\":{\"code\":\"PHP\",\"symbol\":\"₱\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PKR\":{\"code\":\"PKR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PLN\":{\"code\":\"PLN\",\"symbol\":\"zł\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PYG\":{\"code\":\"PYG\",\"symbol\":\"₲\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"QAR\":{\"code\":\"QAR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RON\":{\"code\":\"RON\",\"symbol\":\"lei\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RSD\":{\"code\":\"RSD\",\"symbol\":\"Дин.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RUB\":{\"code\":\"RUB\",\"symbol\":\"₽\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RWF\":{\"code\":\"RWF\",\"symbol\":\"RWF\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SAR\":{\"code\":\"SAR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SBD\":{\"code\":\"SBD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SCR\":{\"code\":\"SCR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SDD\":{\"code\":\"SDD\",\"symbol\":\"LSd\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SDG\":{\"code\":\"SDG\",\"symbol\":\"£‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SEK\":{\"code\":\"SEK\",\"symbol\":\"kr\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SGD\":{\"code\":\"SGD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SHP\":{\"code\":\"SHP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SLL\":{\"code\":\"SLL\",\"symbol\":\"Le\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SOS\":{\"code\":\"SOS\",\"symbol\":\"S\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SRD\":{\"code\":\"SRD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"STD\":{\"code\":\"STD\",\"symbol\":\"Db\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SVC\":{\"code\":\"SVC\",\"symbol\":\"₡\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SYP\":{\"code\":\"SYP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SZL\":{\"code\":\"SZL\",\"symbol\":\"E\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"THB\":{\"code\":\"THB\",\"symbol\":\"฿\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TJS\":{\"code\":\"TJS\",\"symbol\":\"TJS\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\";\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"TMT\":{\"code\":\"TMT\",\"symbol\":\"m\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"TND\":{\"code\":\"TND\",\"symbol\":\"د.ت.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"TOP\":{\"code\":\"TOP\",\"symbol\":\"T$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TRY\":{\"code\":\"TRY\",\"symbol\":\"TL\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"TTD\":{\"code\":\"TTD\",\"symbol\":\"TT$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TVD\":{\"code\":\"TVD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TWD\":{\"code\":\"TWD\",\"symbol\":\"NT$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TZS\":{\"code\":\"TZS\",\"symbol\":\"TSh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UAH\":{\"code\":\"UAH\",\"symbol\":\"₴\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UGX\":{\"code\":\"UGX\",\"symbol\":\"USh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"USD\":{\"code\":\"USD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UYU\":{\"code\":\"UYU\",\"symbol\":\"$U\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"UZS\":{\"code\":\"UZS\",\"symbol\":\"сўм\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"VEB\":{\"code\":\"VEB\",\"symbol\":\"Bs.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"VEF\":{\"code\":\"VEF\",\"symbol\":\"Bs. F.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"VND\":{\"code\":\"VND\",\"symbol\":\"₫\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"VUV\":{\"code\":\"VUV\",\"symbol\":\"VT\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"WST\":{\"code\":\"WST\",\"symbol\":\"WS$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XAF\":{\"code\":\"XAF\",\"symbol\":\"F\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XCD\":{\"code\":\"XCD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XBT\":{\"code\":\"XBT\",\"symbol\":\"Ƀ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XOF\":{\"code\":\"XOF\",\"symbol\":\"F\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XPF\":{\"code\":\"XPF\",\"symbol\":\"F\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"YER\":{\"code\":\"YER\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ZAR\":{\"code\":\"ZAR\",\"symbol\":\"R\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ZMW\":{\"code\":\"ZMW\",\"symbol\":\"ZK\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"WON\":{\"code\":\"WON\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2}}\n\n/***/ }),\n\n/***/ 127:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar accounting = __webpack_require__(120)\n\tvar assign = __webpack_require__(10)\n\tvar localeCurrency = __webpack_require__(137)\n\tvar currencies = __webpack_require__(134)\n\tvar localeFormats = __webpack_require__(135)\n\t\n\tvar defaultCurrency = {\n\t  symbol: '',\n\t  thousandsSeparator: ',',\n\t  decimalSeparator: '.',\n\t  symbolOnLeft: true,\n\t  spaceBetweenAmountAndSymbol: false,\n\t  decimalDigits: 2\n\t}\n\t\n\tvar defaultLocaleFormat = {}\n\t\n\tvar formatMapping = [\n\t  {\n\t    symbolOnLeft: true,\n\t    spaceBetweenAmountAndSymbol: false,\n\t    format: {\n\t      pos: '%s%v',\n\t      neg: '-%s%v',\n\t      zero: '%s%v'\n\t    }\n\t  },\n\t  {\n\t    symbolOnLeft: true,\n\t    spaceBetweenAmountAndSymbol: true,\n\t    format: {\n\t      pos: '%s %v',\n\t      neg: '-%s %v',\n\t      zero: '%s %v'\n\t    }\n\t  },\n\t  {\n\t    symbolOnLeft: false,\n\t    spaceBetweenAmountAndSymbol: false,\n\t    format: {\n\t      pos: '%v%s',\n\t      neg: '-%v%s',\n\t      zero: '%v%s'\n\t    }\n\t  },\n\t  {\n\t    symbolOnLeft: false,\n\t    spaceBetweenAmountAndSymbol: true,\n\t    format: {\n\t      pos: '%v %s',\n\t      neg: '-%v %s',\n\t      zero: '%v %s'\n\t    }\n\t  }\n\t]\n\t\n\tfunction format(value, options) {\n\t  var code = options.code || (options.locale && localeCurrency.getCurrency(options.locale))\n\t  var localeMatch = /^([a-z]+)([_-]([a-z]+))?$/i.exec(options.locale) || []\n\t  var language = localeMatch[1]\n\t  var region = localeMatch[3]\n\t  var localeFormat = assign({}, defaultLocaleFormat,\n\t                            localeFormats[language] || {},\n\t                            localeFormats[language + '-' + region] || {})\n\t  var currency = assign({}, defaultCurrency, findCurrency(code), localeFormat)\n\t  \n\t  var symbolOnLeft = currency.symbolOnLeft\n\t  var spaceBetweenAmountAndSymbol = currency.spaceBetweenAmountAndSymbol\n\t\n\t  var format = formatMapping.filter(function(f) {\n\t    return f.symbolOnLeft == symbolOnLeft && f.spaceBetweenAmountAndSymbol == spaceBetweenAmountAndSymbol\n\t  })[0].format\n\t\n\t  return accounting.formatMoney(value, {\n\t    symbol: isUndefined(options.symbol)\n\t              ? currency.symbol\n\t              : options.symbol,\n\t\n\t    decimal: isUndefined(options.decimal)\n\t              ? currency.decimalSeparator\n\t              : options.decimal,\n\t\n\t    thousand: isUndefined(options.thousand)\n\t              ? currency.thousandsSeparator\n\t              : options.thousand,\n\t\n\t    precision: typeof options.precision === 'number'\n\t              ? options.precision\n\t              : currency.decimalDigits,\n\t\n\t    format: ['string', 'object'].indexOf(typeof options.format) > -1\n\t              ? options.format\n\t              : format\n\t  })\n\t}\n\t\n\tfunction findCurrency (currencyCode) {\n\t  return currencies[currencyCode]\n\t}\n\t\n\tfunction isUndefined (val) {\n\t  return typeof val === 'undefined'\n\t}\n\t\n\tfunction unformat(value, options) {\n\t  var code = options.code || (options.locale && localeCurrency.getCurrency(options.locale))\n\t  var localeFormat = localeFormats[options.locale] || defaultLocaleFormat\n\t  var currency = assign({}, defaultCurrency, findCurrency(code), localeFormat)\n\t  var decimal = isUndefined(options.decimal) ? currency.decimalSeparator : options.decimal\n\t  return accounting.unformat(value, decimal)\n\t}\n\t\n\tmodule.exports = {\n\t  defaultCurrency: defaultCurrency,\n\t  get currencies() {\n\t    // In favor of backwards compatibility, the currencies map is converted to an array here\n\t    return Object.keys(currencies).map(function(key) {\n\t      return currencies[key]\n\t    })\n\t  },\n\t  findCurrency: findCurrency,\n\t  format: format,\n\t  unformat: unformat\n\t}\n\n/***/ }),\n\n/***/ 135:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"de\":{\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"el\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2},\"en-IE\":{\"symbolOnLeft\":true,\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"es\":{\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"it\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2},\"nl\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2}}\n\n/***/ }),\n\n/***/ 759:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t  * domready (c) Dustin Diaz 2014 - License MIT\n\t  */\n\t!function (name, definition) {\n\t\n\t  if (true) module.exports = definition()\n\t  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n\t  else this[name] = definition()\n\t\n\t}('domready', function () {\n\t\n\t  var fns = [], listener\n\t    , doc = document\n\t    , hack = doc.documentElement.doScroll\n\t    , domContentLoaded = 'DOMContentLoaded'\n\t    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\t\n\t\n\t  if (!loaded)\n\t  doc.addEventListener(domContentLoaded, listener = function () {\n\t    doc.removeEventListener(domContentLoaded, listener)\n\t    loaded = 1\n\t    while (listener = fns.shift()) listener()\n\t  })\n\t\n\t  return function (fn) {\n\t    loaded ? setTimeout(fn, 0) : fns.push(fn)\n\t  }\n\t\n\t});\n\n\n/***/ }),\n\n/***/ 38:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t/* global document: false, __webpack_require__: false */\n\tpatch();\n\t\n\tfunction patch() {\n\t  var head = document.querySelector(\"head\");\n\t  var ensure = __webpack_require__.e;\n\t  var chunks = __webpack_require__.s;\n\t  var failures;\n\t\n\t  __webpack_require__.e = function (chunkId, callback) {\n\t    var loaded = false;\n\t    var immediate = true;\n\t\n\t    var handler = function handler(error) {\n\t      if (!callback) return;\n\t\n\t      callback(__webpack_require__, error);\n\t      callback = null;\n\t    };\n\t\n\t    if (!chunks && failures && failures[chunkId]) {\n\t      handler(true);\n\t      return;\n\t    }\n\t\n\t    ensure(chunkId, function () {\n\t      if (loaded) return;\n\t      loaded = true;\n\t\n\t      if (immediate) {\n\t        // webpack fires callback immediately if chunk was already loaded\n\t        // IE also fires callback immediately if script was already\n\t        // in a cache (AppCache counts too)\n\t        setTimeout(function () {\n\t          handler();\n\t        });\n\t      } else {\n\t        handler();\n\t      }\n\t    });\n\t\n\t    // This is |true| if chunk is already loaded and does not need onError call.\n\t    // This happens because in such case ensure() is performed in sync way\n\t    if (loaded) {\n\t      return;\n\t    }\n\t\n\t    immediate = false;\n\t\n\t    onError(function () {\n\t      if (loaded) return;\n\t      loaded = true;\n\t\n\t      if (chunks) {\n\t        chunks[chunkId] = void 0;\n\t      } else {\n\t        failures || (failures = {});\n\t        failures[chunkId] = true;\n\t      }\n\t\n\t      handler(true);\n\t    });\n\t  };\n\t\n\t  function onError(callback) {\n\t    var script = head.lastChild;\n\t\n\t    if (script.tagName !== \"SCRIPT\") {\n\t      if (typeof console !== \"undefined\" && console.warn) {\n\t        console.warn(\"Script is not a script\", script);\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    script.onload = script.onerror = function () {\n\t      script.onload = script.onerror = null;\n\t      setTimeout(callback, 0);\n\t    };\n\t  }\n\t}\n\n/***/ }),\n\n/***/ 808:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar scrollToHash = function scrollToHash(offsetY) {\n\t  // Make sure React has had a chance to flush to DOM first.\n\t  setTimeout(function () {\n\t    var hash = window.decodeURI(window.location.hash.replace(\"#\", \"\"));\n\t    if (hash !== \"\") {\n\t      var element = document.getElementById(hash);\n\t      if (element) {\n\t        var offset = element.offsetTop;\n\t        window.scrollTo(0, offset - offsetY);\n\t      }\n\t    }\n\t  }, 10);\n\t};\n\t\n\texports.onClientEntry = function (args, pluginOptions) {\n\t  var offsetY = 0;\n\t  if (pluginOptions.offsetY) {\n\t    offsetY = pluginOptions.offsetY;\n\t  }\n\t  // This code is only so scrolling to header hashes works in development.\n\t  // For production, the equivalent code is in gatsby-ssr.js.\n\t  if (false) {\n\t    scrollToHash(offsetY);\n\t  }\n\t};\n\t\n\texports.onRouteUpdate = function (args, pluginOptions) {\n\t  var offsetY = 0;\n\t  if (pluginOptions.offsetY) {\n\t    offsetY = pluginOptions.offsetY;\n\t  }\n\t\n\t  scrollToHash(offsetY);\n\t};\n\n/***/ }),\n\n/***/ 23:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {/*\n\t * @name Lazy.js\n\t * Licensed under the MIT License (see LICENSE.txt)\n\t *\n\t * @fileOverview\n\t * Lazy.js is a lazy evaluation library for JavaScript.\n\t *\n\t * This has been done before. For examples see:\n\t *\n\t * - [wu.js](http://fitzgen.github.io/wu.js/)\n\t * - [Linq.js](http://linqjs.codeplex.com/)\n\t * - [from.js](https://github.com/suckgamoni/fromjs/)\n\t * - [IxJS](http://rx.codeplex.com/)\n\t * - [sloth.js](http://rfw.name/sloth.js/)\n\t *\n\t * However, at least at present, Lazy.js is faster (on average) than any of\n\t * those libraries. It is also more complete, with nearly all of the\n\t * functionality of [Underscore](http://underscorejs.org/) and\n\t * [Lo-Dash](http://lodash.com/).\n\t *\n\t * Finding your way around the code\n\t * --------------------------------\n\t *\n\t * At the heart of Lazy.js is the {@link Sequence} object. You create an initial\n\t * sequence using {@link Lazy}, which can accept an array, object, or string.\n\t * You can then \"chain\" together methods from this sequence, creating a new\n\t * sequence with each call.\n\t *\n\t * Here's an example:\n\t *\n\t *     var data = getReallyBigArray();\n\t *\n\t *     var statistics = Lazy(data)\n\t *       .map(transform)\n\t *       .filter(validate)\n\t *       .reduce(aggregate);\n\t *\n\t * {@link Sequence} is the foundation of other, more specific sequence types.\n\t *\n\t * An {@link ArrayLikeSequence} provides indexed access to its elements.\n\t *\n\t * An {@link ObjectLikeSequence} consists of key/value pairs.\n\t *\n\t * A {@link StringLikeSequence} is like a string (duh): actually, it is an\n\t * {@link ArrayLikeSequence} whose elements happen to be characters.\n\t *\n\t * An {@link AsyncSequence} is special: it iterates over its elements\n\t * asynchronously (so calling `each` generally begins an asynchronous loop and\n\t * returns immediately).\n\t *\n\t * For more information\n\t * --------------------\n\t *\n\t * I wrote a blog post that explains a little bit more about Lazy.js, which you\n\t * can read [here](http://philosopherdeveloper.com/posts/introducing-lazy-js.html).\n\t *\n\t * You can also [create an issue on GitHub](https://github.com/dtao/lazy.js/issues)\n\t * if you have any issues with the library. I work through them eventually.\n\t *\n\t * [@dtao](https://github.com/dtao)\n\t */\n\t\n\t(function(root, factory) {\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    module.exports = factory();\n\t  } else {\n\t    root.Lazy = factory();\n\t  }\n\t})(this, function(context) {\n\t  /**\n\t   * Wraps an object and returns a {@link Sequence}. For `null` or `undefined`,\n\t   * simply returns an empty sequence (see {@link Lazy.strict} for a stricter\n\t   * implementation).\n\t   *\n\t   * - For **arrays**, Lazy will create a sequence comprising the elements in\n\t   *   the array (an {@link ArrayLikeSequence}).\n\t   * - For **objects**, Lazy will create a sequence of key/value pairs\n\t   *   (an {@link ObjectLikeSequence}).\n\t   * - For **strings**, Lazy will create a sequence of characters (a\n\t   *   {@link StringLikeSequence}).\n\t   *\n\t   * @public\n\t   * @param {Array|Object|string} source An array, object, or string to wrap.\n\t   * @returns {Sequence} The wrapped lazy object.\n\t   *\n\t   * @exampleHelpers\n\t   * // Utility functions to provide to all examples\n\t   * function increment(x) { return x + 1; }\n\t   * function isEven(x) { return x % 2 === 0; }\n\t   * function isPositive(x) { return x > 0; }\n\t   * function isNegative(x) { return x < 0; }\n\t   *\n\t   * // HACK!\n\t   * // autodoc tests for private methods don't pull in all variables defined\n\t   * // within the current scope :(\n\t   * var isArray = Array.isArray;\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 4])       // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy({ foo: \"bar\" })  // instanceof Lazy.ObjectLikeSequence\n\t   * Lazy(\"hello, world!\") // instanceof Lazy.StringLikeSequence\n\t   * Lazy()                // sequence: []\n\t   * Lazy(null)            // sequence: []\n\t   */\n\t  function Lazy(source) {\n\t    if (isArray(source)) {\n\t      return new ArrayWrapper(source);\n\t\n\t    } else if (typeof source === \"string\") {\n\t      return new StringWrapper(source);\n\t\n\t    } else if (source instanceof Sequence) {\n\t      return source;\n\t    }\n\t\n\t    if (Lazy.extensions) {\n\t      var extensions = Lazy.extensions, length = extensions.length, result;\n\t      while (!result && length--) {\n\t        result = extensions[length](source);\n\t      }\n\t      if (result) {\n\t        return result;\n\t      }\n\t    }\n\t\n\t    return new ObjectWrapper(source);\n\t  }\n\t\n\t  Lazy.VERSION = '0.5.1';\n\t\n\t  /*** Utility methods of questionable value ***/\n\t\n\t  Lazy.noop = function noop() {};\n\t  Lazy.identity = function identity(x) { return x; };\n\t  Lazy.equality = function equality(x, y) { return x === y; };\n\t\n\t  /**\n\t   * Provides a stricter version of {@link Lazy} which throws an error when\n\t   * attempting to wrap `null`, `undefined`, or numeric or boolean values as a\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @returns {Function} A stricter version of the {@link Lazy} helper function.\n\t   *\n\t   * @examples\n\t   * var Strict = Lazy.strict();\n\t   *\n\t   * Strict()                  // throws\n\t   * Strict(null)              // throws\n\t   * Strict(true)              // throws\n\t   * Strict(5)                 // throws\n\t   * Strict([1, 2, 3])         // instanceof Lazy.ArrayLikeSequence\n\t   * Strict({ foo: \"bar\" })    // instanceof Lazy.ObjectLikeSequence\n\t   * Strict(\"hello, world!\")   // instanceof Lazy.StringLikeSequence\n\t   *\n\t   * // Let's also ensure the static functions are still there.\n\t   * Strict.range(3)           // sequence: [0, 1, 2]\n\t   * Strict.generate(Date.now) // instanceof Lazy.GeneratedSequence\n\t   */\n\t  Lazy.strict = function strict() {\n\t    function StrictLazy(source) {\n\t      if (source == null) {\n\t        throw new Error(\"You cannot wrap null or undefined using Lazy.\");\n\t      }\n\t\n\t      if (typeof source === \"number\" || typeof source === \"boolean\") {\n\t        throw new Error(\"You cannot wrap primitive values using Lazy.\");\n\t      }\n\t\n\t      return Lazy(source);\n\t    };\n\t\n\t    Lazy(Lazy).each(function(property, name) {\n\t      StrictLazy[name] = property;\n\t    });\n\t\n\t    return StrictLazy;\n\t  };\n\t\n\t  /**\n\t   * The `Sequence` object provides a unified API encapsulating the notion of\n\t   * zero or more consecutive elements in a collection, stream, etc.\n\t   *\n\t   * Lazy evaluation\n\t   * ---------------\n\t   *\n\t   * Generally speaking, creating a sequence should not be an expensive operation,\n\t   * and should not iterate over an underlying source or trigger any side effects.\n\t   * This means that chaining together methods that return sequences incurs only\n\t   * the cost of creating the `Sequence` objects themselves and not the cost of\n\t   * iterating an underlying data source multiple times.\n\t   *\n\t   * The following code, for example, creates 4 sequences and does nothing with\n\t   * `source`:\n\t   *\n\t   *     var seq = Lazy(source) // 1st sequence\n\t   *       .map(func)           // 2nd\n\t   *       .filter(pred)        // 3rd\n\t   *       .reverse();          // 4th\n\t   *\n\t   * Lazy's convention is to hold off on iterating or otherwise *doing* anything\n\t   * (aside from creating `Sequence` objects) until you call `each`:\n\t   *\n\t   *     seq.each(function(x) { console.log(x); });\n\t   *\n\t   * Defining custom sequences\n\t   * -------------------------\n\t   *\n\t   * Defining your own type of sequence is relatively simple:\n\t   *\n\t   * 1. Pass a *method name* and an object containing *function overrides* to\n\t   *    {@link Sequence.define}. If the object includes a function called `init`,\n\t   *    this function will be called upon initialization.\n\t   * 2. The object should include at least either a `getIterator` method or an\n\t   *    `each` method. The former supports both asynchronous and synchronous\n\t   *    iteration, but is slightly more cumbersome to implement. The latter\n\t   *    supports synchronous iteration and can be automatically implemented in\n\t   *    terms of the former. You can also implement both if you want, e.g. to\n\t   *    optimize performance. For more info, see {@link Iterator} and\n\t   *    {@link AsyncSequence}.\n\t   *\n\t   * As a trivial example, the following code defines a new method, `sample`,\n\t   * which randomly may or may not include each element from its parent.\n\t   *\n\t   *     Lazy.Sequence.define(\"sample\", {\n\t   *       each: function(fn) {\n\t   *         return this.parent.each(function(e) {\n\t   *           // 50/50 chance of including this element.\n\t   *           if (Math.random() > 0.5) {\n\t   *             return fn(e);\n\t   *           }\n\t   *         });\n\t   *       }\n\t   *     });\n\t   *\n\t   * (Of course, the above could also easily have been implemented using\n\t   * {@link #filter} instead of creating a custom sequence. But I *did* say this\n\t   * was a trivial example, to be fair.)\n\t   *\n\t   * Now it will be possible to create this type of sequence from any parent\n\t   * sequence by calling the method name you specified. In other words, you can\n\t   * now do this:\n\t   *\n\t   *     Lazy(arr).sample();\n\t   *     Lazy(arr).map(func).sample();\n\t   *     Lazy(arr).map(func).filter(pred).sample();\n\t   *\n\t   * Etc., etc.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   */\n\t  function Sequence() {}\n\t\n\t  /**\n\t   * Create a new constructor function for a type inheriting from `Sequence`.\n\t   *\n\t   * @public\n\t   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n\t   *     used for constructing the new sequence. The method will be attached to\n\t   *     the `Sequence` prototype so that it can be chained with any other\n\t   *     sequence methods, like {@link #map}, {@link #filter}, etc.\n\t   * @param {Object} overrides An object containing function overrides for this\n\t   *     new sequence type. **Must** include either `getIterator` or `each` (or\n\t   *     both). *May* include an `init` method as well. For these overrides,\n\t   *     `this` will be the new sequence, and `this.parent` will be the base\n\t   *     sequence from which the new sequence was constructed.\n\t   * @returns {Function} A constructor for a new type inheriting from `Sequence`.\n\t   *\n\t   * @examples\n\t   * // This sequence type logs every element to the specified logger as it\n\t   * // iterates over it.\n\t   * Lazy.Sequence.define(\"verbose\", {\n\t   *   init: function(logger) {\n\t   *     this.logger = logger;\n\t   *   },\n\t   *\n\t   *   each: function(fn) {\n\t   *     var logger = this.logger;\n\t   *     return this.parent.each(function(e, i) {\n\t   *       logger(e);\n\t   *       return fn(e, i);\n\t   *     });\n\t   *   }\n\t   * });\n\t   *\n\t   * Lazy([1, 2, 3]).verbose(logger).each(Lazy.noop) // calls logger 3 times\n\t   */\n\t  Sequence.define = function define(methodName, overrides) {\n\t    if (!overrides || (!overrides.getIterator && !overrides.each)) {\n\t      throw new Error(\"A custom sequence must implement *at least* getIterator or each!\");\n\t    }\n\t\n\t    return defineSequenceType(Sequence, methodName, overrides);\n\t  };\n\t\n\t  /**\n\t   * Gets the number of elements in the sequence. In some cases, this may\n\t   * require eagerly evaluating the sequence.\n\t   *\n\t   * @public\n\t   * @returns {number} The number of elements in the sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).size();                 // => 3\n\t   * Lazy([1, 2]).map(Lazy.identity).size(); // => 2\n\t   * Lazy([1, 2, 3]).reject(isEven).size();  // => 2\n\t   * Lazy([1, 2, 3]).take(1).size();         // => 1\n\t   * Lazy({ foo: 1, bar: 2 }).size();        // => 2\n\t   * Lazy('hello').size();                   // => 5\n\t   */\n\t  Sequence.prototype.size = function size() {\n\t    return this.getIndex().length();\n\t  };\n\t\n\t  /**\n\t   * Creates an {@link Iterator} object with two methods, `moveNext` -- returning\n\t   * true or false -- and `current` -- returning the current value.\n\t   *\n\t   * This method is used when asynchronously iterating over sequences. Any type\n\t   * inheriting from `Sequence` must implement this method or it can't support\n\t   * asynchronous iteration.\n\t   *\n\t   * Note that **this method is not intended to be used directly by application\n\t   * code.** Rather, it is intended as a means for implementors to potentially\n\t   * define custom sequence types that support either synchronous or\n\t   * asynchronous iteration.\n\t   *\n\t   * @public\n\t   * @returns {Iterator} An iterator object.\n\t   *\n\t   * @examples\n\t   * var iterator = Lazy([1, 2]).getIterator();\n\t   *\n\t   * iterator.moveNext(); // => true\n\t   * iterator.current();  // => 1\n\t   * iterator.moveNext(); // => true\n\t   * iterator.current();  // => 2\n\t   * iterator.moveNext(); // => false\n\t   */\n\t  Sequence.prototype.getIterator = function getIterator() {\n\t    return new Iterator(this);\n\t  };\n\t\n\t  /**\n\t   * Gets the root sequence underlying the current chain of sequences.\n\t   */\n\t  Sequence.prototype.root = function root() {\n\t    return this.parent.root();\n\t  };\n\t\n\t  /**\n\t   * Whether or not the current sequence is an asynchronous one. This is more\n\t   * accurate than checking `instanceof {@link AsyncSequence}` because, for\n\t   * example, `Lazy([1, 2, 3]).async().map(Lazy.identity)` returns a sequence\n\t   * that iterates asynchronously even though it's not an instance of\n\t   * `AsyncSequence`.\n\t   *\n\t   * @returns {boolean} Whether or not the current sequence is an asynchronous one.\n\t   */\n\t  Sequence.prototype.isAsync = function isAsync() {\n\t    return this.parent ? this.parent.isAsync() : false;\n\t  };\n\t\n\t  /**\n\t   * Evaluates the sequence and produces the appropriate value (an array in most\n\t   * cases, an object for {@link ObjectLikeSequence}s or a string for\n\t   * {@link StringLikeSequence}s).\n\t   *\n\t   * @returns {Array|string|Object} The value resulting from fully evaluating\n\t   *     the sequence.\n\t   */\n\t  Sequence.prototype.value = function value() {\n\t    return this.toArray();\n\t  };\n\t\n\t  /**\n\t   * Applies the current transformation chain to a given source, returning the\n\t   * resulting value.\n\t   *\n\t   * @examples\n\t   * var sequence = Lazy([])\n\t   *   .map(function(x) { return x * -1; })\n\t   *   .filter(function(x) { return x % 2 === 0; });\n\t   *\n\t   * sequence.apply([1, 2, 3, 4]); // => [-2, -4]\n\t   */\n\t  Sequence.prototype.apply = function apply(source) {\n\t    var root = this.root(),\n\t        previousSource = root.source,\n\t        result;\n\t\n\t    try {\n\t      root.source = source;\n\t      result = this.value();\n\t    } finally {\n\t      root.source = previousSource;\n\t    }\n\t\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * The Iterator object provides an API for iterating over a sequence.\n\t   *\n\t   * The purpose of the `Iterator` type is mainly to offer an agnostic way of\n\t   * iterating over a sequence -- either synchronous (i.e. with a `while` loop)\n\t   * or asynchronously (with recursive calls to either `setTimeout` or --- if\n\t   * available --- `setImmediate`). It is not intended to be used directly by\n\t   * application code.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   * @param {Sequence} sequence The sequence to iterate over.\n\t   */\n\t  function Iterator(sequence) {\n\t    this.sequence = sequence;\n\t    this.index    = -1;\n\t  }\n\t\n\t  /**\n\t   * Gets the current item this iterator is pointing to.\n\t   *\n\t   * @public\n\t   * @returns {*} The current item.\n\t   */\n\t  Iterator.prototype.current = function current() {\n\t    return this.cachedIndex && this.cachedIndex.get(this.index);\n\t  };\n\t\n\t  /**\n\t   * Moves the iterator to the next item in a sequence, if possible.\n\t   *\n\t   * @public\n\t   * @returns {boolean} True if the iterator is able to move to a new item, or else\n\t   *     false.\n\t   */\n\t  Iterator.prototype.moveNext = function moveNext() {\n\t    var cachedIndex = this.cachedIndex;\n\t\n\t    if (!cachedIndex) {\n\t      cachedIndex = this.cachedIndex = this.sequence.getIndex();\n\t    }\n\t\n\t    if (this.index >= cachedIndex.length() - 1) {\n\t      return false;\n\t    }\n\t\n\t    ++this.index;\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Creates an array snapshot of a sequence.\n\t   *\n\t   * Note that for indefinite sequences, this method may raise an exception or\n\t   * (worse) cause the environment to hang.\n\t   *\n\t   * @public\n\t   * @returns {Array} An array containing the current contents of the sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).toArray() // => [1, 2, 3]\n\t   */\n\t  Sequence.prototype.toArray = function toArray() {\n\t    return this.reduce(function(arr, element) {\n\t      arr.push(element);\n\t      return arr;\n\t    }, []);\n\t  };\n\t\n\t  /**\n\t   * Compare this to another sequence for equality.\n\t   *\n\t   * @public\n\t   * @param {Sequence} other The other sequence to compare this one to.\n\t   * @param {Function=} equalityFn An optional equality function, which should\n\t   *     take two arguments and return true or false to indicate whether those\n\t   *     values are considered equal.\n\t   * @returns {boolean} Whether the two sequences contain the same values in\n\t   *     the same order.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2]).equals(Lazy([1, 2]))   // => true\n\t   * Lazy([1, 2]).equals(Lazy([2, 1]))   // => false\n\t   * Lazy([1]).equals(Lazy([1, 2]))      // => false\n\t   * Lazy([1, 2]).equals(Lazy([1]))      // => false\n\t   * Lazy([]).equals(Lazy([]))           // => true\n\t   * Lazy(['foo']).equals(Lazy(['foo'])) // => true\n\t   * Lazy(['1']).equals(Lazy([1]))       // => false\n\t   * Lazy([false]).equals(Lazy([0]))     // => false\n\t   * Lazy([1, 2]).equals([1, 2])         // => false\n\t   * Lazy([1, 2]).equals('[1, 2]')       // => false\n\t   */\n\t  Sequence.prototype.equals = function equals(other, equalityFn) {\n\t    if (!(other instanceof Sequence)) {\n\t      return false;\n\t    }\n\t\n\t    var it  = this.getIterator(),\n\t        oit = other.getIterator(),\n\t        eq  = equalityFn || Lazy.equality;\n\t    while (it.moveNext()) {\n\t      if (!oit.moveNext()) {\n\t        return false;\n\t      }\n\t      if (!eq(it.current(), oit.current())) {\n\t        return false;\n\t      }\n\t    }\n\t    return !oit.moveNext();\n\t  };\n\t\n\t  /**\n\t   * Provides an indexed view into the sequence.\n\t   *\n\t   * For sequences that are already indexed, this will simply return the\n\t   * sequence. For non-indexed sequences, this will eagerly evaluate the\n\t   * sequence.\n\t   *\n\t   * @returns {ArrayLikeSequence} A sequence containing the current contents of\n\t   *     the sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).filter(isEven)            // instanceof Lazy.Sequence\n\t   * Lazy([1, 2, 3]).filter(isEven).getIndex() // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  Sequence.prototype.getIndex = function getIndex() {\n\t    return new ArrayWrapper(this.toArray());\n\t  };\n\t\n\t  /**\n\t   * Returns the element at the specified index. Note that, for sequences that\n\t   * are not {@link ArrayLikeSequence}s, this may require partially evaluating\n\t   * the sequence, iterating to reach the result. (In other words for such\n\t   * sequences this method is not O(1).)\n\t   *\n\t   * @public\n\t   * @param {number} i The index to access.\n\t   * @returns {*} The element.\n\t   *\n\t   */\n\t  Sequence.prototype.get = function get(i) {\n\t    var element;\n\t    this.each(function(e, index) {\n\t      if (index === i) {\n\t        element = e;\n\t        return false;\n\t      }\n\t    });\n\t    return element;\n\t  };\n\t\n\t  /**\n\t   * Provides an indexed, memoized view into the sequence. This will cache the\n\t   * result whenever the sequence is first iterated, so that subsequent\n\t   * iterations will access the same element objects.\n\t   *\n\t   * @public\n\t   * @returns {ArrayLikeSequence} An indexed, memoized sequence containing this\n\t   *     sequence's elements, cached after the first iteration.\n\t   *\n\t   * @example\n\t   * function createObject() { return new Object(); }\n\t   *\n\t   * var plain    = Lazy.generate(createObject, 10),\n\t   *     memoized = Lazy.generate(createObject, 10).memoize();\n\t   *\n\t   * plain.toArray()[0] === plain.toArray()[0];       // => false\n\t   * memoized.toArray()[0] === memoized.toArray()[0]; // => true\n\t   */\n\t  Sequence.prototype.memoize = function memoize() {\n\t    return new MemoizedSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MemoizedSequence(parent) {\n\t    this.parent   = parent;\n\t    this.memo     = [];\n\t    this.iterator = undefined;\n\t    this.complete = false;\n\t  }\n\t\n\t  // MemoizedSequence needs to have its prototype set up after ArrayLikeSequence\n\t\n\t  /**\n\t   * Creates an object from a sequence of key/value pairs.\n\t   *\n\t   * @public\n\t   * @returns {Object} An object with keys and values corresponding to the pairs\n\t   *     of elements in the sequence.\n\t   *\n\t   * @examples\n\t   * var details = [\n\t   *   [\"first\", \"Dan\"],\n\t   *   [\"last\", \"Tao\"],\n\t   *   [\"age\", 29]\n\t   * ];\n\t   *\n\t   * Lazy(details).toObject() // => { first: \"Dan\", last: \"Tao\", age: 29 }\n\t   */\n\t  Sequence.prototype.toObject = function toObject() {\n\t    return this.reduce(function(object, pair) {\n\t      object[pair[0]] = pair[1];\n\t      return object;\n\t    }, {});\n\t  };\n\t\n\t  /**\n\t   * Iterates over this sequence and executes a function for every element.\n\t   *\n\t   * @public\n\t   * @aka forEach\n\t   * @param {Function} fn The function to call on each element in the sequence.\n\t   *     Return false from the function to end the iteration.\n\t   * @returns {boolean} `true` if the iteration evaluated the entire sequence,\n\t   *     or `false` if iteration was ended early.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4]).each(fn) // calls fn 4 times\n\t   */\n\t  Sequence.prototype.each = function each(fn) {\n\t    var iterator = this.getIterator(),\n\t        i = -1;\n\t\n\t    while (iterator.moveNext()) {\n\t      if (fn(iterator.current(), ++i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  Sequence.prototype.forEach = function forEach(fn) {\n\t    return this.each(fn);\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values are calculated by passing this sequence's\n\t   * elements through some mapping function.\n\t   *\n\t   * @public\n\t   * @aka collect\n\t   * @param {Function} mapFn The mapping function used to project this sequence's\n\t   *     elements onto a new sequence. This function takes up to two arguments:\n\t   *     the element, and the current index.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function addIndexToValue(e, i) { return e + i; }\n\t   *\n\t   * Lazy([]).map(increment)              // sequence: []\n\t   * Lazy([1, 2, 3]).map(increment)       // sequence: [2, 3, 4]\n\t   * Lazy([1, 2, 3]).map(addIndexToValue) // sequence: [1, 3, 5]\n\t   *\n\t   * @benchmarks\n\t   * function increment(x) { return x + 1; }\n\t   *\n\t   * var smArr = Lazy.range(10).toArray(),\n\t   *     lgArr = Lazy.range(100).toArray();\n\t   *\n\t   * Lazy(smArr).map(increment).each(Lazy.noop) // lazy - 10 elements\n\t   * Lazy(lgArr).map(increment).each(Lazy.noop) // lazy - 100 elements\n\t   * _.each(_.map(smArr, increment), _.noop)    // lodash - 10 elements\n\t   * _.each(_.map(lgArr, increment), _.noop)    // lodash - 100 elements\n\t   */\n\t  Sequence.prototype.map = function map(mapFn) {\n\t    return new MappedSequence(this, createCallback(mapFn));\n\t  };\n\t\n\t  Sequence.prototype.collect = function collect(mapFn) {\n\t    return this.map(mapFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MappedSequence(parent, mapFn) {\n\t    this.parent = parent;\n\t    this.mapFn  = mapFn;\n\t  }\n\t\n\t  MappedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  MappedSequence.prototype.getIterator = function getIterator() {\n\t    return new MappingIterator(this.parent, this.mapFn);\n\t  };\n\t\n\t  MappedSequence.prototype.each = function each(fn) {\n\t    var mapFn = this.mapFn;\n\t    return this.parent.each(function(e, i) {\n\t      return fn(mapFn(e, i), i);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MappingIterator(sequence, mapFn) {\n\t    this.iterator = sequence.getIterator();\n\t    this.mapFn    = mapFn;\n\t    this.index    = -1;\n\t  }\n\t\n\t  MappingIterator.prototype.current = function current() {\n\t    return this.mapFn(this.iterator.current(), this.index);\n\t  };\n\t\n\t  MappingIterator.prototype.moveNext = function moveNext() {\n\t    if (this.iterator.moveNext()) {\n\t      ++this.index;\n\t      return true;\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values are calculated by accessing the specified\n\t   * property from each element in this sequence.\n\t   *\n\t   * @public\n\t   * @param {string} propertyName The name of the property to access for every\n\t   *     element in this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var people = [\n\t   *   { first: \"Dan\", last: \"Tao\" },\n\t   *   { first: \"Bob\", last: \"Smith\" }\n\t   * ];\n\t   *\n\t   * Lazy(people).pluck(\"last\") // sequence: [\"Tao\", \"Smith\"]\n\t   */\n\t  Sequence.prototype.pluck = function pluck(property) {\n\t    return this.map(property);\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values are calculated by invoking the specified\n\t   * function on each element in this sequence.\n\t   *\n\t   * @public\n\t   * @param {string} methodName The name of the method to invoke for every element\n\t   *     in this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function Person(first, last) {\n\t   *   this.fullName = function fullName() {\n\t   *     return first + \" \" + last;\n\t   *   };\n\t   * }\n\t   *\n\t   * var people = [\n\t   *   new Person(\"Dan\", \"Tao\"),\n\t   *   new Person(\"Bob\", \"Smith\")\n\t   * ];\n\t   *\n\t   * Lazy(people).invoke(\"fullName\") // sequence: [\"Dan Tao\", \"Bob Smith\"]\n\t   */\n\t  Sequence.prototype.invoke = function invoke(methodName) {\n\t    return this.map(function(e) {\n\t      return e[methodName]();\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values are the elements of this sequence which\n\t   * satisfy the specified predicate.\n\t   *\n\t   * @public\n\t   * @aka select\n\t   * @param {Function} filterFn The predicate to call on each element in this\n\t   *     sequence, which returns true if the element should be included.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var numbers = [1, 2, 3, 4, 5, 6];\n\t   *\n\t   * Lazy(numbers).filter(isEven) // sequence: [2, 4, 6]\n\t   *\n\t   * @benchmarks\n\t   * function isEven(x) { return x % 2 === 0; }\n\t   *\n\t   * var smArr = Lazy.range(10).toArray(),\n\t   *     lgArr = Lazy.range(100).toArray();\n\t   *\n\t   * Lazy(smArr).filter(isEven).each(Lazy.noop) // lazy - 10 elements\n\t   * Lazy(lgArr).filter(isEven).each(Lazy.noop) // lazy - 100 elements\n\t   * _.each(_.filter(smArr, isEven), _.noop)    // lodash - 10 elements\n\t   * _.each(_.filter(lgArr, isEven), _.noop)    // lodash - 100 elements\n\t   */\n\t  Sequence.prototype.filter = function filter(filterFn) {\n\t    return new FilteredSequence(this, createCallback(filterFn));\n\t  };\n\t\n\t  Sequence.prototype.select = function select(filterFn) {\n\t    return this.filter(filterFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function FilteredSequence(parent, filterFn) {\n\t    this.parent   = parent;\n\t    this.filterFn = filterFn;\n\t  }\n\t\n\t  FilteredSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  FilteredSequence.prototype.getIterator = function getIterator() {\n\t    return new FilteringIterator(this.parent, this.filterFn);\n\t  };\n\t\n\t  FilteredSequence.prototype.each = function each(fn) {\n\t    var filterFn = this.filterFn,\n\t        j = 0;\n\t\n\t    return this.parent.each(function(e, i) {\n\t      if (filterFn(e, i)) {\n\t        return fn(e, j++);\n\t      }\n\t    });\n\t  };\n\t\n\t  FilteredSequence.prototype.reverse = function reverse() {\n\t    return this.parent.reverse().filter(this.filterFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function FilteringIterator(sequence, filterFn) {\n\t    this.iterator = sequence.getIterator();\n\t    this.filterFn = filterFn;\n\t    this.index    = 0;\n\t  }\n\t\n\t  FilteringIterator.prototype.current = function current() {\n\t    return this.value;\n\t  };\n\t\n\t  FilteringIterator.prototype.moveNext = function moveNext() {\n\t    var iterator = this.iterator,\n\t        filterFn = this.filterFn,\n\t        value;\n\t\n\t    while (iterator.moveNext()) {\n\t      value = iterator.current();\n\t      if (filterFn(value, this.index++)) {\n\t        this.value = value;\n\t        return true;\n\t      }\n\t    }\n\t\n\t    this.value = undefined;\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values exclude the elements of this sequence\n\t   * identified by the specified predicate.\n\t   *\n\t   * @public\n\t   * @param {Function} rejectFn The predicate to call on each element in this\n\t   *     sequence, which returns true if the element should be omitted.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4, 5]).reject(isEven)              // sequence: [1, 3, 5]\n\t   * Lazy([{ foo: 1 }, { bar: 2 }]).reject('foo')      // sequence: [{ bar: 2 }]\n\t   * Lazy([{ foo: 1 }, { foo: 2 }]).reject({ foo: 2 }) // sequence: [{ foo: 1 }]\n\t   */\n\t  Sequence.prototype.reject = function reject(rejectFn) {\n\t    rejectFn = createCallback(rejectFn);\n\t    return this.filter(function(e) { return !rejectFn(e); });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values have the specified type, as determined\n\t   * by the `typeof` operator.\n\t   *\n\t   * @public\n\t   * @param {string} type The type of elements to include from the underlying\n\t   *     sequence, i.e. where `typeof [element] === [type]`.\n\t   * @returns {Sequence} The new sequence, comprising elements of the specified\n\t   *     type.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 'foo', 'bar']).ofType('number')  // sequence: [1, 2]\n\t   * Lazy([1, 2, 'foo', 'bar']).ofType('string')  // sequence: ['foo', 'bar']\n\t   * Lazy([1, 2, 'foo', 'bar']).ofType('boolean') // sequence: []\n\t   */\n\t  Sequence.prototype.ofType = function ofType(type) {\n\t    return this.filter(function(e) { return typeof e === type; });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence whose values are the elements of this sequence with\n\t   * property names and values matching those of the specified object.\n\t   *\n\t   * @public\n\t   * @param {Object} properties The properties that should be found on every\n\t   *     element that is to be included in this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var people = [\n\t   *   { first: \"Dan\", last: \"Tao\" },\n\t   *   { first: \"Bob\", last: \"Smith\" }\n\t   * ];\n\t   *\n\t   * Lazy(people).where({ first: \"Dan\" }) // sequence: [{ first: \"Dan\", last: \"Tao\" }]\n\t   *\n\t   * @benchmarks\n\t   * var animals = [\"dog\", \"cat\", \"mouse\", \"horse\", \"pig\", \"snake\"];\n\t   *\n\t   * Lazy(animals).where({ length: 3 }).each(Lazy.noop) // lazy\n\t   * _.each(_.where(animals, { length: 3 }), _.noop)    // lodash\n\t   */\n\t  Sequence.prototype.where = function where(properties) {\n\t    return this.filter(properties);\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with the same elements as this one, but to be iterated\n\t   * in the opposite order.\n\t   *\n\t   * Note that in some (but not all) cases, the only way to create such a sequence\n\t   * may require iterating the entire underlying source when `each` is called.\n\t   *\n\t   * @public\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).reverse() // sequence: [3, 2, 1]\n\t   * Lazy([]).reverse()        // sequence: []\n\t   */\n\t  Sequence.prototype.reverse = function reverse() {\n\t    return new ReversedSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ReversedSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  ReversedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ReversedSequence.prototype.getIterator = function getIterator() {\n\t    return new ReversedIterator(this.parent);\n\t  };\n\t\n\t  /**\n\t   * @constuctor\n\t   */\n\t  function ReversedIterator(sequence) {\n\t    this.sequence = sequence;\n\t  }\n\t\n\t  ReversedIterator.prototype.current = function current() {\n\t    return this.getIndex().get(this.index);\n\t  };\n\t\n\t  ReversedIterator.prototype.moveNext = function moveNext() {\n\t    var index  = this.getIndex(),\n\t        length = index.length();\n\t\n\t    if (typeof this.index === \"undefined\") {\n\t      this.index = length;\n\t    }\n\t\n\t    return (--this.index >= 0);\n\t  };\n\t\n\t  ReversedIterator.prototype.getIndex = function getIndex() {\n\t    if (!this.cachedIndex) {\n\t      this.cachedIndex = this.sequence.getIndex();\n\t    }\n\t\n\t    return this.cachedIndex;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with all of the elements of this one, plus those of\n\t   * the given array(s).\n\t   *\n\t   * @public\n\t   * @param {...*} var_args One or more values (or arrays of values) to use for\n\t   *     additional items after this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var left  = [1, 2, 3];\n\t   * var right = [4, 5, 6];\n\t   *\n\t   * Lazy(left).concat(right)             // sequence: [1, 2, 3, 4, 5, 6]\n\t   * Lazy(left).concat(Lazy(right))       // sequence: [1, 2, 3, 4, 5, 6]\n\t   * Lazy(left).concat(right, [7, 8])     // sequence: [1, 2, 3, 4, 5, 6, 7, 8]\n\t   * Lazy(left).concat([4, [5, 6]])       // sequence: [1, 2, 3, 4, [5, 6]]\n\t   * Lazy(left).concat(Lazy([4, [5, 6]])) // sequence: [1, 2, 3, 4, [5, 6]]\n\t   */\n\t  Sequence.prototype.concat = function concat(var_args) {\n\t    return new ConcatenatedSequence(this, arraySlice.call(arguments, 0));\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ConcatenatedSequence(parent, arrays) {\n\t    this.parent = parent;\n\t    this.arrays = arrays;\n\t  }\n\t\n\t  ConcatenatedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ConcatenatedSequence.prototype.each = function each(fn) {\n\t    var done = false,\n\t        i = 0;\n\t\n\t    this.parent.each(function(e) {\n\t      if (fn(e, i++) === false) {\n\t        done = true;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    if (!done) {\n\t      Lazy(this.arrays).flatten(true).each(function(e) {\n\t        if (fn(e, i++) === false) {\n\t          return false;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising the first N elements from this sequence, OR\n\t   * (if N is `undefined`) simply returns the first element of this sequence.\n\t   *\n\t   * @public\n\t   * @aka head, take\n\t   * @param {number=} count The number of elements to take from this sequence. If\n\t   *     this value exceeds the length of the sequence, the resulting sequence\n\t   *     will be essentially the same as this one.\n\t   * @returns {*} The new sequence (or the first element from this sequence if\n\t   *     no count was given).\n\t   *\n\t   * @examples\n\t   * function powerOfTwo(exp) {\n\t   *   return Math.pow(2, exp);\n\t   * }\n\t   *\n\t   * Lazy.generate(powerOfTwo).first()          // => 1\n\t   * Lazy.generate(powerOfTwo).first(5)         // sequence: [1, 2, 4, 8, 16]\n\t   * Lazy.generate(powerOfTwo).skip(2).first()  // => 4\n\t   * Lazy.generate(powerOfTwo).skip(2).first(2) // sequence: [4, 8]\n\t   */\n\t  Sequence.prototype.first = function first(count) {\n\t    if (typeof count === \"undefined\") {\n\t      return getFirst(this);\n\t    }\n\t    return new TakeSequence(this, count);\n\t  };\n\t\n\t  Sequence.prototype.head =\n\t  Sequence.prototype.take = function (count) {\n\t    return this.first(count);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function TakeSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count  = count;\n\t  }\n\t\n\t  TakeSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  TakeSequence.prototype.getIterator = function getIterator() {\n\t    return new TakeIterator(this.parent, this.count);\n\t  };\n\t\n\t  TakeSequence.prototype.each = function each(fn) {\n\t    var count = this.count,\n\t        i     = 0;\n\t\n\t    var result;\n\t    var handle = this.parent.each(function(e) {\n\t      if (i < count) { result = fn(e, i++); }\n\t      if (i >= count) { return false; }\n\t      return result;\n\t    });\n\t\n\t    if (handle instanceof AsyncHandle) {\n\t      return handle;\n\t    }\n\t\n\t    return i === count && result !== false;\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function TakeIterator(sequence, count) {\n\t    this.iterator = sequence.getIterator();\n\t    this.count    = count;\n\t  }\n\t\n\t  TakeIterator.prototype.current = function current() {\n\t    return this.iterator.current();\n\t  };\n\t\n\t  TakeIterator.prototype.moveNext = function moveNext() {\n\t    return ((--this.count >= 0) && this.iterator.moveNext());\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising the elements from the head of this sequence\n\t   * that satisfy some predicate. Once an element is encountered that doesn't\n\t   * satisfy the predicate, iteration will stop.\n\t   *\n\t   * @public\n\t   * @param {Function} predicate\n\t   * @returns {Sequence} The new sequence\n\t   *\n\t   * @examples\n\t   * function lessThan(x) {\n\t   *   return function(y) {\n\t   *     return y < x;\n\t   *   };\n\t   * }\n\t   *\n\t   * Lazy([1, 2, 3, 4]).takeWhile(lessThan(3)) // sequence: [1, 2]\n\t   * Lazy([1, 2, 3, 4]).takeWhile(lessThan(0)) // sequence: []\n\t   */\n\t  Sequence.prototype.takeWhile = function takeWhile(predicate) {\n\t    return new TakeWhileSequence(this, predicate);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function TakeWhileSequence(parent, predicate) {\n\t    this.parent    = parent;\n\t    this.predicate = predicate;\n\t  }\n\t\n\t  TakeWhileSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  TakeWhileSequence.prototype.each = function each(fn) {\n\t    var predicate = this.predicate,\n\t        finished = false,\n\t        j = 0;\n\t\n\t    var result = this.parent.each(function(e, i) {\n\t      if (!predicate(e, i)) {\n\t        finished = true;\n\t        return false;\n\t      }\n\t\n\t      return fn(e, j++);\n\t    });\n\t\n\t    if (result instanceof AsyncHandle) {\n\t      return result;\n\t    }\n\t\n\t    return finished;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising all but the last N elements of this\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @param {number=} count The number of items to omit from the end of the\n\t   *     sequence (defaults to 1).\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4]).initial()                    // sequence: [1, 2, 3]\n\t   * Lazy([1, 2, 3, 4]).initial(2)                   // sequence: [1, 2]\n\t   * Lazy([1, 2, 3]).filter(Lazy.identity).initial() // sequence: [1, 2]\n\t   */\n\t  Sequence.prototype.initial = function initial(count) {\n\t    return new InitialSequence(this, count);\n\t  };\n\t\n\t  function InitialSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count = typeof count === \"number\" ? count : 1;\n\t  }\n\t\n\t  InitialSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  InitialSequence.prototype.each = function each(fn) {\n\t    var index = this.parent.getIndex();\n\t    return index.take(index.length() - this.count).each(fn);\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising the last N elements of this sequence, OR\n\t   * (if N is `undefined`) simply returns the last element of this sequence.\n\t   *\n\t   * @public\n\t   * @param {number=} count The number of items to take from the end of the\n\t   *     sequence.\n\t   * @returns {*} The new sequence (or the last element from this sequence\n\t   *     if no count was given).\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).last()                 // => 3\n\t   * Lazy([1, 2, 3]).last(2)                // sequence: [2, 3]\n\t   * Lazy([1, 2, 3]).filter(isEven).last(2) // sequence: [2]\n\t   */\n\t  Sequence.prototype.last = function last(count) {\n\t    if (typeof count === \"undefined\") {\n\t      return this.reverse().first();\n\t    }\n\t    return this.reverse().take(count).reverse();\n\t  };\n\t\n\t  /**\n\t   * Returns the first element in this sequence with property names and values\n\t   * matching those of the specified object.\n\t   *\n\t   * @public\n\t   * @param {Object} properties The properties that should be found on some\n\t   *     element in this sequence.\n\t   * @returns {*} The found element, or `undefined` if none exists in this\n\t   *     sequence.\n\t   *\n\t   * @examples\n\t   * var words = [\"foo\", \"bar\"];\n\t   *\n\t   * Lazy(words).findWhere({ 0: \"f\" }); // => \"foo\"\n\t   * Lazy(words).findWhere({ 0: \"z\" }); // => undefined\n\t   */\n\t  Sequence.prototype.findWhere = function findWhere(properties) {\n\t    return this.where(properties).first();\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising all but the first N elements of this\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @aka skip, tail, rest\n\t   * @param {number=} count The number of items to omit from the beginning of the\n\t   *     sequence (defaults to 1).\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4]).rest()  // sequence: [2, 3, 4]\n\t   * Lazy([1, 2, 3, 4]).rest(0) // sequence: [1, 2, 3, 4]\n\t   * Lazy([1, 2, 3, 4]).rest(2) // sequence: [3, 4]\n\t   * Lazy([1, 2, 3, 4]).rest(5) // sequence: []\n\t   */\n\t  Sequence.prototype.rest = function rest(count) {\n\t    return new DropSequence(this, count);\n\t  };\n\t\n\t  Sequence.prototype.skip =\n\t  Sequence.prototype.tail =\n\t  Sequence.prototype.drop = function drop(count) {\n\t    return this.rest(count);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function DropSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count  = typeof count === \"number\" ? count : 1;\n\t  }\n\t\n\t  DropSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  DropSequence.prototype.each = function each(fn) {\n\t    var count   = this.count,\n\t        dropped = 0,\n\t        i       = 0;\n\t\n\t    return this.parent.each(function(e) {\n\t      if (dropped++ < count) { return; }\n\t      return fn(e, i++);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence comprising the elements from this sequence *after*\n\t   * those that satisfy some predicate. The sequence starts with the first\n\t   * element that does not match the predicate.\n\t   *\n\t   * @public\n\t   * @aka skipWhile\n\t   * @param {Function} predicate\n\t   * @returns {Sequence} The new sequence\n\t   */\n\t  Sequence.prototype.dropWhile = function dropWhile(predicate) {\n\t    return new DropWhileSequence(this, predicate);\n\t  };\n\t\n\t  Sequence.prototype.skipWhile = function skipWhile(predicate) {\n\t    return this.dropWhile(predicate);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function DropWhileSequence(parent, predicate) {\n\t    this.parent    = parent;\n\t    this.predicate = predicate;\n\t  }\n\t\n\t  DropWhileSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  DropWhileSequence.prototype.each = function each(fn) {\n\t    var predicate = this.predicate,\n\t        done      = false;\n\t\n\t    return this.parent.each(function(e) {\n\t      if (!done) {\n\t        if (predicate(e)) {\n\t          return;\n\t        }\n\t\n\t        done = true;\n\t      }\n\t\n\t      return fn(e);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with the same elements as this one, but ordered\n\t   * using the specified comparison function.\n\t   *\n\t   * This has essentially the same behavior as calling\n\t   * [`Array#sort`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort),\n\t   * but obviously instead of modifying the collection it returns a new\n\t   * {@link Sequence} object.\n\t   *\n\t   * @public\n\t   * @param {Function=} sortFn The function used to compare elements in the\n\t   *     sequence. The function will be passed two elements and should return:\n\t   *     - 1 if the first is greater\n\t   *     - -1 if the second is greater\n\t   *     - 0 if the two values are the same\n\t   * @param {boolean} descending Whether or not the resulting sequence should be\n\t   *     in descending order (defaults to `false`).\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([5, 10, 1]).sort()                // sequence: [1, 5, 10]\n\t   * Lazy(['foo', 'bar']).sort()            // sequence: ['bar', 'foo']\n\t   * Lazy(['b', 'c', 'a']).sort(null, true) // sequence: ['c', 'b', 'a']\n\t   * Lazy([5, 10, 1]).sort(null, true)      // sequence: [10, 5, 1]\n\t   *\n\t   * // Sorting w/ custom comparison function\n\t   * Lazy(['a', 'ab', 'aa', 'ba', 'b', 'abc']).sort(function compare(x, y) {\n\t   *   if (x.length && (x.length !== y.length)) { return compare(x.length, y.length); }\n\t   *   if (x === y) { return 0; }\n\t   *   return x > y ? 1 : -1;\n\t   * });\n\t   * // => sequence: ['a', 'b', 'aa', 'ab', 'ba', 'abc']\n\t   */\n\t  Sequence.prototype.sort = function sort(sortFn, descending) {\n\t    sortFn || (sortFn = compare);\n\t    if (descending) { sortFn = reverseArguments(sortFn); }\n\t    return new SortedSequence(this, sortFn);\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with the same elements as this one, but ordered by\n\t   * the results of the given function.\n\t   *\n\t   * You can pass:\n\t   *\n\t   * - a *string*, to sort by the named property\n\t   * - a function, to sort by the result of calling the function on each element\n\t   *\n\t   * @public\n\t   * @param {Function} sortFn The function to call on the elements in this\n\t   *     sequence, in order to sort them.\n\t   * @param {boolean} descending Whether or not the resulting sequence should be\n\t   *     in descending order (defaults to `false`).\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function population(country) {\n\t   *   return country.pop;\n\t   * }\n\t   *\n\t   * function area(country) {\n\t   *   return country.sqkm;\n\t   * }\n\t   *\n\t   * var countries = [\n\t   *   { name: \"USA\", pop: 320000000, sqkm: 9600000 },\n\t   *   { name: \"Brazil\", pop: 194000000, sqkm: 8500000 },\n\t   *   { name: \"Nigeria\", pop: 174000000, sqkm: 924000 },\n\t   *   { name: \"China\", pop: 1350000000, sqkm: 9700000 },\n\t   *   { name: \"Russia\", pop: 143000000, sqkm: 17000000 },\n\t   *   { name: \"Australia\", pop: 23000000, sqkm: 7700000 }\n\t   * ];\n\t   *\n\t   * Lazy(countries).sortBy(population).last(3).pluck('name') // sequence: [\"Brazil\", \"USA\", \"China\"]\n\t   * Lazy(countries).sortBy(area).last(3).pluck('name')       // sequence: [\"USA\", \"China\", \"Russia\"]\n\t   * Lazy(countries).sortBy(area, true).first(3).pluck('name') // sequence: [\"Russia\", \"China\", \"USA\"]\n\t   *\n\t   * @benchmarks\n\t   * var randoms = Lazy.generate(Math.random).take(100).toArray();\n\t   *\n\t   * Lazy(randoms).sortBy(Lazy.identity).each(Lazy.noop) // lazy\n\t   * _.each(_.sortBy(randoms, Lazy.identity), _.noop)    // lodash\n\t   */\n\t  Sequence.prototype.sortBy = function sortBy(sortFn, descending) {\n\t    sortFn = createComparator(sortFn);\n\t    if (descending) { sortFn = reverseArguments(sortFn); }\n\t    return new SortedSequence(this, sortFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SortedSequence(parent, sortFn) {\n\t    this.parent = parent;\n\t    this.sortFn = sortFn;\n\t  }\n\t\n\t  SortedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  SortedSequence.prototype.each = function each(fn) {\n\t    var sortFn = this.sortFn,\n\t        result = this.parent.toArray();\n\t\n\t    result.sort(sortFn);\n\t\n\t    return forEach(result, fn);\n\t  };\n\t\n\t  /**\n\t   * @examples\n\t   * var items = [{ a: 4 }, { a: 3 }, { a: 5 }];\n\t   *\n\t   * Lazy(items).sortBy('a').reverse();\n\t   * // => sequence: [{ a: 5 }, { a: 4 }, { a: 3 }]\n\t   *\n\t   * Lazy(items).sortBy('a').reverse().reverse();\n\t   * // => sequence: [{ a: 3 }, { a: 4 }, { a: 5 }]\n\t   */\n\t  SortedSequence.prototype.reverse = function reverse() {\n\t    return new SortedSequence(this.parent, reverseArguments(this.sortFn));\n\t  };\n\t\n\t  /**\n\t   * Creates a new {@link ObjectLikeSequence} comprising the elements in this\n\t   * one, grouped together according to some key. The value associated with each\n\t   * key in the resulting object-like sequence is an array containing all of\n\t   * the elements in this sequence with that key.\n\t   *\n\t   * @public\n\t   * @param {Function|string} keyFn The function to call on the elements in this\n\t   *     sequence to obtain a key by which to group them, or a string representing\n\t   *     a parameter to read from all the elements in this sequence.\n\t   * @param {Function|string} valFn (Optional) The function to call on the elements\n\t   *     in this sequence to assign to the value for each instance to appear in the\n\t   *     group, or a string representing a parameter to read from all the elements\n\t   *     in this sequence.\n\t   * @returns {ObjectLikeSequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function oddOrEven(x) {\n\t   *   return x % 2 === 0 ? 'even' : 'odd';\n\t   * }\n\t   * function square(x) {\n\t   *   return x*x;\n\t   * }\n\t   *\n\t   * var numbers = [1, 2, 3, 4, 5];\n\t   *\n\t   * Lazy(numbers).groupBy(oddOrEven)                     // sequence: { odd: [1, 3, 5], even: [2, 4] }\n\t   * Lazy(numbers).groupBy(oddOrEven).get(\"odd\")          // => [1, 3, 5]\n\t   * Lazy(numbers).groupBy(oddOrEven).get(\"foo\")          // => undefined\n\t   * Lazy(numbers).groupBy(oddOrEven, square).get(\"even\") // => [4, 16]\n\t   *\n\t   * Lazy([\n\t   *   { name: 'toString' },\n\t   *   { name: 'toString' }\n\t   * ]).groupBy('name');\n\t   * // => sequence: {\n\t   *   'toString': [\n\t   *     { name: 'toString' },\n\t   *     { name: 'toString' }\n\t   *   ]\n\t   * }\n\t   */\n\t  Sequence.prototype.groupBy = function groupBy(keyFn, valFn) {\n\t    return new GroupedSequence(this, keyFn, valFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function GroupedSequence(parent, keyFn, valFn) {\n\t    this.parent = parent;\n\t    this.keyFn  = keyFn;\n\t    this.valFn  = valFn;\n\t  }\n\t\n\t  // GroupedSequence must have its prototype set after ObjectLikeSequence has\n\t  // been fully initialized.\n\t\n\t  /**\n\t   * Creates a new {@link ObjectLikeSequence} comprising the elements in this\n\t   * one, indexed according to some key.\n\t   *\n\t   * @public\n\t   * @param {Function|string} keyFn The function to call on the elements in this\n\t   *     sequence to obtain a key by which to index them, or a string\n\t   *     representing a property to read from all the elements in this sequence.\n\t   * @param {Function|string} valFn (Optional) The function to call on the elements\n\t   *     in this sequence to assign to the value of the indexed object, or a string\n\t   *     representing a parameter to read from all the elements in this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var people = [\n\t   *   { name: 'Bob', age: 25 },\n\t   *   { name: 'Fred', age: 34 }\n\t   * ];\n\t   *\n\t   * var bob  = people[0],\n\t   *     fred = people[1];\n\t   *\n\t   * Lazy(people).indexBy('name')        // sequence: { 'Bob': bob, 'Fred': fred }\n\t   * Lazy(people).indexBy('name', 'age') // sequence: { 'Bob': 25, 'Fred': 34 }\n\t   */\n\t  Sequence.prototype.indexBy = function(keyFn, valFn) {\n\t    return new IndexedSequence(this, keyFn, valFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedSequence(parent, keyFn, valFn) {\n\t    this.parent = parent;\n\t    this.keyFn  = keyFn;\n\t    this.valFn  = valFn;\n\t  }\n\t\n\t  // IndexedSequence must have its prototype set after ObjectLikeSequence has\n\t  // been fully initialized.\n\t\n\t  /**\n\t   * Creates a new {@link ObjectLikeSequence} containing the unique keys of all\n\t   * the elements in this sequence, each paired with the number of elements\n\t   * in this sequence having that key.\n\t   *\n\t   * @public\n\t   * @param {Function|string} keyFn The function to call on the elements in this\n\t   *     sequence to obtain a key by which to count them, or a string representing\n\t   *     a parameter to read from all the elements in this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function oddOrEven(x) {\n\t   *   return x % 2 === 0 ? 'even' : 'odd';\n\t   * }\n\t   *\n\t   * var numbers = [1, 2, 3, 4, 5];\n\t   *\n\t   * Lazy(numbers).countBy(oddOrEven)            // sequence: { odd: 3, even: 2 }\n\t   * Lazy(numbers).countBy(oddOrEven).get(\"odd\") // => 3\n\t   * Lazy(numbers).countBy(oddOrEven).get(\"foo\") // => undefined\n\t   */\n\t  Sequence.prototype.countBy = function countBy(keyFn) {\n\t    return new CountedSequence(this, keyFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function CountedSequence(parent, keyFn) {\n\t    this.parent = parent;\n\t    this.keyFn  = keyFn;\n\t  }\n\t\n\t  // CountedSequence, like GroupedSequence, must have its prototype set after\n\t  // ObjectLikeSequence has been fully initialized.\n\t\n\t  /**\n\t   * Creates a new sequence with every unique element from this one appearing\n\t   * exactly once (i.e., with duplicates removed).\n\t   *\n\t   * @public\n\t   * @aka unique\n\t   * @param {Function=} keyFn An optional function to produce the key for each\n\t   *     object. This key is then tested for uniqueness as  opposed to the\n\t   *     object reference.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 2, 3, 3, 3]).uniq() // sequence: [1, 2, 3]\n\t   * Lazy([{ name: 'mike' }, \n\t   * \t{ name: 'sarah' }, \n\t   * \t{ name: 'mike' }\n\t   * ]).uniq('name')\n\t   * // sequence: [{ name: 'mike' }, { name: 'sarah' }]\n\t   *\n\t   * @benchmarks\n\t   * function randomOf(array) {\n\t   *   return function() {\n\t   *     return array[Math.floor(Math.random() * array.length)];\n\t   *   };\n\t   * }\n\t   *\n\t   * var mostUnique = Lazy.generate(randomOf(_.range(100)), 100).toArray(),\n\t   *     someUnique = Lazy.generate(randomOf(_.range(50)), 100).toArray(),\n\t   *     mostDupes  = Lazy.generate(randomOf(_.range(5)), 100).toArray();\n\t   *\n\t   * Lazy(mostUnique).uniq().each(Lazy.noop) // lazy - mostly unique elements\n\t   * Lazy(someUnique).uniq().each(Lazy.noop) // lazy - some unique elements\n\t   * Lazy(mostDupes).uniq().each(Lazy.noop)  // lazy - mostly duplicate elements\n\t   * _.each(_.uniq(mostUnique), _.noop)      // lodash - mostly unique elements\n\t   * _.each(_.uniq(someUnique), _.noop)      // lodash - some unique elements\n\t   * _.each(_.uniq(mostDupes), _.noop)       // lodash - mostly duplicate elements\n\t   */\n\t  Sequence.prototype.uniq = function uniq(keyFn) {\n\t    return new UniqueSequence(this, keyFn);\n\t  };\n\t\n\t  Sequence.prototype.unique = function unique(keyFn) {\n\t    return this.uniq(keyFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function UniqueSequence(parent, keyFn) {\n\t    this.parent = parent;\n\t    this.keyFn  = keyFn;\n\t  }\n\t\n\t  UniqueSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  UniqueSequence.prototype.each = function each(fn) {\n\t    var cache = new Set(),\n\t        keyFn = this.keyFn,\n\t        i     = 0;\n\t\n\t    if (keyFn) {\n\t      keyFn = createCallback(keyFn);\n\t      return this.parent.each(function(e) {\n\t        if (cache.add(keyFn(e))) {\n\t          return fn(e, i++);\n\t        }\n\t      });\n\t\n\t    } else {\n\t      return this.parent.each(function(e) {\n\t        if (cache.add(e)) {\n\t          return fn(e, i++);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence by combining the elements from this sequence with\n\t   * corresponding elements from the specified array(s).\n\t   *\n\t   * @public\n\t   * @param {...Array} var_args One or more arrays of elements to combine with\n\t   *     those of this sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2]).zip([3, 4])     // sequence: [[1, 3], [2, 4]]\n\t   * Lazy([]).zip([0])            // sequence: [[undefined, 0]]\n\t   * Lazy([0]).zip([])            // sequence: [[0, undefined]]\n\t   * Lazy([]).zip([1, 2], [3, 4]) // sequence: [[undefined, 1, 3], [undefined, 2, 4]]\n\t   * Lazy([]).zip([1], [2, 3])    // sequence: [[undefined, 1, 2], [undefined, undefined, 3]]\n\t   * Lazy([1, 2]).zip([3], [4])   // sequence: [[1, 3, 4], [2, undefined, undefined]]\n\t   *\n\t   * @benchmarks\n\t   * var smArrL = Lazy.range(10).toArray(),\n\t   *     smArrR = Lazy.range(10, 20).toArray(),\n\t   *     lgArrL = Lazy.range(100).toArray(),\n\t   *     lgArrR = Lazy.range(100, 200).toArray();\n\t   *\n\t   * Lazy(smArrL).zip(smArrR).each(Lazy.noop) // lazy - zipping 10-element arrays\n\t   * Lazy(lgArrL).zip(lgArrR).each(Lazy.noop) // lazy - zipping 100-element arrays\n\t   * _.each(_.zip(smArrL, smArrR), _.noop)    // lodash - zipping 10-element arrays\n\t   * _.each(_.zip(lgArrL, lgArrR), _.noop)    // lodash - zipping 100-element arrays\n\t   */\n\t  Sequence.prototype.zip = function zip(var_args) {\n\t    if (arguments.length === 1) {\n\t      return new SimpleZippedSequence(this, (/** @type {Array} */ var_args));\n\t    } else {\n\t      return new ZippedSequence(this, arraySlice.call(arguments, 0));\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ZippedSequence(parent, arrays) {\n\t    this.parent = parent;\n\t    this.arrays = arrays;\n\t  }\n\t\n\t  ZippedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ZippedSequence.prototype.each = function each(fn) {\n\t    var arrays = this.arrays,\n\t        i = 0;\n\t\n\t    var iteratedLeft = this.parent.each(function(e) {\n\t      var group = [e];\n\t      for (var j = 0; j < arrays.length; ++j) {\n\t        group.push(arrays[j][i]);\n\t      }\n\t      return fn(group, i++);\n\t    });\n\t\n\t    if (!iteratedLeft) {\n\t      return false;\n\t    }\n\t\n\t    var group,\n\t        keepGoing = true;\n\t\n\t    while (keepGoing) {\n\t      keepGoing = false;\n\t      group = [undefined];\n\t      for (var j = 0; j < arrays.length; ++j) {\n\t        group.push(arrays[j][i]);\n\t\n\t        // Check if *any* of the arrays have more elements to iterate.\n\t        if (arrays[j].length > i) {\n\t          keepGoing = true;\n\t        }\n\t      }\n\t\n\t      if (keepGoing && (fn(group, i++) === false)) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with the same elements as this one, in a randomized\n\t   * order.\n\t   *\n\t   * @public\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4, 5]).shuffle().value() // =~ [1, 2, 3, 4, 5]\n\t   * Lazy([]).shuffle().value()              // => []\n\t   * Lazy([1]).shuffle().each(Lazy.noop)     // => true\n\t   * Lazy([]).shuffle().each(Lazy.noop)      // => true\n\t   */\n\t  Sequence.prototype.shuffle = function shuffle() {\n\t    return new ShuffledSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ShuffledSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  ShuffledSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ShuffledSequence.prototype.each = function each(fn) {\n\t    var shuffled = this.parent.toArray(),\n\t        floor = Math.floor,\n\t        random = Math.random,\n\t        j = 0;\n\t\n\t    for (var i = shuffled.length - 1; i > 0; --i) {\n\t      swap(shuffled, i, floor(random() * (i + 1)));\n\t      if (fn(shuffled[i], j++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    if (shuffled.length) {\n\t      fn(shuffled[0], j);\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with every element from this sequence, and with arrays\n\t   * exploded so that a sequence of arrays (of arrays) becomes a flat sequence of\n\t   * values.\n\t   *\n\t   * @public\n\t   * @param {boolean} shallow Option to flatten only one level deep (default is\n\t   *     recursive).\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, [2, 3], [4, [5]]]).flatten()     // sequence: [1, 2, 3, 4, 5]\n\t   * Lazy([1, [2, 3], [4, [5]]]).flatten(true) // sequence: [1, 2, 3, 4, [5]]\n\t   * Lazy([1, Lazy([2, 3])]).flatten()         // sequence: [1, 2, 3]\n\t   */\n\t  Sequence.prototype.flatten = function flatten(shallow) {\n\t    return new FlattenedSequence(this, shallow);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function FlattenedSequence(parent, shallow) {\n\t    this.parent = parent;\n\t    this.each = shallow ? this.eachShallow : this.eachRecursive;\n\t  }\n\t\n\t  FlattenedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  FlattenedSequence.prototype.eachShallow = function(fn) {\n\t    var index = 0;\n\t\n\t    return this.parent.each(function(e) {\n\t      if (isArray(e)) {\n\t        return forEach(e, function(val) {\n\t          return fn(val, index++);\n\t        });\n\t      }\n\t\n\t      if (e instanceof Sequence) {\n\t        return e.each(function(val) {\n\t          return fn(val, index++);\n\t        });\n\t      }\n\t\n\t      return fn(e, index++);\n\t    });\n\t  };\n\t\n\t  FlattenedSequence.prototype.eachRecursive = function each(fn) {\n\t    var index = 0;\n\t\n\t    return this.parent.each(function recurseVisitor(e) {\n\t      if (isArray(e)) {\n\t        return forEach(e, recurseVisitor);\n\t      }\n\t\n\t      if (e instanceof Sequence) {\n\t        return e.each(recurseVisitor);\n\t      }\n\t\n\t      return fn(e, index++);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with the same elements as this one, except for all\n\t   * falsy values (`false`, `0`, `\"\"`, `null`, and `undefined`).\n\t   *\n\t   * @public\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([\"foo\", null, \"bar\", undefined]).compact() // sequence: [\"foo\", \"bar\"]\n\t   */\n\t  Sequence.prototype.compact = function compact() {\n\t    return this.filter(function(e) { return !!e; });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with all the elements of this sequence that are not\n\t   * also among the specified arguments.\n\t   *\n\t   * @public\n\t   * @aka difference\n\t   * @param {...*} var_args The values, or array(s) of values, to be excluded from the\n\t   *     resulting sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4, 5]).without(2, 3)   // sequence: [1, 4, 5]\n\t   * Lazy([1, 2, 3, 4, 5]).without([4, 5]) // sequence: [1, 2, 3]\n\t   */\n\t  Sequence.prototype.without = function without(var_args) {\n\t    return new WithoutSequence(this, arraySlice.call(arguments, 0));\n\t  };\n\t\n\t  Sequence.prototype.difference = function difference(var_args) {\n\t    return this.without.apply(this, arguments);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function WithoutSequence(parent, values) {\n\t    this.parent = parent;\n\t    this.values = values;\n\t  }\n\t\n\t  WithoutSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  WithoutSequence.prototype.each = function each(fn) {\n\t    var set = createSet(this.values),\n\t        i = 0;\n\t    return this.parent.each(function(e) {\n\t      if (!set.contains(e)) {\n\t        return fn(e, i++);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with all the unique elements either in this sequence\n\t   * or among the specified arguments.\n\t   *\n\t   * @public\n\t   * @param {...*} var_args The values, or array(s) of values, to be additionally\n\t   *     included in the resulting sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([\"foo\", \"bar\"]).union([])             // sequence: [\"foo\", \"bar\"]\n\t   * Lazy([\"foo\", \"bar\"]).union([\"bar\", \"baz\"]) // sequence: [\"foo\", \"bar\", \"baz\"]\n\t   */\n\t  Sequence.prototype.union = function union(var_args) {\n\t    return this.concat(var_args).uniq();\n\t  };\n\t\n\t  /**\n\t   * Creates a new sequence with all the elements of this sequence that also\n\t   * appear among the specified arguments.\n\t   *\n\t   * @public\n\t   * @param {...*} var_args The values, or array(s) of values, in which elements\n\t   *     from this sequence must also be included to end up in the resulting sequence.\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([\"foo\", \"bar\"]).intersection([])             // sequence: []\n\t   * Lazy([\"foo\", \"bar\"]).intersection([\"bar\", \"baz\"]) // sequence: [\"bar\"]\n\t   * Lazy([\"a\", \"a\"]).intersection([\"a\"])              // sequence: [\"a\"]\n\t   * Lazy([\"a\"]).intersection([\"a\", \"a\"])              // sequence: [\"a\"]\n\t   * Lazy([\"a\", \"a\"]).intersection([\"a\", \"a\"])         // sequence: [\"a\"]\n\t   * Lazy([\"a\", \"a\"]).intersection([\"a\"], [\"a\"])       // sequence: [\"a\"]\n\t   */\n\t  Sequence.prototype.intersection = function intersection(var_args) {\n\t    if (arguments.length === 1 && isArray(arguments[0])) {\n\t      return new SimpleIntersectionSequence(this, (/** @type {Array} */ var_args));\n\t    } else {\n\t      return new IntersectionSequence(this, arraySlice.call(arguments, 0));\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IntersectionSequence(parent, arrays) {\n\t    this.parent = parent;\n\t    this.arrays = arrays;\n\t  }\n\t\n\t  IntersectionSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  IntersectionSequence.prototype.each = function each(fn) {\n\t    var sets = Lazy(this.arrays).map(function(values) {\n\t      return new UniqueMemoizer(Lazy(values).getIterator());\n\t    });\n\t\n\t    var setIterator = new UniqueMemoizer(sets.getIterator()),\n\t        i = 0;\n\t\n\t    return this.parent.uniq().each(function(e) {\n\t      var includedInAll = true;\n\t      setIterator.each(function(set) {\n\t        if (!set.contains(e)) {\n\t          includedInAll = false;\n\t          return false;\n\t        }\n\t      });\n\t\n\t      if (includedInAll) {\n\t        return fn(e, i++);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function Memoizer(memo, iterator) {\n\t    this.iterator     = iterator;\n\t    this.memo         = memo;\n\t    this.currentIndex = 0;\n\t    this.currentValue = undefined;\n\t  }\n\t\n\t  Memoizer.prototype.current = function current() {\n\t    return this.currentValue;\n\t  };\n\t\n\t  Memoizer.prototype.moveNext = function moveNext() {\n\t    var iterator = this.iterator,\n\t        memo = this.memo,\n\t        current;\n\t\n\t    if (this.currentIndex < memo.length) {\n\t      this.currentValue = memo[this.currentIndex++];\n\t      return true;\n\t    }\n\t\n\t    if (iterator.moveNext()) {\n\t      this.currentValue = memo[this.currentIndex++] = iterator.current();\n\t      return true;\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function UniqueMemoizer(iterator) {\n\t    this.iterator     = iterator;\n\t    this.set          = new Set();\n\t    this.memo         = [];\n\t    this.currentValue = undefined;\n\t  }\n\t\n\t  UniqueMemoizer.prototype.current = function current() {\n\t    return this.currentValue;\n\t  };\n\t\n\t  UniqueMemoizer.prototype.moveNext = function moveNext() {\n\t    var iterator = this.iterator,\n\t        set = this.set,\n\t        memo = this.memo,\n\t        current;\n\t\n\t    while (iterator.moveNext()) {\n\t      current = iterator.current();\n\t      if (set.add(current)) {\n\t        memo.push(current);\n\t        this.currentValue = current;\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t\n\t  UniqueMemoizer.prototype.each = function each(fn) {\n\t    var memo = this.memo,\n\t        length = memo.length,\n\t        i = -1;\n\t\n\t    while (++i < length) {\n\t      if (fn(memo[i], i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    while (this.moveNext()) {\n\t      if (fn(this.currentValue, i++) === false) {\n\t        break;\n\t      }\n\t    }\n\t  };\n\t\n\t  UniqueMemoizer.prototype.contains = function contains(e) {\n\t    if (this.set.contains(e)) {\n\t      return true;\n\t    }\n\t\n\t    while (this.moveNext()) {\n\t      if (this.currentValue === e) {\n\t        return true;\n\t      }\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Checks whether every element in this sequence satisfies a given predicate.\n\t   *\n\t   * @public\n\t   * @aka all\n\t   * @param {Function} predicate A function to call on (potentially) every element\n\t   *     in this sequence.\n\t   * @returns {boolean} True if `predicate` returns true for every element in the\n\t   *     sequence (or the sequence is empty). False if `predicate` returns false\n\t   *     for at least one element.\n\t   *\n\t   * @examples\n\t   * var numbers = [1, 2, 3, 4, 5];\n\t   *\n\t   * var objects = [{ foo: true }, { foo: false, bar: true }];\n\t   *\n\t   * Lazy(numbers).every(isEven)     // => false\n\t   * Lazy(numbers).every(isPositive) // => true\n\t   * Lazy(objects).all('foo')        // => false\n\t   * Lazy(objects).all('bar')        // => false\n\t   */\n\t  Sequence.prototype.every = function every(predicate) {\n\t    predicate = createCallback(predicate);\n\t\n\t    return this.each(function(e, i) {\n\t      return !!predicate(e, i);\n\t    });\n\t  };\n\t\n\t  Sequence.prototype.all = function all(predicate) {\n\t    return this.every(predicate);\n\t  };\n\t\n\t  /**\n\t   * Checks whether at least one element in this sequence satisfies a given\n\t   * predicate (or, if no predicate is specified, whether the sequence contains at\n\t   * least one element).\n\t   *\n\t   * @public\n\t   * @aka any\n\t   * @param {Function=} predicate A function to call on (potentially) every element\n\t   *     in this sequence.\n\t   * @returns {boolean} True if `predicate` returns true for at least one element\n\t   *     in the sequence. False if `predicate` returns false for every element (or\n\t   *     the sequence is empty).\n\t   *\n\t   * @examples\n\t   * var numbers = [1, 2, 3, 4, 5];\n\t   *\n\t   * Lazy(numbers).some()           // => true\n\t   * Lazy(numbers).some(isEven)     // => true\n\t   * Lazy(numbers).some(isNegative) // => false\n\t   * Lazy([]).some()                // => false\n\t   */\n\t  Sequence.prototype.some = function some(predicate) {\n\t    predicate = createCallback(predicate, true);\n\t\n\t    var success = false;\n\t    this.each(function(e) {\n\t      if (predicate(e)) {\n\t        success = true;\n\t        return false;\n\t      }\n\t    });\n\t    return success;\n\t  };\n\t\n\t  Sequence.prototype.any = function any(predicate) {\n\t    return this.some(predicate);\n\t  };\n\t\n\t  /**\n\t   * Checks whether NO elements in this sequence satisfy the given predicate\n\t   * (the opposite of {@link Sequence#all}, basically).\n\t   *\n\t   * @public\n\t   * @param {Function=} predicate A function to call on (potentially) every element\n\t   *     in this sequence.\n\t   * @returns {boolean} True if `predicate` does not return true for any element\n\t   *     in the sequence. False if `predicate` returns true for at least one\n\t   *     element.\n\t   *\n\t   * @examples\n\t   * var numbers = [1, 2, 3, 4, 5];\n\t   *\n\t   * Lazy(numbers).none()           // => false\n\t   * Lazy(numbers).none(isEven)     // => false\n\t   * Lazy(numbers).none(isNegative) // => true\n\t   * Lazy([]).none(isEven)          // => true\n\t   * Lazy([]).none(isNegative)      // => true\n\t   * Lazy([]).none()                // => true\n\t   */\n\t  Sequence.prototype.none = function none(predicate) {\n\t    return !this.any(predicate);\n\t  };\n\t\n\t  /**\n\t   * Checks whether the sequence has no elements.\n\t   *\n\t   * @public\n\t   * @returns {boolean} True if the sequence is empty, false if it contains at\n\t   *     least one element.\n\t   *\n\t   * @examples\n\t   * Lazy([]).isEmpty()        // => true\n\t   * Lazy([1, 2, 3]).isEmpty() // => false\n\t   */\n\t  Sequence.prototype.isEmpty = function isEmpty() {\n\t    return !this.any();\n\t  };\n\t\n\t  /**\n\t   * Performs (at worst) a linear search from the head of this sequence,\n\t   * returning the first index at which the specified value is found.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @param {Function=} equalityFn An optional equality function, which should\n\t   *     take two arguments and return true or false to indicate whether those\n\t   *     values are considered equal.\n\t   * @returns {number} The index within this sequence where the given value is\n\t   *     located, or -1 if the sequence doesn't contain the value.\n\t   *\n\t   * @examples\n\t   * function reciprocal(x) { return 1 / x; }\n\t   *\n\t   * Lazy([\"foo\", \"bar\", \"baz\"]).indexOf(\"bar\")   // => 1\n\t   * Lazy([1, 2, 3]).indexOf(4)                   // => -1\n\t   * Lazy([1, 2, 3]).map(reciprocal).indexOf(0.5) // => 1\n\t   */\n\t  Sequence.prototype.indexOf = function indexOf(value, equalityFn) {\n\t    var eq = equalityFn || Lazy.equality,\n\t        foundIndex = -1;\n\t\n\t    this.each(function(e, i) {\n\t      if (eq(e, value)) {\n\t        foundIndex = i;\n\t        return false;\n\t      }\n\t    });\n\t    return foundIndex;\n\t  };\n\t\n\t  /**\n\t   * Performs (at worst) a linear search from the tail of this sequence,\n\t   * returning the last index at which the specified value is found.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @returns {number} The last index within this sequence where the given value\n\t   *     is located, or -1 if the sequence doesn't contain the value.\n\t   *\n\t   * @examples\n\t   * Lazy([\"a\", \"b\", \"c\", \"b\", \"a\"]).lastIndexOf(\"b\")    // => 3\n\t   * Lazy([1, 2, 3]).lastIndexOf(0)                      // => -1\n\t   * Lazy([2, 2, 1, 2, 4]).filter(isEven).lastIndexOf(2) // 2\n\t   */\n\t  Sequence.prototype.lastIndexOf = function lastIndexOf(value, equalityFn) {\n\t    var reversed = this.getIndex().reverse(),\n\t        index    = reversed.indexOf(value, equalityFn);\n\t    if (index !== -1) {\n\t      index = reversed.length() - index - 1;\n\t    }\n\t    return index;\n\t  };\n\t\n\t  /**\n\t   * Performs a binary search of this sequence, returning the lowest index where\n\t   * the given value is either found, or where it belongs (if it is not already\n\t   * in the sequence).\n\t   *\n\t   * This method assumes the sequence is in sorted order and will fail otherwise.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @returns {number} An index within this sequence where the given value is\n\t   *     located, or where it belongs in sorted order.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 3, 6, 9]).sortedIndex(3)                    // => 1\n\t   * Lazy([1, 3, 6, 9]).sortedIndex(7)                    // => 3\n\t   * Lazy([5, 10, 15, 20]).filter(isEven).sortedIndex(10) // => 0\n\t   * Lazy([5, 10, 15, 20]).filter(isEven).sortedIndex(12) // => 1\n\t   */\n\t  Sequence.prototype.sortedIndex = function sortedIndex(value) {\n\t    var indexed = this.getIndex(),\n\t        lower   = 0,\n\t        upper   = indexed.length(),\n\t        i;\n\t\n\t    while (lower < upper) {\n\t      i = (lower + upper) >>> 1;\n\t      if (compare(indexed.get(i), value) === -1) {\n\t        lower = i + 1;\n\t      } else {\n\t        upper = i;\n\t      }\n\t    }\n\t    return lower;\n\t  };\n\t\n\t  /**\n\t   * Checks whether the given value is in this sequence.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @param {Function=} equalityFn An optional equality function, which should\n\t   *     take two arguments and return true or false to indicate whether those\n\t   *     values are considered equal.\n\t   * @returns {boolean} True if the sequence contains the value, false if not.\n\t   *\n\t   * @examples\n\t   * var numbers = [5, 10, 15, 20];\n\t   *\n\t   * Lazy(numbers).contains(15) // => true\n\t   * Lazy(numbers).contains(13) // => false\n\t   */\n\t  Sequence.prototype.contains = function contains(value, equalityFn) {\n\t    return this.indexOf(value, equalityFn) !== -1;\n\t  };\n\t\n\t  /**\n\t   * Aggregates a sequence into a single value according to some accumulator\n\t   * function.\n\t   *\n\t   * For an asynchronous sequence, instead of immediately returning a result\n\t   * (which it can't, obviously), this method returns an {@link AsyncHandle}\n\t   * whose `onComplete` method can be called to supply a callback to handle the\n\t   * final result once iteration has completed.\n\t   *\n\t   * @public\n\t   * @aka inject, foldl\n\t   * @param {Function} aggregator The function through which to pass every element\n\t   *     in the sequence. For every element, the function will be passed the total\n\t   *     aggregated result thus far and the element itself, and should return a\n\t   *     new aggregated result.\n\t   * @param {*=} memo The starting value to use for the aggregated result\n\t   *     (defaults to the first element in the sequence).\n\t   * @returns {*} The result of the aggregation, or, for asynchronous sequences,\n\t   *     an {@link AsyncHandle} whose `onComplete` method accepts a callback to\n\t   *     handle the final result.\n\t   *\n\t   * @examples\n\t   * function multiply(x, y) { return x * y; }\n\t   *\n\t   * var numbers = [1, 2, 3, 4];\n\t   *\n\t   * Lazy(numbers).reduce(multiply)    // => 24\n\t   * Lazy(numbers).reduce(multiply, 5) // => 120\n\t   */\n\t  Sequence.prototype.reduce = function reduce(aggregator, memo) {\n\t    if (arguments.length < 2) {\n\t      return this.tail().reduce(aggregator, this.head());\n\t    }\n\t\n\t    var eachResult = this.each(function(e, i) {\n\t      memo = aggregator(memo, e, i);\n\t    });\n\t\n\t    // TODO: Think of a way more efficient solution to this problem.\n\t    if (eachResult instanceof AsyncHandle) {\n\t      return eachResult.then(function() { return memo; });\n\t    }\n\t\n\t    return memo;\n\t  };\n\t\n\t  Sequence.prototype.inject =\n\t  Sequence.prototype.foldl = function foldl(aggregator, memo) {\n\t    return this.reduce(aggregator, memo);\n\t  };\n\t\n\t  /**\n\t   * Aggregates a sequence, from the tail, into a single value according to some\n\t   * accumulator function.\n\t   *\n\t   * @public\n\t   * @aka foldr\n\t   * @param {Function} aggregator The function through which to pass every element\n\t   *     in the sequence. For every element, the function will be passed the total\n\t   *     aggregated result thus far and the element itself, and should return a\n\t   *     new aggregated result.\n\t   * @param {*} memo The starting value to use for the aggregated result.\n\t   * @returns {*} The result of the aggregation.\n\t   *\n\t   * @examples\n\t   * function append(s1, s2) {\n\t   *   return s1 + s2;\n\t   * }\n\t   *\n\t   * function isVowel(str) {\n\t   *   return \"aeiou\".indexOf(str) !== -1;\n\t   * }\n\t   *\n\t   * Lazy(\"abcde\").reduceRight(append)                 // => \"edcba\"\n\t   * Lazy(\"abcde\").filter(isVowel).reduceRight(append) // => \"ea\"\n\t   */\n\t  Sequence.prototype.reduceRight = function reduceRight(aggregator, memo) {\n\t    if (arguments.length < 2) {\n\t      return this.initial(1).reduceRight(aggregator, this.last());\n\t    }\n\t\n\t    // This bothers me... but frankly, calling reverse().reduce() is potentially\n\t    // going to eagerly evaluate the sequence anyway; so it's really not an issue.\n\t    var indexed = this.getIndex(),\n\t        i = indexed.length() - 1;\n\t    return indexed.reverse().reduce(function(m, e) {\n\t      return aggregator(m, e, i--);\n\t    }, memo);\n\t  };\n\t\n\t  Sequence.prototype.foldr = function foldr(aggregator, memo) {\n\t    return this.reduceRight(aggregator, memo);\n\t  };\n\t\n\t  /**\n\t   * Groups this sequence into consecutive (overlapping) segments of a specified\n\t   * length. If the underlying sequence has fewer elements than the specified\n\t   * length, then this sequence will be empty.\n\t   *\n\t   * @public\n\t   * @param {number} length The length of each consecutive segment.\n\t   * @returns {Sequence} The resulting sequence of consecutive segments.\n\t   *\n\t   * @examples\n\t   * function sum(vals) { return Lazy(vals).sum(); }\n\t   * var pairs = Lazy([1, 2, 3, 4]).consecutive(2);\n\t   *\n\t   * // Make sure consecutive sequences are reusable.\n\t   * pairs.map(sum) // => sequence: [3, 5, 7]\n\t   * pairs.map(sum) // => sequence: [3, 5, 7]\n\t   *\n\t   * Lazy([]).consecutive(2)        // => sequence: []\n\t   * Lazy([1]).consecutive(2)       // => sequence: []\n\t   * Lazy([1, 2]).consecutive(2)    // => sequence: [[1, 2]]\n\t   * Lazy([1, 2, 3]).consecutive(2) // => sequence: [[1, 2], [2, 3]]\n\t   * Lazy([1, 2, 3]).consecutive(0) // => sequence: [[]]\n\t   * Lazy([1, 2, 3]).consecutive(1) // => sequence: [[1], [2], [3]]\n\t   */\n\t  Sequence.prototype.consecutive = function consecutive(count) {\n\t    return new ConsecutiveSequence(this, count);\n\t  };\n\t\n\t  function ConsecutiveSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count = count;\n\t  }\n\t\n\t  ConsecutiveSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ConsecutiveSequence.prototype.each = function each(fn) {\n\t    var count = this.count,\n\t        queue = new Queue(count);\n\t    var segments = this.parent.map(function(element) {\n\t      if (queue.add(element).count === count) {\n\t        return queue.toArray();\n\t      }\n\t    });\n\t    return segments.compact().each(fn);\n\t  };\n\t\n\t  /**\n\t   * Breaks this sequence into chunks (arrays) of a specified length.\n\t   *\n\t   * @public\n\t   * @param {number} size The size of each chunk.\n\t   * @returns {Sequence} The resulting sequence of chunks.\n\t   *\n\t   * @examples\n\t   * Lazy([]).chunk(2)        // sequence: []\n\t   * Lazy([1, 2, 3]).chunk(2) // sequence: [[1, 2], [3]]\n\t   * Lazy([1, 2, 3]).chunk(1) // sequence: [[1], [2], [3]]\n\t   * Lazy([1, 2, 3]).chunk(4) // sequence: [[1, 2, 3]]\n\t   * Lazy([1, 2, 3]).chunk(0) // throws\n\t   */\n\t  Sequence.prototype.chunk = function chunk(size) {\n\t    if (size < 1) {\n\t      throw new Error(\"You must specify a positive chunk size.\");\n\t    }\n\t\n\t    return new ChunkedSequence(this, size);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ChunkedSequence(parent, size) {\n\t    this.parent    = parent;\n\t    this.chunkSize = size;\n\t  }\n\t\n\t  ChunkedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ChunkedSequence.prototype.getIterator = function getIterator() {\n\t    return new ChunkedIterator(this.parent, this.chunkSize);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ChunkedIterator(sequence, size) {\n\t    this.iterator = sequence.getIterator();\n\t    this.size     = size;\n\t  }\n\t\n\t  ChunkedIterator.prototype.current = function current() {\n\t    return this.currentChunk;\n\t  };\n\t\n\t  ChunkedIterator.prototype.moveNext = function moveNext() {\n\t    var iterator  = this.iterator,\n\t        chunkSize = this.size,\n\t        chunk     = [];\n\t\n\t    while (chunk.length < chunkSize && iterator.moveNext()) {\n\t      chunk.push(iterator.current());\n\t    }\n\t\n\t    if (chunk.length === 0) {\n\t      return false;\n\t    }\n\t\n\t    this.currentChunk = chunk;\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Passes each element in the sequence to the specified callback during\n\t   * iteration. This is like {@link Sequence#each}, except that it can be\n\t   * inserted anywhere in the middle of a chain of methods to \"intercept\" the\n\t   * values in the sequence at that point.\n\t   *\n\t   * @public\n\t   * @param {Function} callback A function to call on every element in the\n\t   *     sequence during iteration. The return value of this function does not\n\t   *     matter.\n\t   * @returns {Sequence} A sequence comprising the same elements as this one.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).tap(fn).each(Lazy.noop); // calls fn 3 times\n\t   */\n\t  Sequence.prototype.tap = function tap(callback) {\n\t    return new TappedSequence(this, callback);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function TappedSequence(parent, callback) {\n\t    this.parent = parent;\n\t    this.callback = callback;\n\t  }\n\t\n\t  TappedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  TappedSequence.prototype.each = function each(fn) {\n\t    var callback = this.callback;\n\t    return this.parent.each(function(e, i) {\n\t      callback(e, i);\n\t      return fn(e, i);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Seaches for the first element in the sequence satisfying a given predicate.\n\t   *\n\t   * @public\n\t   * @aka detect\n\t   * @param {Function} predicate A function to call on (potentially) every element\n\t   *     in the sequence.\n\t   * @returns {*} The first element in the sequence for which `predicate` returns\n\t   *     `true`, or `undefined` if no such element is found.\n\t   *\n\t   * @examples\n\t   * function divisibleBy3(x) {\n\t   *   return x % 3 === 0;\n\t   * }\n\t   *\n\t   * var numbers = [5, 6, 7, 8, 9, 10];\n\t   *\n\t   * Lazy(numbers).find(divisibleBy3) // => 6\n\t   * Lazy(numbers).find(isNegative)   // => undefined\n\t   */\n\t  Sequence.prototype.find = function find(predicate) {\n\t    return this.filter(predicate).first();\n\t  };\n\t\n\t  Sequence.prototype.detect = function detect(predicate) {\n\t    return this.find(predicate);\n\t  };\n\t\n\t  /**\n\t   * Gets the minimum value in the sequence.\n\t   *\n\t   * @public\n\t   * @param {Function=} valueFn The function by which the value for comparison is\n\t   *     calculated for each element in the sequence.\n\t   * @returns {*} The element with the lowest value in the sequence, or\n\t   *     undefined` if the sequence is empty.\n\t   *\n\t   * @examples\n\t   * function negate(x) { return x * -1; }\n\t   *\n\t   * Lazy([]).min()                       // => undefined\n\t   * Lazy([1]).min()                      // => 1\n\t   * Lazy([1, 2]).min()                   // => 1\n\t   * Lazy([2, 1]).min()                   // => 1\n\t   * Lazy([6, 18, 2, 49, 34]).min()       // => 2\n\t   * Lazy([6, 18, 2, 49, 34]).min(negate) // => 49\n\t   * Lazy(['b', 'a', 'c']).min()          // => 'a'\n\t   */\n\t  Sequence.prototype.min = function min(valueFn) {\n\t    if (typeof valueFn !== \"undefined\") {\n\t      return this.minBy(valueFn);\n\t    }\n\t\n\t    return this.reduce(function(prev, current, i) {\n\t      if (typeof prev === \"undefined\") {\n\t        return current;\n\t      }\n\t      return current < prev ? current : prev;\n\t    });\n\t  };\n\t\n\t  Sequence.prototype.minBy = function minBy(valueFn) {\n\t    valueFn = createCallback(valueFn);\n\t    return this.reduce(function(x, y) { return valueFn(y) < valueFn(x) ? y : x; });\n\t  };\n\t\n\t  /**\n\t   * Gets the maximum value in the sequence.\n\t   *\n\t   * @public\n\t   * @param {Function=} valueFn The function by which the value for comparison is\n\t   *     calculated for each element in the sequence.\n\t   * @returns {*} The element with the highest value in the sequence, or\n\t   *     undefined if the sequence is empty.\n\t   *\n\t   * @examples\n\t   * function reverseDigits(x) {\n\t   *   return Number(String(x).split('').reverse().join(''));\n\t   * }\n\t   *\n\t   * Lazy([]).max()                              // => undefined\n\t   * Lazy([1]).max()                             // => 1\n\t   * Lazy([1, 2]).max()                          // => 2\n\t   * Lazy([2, 1]).max()                          // => 2\n\t   * Lazy([6, 18, 2, 48, 29]).max()              // => 48\n\t   * Lazy([6, 18, 2, 48, 29]).max(reverseDigits) // => 29\n\t   * Lazy(['b', 'c', 'a']).max()                 // => 'c'\n\t   */\n\t  Sequence.prototype.max = function max(valueFn) {\n\t    if (typeof valueFn !== \"undefined\") {\n\t      return this.maxBy(valueFn);\n\t    }\n\t\n\t    return this.reduce(function(prev, current, i) {\n\t      if (typeof prev === \"undefined\") {\n\t        return current;\n\t      }\n\t      return current > prev ? current : prev;\n\t    });\n\t  };\n\t\n\t  Sequence.prototype.maxBy = function maxBy(valueFn) {\n\t    valueFn = createCallback(valueFn);\n\t    return this.reduce(function(x, y) { return valueFn(y) > valueFn(x) ? y : x; });\n\t  };\n\t\n\t  /**\n\t   * Gets the sum of the numeric values in the sequence.\n\t   *\n\t   * @public\n\t   * @param {Function=} valueFn The function used to select the numeric values\n\t   *     that will be summed up.\n\t   * @returns {*} The sum.\n\t   *\n\t   * @examples\n\t   * Lazy([]).sum()                     // => 0\n\t   * Lazy([1, 2, 3, 4]).sum()           // => 10\n\t   * Lazy([1.2, 3.4]).sum(Math.floor)   // => 4\n\t   * Lazy(['foo', 'bar']).sum('length') // => 6\n\t   */\n\t  Sequence.prototype.sum = function sum(valueFn) {\n\t    if (typeof valueFn !== \"undefined\") {\n\t      return this.sumBy(valueFn);\n\t    }\n\t\n\t    return this.reduce(function(x, y) { return x + y; }, 0);\n\t  };\n\t\n\t  Sequence.prototype.sumBy = function sumBy(valueFn) {\n\t    valueFn = createCallback(valueFn);\n\t    return this.reduce(function(x, y) { return x + valueFn(y); }, 0);\n\t  };\n\t\n\t  /**\n\t   * Creates a string from joining together all of the elements in this sequence,\n\t   * separated by the given delimiter.\n\t   *\n\t   * @public\n\t   * @aka toString\n\t   * @param {string=} delimiter The separator to insert between every element from\n\t   *     this sequence in the resulting string (defaults to `\",\"`).\n\t   * @returns {string} The delimited string.\n\t   *\n\t   * @examples\n\t   * function toParam(v, k) {\n\t   *   return k + '=' + v;\n\t   * }\n\t   *\n\t   * Lazy([6, 29, 1984]).join(\"/\")  // => \"6/29/1984\"\n\t   * Lazy([\"a\", \"b\", \"c\"]).join()   // => \"a,b,c\"\n\t   * Lazy([\"a\", \"b\", \"c\"]).join(\"\") // => \"abc\"\n\t   * Lazy([1, 2, 3]).join()         // => \"1,2,3\"\n\t   * Lazy([1, 2, 3]).join(\"\")       // => \"123\"\n\t   * Lazy([\"\", \"\", \"\"]).join(\",\")   // => \",,\"\n\t   * Lazy([1, 2]).join(0)           // => \"102\"\n\t   * Lazy([\"cons\", \"d\"]).join(true) // => \"construed\"\n\t   * Lazy({foo: 1, bar: 2}).values().join()        // \"1,2\"\n\t   * Lazy({foo: 1, bar: 2}).keys().join()          // \"foo,bar\"\n\t   * Lazy({foo: 1, bar: 2}).map(toParam).join('&') // 'foo=1&bar=2'\n\t   */\n\t  Sequence.prototype.join = function join(delimiter) {\n\t    delimiter = typeof delimiter === \"undefined\" ? \",\" : String(delimiter);\n\t\n\t    var i = -1;\n\t    return this.reduce(function(str, e) {\n\t      if (++i > 0) {\n\t        str += delimiter;\n\t      }\n\t      return str + e;\n\t    }, \"\");\n\t  };\n\t\n\t  Sequence.prototype.toString = function toString(delimiter) {\n\t    return this.join(delimiter);\n\t  };\n\t\n\t  /**\n\t   * Creates a sequence, with the same elements as this one, that will be iterated\n\t   * over asynchronously when calling `each`.\n\t   *\n\t   * @public\n\t   * @param {number=} interval The approximate period, in milliseconds, that\n\t   *     should elapse between each element in the resulting sequence. Omitting\n\t   *     this argument will result in the fastest possible asynchronous iteration.\n\t   * @returns {AsyncSequence} The new asynchronous sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).async(100).each(fn) // calls fn 3 times asynchronously\n\t   */\n\t  Sequence.prototype.async = function async(interval) {\n\t    return new AsyncSequence(this, interval);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SimpleIntersectionSequence(parent, array) {\n\t    this.parent = parent;\n\t    this.array  = array;\n\t    this.each   = getEachForIntersection(array);\n\t  }\n\t\n\t  SimpleIntersectionSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  SimpleIntersectionSequence.prototype.eachMemoizerCache = function eachMemoizerCache(fn) {\n\t    var iterator = new UniqueMemoizer(Lazy(this.array).getIterator()),\n\t        i = 0;\n\t\n\t    return this.parent.uniq().each(function(e) {\n\t      if (iterator.contains(e)) {\n\t        return fn(e, i++);\n\t      }\n\t    });\n\t  };\n\t\n\t  SimpleIntersectionSequence.prototype.eachArrayCache = function eachArrayCache(fn) {\n\t    var array = this.array,\n\t        find  = arrayContains,\n\t        i = 0;\n\t\n\t    return this.parent.uniq().each(function(e) {\n\t      if (find(array, e)) {\n\t        return fn(e, i++);\n\t      }\n\t    });\n\t  };\n\t\n\t  function getEachForIntersection(source) {\n\t    if (source.length < 40) {\n\t      return SimpleIntersectionSequence.prototype.eachArrayCache;\n\t    } else {\n\t      return SimpleIntersectionSequence.prototype.eachMemoizerCache;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * An optimized version of {@link ZippedSequence}, when zipping a sequence with\n\t   * only one array.\n\t   *\n\t   * @param {Sequence} parent The underlying sequence.\n\t   * @param {Array} array The array with which to zip the sequence.\n\t   * @constructor\n\t   */\n\t  function SimpleZippedSequence(parent, array) {\n\t    this.parent = parent;\n\t    this.array  = array;\n\t  }\n\t\n\t  SimpleZippedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  SimpleZippedSequence.prototype.each = function each(fn) {\n\t    var array = this.array,\n\t        i = -1;\n\t\n\t    var iteratedLeft = this.parent.each(function(e) {\n\t      ++i;\n\t      return fn([e, array[i]], i);\n\t    });\n\t\n\t    if (!iteratedLeft) {\n\t      return false;\n\t    }\n\t\n\t    while (++i < array.length) {\n\t      if (fn([undefined, array[i]], i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * An `ArrayLikeSequence` is a {@link Sequence} that provides random access to\n\t   * its elements. This extends the API for iterating with the additional methods\n\t   * {@link #get} and {@link #length}, allowing a sequence to act as a \"view\" into\n\t   * a collection or other indexed data source.\n\t   *\n\t   * The initial sequence created by wrapping an array with `Lazy(array)` is an\n\t   * `ArrayLikeSequence`.\n\t   *\n\t   * All methods of `ArrayLikeSequence` that conceptually should return\n\t   * something like a array (with indexed access) return another\n\t   * `ArrayLikeSequence`, for example:\n\t   *\n\t   * - {@link Sequence#map}\n\t   * - {@link ArrayLikeSequence#slice}\n\t   * - {@link Sequence#take} and {@link Sequence#drop}\n\t   * - {@link Sequence#reverse}\n\t   *\n\t   * The above is not an exhaustive list. There are also certain other cases\n\t   * where it might be possible to return an `ArrayLikeSequence` (e.g., calling\n\t   * {@link Sequence#concat} with a single array argument), but this is not\n\t   * guaranteed by the API.\n\t   *\n\t   * Note that in many cases, it is not possible to provide indexed access\n\t   * without first performing at least a partial iteration of the underlying\n\t   * sequence. In these cases an `ArrayLikeSequence` will not be returned:\n\t   *\n\t   * - {@link Sequence#filter}\n\t   * - {@link Sequence#uniq}\n\t   * - {@link Sequence#union}\n\t   * - {@link Sequence#intersect}\n\t   *\n\t   * etc. The above methods only return ordinary {@link Sequence} objects.\n\t   *\n\t   * Defining custom array-like sequences\n\t   * ------------------------------------\n\t   *\n\t   * Creating a custom `ArrayLikeSequence` is essentially the same as creating a\n\t   * custom {@link Sequence}. You just have a couple more methods you need to\n\t   * implement: `get` and (optionally) `length`.\n\t   *\n\t   * Here's an example. Let's define a sequence type called `OffsetSequence` that\n\t   * offsets each of its parent's elements by a set distance, and circles back to\n\t   * the beginning after reaching the end. **Remember**: the initialization\n\t   * function you pass to {@link #define} should always accept a `parent` as its\n\t   * first parameter.\n\t   *\n\t   *     ArrayLikeSequence.define(\"offset\", {\n\t   *       init: function(parent, offset) {\n\t   *         this.offset = offset;\n\t   *       },\n\t   *\n\t   *       get: function(i) {\n\t   *         return this.parent.get((i + this.offset) % this.parent.length());\n\t   *       }\n\t   *     });\n\t   *\n\t   * It's worth noting a couple of things here.\n\t   *\n\t   * First, Lazy's default implementation of `length` simply returns the parent's\n\t   * length. In this case, since an `OffsetSequence` will always have the same\n\t   * number of elements as its parent, that implementation is fine; so we don't\n\t   * need to override it.\n\t   *\n\t   * Second, the default implementation of `each` uses `get` and `length` to\n\t   * essentially create a `for` loop, which is fine here. If you want to implement\n\t   * `each` your own way, you can do that; but in most cases (as here), you can\n\t   * probably just stick with the default.\n\t   *\n\t   * So we're already done, after only implementing `get`! Pretty easy, huh?\n\t   *\n\t   * Now the `offset` method will be chainable from any `ArrayLikeSequence`. So\n\t   * for example:\n\t   *\n\t   *     Lazy([1, 2, 3]).map(mapFn).offset(3);\n\t   *\n\t   * ...will work, but:\n\t   *\n\t   *     Lazy([1, 2, 3]).filter(mapFn).offset(3);\n\t   *\n\t   * ...will not (because `filter` does not return an `ArrayLikeSequence`).\n\t   *\n\t   * (Also, as with the example provided for defining custom {@link Sequence}\n\t   * types, this example really could have been implemented using a function\n\t   * already available as part of Lazy.js: in this case, {@link Sequence#map}.)\n\t   *\n\t   * @public\n\t   * @constructor\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3])                    // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2, 3]).map(Lazy.identity) // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2, 3]).take(2)            // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2, 3]).drop(2)            // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2, 3]).reverse()          // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2, 3]).slice(1, 2)        // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  function ArrayLikeSequence() {}\n\t\n\t  ArrayLikeSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  /**\n\t   * Create a new constructor function for a type inheriting from\n\t   * `ArrayLikeSequence`.\n\t   *\n\t   * @public\n\t   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n\t   *     used for constructing the new sequence. The method will be attached to\n\t   *     the `ArrayLikeSequence` prototype so that it can be chained with any other\n\t   *     methods that return array-like sequences.\n\t   * @param {Object} overrides An object containing function overrides for this\n\t   *     new sequence type. **Must** include `get`. *May* include `init`,\n\t   *     `length`, `getIterator`, and `each`. For each function, `this` will be\n\t   *     the new sequence and `this.parent` will be the source sequence.\n\t   * @returns {Function} A constructor for a new type inheriting from\n\t   *     `ArrayLikeSequence`.\n\t   *\n\t   * @examples\n\t   * Lazy.ArrayLikeSequence.define(\"offset\", {\n\t   *   init: function(offset) {\n\t   *     this.offset = offset;\n\t   *   },\n\t   *\n\t   *   get: function(i) {\n\t   *     return this.parent.get((i + this.offset) % this.parent.length());\n\t   *   }\n\t   * });\n\t   *\n\t   * Lazy([1, 2, 3]).offset(1) // sequence: [2, 3, 1]\n\t   */\n\t  ArrayLikeSequence.define = function define(methodName, overrides) {\n\t    if (!overrides || typeof overrides.get !== 'function') {\n\t      throw new Error(\"A custom array-like sequence must implement *at least* get!\");\n\t    }\n\t\n\t    return defineSequenceType(ArrayLikeSequence, methodName, overrides);\n\t  };\n\t\n\t  /**\n\t   * Returns the element at the specified index.\n\t   *\n\t   * @public\n\t   * @param {number} i The index to access.\n\t   * @returns {*} The element.\n\t   *\n\t   * @examples\n\t   * function increment(x) { return x + 1; }\n\t   *\n\t   * Lazy([1, 2, 3]).get(1)                // => 2\n\t   * Lazy([1, 2, 3]).get(-1)               // => undefined\n\t   * Lazy([1, 2, 3]).map(increment).get(1) // => 3\n\t   */\n\t  ArrayLikeSequence.prototype.get = function get(i) {\n\t    return this.parent.get(i);\n\t  };\n\t\n\t  /**\n\t   * Returns the length of the sequence.\n\t   *\n\t   * @public\n\t   * @returns {number} The length.\n\t   *\n\t   * @examples\n\t   * function increment(x) { return x + 1; }\n\t   *\n\t   * Lazy([]).length()                       // => 0\n\t   * Lazy([1, 2, 3]).length()                // => 3\n\t   * Lazy([1, 2, 3]).map(increment).length() // => 3\n\t   */\n\t  ArrayLikeSequence.prototype.length = function length() {\n\t    return this.parent.length();\n\t  };\n\t\n\t  /**\n\t   * Returns the current sequence (since it is already indexed).\n\t   */\n\t  ArrayLikeSequence.prototype.getIndex = function getIndex() {\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#getIterator}.\n\t   */\n\t  ArrayLikeSequence.prototype.getIterator = function getIterator() {\n\t    return new IndexedIterator(this);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Iterator} meant to work with already-indexed\n\t   * sequences.\n\t   *\n\t   * @param {ArrayLikeSequence} sequence The sequence to iterate over.\n\t   * @constructor\n\t   */\n\t  function IndexedIterator(sequence) {\n\t    this.sequence = sequence;\n\t    this.index    = -1;\n\t  }\n\t\n\t  IndexedIterator.prototype.current = function current() {\n\t    return this.sequence.get(this.index);\n\t  };\n\t\n\t  IndexedIterator.prototype.moveNext = function moveNext() {\n\t    if (this.index >= this.sequence.length() - 1) {\n\t      return false;\n\t    }\n\t\n\t    ++this.index;\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#each}.\n\t   */\n\t  ArrayLikeSequence.prototype.each = function each(fn) {\n\t    var length = this.length(),\n\t        i = -1;\n\t\n\t    while (++i < length) {\n\t      if (fn(this.get(i), i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Returns a new sequence with the same elements as this one, plus the\n\t   * specified element at the end.\n\t   *\n\t   * @public\n\t   * @returns {ArrayLikeSequence} The new array-like sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2]).push(3) // sequence: [1, 2, 3]\n\t   * Lazy([]).push(1)     // sequence: [1]\n\t   */\n\t  ArrayLikeSequence.prototype.push = function push(value) {\n\t    return this.concat([value]);\n\t  };\n\t\n\t  /**\n\t   * Returns a new sequence with the same elements as this one, minus the last\n\t   * element.\n\t   *\n\t   * @public\n\t   * @returns {ArrayLikeSequence} The new array-like sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).pop() // sequence: [1, 2]\n\t   * Lazy([]).pop()        // sequence: []\n\t   */\n\t  ArrayLikeSequence.prototype.pop = function pop() {\n\t    return this.initial();\n\t  };\n\t\n\t  /**\n\t   * Returns a new sequence with the same elements as this one, plus the\n\t   * specified element at the beginning.\n\t   *\n\t   * @public\n\t   * @returns {ArrayLikeSequence} The new array-like sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2]).unshift(3) // sequence: [3, 1, 2]\n\t   * Lazy([]).unshift(1)     // sequence: [1]\n\t   */\n\t  ArrayLikeSequence.prototype.unshift = function unshift(value) {\n\t    return Lazy([value]).concat(this);\n\t  };\n\t\n\t  /**\n\t   * Returns a new sequence with the same elements as this one, minus the first\n\t   * element.\n\t   *\n\t   * @public\n\t   * @returns {ArrayLikeSequence} The new array-like sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).shift() // sequence: [2, 3]\n\t   * Lazy([]).shift()        // sequence: []\n\t   */\n\t  ArrayLikeSequence.prototype.shift = function shift() {\n\t    return this.drop();\n\t  };\n\t\n\t  /**\n\t   * Returns a new sequence comprising the portion of this sequence starting\n\t   * from the specified starting index and continuing until the specified ending\n\t   * index or to the end of the sequence.\n\t   *\n\t   * @public\n\t   * @param {number} begin The index at which the new sequence should start.\n\t   * @param {number=} end The index at which the new sequence should end.\n\t   * @returns {ArrayLikeSequence} The new array-like sequence.\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3, 4, 5]).slice(0)     // sequence: [1, 2, 3, 4, 5]\n\t   * Lazy([1, 2, 3, 4, 5]).slice(2)     // sequence: [3, 4, 5]\n\t   * Lazy([1, 2, 3, 4, 5]).slice(2, 4)  // sequence: [3, 4]\n\t   * Lazy([1, 2, 3, 4, 5]).slice(-1)    // sequence: [5]\n\t   * Lazy([1, 2, 3, 4, 5]).slice(1, -1) // sequence: [2, 3, 4]\n\t   * Lazy([1, 2, 3, 4, 5]).slice(0, 10) // sequence: [1, 2, 3, 4, 5]\n\t   */\n\t  ArrayLikeSequence.prototype.slice = function slice(begin, end) {\n\t    var length = this.length();\n\t\n\t    if (begin < 0) {\n\t      begin = length + begin;\n\t    }\n\t\n\t    var result = this.drop(begin);\n\t\n\t    if (typeof end === \"number\") {\n\t      if (end < 0) {\n\t        end = length + end;\n\t      }\n\t      result = result.take(end - begin);\n\t    }\n\t\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#map}, which creates an\n\t   * {@link ArrayLikeSequence} so that the result still provides random access.\n\t   *\n\t   * @public\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).map(Lazy.identity) // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  ArrayLikeSequence.prototype.map = function map(mapFn) {\n\t    return new IndexedMappedSequence(this, createCallback(mapFn));\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedMappedSequence(parent, mapFn) {\n\t    this.parent = parent;\n\t    this.mapFn  = mapFn;\n\t  }\n\t\n\t  IndexedMappedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  IndexedMappedSequence.prototype.get = function get(i) {\n\t    if (i < 0 || i >= this.parent.length()) {\n\t      return undefined;\n\t    }\n\t\n\t    return this.mapFn(this.parent.get(i), i);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#filter}.\n\t   */\n\t  ArrayLikeSequence.prototype.filter = function filter(filterFn) {\n\t    return new IndexedFilteredSequence(this, createCallback(filterFn));\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedFilteredSequence(parent, filterFn) {\n\t    this.parent   = parent;\n\t    this.filterFn = filterFn;\n\t  }\n\t\n\t  IndexedFilteredSequence.prototype = Object.create(FilteredSequence.prototype);\n\t\n\t  IndexedFilteredSequence.prototype.each = function each(fn) {\n\t    var parent = this.parent,\n\t        filterFn = this.filterFn,\n\t        length = this.parent.length(),\n\t        i = -1,\n\t        j = 0,\n\t        e;\n\t\n\t    while (++i < length) {\n\t      e = parent.get(i);\n\t      if (filterFn(e, i) && fn(e, j++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#reverse}, which creates an\n\t   * {@link ArrayLikeSequence} so that the result still provides random access.\n\t   *\n\t   * @public\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).reverse() // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  ArrayLikeSequence.prototype.reverse = function reverse() {\n\t    return new IndexedReversedSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedReversedSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  IndexedReversedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  IndexedReversedSequence.prototype.get = function get(i) {\n\t    return this.parent.get(this.length() - i - 1);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#first}, which creates an\n\t   * {@link ArrayLikeSequence} so that the result still provides random access.\n\t   *\n\t   * @public\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).first(2) // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  ArrayLikeSequence.prototype.first = function first(count) {\n\t    if (typeof count === \"undefined\") {\n\t      return this.get(0);\n\t    }\n\t\n\t    return new IndexedTakeSequence(this, count);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedTakeSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count  = count;\n\t  }\n\t\n\t  IndexedTakeSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  IndexedTakeSequence.prototype.length = function length() {\n\t    var parentLength = this.parent.length();\n\t    return this.count <= parentLength ? this.count : parentLength;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#rest}, which creates an\n\t   * {@link ArrayLikeSequence} so that the result still provides random access.\n\t   *\n\t   * @public\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2, 3]).rest() // instanceof Lazy.ArrayLikeSequence\n\t   */\n\t  ArrayLikeSequence.prototype.rest = function rest(count) {\n\t    return new IndexedDropSequence(this, count);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedDropSequence(parent, count) {\n\t    this.parent = parent;\n\t    this.count  = typeof count === \"number\" ? count : 1;\n\t  }\n\t\n\t  IndexedDropSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  IndexedDropSequence.prototype.get = function get(i) {\n\t    return this.parent.get(this.count + i);\n\t  };\n\t\n\t  IndexedDropSequence.prototype.length = function length() {\n\t    var parentLength = this.parent.length();\n\t    return this.count <= parentLength ? parentLength - this.count : 0;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#concat} that returns another\n\t   * {@link ArrayLikeSequence} *if* the argument is an array.\n\t   *\n\t   * @public\n\t   * @param {...*} var_args\n\t   *\n\t   * @examples\n\t   * Lazy([1, 2]).concat([3, 4]) // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy([1, 2]).concat([3, 4]) // sequence: [1, 2, 3, 4]\n\t   */\n\t  ArrayLikeSequence.prototype.concat = function concat(var_args) {\n\t    if (arguments.length === 1 && isArray(arguments[0])) {\n\t      return new IndexedConcatenatedSequence(this, (/** @type {Array} */ var_args));\n\t    } else {\n\t      return Sequence.prototype.concat.apply(this, arguments);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function IndexedConcatenatedSequence(parent, other) {\n\t    this.parent = parent;\n\t    this.other  = other;\n\t  }\n\t\n\t  IndexedConcatenatedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  IndexedConcatenatedSequence.prototype.get = function get(i) {\n\t    var parentLength = this.parent.length();\n\t    if (i < parentLength) {\n\t      return this.parent.get(i);\n\t    } else {\n\t      return this.other[i - parentLength];\n\t    }\n\t  };\n\t\n\t  IndexedConcatenatedSequence.prototype.length = function length() {\n\t    return this.parent.length() + this.other.length;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#uniq}.\n\t   */\n\t  ArrayLikeSequence.prototype.uniq = function uniq(keyFn) {\n\t    return new IndexedUniqueSequence(this, createCallback(keyFn));\n\t  };\n\t\n\t  /**\n\t   * @param {ArrayLikeSequence} parent\n\t   * @constructor\n\t   */\n\t  function IndexedUniqueSequence(parent, keyFn) {\n\t    this.parent = parent;\n\t    this.each   = getEachForParent(parent);\n\t    this.keyFn  = keyFn;\n\t  }\n\t\n\t  IndexedUniqueSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  IndexedUniqueSequence.prototype.eachArrayCache = function eachArrayCache(fn) {\n\t    // Basically the same implementation as w/ the set, but using an array because\n\t    // it's cheaper for smaller sequences.\n\t    var parent = this.parent,\n\t        keyFn  = this.keyFn,\n\t        length = parent.length(),\n\t        cache  = [],\n\t        find   = arrayContains,\n\t        key, value,\n\t        i = -1,\n\t        j = 0;\n\t\n\t    while (++i < length) {\n\t      value = parent.get(i);\n\t      key = keyFn(value);\n\t      if (!find(cache, key)) {\n\t        cache.push(key);\n\t        if (fn(value, j++) === false) {\n\t          return false;\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  IndexedUniqueSequence.prototype.eachSetCache = UniqueSequence.prototype.each;\n\t\n\t  function getEachForParent(parent) {\n\t    if (parent.length() < 100) {\n\t      return IndexedUniqueSequence.prototype.eachArrayCache;\n\t    } else {\n\t      return UniqueSequence.prototype.each;\n\t    }\n\t  }\n\t\n\t  // Now that we've fully initialized the ArrayLikeSequence prototype, we can\n\t  // set the prototype for MemoizedSequence.\n\t\n\t  MemoizedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  MemoizedSequence.prototype.getParentIterator = function getParentIterator() {\n\t    // Since the premise of this sequence is that it only iterates over each\n\t    // element of its parent a grand total of one (1) time, we should only ever\n\t    // need to get the parent iterator once.\n\t    if (!this.iterator) {\n\t      this.iterator = this.parent.getIterator();\n\t    }\n\t\n\t    return this.iterator;\n\t  };\n\t\n\t  MemoizedSequence.prototype.getIterator = function getIterator() {\n\t    return new Memoizer(this.memo, this.getParentIterator());\n\t  };\n\t\n\t  MemoizedSequence.prototype.iterateTo = function iterateTo(i) {\n\t    var memo = this.memo,\n\t        iterator = this.getParentIterator();\n\t\n\t    while (i >= memo.length) {\n\t      if (!iterator.moveNext()) {\n\t        this.complete = true;\n\t        return false;\n\t      }\n\t\n\t      memo.push(iterator.current());\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  MemoizedSequence.prototype.get = function get(i) {\n\t    var memo = this.memo;\n\t\n\t    if (i < memo.length) {\n\t      return memo[i];\n\t    }\n\t\n\t    if (!this.iterateTo(i)) {\n\t      return undefined;\n\t    }\n\t\n\t    return memo[i];\n\t  };\n\t\n\t  MemoizedSequence.prototype.length = function length() {\n\t    if (!this.complete) {\n\t      this.iterateTo(Infinity);\n\t    }\n\t\n\t    return this.memo.length;\n\t  };\n\t\n\t  MemoizedSequence.prototype.slice = function slice(begin, end) {\n\t    if (!this.complete) {\n\t      this.iterateTo(end);\n\t    }\n\t\n\t    return Lazy(this.memo.slice(begin, end));\n\t  };\n\t\n\t  MemoizedSequence.prototype.toArray = function toArray() {\n\t    if (!this.complete) {\n\t      this.iterateTo(Infinity);\n\t    }\n\t\n\t    return this.memo.slice(0);\n\t  };\n\t\n\t  /**\n\t   * ArrayWrapper is the most basic {@link Sequence}. It directly wraps an array\n\t   * and implements the same methods as {@link ArrayLikeSequence}, but more\n\t   * efficiently.\n\t   *\n\t   * @constructor\n\t   */\n\t  function ArrayWrapper(source) {\n\t    this.source = source;\n\t  }\n\t\n\t  ArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  ArrayWrapper.prototype.root = function root() {\n\t    return this;\n\t  };\n\t\n\t  ArrayWrapper.prototype.isAsync = function isAsync() {\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Returns the element at the specified index in the source array.\n\t   *\n\t   * @param {number} i The index to access.\n\t   * @returns {*} The element.\n\t   */\n\t  ArrayWrapper.prototype.get = function get(i) {\n\t    return this.source[i];\n\t  };\n\t\n\t  /**\n\t   * Returns the length of the source array.\n\t   *\n\t   * @returns {number} The length.\n\t   */\n\t  ArrayWrapper.prototype.length = function length() {\n\t    return this.source.length;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#each}.\n\t   */\n\t  ArrayWrapper.prototype.each = function each(fn) {\n\t    return forEach(this.source, fn);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#map}.\n\t   */\n\t  ArrayWrapper.prototype.map = function map(mapFn) {\n\t    return new MappedArrayWrapper(this, createCallback(mapFn));\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#filter}.\n\t   */\n\t  ArrayWrapper.prototype.filter = function filter(filterFn) {\n\t    return new FilteredArrayWrapper(this, createCallback(filterFn));\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#uniq}.\n\t   */\n\t  ArrayWrapper.prototype.uniq = function uniq(keyFn) {\n\t    return new UniqueArrayWrapper(this, keyFn);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link ArrayLikeSequence#concat}.\n\t   *\n\t   * @param {...*} var_args\n\t   */\n\t  ArrayWrapper.prototype.concat = function concat(var_args) {\n\t    if (arguments.length === 1 && isArray(arguments[0])) {\n\t      return new ConcatArrayWrapper(this, (/** @type {Array} */ var_args));\n\t    } else {\n\t      return ArrayLikeSequence.prototype.concat.apply(this, arguments);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#toArray}.\n\t   */\n\t  ArrayWrapper.prototype.toArray = function toArray() {\n\t    return this.source.slice(0);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MappedArrayWrapper(parent, mapFn) {\n\t    this.parent = parent;\n\t    this.mapFn  = mapFn;\n\t  }\n\t\n\t  MappedArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  MappedArrayWrapper.prototype.get = function get(i) {\n\t    var source = this.parent.source;\n\t\n\t    if (i < 0 || i >= source.length) {\n\t      return undefined;\n\t    }\n\t\n\t    return this.mapFn(source[i]);\n\t  };\n\t\n\t  MappedArrayWrapper.prototype.length = function length() {\n\t    return this.parent.source.length;\n\t  };\n\t\n\t  MappedArrayWrapper.prototype.each = function each(fn) {\n\t    var source = this.parent.source,\n\t        length = source.length,\n\t        mapFn  = this.mapFn,\n\t        i = -1;\n\t\n\t    while (++i < length) {\n\t      if (fn(mapFn(source[i], i), i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function FilteredArrayWrapper(parent, filterFn) {\n\t    this.parent   = parent;\n\t    this.filterFn = filterFn;\n\t  }\n\t\n\t  FilteredArrayWrapper.prototype = Object.create(FilteredSequence.prototype);\n\t\n\t  FilteredArrayWrapper.prototype.each = function each(fn) {\n\t    var source = this.parent.source,\n\t        filterFn = this.filterFn,\n\t        length = source.length,\n\t        i = -1,\n\t        j = 0,\n\t        e;\n\t\n\t    while (++i < length) {\n\t      e = source[i];\n\t      if (filterFn(e, i) && fn(e, j++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function UniqueArrayWrapper(parent, keyFn) {\n\t    this.parent = parent;\n\t    this.each   = getEachForSource(parent.source);\n\t    this.keyFn  = keyFn;\n\t  }\n\t\n\t  UniqueArrayWrapper.prototype = Object.create(Sequence.prototype);\n\t\n\t  UniqueArrayWrapper.prototype.eachNoCache = function eachNoCache(fn) {\n\t    var source = this.parent.source,\n\t        keyFn  = this.keyFn,\n\t        length = source.length,\n\t        find   = arrayContainsBefore,\n\t        value,\n\t\n\t        // Yes, this is hideous.\n\t        // Trying to get performance first, will refactor next!\n\t        i = -1,\n\t        k = 0;\n\t\n\t    while (++i < length) {\n\t      value = source[i];\n\t      if (!find(source, value, i, keyFn) && fn(value, k++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  UniqueArrayWrapper.prototype.eachArrayCache = function eachArrayCache(fn) {\n\t    // Basically the same implementation as w/ the set, but using an array because\n\t    // it's cheaper for smaller sequences.\n\t    var source = this.parent.source,\n\t        keyFn  = this.keyFn,\n\t        length = source.length,\n\t        cache  = [],\n\t        find   = arrayContains,\n\t        key, value,\n\t        i = -1,\n\t        j = 0;\n\t\n\t    if (keyFn) {\n\t      keyFn = createCallback(keyFn);\n\t      while (++i < length) {\n\t        value = source[i];\n\t        key = keyFn(value);\n\t        if (!find(cache, key)) {\n\t          cache.push(key);\n\t          if (fn(value, j++) === false) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t\n\t    } else {\n\t      while (++i < length) {\n\t        value = source[i];\n\t        if (!find(cache, value)) {\n\t          cache.push(value);\n\t          if (fn(value, j++) === false) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  UniqueArrayWrapper.prototype.eachSetCache = UniqueSequence.prototype.each;\n\t\n\t  /**\n\t   * My latest findings here...\n\t   *\n\t   * So I hadn't really given the set-based approach enough credit. The main issue\n\t   * was that my Set implementation was totally not optimized at all. After pretty\n\t   * heavily optimizing it (just take a look; it's a monstrosity now!), it now\n\t   * becomes the fastest option for much smaller values of N.\n\t   */\n\t  function getEachForSource(source) {\n\t    if (source.length < 40) {\n\t      return UniqueArrayWrapper.prototype.eachNoCache;\n\t    } else if (source.length < 100) {\n\t      return UniqueArrayWrapper.prototype.eachArrayCache;\n\t    } else {\n\t      return UniqueArrayWrapper.prototype.eachSetCache;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ConcatArrayWrapper(parent, other) {\n\t    this.parent = parent;\n\t    this.other  = other;\n\t  }\n\t\n\t  ConcatArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  ConcatArrayWrapper.prototype.get = function get(i) {\n\t    var source = this.parent.source,\n\t        sourceLength = source.length;\n\t\n\t    if (i < sourceLength) {\n\t      return source[i];\n\t    } else {\n\t      return this.other[i - sourceLength];\n\t    }\n\t  };\n\t\n\t  ConcatArrayWrapper.prototype.length = function length() {\n\t    return this.parent.source.length + this.other.length;\n\t  };\n\t\n\t  ConcatArrayWrapper.prototype.each = function each(fn) {\n\t    var source = this.parent.source,\n\t        sourceLength = source.length,\n\t        other = this.other,\n\t        otherLength = other.length,\n\t        i = 0,\n\t        j = -1;\n\t\n\t    while (++j < sourceLength) {\n\t      if (fn(source[j], i++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    j = -1;\n\t    while (++j < otherLength) {\n\t      if (fn(other[j], i++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * An `ObjectLikeSequence` object represents a sequence of key/value pairs.\n\t   *\n\t   * The initial sequence you get by wrapping an object with `Lazy(object)` is\n\t   * an `ObjectLikeSequence`.\n\t   *\n\t   * All methods of `ObjectLikeSequence` that conceptually should return\n\t   * something like an object return another `ObjectLikeSequence`.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   *\n\t   * @examples\n\t   * var obj = { foo: 'bar' };\n\t   *\n\t   * Lazy(obj).assign({ bar: 'baz' })   // instanceof Lazy.ObjectLikeSequence\n\t   * Lazy(obj).defaults({ bar: 'baz' }) // instanceof Lazy.ObjectLikeSequence\n\t   * Lazy(obj).invert()                 // instanceof Lazy.ObjectLikeSequence\n\t   */\n\t  function ObjectLikeSequence() {}\n\t\n\t  ObjectLikeSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  /**\n\t   * Create a new constructor function for a type inheriting from\n\t   * `ObjectLikeSequence`.\n\t   *\n\t   * @public\n\t   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n\t   *     used for constructing the new sequence. The method will be attached to\n\t   *     the `ObjectLikeSequence` prototype so that it can be chained with any other\n\t   *     methods that return object-like sequences.\n\t   * @param {Object} overrides An object containing function overrides for this\n\t   *     new sequence type. **Must** include `each`. *May* include `init` and\n\t   *     `get` (for looking up an element by key).\n\t   * @returns {Function} A constructor for a new type inheriting from\n\t   *     `ObjectLikeSequence`.\n\t   *\n\t   * @examples\n\t   * function downcaseKey(value, key) {\n\t   *   return [key.toLowerCase(), value];\n\t   * }\n\t   *\n\t   * Lazy.ObjectLikeSequence.define(\"caseInsensitive\", {\n\t   *   init: function() {\n\t   *     var downcased = this.parent\n\t   *       .map(downcaseKey)\n\t   *       .toObject();\n\t   *     this.downcased = Lazy(downcased);\n\t   *   },\n\t   *\n\t   *   get: function(key) {\n\t   *     return this.downcased.get(key.toLowerCase());\n\t   *   },\n\t   *\n\t   *   each: function(fn) {\n\t   *     return this.downcased.each(fn);\n\t   *   }\n\t   * });\n\t   *\n\t   * Lazy({ Foo: 'bar' }).caseInsensitive()            // sequence: { foo: 'bar' }\n\t   * Lazy({ FOO: 'bar' }).caseInsensitive().get('foo') // => 'bar'\n\t   * Lazy({ FOO: 'bar' }).caseInsensitive().get('FOO') // => 'bar'\n\t   */\n\t  ObjectLikeSequence.define = function define(methodName, overrides) {\n\t    if (!overrides || typeof overrides.each !== 'function') {\n\t      throw new Error(\"A custom object-like sequence must implement *at least* each!\");\n\t    }\n\t\n\t    return defineSequenceType(ObjectLikeSequence, methodName, overrides);\n\t  };\n\t\n\t  ObjectLikeSequence.prototype.value = function value() {\n\t    return this.toObject();\n\t  };\n\t\n\t  /**\n\t   * Gets the element at the specified key in this sequence.\n\t   *\n\t   * @public\n\t   * @param {string} key The key.\n\t   * @returns {*} The element.\n\t   *\n\t   * @examples\n\t   * Lazy({ foo: \"bar\" }).get(\"foo\")                          // => \"bar\"\n\t   * Lazy({ foo: \"bar\" }).extend({ foo: \"baz\" }).get(\"foo\")   // => \"baz\"\n\t   * Lazy({ foo: \"bar\" }).defaults({ bar: \"baz\" }).get(\"bar\") // => \"baz\"\n\t   * Lazy({ foo: \"bar\" }).invert().get(\"bar\")                 // => \"foo\"\n\t   * Lazy({ foo: 1, bar: 2 }).pick([\"foo\"]).get(\"foo\")        // => 1\n\t   * Lazy({ foo: 1, bar: 2 }).pick([\"foo\"]).get(\"bar\")        // => undefined\n\t   * Lazy({ foo: 1, bar: 2 }).omit([\"foo\"]).get(\"bar\")        // => 2\n\t   * Lazy({ foo: 1, bar: 2 }).omit([\"foo\"]).get(\"foo\")        // => undefined\n\t   */\n\t  ObjectLikeSequence.prototype.get = function get(key) {\n\t    var pair = this.pairs().find(function(pair) {\n\t      return pair[0] === key;\n\t    });\n\t\n\t    return pair ? pair[1] : undefined;\n\t  };\n\t\n\t  /**\n\t   * Returns a {@link Sequence} whose elements are the keys of this object-like\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @returns {Sequence} The sequence based on this sequence's keys.\n\t   *\n\t   * @examples\n\t   * var obj = { hello: \"hola\", goodbye: \"hasta luego\" };\n\t   *\n\t   * Lazy(obj).keys() // sequence: [\"hello\", \"goodbye\"]\n\t   * Lazy(obj).keys().map(function(v, i) { return [v, i]; }) // sequence: [[\"hello\", 0], [\"goodbye\", 1]]\n\t   */\n\t  ObjectLikeSequence.prototype.keys = function keys() {\n\t    return new KeySequence(this);\n\t  };\n\t\n\t  function KeySequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  KeySequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  KeySequence.prototype.each = function each(fn) {\n\t    var i = -1;\n\t\n\t    return this.parent.each(function(v, k) {\n\t      return fn(k, ++i);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Returns a {@link Sequence} whose elements are the values of this object-like\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @returns {Sequence} The sequence based on this sequence's values.\n\t   *\n\t   * @examples\n\t   * Lazy({ hello: \"hola\", goodbye: \"hasta luego\" }).values() // sequence: [\"hola\", \"hasta luego\"]\n\t   */\n\t  ObjectLikeSequence.prototype.values = function values() {\n\t    return new ValuesSequence(this);\n\t  };\n\t\n\t  function ValuesSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  ValuesSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  ValuesSequence.prototype.each = function each(fn) {\n\t    var i = -1;\n\t\n\t    return this.parent.each(function(v, k) {\n\t      return fn(v, ++i);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Throws an exception. Asynchronous iteration over object-like sequences is\n\t   * not supported.\n\t   *\n\t   * @public\n\t   * @examples\n\t   * Lazy({ foo: 'bar' }).async() // throws\n\t   */\n\t  ObjectLikeSequence.prototype.async = function async() {\n\t    throw new Error('An ObjectLikeSequence does not support asynchronous iteration.');\n\t  };\n\t\n\t  ObjectLikeSequence.prototype.filter = function filter(filterFn) {\n\t    return new FilteredObjectLikeSequence(this, createCallback(filterFn));\n\t  };\n\t\n\t  function FilteredObjectLikeSequence(parent, filterFn) {\n\t    this.parent = parent;\n\t    this.filterFn = filterFn;\n\t  }\n\t\n\t  FilteredObjectLikeSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  FilteredObjectLikeSequence.prototype.each = function each(fn) {\n\t    var filterFn = this.filterFn;\n\t\n\t    return this.parent.each(function(v, k) {\n\t      if (filterFn(v, k)) {\n\t        return fn(v, k);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Returns this same sequence. (Reversing an object-like sequence doesn't make\n\t   * any sense.)\n\t   */\n\t  ObjectLikeSequence.prototype.reverse = function reverse() {\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Returns an {@link ObjectLikeSequence} whose elements are the combination of\n\t   * this sequence and another object. In the case of a key appearing in both this\n\t   * sequence and the given object, the other object's value will override the\n\t   * one in this sequence.\n\t   *\n\t   * @public\n\t   * @aka extend\n\t   * @param {Object} other The other object to assign to this sequence.\n\t   * @returns {ObjectLikeSequence} A new sequence comprising elements from this\n\t   *     sequence plus the contents of `other`.\n\t   *\n\t   * @examples\n\t   * Lazy({ \"uno\": 1, \"dos\": 2 }).assign({ \"tres\": 3 })     // sequence: { uno: 1, dos: 2, tres: 3 }\n\t   * Lazy({ foo: \"bar\" }).assign({ foo: \"baz\" });           // sequence: { foo: \"baz\" }\n\t   * Lazy({ foo: 'foo' }).assign({ foo: false }).get('foo') // false\n\t   */\n\t  ObjectLikeSequence.prototype.assign = function assign(other) {\n\t    return new AssignSequence(this, other);\n\t  };\n\t\n\t  ObjectLikeSequence.prototype.extend = function extend(other) {\n\t    return this.assign(other);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function AssignSequence(parent, other) {\n\t    this.parent = parent;\n\t    this.other  = other;\n\t  }\n\t\n\t  AssignSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  AssignSequence.prototype.get = function get(key) {\n\t    return key in this.other ? this.other[key] : this.parent.get(key);\n\t  };\n\t\n\t  AssignSequence.prototype.each = function each(fn) {\n\t    var merged = new Set(),\n\t        done   = false;\n\t\n\t    Lazy(this.other).each(function(value, key) {\n\t      if (fn(value, key) === false) {\n\t        done = true;\n\t        return false;\n\t      }\n\t\n\t      merged.add(key);\n\t    });\n\t\n\t    if (!done) {\n\t      return this.parent.each(function(value, key) {\n\t        if (!merged.contains(key) && fn(value, key) === false) {\n\t          return false;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns an {@link ObjectLikeSequence} whose elements are the combination of\n\t   * this sequence and a 'default' object. In the case of a key appearing in both\n\t   * this sequence and the given object, this sequence's value will override the\n\t   * default object's.\n\t   *\n\t   * @public\n\t   * @param {Object} defaults The 'default' object to use for missing keys in this\n\t   *     sequence.\n\t   * @returns {ObjectLikeSequence} A new sequence comprising elements from this\n\t   *     sequence supplemented by the contents of `defaults`.\n\t   *\n\t   * @examples\n\t   * Lazy({ name: \"Dan\" }).defaults({ name: \"User\", password: \"passw0rd\" }) // sequence: { name: \"Dan\", password: \"passw0rd\" }\n\t   * Lazy({ foo: false }).defaults({ foo: 'foo' }).get('foo') // false\n\t   * Lazy({ a: 1 }).defaults({ b: 2 }).defaults({ c: 3 }) // sequence: { a: 1, b: 2, c: 3 }\n\t   * Lazy({ a: 1 }).defaults({ b: 2 }).defaults({ a: 3 }) // sequence: { a: 1, b: 2 }\n\t   * Lazy({ a: 1, b: 2 }).defaults({ b: 5 }).defaults({ c: 3, d: 4 }) // sequence: { a: 1, b: 2, c: 3, d: 4 }\n\t   */\n\t  ObjectLikeSequence.prototype.defaults = function defaults(defaults) {\n\t    return new DefaultsSequence(this, defaults);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function DefaultsSequence(parent, defaults) {\n\t    this.parent        = parent;\n\t    this.defaultValues = defaults;\n\t  }\n\t\n\t  DefaultsSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  DefaultsSequence.prototype.get = function get(key) {\n\t    var parentValue = this.parent.get(key);\n\t    return parentValue !== undefined ? parentValue : this.defaultValues[key];\n\t  };\n\t\n\t  DefaultsSequence.prototype.each = function each(fn) {\n\t    var merged = new Set(),\n\t        done   = false;\n\t\n\t    this.parent.each(function(value, key) {\n\t      if (fn(value, key) === false) {\n\t        done = true;\n\t        return false;\n\t      }\n\t\n\t      if (typeof value !== \"undefined\") {\n\t        merged.add(key);\n\t      }\n\t    });\n\t\n\t    if (!done) {\n\t      Lazy(this.defaultValues).each(function(value, key) {\n\t        if (!merged.contains(key) && fn(value, key) === false) {\n\t          return false;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns an {@link ObjectLikeSequence} whose values are this sequence's keys,\n\t   * and whose keys are this sequence's values.\n\t   *\n\t   * @public\n\t   * @returns {ObjectLikeSequence} A new sequence comprising the inverted keys and\n\t   *     values from this sequence.\n\t   *\n\t   * @examples\n\t   * Lazy({ first: \"Dan\", last: \"Tao\" }).invert() // sequence: { Dan: \"first\", Tao: \"last\" }\n\t   */\n\t  ObjectLikeSequence.prototype.invert = function invert() {\n\t    return new InvertedSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function InvertedSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  InvertedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  InvertedSequence.prototype.each = function each(fn) {\n\t    this.parent.each(function(value, key) {\n\t      return fn(key, value);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Produces an {@link ObjectLikeSequence} consisting of all the recursively\n\t   * merged values from this and the given object(s) or sequence(s).\n\t   *\n\t   * Note that by default this method only merges \"vanilla\" objects (bags of\n\t   * key/value pairs), not arrays or any other custom object types. To customize\n\t   * how merging works, you can provide the mergeFn argument, e.g. to handling\n\t   * merging arrays, strings, or other types of objects.\n\t   *\n\t   * @public\n\t   * @param {...Object|ObjectLikeSequence} others The other object(s) or\n\t   *     sequence(s) whose values will be merged into this one.\n\t   * @param {Function=} mergeFn An optional function used to customize merging\n\t   *     behavior. The function should take two values as parameters and return\n\t   *     whatever the \"merged\" form of those values is. If the function returns\n\t   *     undefined then the new value will simply replace the old one in the\n\t   *     final result.\n\t   * @returns {ObjectLikeSequence} The new sequence consisting of merged values.\n\t   *\n\t   * @examples\n\t   * // These examples are completely stolen from Lo-Dash's documentation:\n\t   * // lodash.com/docs#merge\n\t   *\n\t   * var names = {\n\t   *   'characters': [\n\t   *     { 'name': 'barney' },\n\t   *     { 'name': 'fred' }\n\t   *   ]\n\t   * };\n\t   *\n\t   * var ages = {\n\t   *   'characters': [\n\t   *     { 'age': 36 },\n\t   *     { 'age': 40 }\n\t   *   ]\n\t   * };\n\t   *\n\t   * var food = {\n\t   *   'fruits': ['apple'],\n\t   *   'vegetables': ['beet']\n\t   * };\n\t   *\n\t   * var otherFood = {\n\t   *   'fruits': ['banana'],\n\t   *   'vegetables': ['carrot']\n\t   * };\n\t   *\n\t   * function mergeArrays(a, b) {\n\t   *   return Array.isArray(a) ? a.concat(b) : undefined;\n\t   * }\n\t   *\n\t   * Lazy(names).merge(ages); // => sequence: { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n\t   * Lazy(food).merge(otherFood, mergeArrays); // => sequence: { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t   *\n\t   * // ----- Now for my own tests: -----\n\t   *\n\t   * // merges objects\n\t   * Lazy({ foo: 1 }).merge({ foo: 2 }); // => sequence: { foo: 2 }\n\t   * Lazy({ foo: 1 }).merge({ bar: 2 }); // => sequence: { foo: 1, bar: 2 }\n\t   *\n\t   * // goes deep\n\t   * Lazy({ foo: { bar: 1 } }).merge({ foo: { bar: 2 } }); // => sequence: { foo: { bar: 2 } }\n\t   * Lazy({ foo: { bar: 1 } }).merge({ foo: { baz: 2 } }); // => sequence: { foo: { bar: 1, baz: 2 } }\n\t   * Lazy({ foo: { bar: 1 } }).merge({ foo: { baz: 2 } }); // => sequence: { foo: { bar: 1, baz: 2 } }\n\t   *\n\t   * // gives precedence to later sources\n\t   * Lazy({ foo: 1 }).merge({ bar: 2 }, { bar: 3 }); // => sequence: { foo: 1, bar: 3 }\n\t   *\n\t   * // undefined gets passed over\n\t   * Lazy({ foo: 1 }).merge({ foo: undefined }); // => sequence: { foo: 1 }\n\t   *\n\t   * // null doesn't get passed over\n\t   * Lazy({ foo: 1 }).merge({ foo: null }); // => sequence: { foo: null }\n\t   *\n\t   * // array contents get merged as well\n\t   * Lazy({ foo: [{ bar: 1 }] }).merge({ foo: [{ baz: 2 }] }); // => sequence: { foo: [{ bar: 1, baz: 2}] }\n\t   */\n\t  ObjectLikeSequence.prototype.merge = function merge(var_args) {\n\t    var mergeFn = arguments.length > 1 && typeof arguments[arguments.length - 1] === \"function\" ?\n\t      arrayPop.call(arguments) : null;\n\t    return new MergedSequence(this, arraySlice.call(arguments, 0), mergeFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MergedSequence(parent, others, mergeFn) {\n\t    this.parent  = parent;\n\t    this.others  = others;\n\t    this.mergeFn = mergeFn;\n\t  }\n\t\n\t  MergedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  MergedSequence.prototype.each = function each(fn) {\n\t    var others  = this.others,\n\t        mergeFn = this.mergeFn || mergeObjects,\n\t        keys    = {};\n\t\n\t    var iteratedFullSource = this.parent.each(function(value, key) {\n\t      var merged = value;\n\t\n\t      forEach(others, function(other) {\n\t        if (key in other) {\n\t          merged = mergeFn(merged, other[key]);\n\t        }\n\t      });\n\t\n\t      keys[key] = true;\n\t\n\t      return fn(merged, key);\n\t    });\n\t\n\t    if (iteratedFullSource === false) {\n\t      return false;\n\t    }\n\t\n\t    var remaining = {};\n\t\n\t    forEach(others, function(other) {\n\t      for (var k in other) {\n\t        if (!keys[k]) {\n\t          remaining[k] = mergeFn(remaining[k], other[k]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return Lazy(remaining).each(fn);\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   * @examples\n\t   * mergeObjects({ foo: 1 }, { bar: 2 }); // => { foo: 1, bar: 2 }\n\t   * mergeObjects({ foo: { bar: 1 } }, { foo: { baz: 2 } }); // => { foo: { bar: 1, baz: 2 } }\n\t   * mergeObjects({ foo: { bar: 1 } }, { foo: undefined }); // => { foo: { bar: 1 } }\n\t   * mergeObjects({ foo: { bar: 1 } }, { foo: null }); // => { foo: null }\n\t   * mergeObjects({ array: [0, 1, 2] }, { array: [3, 4, 5] }).array; // instanceof Array\n\t   * mergeObjects({ date: new Date() }, { date: new Date() }).date; // instanceof Date\n\t   * mergeObjects([{ foo: 1 }], [{ bar: 2 }]); // => [{ foo: 1, bar: 2 }]\n\t   */\n\t  function mergeObjects(a, b) {\n\t    var merged, prop;\n\t\n\t    if (typeof b === 'undefined') {\n\t      return a;\n\t    }\n\t\n\t    // Check that we're dealing with two objects or two arrays.\n\t    if (isVanillaObject(a) && isVanillaObject(b)) {\n\t      merged = {};\n\t    } else if (isArray(a) && isArray(b)) {\n\t      merged = [];\n\t    } else {\n\t      // Otherwise there's no merging to do -- just replace a w/ b.\n\t      return b;\n\t    }\n\t\n\t    for (prop in a) {\n\t      merged[prop] = mergeObjects(a[prop], b[prop]);\n\t    }\n\t    for (prop in b) {\n\t      if (!merged[prop]) {\n\t        merged[prop] = b[prop];\n\t      }\n\t    }\n\t    return merged;\n\t  }\n\t\n\t  /**\n\t   * Checks whether an object is a \"vanilla\" object, i.e. {'foo': 'bar'} as\n\t   * opposed to an array, date, etc.\n\t   *\n\t   * @private\n\t   * @examples\n\t   * isVanillaObject({foo: 'bar'}); // => true\n\t   * isVanillaObject(new Date());   // => false\n\t   * isVanillaObject([1, 2, 3]);    // => false\n\t   */\n\t  function isVanillaObject(object) {\n\t    return object && object.constructor === Object;\n\t  }\n\t\n\t  /**\n\t   * Creates a {@link Sequence} consisting of the keys from this sequence whose\n\t   *     values are functions.\n\t   *\n\t   * @public\n\t   * @aka methods\n\t   * @returns {Sequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var dog = {\n\t   *   name: \"Fido\",\n\t   *   breed: \"Golden Retriever\",\n\t   *   bark: function() { console.log(\"Woof!\"); },\n\t   *   wagTail: function() { console.log(\"TODO: implement robotic dog interface\"); }\n\t   * };\n\t   *\n\t   * Lazy(dog).functions() // sequence: [\"bark\", \"wagTail\"]\n\t   */\n\t  ObjectLikeSequence.prototype.functions = function functions() {\n\t    return this\n\t      .filter(function(v, k) { return typeof(v) === \"function\"; })\n\t      .map(function(v, k) { return k; });\n\t  };\n\t\n\t  ObjectLikeSequence.prototype.methods = function methods() {\n\t    return this.functions();\n\t  };\n\t\n\t  /**\n\t   * Creates an {@link ObjectLikeSequence} consisting of the key/value pairs from\n\t   * this sequence whose keys are included in the given array of property names.\n\t   *\n\t   * @public\n\t   * @param {Array.<string>} properties An array of the properties to \"pick\" from this\n\t   *     sequence.\n\t   * @returns {ObjectLikeSequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var players = {\n\t   *   \"who\": \"first\",\n\t   *   \"what\": \"second\",\n\t   *   \"i don't know\": \"third\"\n\t   * };\n\t   *\n\t   * Lazy(players).pick([\"who\", \"what\"]) // sequence: { who: \"first\", what: \"second\" }\n\t   */\n\t  ObjectLikeSequence.prototype.pick = function pick(properties) {\n\t    return new PickSequence(this, properties);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function PickSequence(parent, properties) {\n\t    this.parent     = parent;\n\t    this.properties = properties;\n\t  }\n\t\n\t  PickSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  PickSequence.prototype.get = function get(key) {\n\t    return arrayContains(this.properties, key) ? this.parent.get(key) : undefined;\n\t  };\n\t\n\t  PickSequence.prototype.each = function each(fn) {\n\t    var inArray    = arrayContains,\n\t        properties = this.properties;\n\t\n\t    return this.parent.each(function(value, key) {\n\t      if (inArray(properties, key)) {\n\t        return fn(value, key);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Creates an {@link ObjectLikeSequence} consisting of the key/value pairs from\n\t   * this sequence excluding those with the specified keys. Non-string keys are\n\t   * effectively ignored.\n\t   *\n\t   * @public\n\t   * @param {Array} properties An array of the properties to *omit* from this\n\t   *     sequence.\n\t   * @returns {ObjectLikeSequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * var players = {\n\t   *   \"who\": \"first\",\n\t   *   \"what\": \"second\",\n\t   *   \"i don't know\": \"third\"\n\t   * };\n\t   *\n\t   * Lazy(players).omit([\"who\", \"what\"]) // sequence: { \"i don't know\": \"third\" }\n\t   *\n\t   * // Example to show handling of non-string keys\n\t   * Lazy({1: 2, true: false}).omit([1, true]) // sequence: { \"1\": 2, \"true\": false }\n\t   */\n\t  ObjectLikeSequence.prototype.omit = function omit(properties) {\n\t    return new OmitSequence(this, properties);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function OmitSequence(parent, properties) {\n\t    this.parent     = parent;\n\t    this.properties = properties;\n\t  }\n\t\n\t  OmitSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  OmitSequence.prototype.get = function get(key) {\n\t    return arrayContains(this.properties, key) ? undefined : this.parent.get(key);\n\t  };\n\t\n\t  OmitSequence.prototype.each = function each(fn) {\n\t    var inArray    = arrayContains,\n\t        properties = this.properties;\n\t\n\t    return this.parent.each(function(value, key) {\n\t      if (!inArray(properties, key)) {\n\t        return fn(value, key);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Maps the key/value pairs in this sequence to arrays.\n\t   *\n\t   * @public\n\t   * @aka toArray\n\t   * @returns {Sequence} An sequence of `[key, value]` pairs.\n\t   *\n\t   * @examples\n\t   * var colorCodes = {\n\t   *   red: \"#f00\",\n\t   *   green: \"#0f0\",\n\t   *   blue: \"#00f\"\n\t   * };\n\t   *\n\t   * Lazy(colorCodes).pairs() // sequence: [[\"red\", \"#f00\"], [\"green\", \"#0f0\"], [\"blue\", \"#00f\"]]\n\t   */\n\t  ObjectLikeSequence.prototype.pairs = function pairs() {\n\t    return this.map(function(v, k) { return [k, v]; });\n\t  };\n\t\n\t  /**\n\t   * Creates an array from the key/value pairs in this sequence.\n\t   *\n\t   * @public\n\t   * @returns {Array} An array of `[key, value]` elements.\n\t   *\n\t   * @examples\n\t   * var colorCodes = {\n\t   *   red: \"#f00\",\n\t   *   green: \"#0f0\",\n\t   *   blue: \"#00f\"\n\t   * };\n\t   *\n\t   * Lazy(colorCodes).toArray() // => [[\"red\", \"#f00\"], [\"green\", \"#0f0\"], [\"blue\", \"#00f\"]]\n\t   */\n\t  ObjectLikeSequence.prototype.toArray = function toArray() {\n\t    return this.pairs().toArray();\n\t  };\n\t\n\t  /**\n\t   * Creates an object with the key/value pairs from this sequence.\n\t   *\n\t   * @public\n\t   * @returns {Object} An object with the same key/value pairs as this sequence.\n\t   *\n\t   * @examples\n\t   * var colorCodes = {\n\t   *   red: \"#f00\",\n\t   *   green: \"#0f0\",\n\t   *   blue: \"#00f\"\n\t   * };\n\t   *\n\t   * Lazy(colorCodes).toObject() // => { red: \"#f00\", green: \"#0f0\", blue: \"#00f\" }\n\t   */\n\t  ObjectLikeSequence.prototype.toObject = function toObject() {\n\t    return this.reduce(function(object, value, key) {\n\t      object[key] = value;\n\t      return object;\n\t    }, {});\n\t  };\n\t\n\t  // Now that we've fully initialized the ObjectLikeSequence prototype, we can\n\t  // actually set the prototypes for GroupedSequence, IndexedSequence, and\n\t  // CountedSequence.\n\t\n\t  GroupedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  /**\n\t   * @examples\n\t   * var objects = [{a: 'x'}, {a: 'x'}];\n\t   *\n\t   * Lazy(objects).groupBy('a') // sequence: {x: [{a: 'x'}, {a: 'x'}]}\n\t   * Lazy(objects).groupBy('a').each(Lazy.noop) // true\n\t   */\n\t  GroupedSequence.prototype.each = function each(fn) {\n\t    var keyFn   = createCallback(this.keyFn),\n\t        valFn   = createCallback(this.valFn),\n\t        result;\n\t\n\t    result = this.parent.reduce(function(grouped,e) {\n\t      var key = keyFn(e),\n\t          val = valFn(e);\n\t      if (!isArray(grouped[key])) {\n\t        grouped[key] = [val];\n\t      } else {\n\t        grouped[key].push(val);\n\t      }\n\t      return grouped;\n\t    },{});\n\t\n\t    return transform(function(grouped) {\n\t      for (var key in grouped) {\n\t        if (fn(grouped[key], key) === false) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }, result);\n\t  };\n\t\n\t  IndexedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  IndexedSequence.prototype.each = function each(fn) {\n\t    var keyFn   = createCallback(this.keyFn),\n\t        valFn   = createCallback(this.valFn),\n\t        indexed = {};\n\t\n\t    return this.parent.each(function(e) {\n\t      var key = keyFn(e),\n\t          val = valFn(e);\n\t\n\t      if (!indexed[key]) {\n\t        indexed[key] = val;\n\t        return fn(val, key);\n\t      }\n\t    });\n\t  };\n\t\n\t  CountedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  CountedSequence.prototype.each = function each(fn) {\n\t    var keyFn   = createCallback(this.keyFn),\n\t        counted = {};\n\t\n\t    this.parent.each(function(e) {\n\t      var key = keyFn(e);\n\t      if (!counted[key]) {\n\t        counted[key] = 1;\n\t      } else {\n\t        counted[key] += 1;\n\t      }\n\t    });\n\t\n\t    for (var key in counted) {\n\t      if (fn(counted[key], key) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Watches for all changes to a specified property (or properties) of an\n\t   * object and produces a sequence whose elements have the properties\n\t   * `{ property, value }` indicating which property changed and what it was\n\t   * changed to.\n\t   *\n\t   * Note that this method **only works on directly wrapped objects**; it will\n\t   * *not* work on any arbitrary {@link ObjectLikeSequence}.\n\t   *\n\t   * @public\n\t   * @param {(string|Array)=} propertyNames A property name or array of property\n\t   *     names to watch. If this parameter is `undefined`, all of the object's\n\t   *     current (enumerable) properties will be watched.\n\t   * @returns {Sequence} A sequence comprising `{ property, value }` objects\n\t   *     describing each change to the specified property/properties.\n\t   *\n\t   * @examples\n\t   * var obj = {},\n\t   *     changes = [];\n\t   *\n\t   * Lazy(obj).watch('foo').each(function(change) {\n\t   *   changes.push(change);\n\t   * });\n\t   *\n\t   * obj.foo = 1;\n\t   * obj.bar = 2;\n\t   * obj.foo = 3;\n\t   *\n\t   * obj.foo; // => 3\n\t   * changes; // => [{ property: 'foo', value: 1 }, { property: 'foo', value: 3 }]\n\t   */\n\t  ObjectLikeSequence.prototype.watch = function watch(propertyNames) {\n\t    throw new Error('You can only call #watch on a directly wrapped object.');\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ObjectWrapper(source) {\n\t    this.source = source;\n\t  }\n\t\n\t  ObjectWrapper.prototype = Object.create(ObjectLikeSequence.prototype);\n\t\n\t  ObjectWrapper.prototype.root = function root() {\n\t    return this;\n\t  };\n\t\n\t  ObjectWrapper.prototype.isAsync = function isAsync() {\n\t    return false;\n\t  };\n\t\n\t  ObjectWrapper.prototype.get = function get(key) {\n\t    return this.source[key];\n\t  };\n\t\n\t  ObjectWrapper.prototype.each = function each(fn) {\n\t    var source = this.source,\n\t        keys = source ? Object.keys(source) : [],\n\t        length = keys.length,\n\t        key,\n\t        index;\n\t\n\t    for (index = 0; index < length; ++index) {\n\t      key = keys[index];\n\t\n\t      if (fn(source[key], key) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * A `StringLikeSequence` represents a sequence of characters.\n\t   *\n\t   * The initial sequence you get by wrapping a string with `Lazy(string)` is a\n\t   * `StringLikeSequence`.\n\t   *\n\t   * All methods of `StringLikeSequence` that conceptually should return\n\t   * something like a string return another `StringLikeSequence`.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   *\n\t   * @examples\n\t   * function upcase(str) { return str.toUpperCase(); }\n\t   *\n\t   * Lazy('foo')               // instanceof Lazy.StringLikeSequence\n\t   * Lazy('foo').toUpperCase() // instanceof Lazy.StringLikeSequence\n\t   * Lazy('foo').reverse()     // instanceof Lazy.StringLikeSequence\n\t   * Lazy('foo').take(2)       // instanceof Lazy.StringLikeSequence\n\t   * Lazy('foo').drop(1)       // instanceof Lazy.StringLikeSequence\n\t   * Lazy('foo').substring(1)  // instanceof Lazy.StringLikeSequence\n\t   *\n\t   * // Note that `map` does not create a `StringLikeSequence` because there's\n\t   * // no guarantee the mapping function will return characters. In the event\n\t   * // you do want to map a string onto a string-like sequence, use\n\t   * // `mapString`:\n\t   * Lazy('foo').map(Lazy.identity)       // instanceof Lazy.ArrayLikeSequence\n\t   * Lazy('foo').mapString(Lazy.identity) // instanceof Lazy.StringLikeSequence\n\t   */\n\t  function StringLikeSequence() {}\n\t\n\t  StringLikeSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\t\n\t  /**\n\t   * Create a new constructor function for a type inheriting from\n\t   * `StringLikeSequence`.\n\t   *\n\t   * @public\n\t   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n\t   *     used for constructing the new sequence. The method will be attached to\n\t   *     the `StringLikeSequence` prototype so that it can be chained with any other\n\t   *     methods that return string-like sequences.\n\t   * @param {Object} overrides An object containing function overrides for this\n\t   *     new sequence type. Has the same requirements as\n\t   *     {@link ArrayLikeSequence.define}.\n\t   * @returns {Function} A constructor for a new type inheriting from\n\t   *     `StringLikeSequence`.\n\t   *\n\t   * @examples\n\t   * Lazy.StringLikeSequence.define(\"zomg\", {\n\t   *   length: function() {\n\t   *     return this.parent.length() + \"!!ZOMG!!!1\".length;\n\t   *   },\n\t   *\n\t   *   get: function(i) {\n\t   *     if (i < this.parent.length()) {\n\t   *       return this.parent.get(i);\n\t   *     }\n\t   *     return \"!!ZOMG!!!1\".charAt(i - this.parent.length());\n\t   *   }\n\t   * });\n\t   *\n\t   * Lazy('foo').zomg() // sequence: \"foo!!ZOMG!!!1\"\n\t   */\n\t  StringLikeSequence.define = function define(methodName, overrides) {\n\t    if (!overrides || typeof overrides.get !== 'function') {\n\t      throw new Error(\"A custom string-like sequence must implement *at least* get!\");\n\t    }\n\t\n\t    return defineSequenceType(StringLikeSequence, methodName, overrides);\n\t  };\n\t\n\t  StringLikeSequence.prototype.value = function value() {\n\t    return this.toString();\n\t  };\n\t\n\t  /**\n\t   * Returns an {@link IndexedIterator} that will step over each character in this\n\t   * sequence one by one.\n\t   *\n\t   * @returns {IndexedIterator} The iterator.\n\t   */\n\t  StringLikeSequence.prototype.getIterator = function getIterator() {\n\t    return new CharIterator(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function CharIterator(source) {\n\t    this.source = Lazy(source);\n\t    this.index = -1;\n\t  }\n\t\n\t  CharIterator.prototype.current = function current() {\n\t    return this.source.charAt(this.index);\n\t  };\n\t\n\t  CharIterator.prototype.moveNext = function moveNext() {\n\t    return (++this.index < this.source.length());\n\t  };\n\t\n\t  /**\n\t   * Returns the character at the given index of this sequence, or the empty\n\t   * string if the specified index lies outside the bounds of the sequence.\n\t   *\n\t   * @public\n\t   * @param {number} i The index of this sequence.\n\t   * @returns {string} The character at the specified index.\n\t   *\n\t   * @examples\n\t   * Lazy(\"foo\").charAt(0)  // => \"f\"\n\t   * Lazy(\"foo\").charAt(-1) // => \"\"\n\t   * Lazy(\"foo\").charAt(10) // => \"\"\n\t   */\n\t  StringLikeSequence.prototype.charAt = function charAt(i) {\n\t    return this.get(i);\n\t  };\n\t\n\t  /**\n\t   * Returns the character code at the given index of this sequence, or `NaN` if\n\t   * the index lies outside the bounds of the sequence.\n\t   *\n\t   * @public\n\t   * @param {number} i The index of the character whose character code you want.\n\t   * @returns {number} The character code.\n\t   *\n\t   * @examples\n\t   * Lazy(\"abc\").charCodeAt(0)  // => 97\n\t   * Lazy(\"abc\").charCodeAt(-1) // => NaN\n\t   * Lazy(\"abc\").charCodeAt(10) // => NaN\n\t   */\n\t  StringLikeSequence.prototype.charCodeAt = function charCodeAt(i) {\n\t    var char = this.charAt(i);\n\t    if (!char) { return NaN; }\n\t\n\t    return char.charCodeAt(0);\n\t  };\n\t\n\t  /**\n\t   * Returns a {@link StringLikeSequence} comprising the characters from *this*\n\t   * sequence starting at `start` and ending at `stop` (exclusive), or---if\n\t   * `stop` is `undefined`, including the rest of the sequence.\n\t   *\n\t   * @public\n\t   * @param {number} start The index where this sequence should begin.\n\t   * @param {number=} stop The index (exclusive) where this sequence should end.\n\t   * @returns {StringLikeSequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * Lazy(\"foo\").substring(1)      // sequence: \"oo\"\n\t   * Lazy(\"foo\").substring(-1)     // sequence: \"foo\"\n\t   * Lazy(\"hello\").substring(1, 3) // sequence: \"el\"\n\t   * Lazy(\"hello\").substring(1, 9) // sequence: \"ello\"\n\t   * Lazy(\"foo\").substring(0, 0)   // sequence: \"\"\n\t   * Lazy(\"foo\").substring(3, 3)   // sequence: \"\"\n\t   */\n\t  StringLikeSequence.prototype.substring = function substring(start, stop) {\n\t    return new StringSegment(this, start, stop);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function StringSegment(parent, start, stop) {\n\t    this.parent = parent;\n\t    this.start  = Math.max(0, start);\n\t    this.stop   = stop;\n\t  }\n\t\n\t  StringSegment.prototype = Object.create(StringLikeSequence.prototype);\n\t\n\t  StringSegment.prototype.get = function get(i) {\n\t    return this.parent.get(i + this.start);\n\t  };\n\t\n\t  StringSegment.prototype.length = function length() {\n\t    return (typeof this.stop === \"number\" ? this.stop : this.parent.length()) - this.start;\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#first} that returns another\n\t   * {@link StringLikeSequence} (or just the first character, if `count` is\n\t   * undefined).\n\t   *\n\t   * @public\n\t   * @examples\n\t   * Lazy('foo').first()                // => 'f'\n\t   * Lazy('fo').first(2)                // sequence: 'fo'\n\t   * Lazy('foo').first(10)              // sequence: 'foo'\n\t   * Lazy('foo').toUpperCase().first()  // => 'F'\n\t   * Lazy('foo').toUpperCase().first(2) // sequence: 'FO'\n\t   */\n\t  StringLikeSequence.prototype.first = function first(count) {\n\t    if (typeof count === \"undefined\") {\n\t      return this.charAt(0);\n\t    }\n\t\n\t    return this.substring(0, count);\n\t  };\n\t\n\t  /**\n\t   * An optimized version of {@link Sequence#last} that returns another\n\t   * {@link StringLikeSequence} (or just the last character, if `count` is\n\t   * undefined).\n\t   *\n\t   * @public\n\t   * @examples\n\t   * Lazy('foo').last()                // => 'o'\n\t   * Lazy('foo').last(2)               // sequence: 'oo'\n\t   * Lazy('foo').last(10)              // sequence: 'foo'\n\t   * Lazy('foo').toUpperCase().last()  // => 'O'\n\t   * Lazy('foo').toUpperCase().last(2) // sequence: 'OO'\n\t   */\n\t  StringLikeSequence.prototype.last = function last(count) {\n\t    if (typeof count === \"undefined\") {\n\t      return this.charAt(this.length() - 1);\n\t    }\n\t\n\t    return this.substring(this.length() - count);\n\t  };\n\t\n\t  StringLikeSequence.prototype.drop = function drop(count) {\n\t    return this.substring(count);\n\t  };\n\t\n\t  /**\n\t   * Finds the index of the first occurrence of the given substring within this\n\t   * sequence, starting from the specified index (or the beginning of the\n\t   * sequence).\n\t   *\n\t   * @public\n\t   * @param {string} substring The substring to search for.\n\t   * @param {number=} startIndex The index from which to start the search.\n\t   * @returns {number} The first index where the given substring is found, or\n\t   *     -1 if it isn't in the sequence.\n\t   *\n\t   * @examples\n\t   * Lazy('canal').indexOf('a')    // => 1\n\t   * Lazy('canal').indexOf('a', 2) // => 3\n\t   * Lazy('canal').indexOf('ana')  // => 1\n\t   * Lazy('canal').indexOf('andy') // => -1\n\t   * Lazy('canal').indexOf('x')    // => -1\n\t   */\n\t  StringLikeSequence.prototype.indexOf = function indexOf(substring, startIndex) {\n\t    return this.toString().indexOf(substring, startIndex);\n\t  };\n\t\n\t  /**\n\t   * Finds the index of the last occurrence of the given substring within this\n\t   * sequence, starting from the specified index (or the end of the sequence)\n\t   * and working backwards.\n\t   *\n\t   * @public\n\t   * @param {string} substring The substring to search for.\n\t   * @param {number=} startIndex The index from which to start the search.\n\t   * @returns {number} The last index where the given substring is found, or\n\t   *     -1 if it isn't in the sequence.\n\t   *\n\t   * @examples\n\t   * Lazy('canal').lastIndexOf('a')    // => 3\n\t   * Lazy('canal').lastIndexOf('a', 2) // => 1\n\t   * Lazy('canal').lastIndexOf('ana')  // => 1\n\t   * Lazy('canal').lastIndexOf('andy') // => -1\n\t   * Lazy('canal').lastIndexOf('x')    // => -1\n\t   */\n\t  StringLikeSequence.prototype.lastIndexOf = function lastIndexOf(substring, startIndex) {\n\t    return this.toString().lastIndexOf(substring, startIndex);\n\t  };\n\t\n\t  /**\n\t   * Checks if this sequence contains a given substring.\n\t   *\n\t   * @public\n\t   * @param {string} substring The substring to check for.\n\t   * @returns {boolean} Whether or not this sequence contains `substring`.\n\t   *\n\t   * @examples\n\t   * Lazy('hello').contains('ell') // => true\n\t   * Lazy('hello').contains('')    // => true\n\t   * Lazy('hello').contains('abc') // => false\n\t   */\n\t  StringLikeSequence.prototype.contains = function contains(substring) {\n\t    return this.indexOf(substring) !== -1;\n\t  };\n\t\n\t  /**\n\t   * Checks if this sequence ends with a given suffix.\n\t   *\n\t   * @public\n\t   * @param {string} suffix The suffix to check for.\n\t   * @returns {boolean} Whether or not this sequence ends with `suffix`.\n\t   *\n\t   * @examples\n\t   * Lazy('foo').endsWith('oo')  // => true\n\t   * Lazy('foo').endsWith('')    // => true\n\t   * Lazy('foo').endsWith('abc') // => false\n\t   */\n\t  StringLikeSequence.prototype.endsWith = function endsWith(suffix) {\n\t    return this.substring(this.length() - suffix.length).toString() === suffix;\n\t  };\n\t\n\t  /**\n\t   * Checks if this sequence starts with a given prefix.\n\t   *\n\t   * @public\n\t   * @param {string} prefix The prefix to check for.\n\t   * @returns {boolean} Whether or not this sequence starts with `prefix`.\n\t   *\n\t   * @examples\n\t   * Lazy('foo').startsWith('fo')  // => true\n\t   * Lazy('foo').startsWith('')    // => true\n\t   * Lazy('foo').startsWith('abc') // => false\n\t   */\n\t  StringLikeSequence.prototype.startsWith = function startsWith(prefix) {\n\t    return this.substring(0, prefix.length).toString() === prefix;\n\t  };\n\t\n\t  /**\n\t   * Converts all of the characters in this string to uppercase.\n\t   *\n\t   * @public\n\t   * @returns {StringLikeSequence} A new sequence with the same characters as\n\t   *     this sequence, all uppercase.\n\t   *\n\t   * @examples\n\t   * function nextLetter(a) {\n\t   *   return String.fromCharCode(a.charCodeAt(0) + 1);\n\t   * }\n\t   *\n\t   * Lazy('foo').toUpperCase()                       // sequence: 'FOO'\n\t   * Lazy('foo').substring(1).toUpperCase()          // sequence: 'OO'\n\t   * Lazy('abc').mapString(nextLetter).toUpperCase() // sequence: 'BCD'\n\t   */\n\t  StringLikeSequence.prototype.toUpperCase = function toUpperCase() {\n\t    return this.mapString(function(char) { return char.toUpperCase(); });\n\t  };\n\t\n\t  /**\n\t   * Converts all of the characters in this string to lowercase.\n\t   *\n\t   * @public\n\t   * @returns {StringLikeSequence} A new sequence with the same characters as\n\t   *     this sequence, all lowercase.\n\t   *\n\t   * @examples\n\t   * function nextLetter(a) {\n\t   *   return String.fromCharCode(a.charCodeAt(0) + 1);\n\t   * }\n\t   *\n\t   * Lazy('FOO').toLowerCase()                       // sequence: 'foo'\n\t   * Lazy('FOO').substring(1).toLowerCase()          // sequence: 'oo'\n\t   * Lazy('ABC').mapString(nextLetter).toLowerCase() // sequence: 'bcd'\n\t   */\n\t  StringLikeSequence.prototype.toLowerCase = function toLowerCase() {\n\t    return this.mapString(function(char) { return char.toLowerCase(); });\n\t  };\n\t\n\t  /**\n\t   * Maps the characters of this sequence onto a new {@link StringLikeSequence}.\n\t   *\n\t   * @public\n\t   * @param {Function} mapFn The function used to map characters from this\n\t   *     sequence onto the new sequence.\n\t   * @returns {StringLikeSequence} The new sequence.\n\t   *\n\t   * @examples\n\t   * function upcase(char) { return char.toUpperCase(); }\n\t   *\n\t   * Lazy(\"foo\").mapString(upcase)               // sequence: \"FOO\"\n\t   * Lazy(\"foo\").mapString(upcase).charAt(0)     // => \"F\"\n\t   * Lazy(\"foo\").mapString(upcase).charCodeAt(0) // => 70\n\t   * Lazy(\"foo\").mapString(upcase).substring(1)  // sequence: \"OO\"\n\t   */\n\t  StringLikeSequence.prototype.mapString = function mapString(mapFn) {\n\t    return new MappedStringLikeSequence(this, mapFn);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MappedStringLikeSequence(parent, mapFn) {\n\t    this.parent = parent;\n\t    this.mapFn  = mapFn;\n\t  }\n\t\n\t  MappedStringLikeSequence.prototype = Object.create(StringLikeSequence.prototype);\n\t  MappedStringLikeSequence.prototype.get = IndexedMappedSequence.prototype.get;\n\t  MappedStringLikeSequence.prototype.length = IndexedMappedSequence.prototype.length;\n\t\n\t  /**\n\t   * Returns a copy of this sequence that reads back to front.\n\t   *\n\t   * @public\n\t   *\n\t   * @examples\n\t   * Lazy(\"abcdefg\").reverse() // sequence: \"gfedcba\"\n\t   */\n\t  StringLikeSequence.prototype.reverse = function reverse() {\n\t    return new ReversedStringLikeSequence(this);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function ReversedStringLikeSequence(parent) {\n\t    this.parent = parent;\n\t  }\n\t\n\t  ReversedStringLikeSequence.prototype = Object.create(StringLikeSequence.prototype);\n\t  ReversedStringLikeSequence.prototype.get = IndexedReversedSequence.prototype.get;\n\t  ReversedStringLikeSequence.prototype.length = IndexedReversedSequence.prototype.length;\n\t\n\t  StringLikeSequence.prototype.toString = function toString() {\n\t    return this.join(\"\");\n\t  };\n\t\n\t  /**\n\t   * Creates a {@link Sequence} comprising all of the matches for the specified\n\t   * pattern in the underlying string.\n\t   *\n\t   * @public\n\t   * @param {RegExp} pattern The pattern to match.\n\t   * @returns {Sequence} A sequence of all the matches.\n\t   *\n\t   * @examples\n\t   * Lazy(\"abracadabra\").match(/a[bcd]/) // sequence: [\"ab\", \"ac\", \"ad\", \"ab\"]\n\t   * Lazy(\"fee fi fo fum\").match(/\\w+/)  // sequence: [\"fee\", \"fi\", \"fo\", \"fum\"]\n\t   * Lazy(\"hello\").match(/xyz/)          // sequence: []\n\t   */\n\t  StringLikeSequence.prototype.match = function match(pattern) {\n\t    return new StringMatchSequence(this, pattern);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function StringMatchSequence(parent, pattern) {\n\t    this.parent = parent;\n\t    this.pattern = pattern;\n\t  }\n\t\n\t  StringMatchSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  StringMatchSequence.prototype.getIterator = function getIterator() {\n\t    return new StringMatchIterator(this.parent.toString(), this.pattern);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function StringMatchIterator(source, pattern) {\n\t    this.source  = source;\n\t    this.pattern = cloneRegex(pattern);\n\t  }\n\t\n\t  StringMatchIterator.prototype.current = function current() {\n\t    return this.match[0];\n\t  };\n\t\n\t  StringMatchIterator.prototype.moveNext = function moveNext() {\n\t    return !!(this.match = this.pattern.exec(this.source));\n\t  };\n\t\n\t  /**\n\t   * Creates a {@link Sequence} comprising all of the substrings of this string\n\t   * separated by the given delimiter, which can be either a string or a regular\n\t   * expression.\n\t   *\n\t   * @public\n\t   * @param {string|RegExp} delimiter The delimiter to use for recognizing\n\t   *     substrings.\n\t   * @returns {Sequence} A sequence of all the substrings separated by the given\n\t   *     delimiter.\n\t   *\n\t   * @examples\n\t   * Lazy(\"foo\").split(\"\")                      // sequence: [\"f\", \"o\", \"o\"]\n\t   * Lazy(\"yo dawg\").split(\" \")                 // sequence: [\"yo\", \"dawg\"]\n\t   * Lazy(\"bah bah\\tblack  sheep\").split(/\\s+/) // sequence: [\"bah\", \"bah\", \"black\", \"sheep\"]\n\t   */\n\t  StringLikeSequence.prototype.split = function split(delimiter) {\n\t    return new SplitStringSequence(this, delimiter);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SplitStringSequence(parent, pattern) {\n\t    this.parent = parent;\n\t    this.pattern = pattern;\n\t  }\n\t\n\t  SplitStringSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  SplitStringSequence.prototype.getIterator = function getIterator() {\n\t    var source = this.parent.toString();\n\t\n\t    if (this.pattern instanceof RegExp) {\n\t      if (this.pattern.source === \"\" || this.pattern.source === \"(?:)\") {\n\t        return new CharIterator(source);\n\t      } else {\n\t        return new SplitWithRegExpIterator(source, this.pattern);\n\t      }\n\t    } else if (this.pattern === \"\") {\n\t      return new CharIterator(source);\n\t    } else {\n\t      return new SplitWithStringIterator(source, this.pattern);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SplitWithRegExpIterator(source, pattern) {\n\t    this.source  = source;\n\t    this.pattern = cloneRegex(pattern);\n\t  }\n\t\n\t  SplitWithRegExpIterator.prototype.current = function current() {\n\t    return this.source.substring(this.start, this.end);\n\t  };\n\t\n\t  SplitWithRegExpIterator.prototype.moveNext = function moveNext() {\n\t    if (!this.pattern) {\n\t      return false;\n\t    }\n\t\n\t    var match = this.pattern.exec(this.source);\n\t\n\t    if (match) {\n\t      this.start = this.nextStart ? this.nextStart : 0;\n\t      this.end = match.index;\n\t      this.nextStart = match.index + match[0].length;\n\t      return true;\n\t\n\t    } else if (this.pattern) {\n\t      this.start = this.nextStart;\n\t      this.end = undefined;\n\t      this.nextStart = undefined;\n\t      this.pattern = undefined;\n\t      return true;\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SplitWithStringIterator(source, delimiter) {\n\t    this.source = source;\n\t    this.delimiter = delimiter;\n\t  }\n\t\n\t  SplitWithStringIterator.prototype.current = function current() {\n\t    return this.source.substring(this.leftIndex, this.rightIndex);\n\t  };\n\t\n\t  SplitWithStringIterator.prototype.moveNext = function moveNext() {\n\t    if (!this.finished) {\n\t      this.leftIndex = typeof this.leftIndex !== \"undefined\" ?\n\t        this.rightIndex + this.delimiter.length :\n\t        0;\n\t      this.rightIndex = this.source.indexOf(this.delimiter, this.leftIndex);\n\t    }\n\t\n\t    if (this.rightIndex === -1) {\n\t      this.finished = true;\n\t      this.rightIndex = undefined;\n\t      return true;\n\t    }\n\t\n\t    return !this.finished;\n\t  };\n\t\n\t  /**\n\t   * Wraps a string exposing {@link #match} and {@link #split} methods that return\n\t   * {@link Sequence} objects instead of arrays, improving on the efficiency of\n\t   * JavaScript's built-in `String#split` and `String.match` methods and\n\t   * supporting asynchronous iteration.\n\t   *\n\t   * @param {string} source The string to wrap.\n\t   * @constructor\n\t   */\n\t  function StringWrapper(source) {\n\t    this.source = source;\n\t  }\n\t\n\t  StringWrapper.prototype = Object.create(StringLikeSequence.prototype);\n\t\n\t  StringWrapper.prototype.root = function root() {\n\t    return this;\n\t  };\n\t\n\t  StringWrapper.prototype.isAsync = function isAsync() {\n\t    return false;\n\t  };\n\t\n\t  StringWrapper.prototype.get = function get(i) {\n\t    return this.source.charAt(i);\n\t  };\n\t\n\t  StringWrapper.prototype.length = function length() {\n\t    return this.source.length;\n\t  };\n\t\n\t  StringWrapper.prototype.toString = function toString() {\n\t    return this.source;\n\t  };\n\t\n\t  /**\n\t   * A `GeneratedSequence` does not wrap an in-memory collection but rather\n\t   * determines its elements on-the-fly during iteration according to a generator\n\t   * function.\n\t   *\n\t   * You create a `GeneratedSequence` by calling {@link Lazy.generate}.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   * @param {function(number):*} generatorFn A function which accepts an index\n\t   *     and returns a value for the element at that position in the sequence.\n\t   * @param {number=} length The length of the sequence. If this argument is\n\t   *     omitted, the sequence will go on forever.\n\t   */\n\t  function GeneratedSequence(generatorFn, length) {\n\t    this.get = generatorFn;\n\t    this.fixedLength = length;\n\t  }\n\t\n\t  GeneratedSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  GeneratedSequence.prototype.isAsync = function isAsync() {\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Returns the length of this sequence.\n\t   *\n\t   * @public\n\t   * @returns {number} The length, or `undefined` if this is an indefinite\n\t   *     sequence.\n\t   */\n\t  GeneratedSequence.prototype.length = function length() {\n\t    return this.fixedLength;\n\t  };\n\t\n\t  /**\n\t   * Iterates over the sequence produced by invoking this sequence's generator\n\t   * function up to its specified length, or, if length is `undefined`,\n\t   * indefinitely (in which case the sequence will go on forever--you would need\n\t   * to call, e.g., {@link Sequence#take} to limit iteration).\n\t   *\n\t   * @public\n\t   * @param {Function} fn The function to call on each output from the generator\n\t   *     function.\n\t   */\n\t  GeneratedSequence.prototype.each = function each(fn) {\n\t    var generatorFn = this.get,\n\t        length = this.fixedLength,\n\t        i = 0;\n\t\n\t    while (typeof length === \"undefined\" || i < length) {\n\t      if (fn(generatorFn(i), i++) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  GeneratedSequence.prototype.getIterator = function getIterator() {\n\t    return new GeneratedIterator(this);\n\t  };\n\t\n\t  /**\n\t   * Iterates over a generated sequence. (This allows generated sequences to be\n\t   * iterated asynchronously.)\n\t   *\n\t   * @param {GeneratedSequence} sequence The generated sequence to iterate over.\n\t   * @constructor\n\t   */\n\t  function GeneratedIterator(sequence) {\n\t    this.sequence     = sequence;\n\t    this.index        = 0;\n\t    this.currentValue = null;\n\t  }\n\t\n\t  GeneratedIterator.prototype.current = function current() {\n\t    return this.currentValue;\n\t  };\n\t\n\t  GeneratedIterator.prototype.moveNext = function moveNext() {\n\t    var sequence = this.sequence;\n\t\n\t    if (typeof sequence.fixedLength === \"number\" && this.index >= sequence.fixedLength) {\n\t      return false;\n\t    }\n\t\n\t    this.currentValue = sequence.get(this.index++);\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * An `AsyncSequence` iterates over its elements asynchronously when\n\t   * {@link #each} is called.\n\t   *\n\t   * You get an `AsyncSequence` by calling {@link Sequence#async} on any\n\t   * sequence. Note that some sequence types may not support asynchronous\n\t   * iteration.\n\t   *\n\t   * Returning values\n\t   * ----------------\n\t   *\n\t   * Because of its asynchronous nature, an `AsyncSequence` cannot be used in the\n\t   * same way as other sequences for functions that return values directly (e.g.,\n\t   * `reduce`, `max`, `any`, even `toArray`).\n\t   *\n\t   * Instead, these methods return an `AsyncHandle` whose `onComplete` method\n\t   * accepts a callback that will be called with the final result once iteration\n\t   * has finished.\n\t   *\n\t   * Defining custom asynchronous sequences\n\t   * --------------------------------------\n\t   *\n\t   * There are plenty of ways to define an asynchronous sequence. Here's one.\n\t   *\n\t   * 1. First, implement an {@link Iterator}. This is an object whose prototype\n\t   *    has the methods {@link Iterator#moveNext} (which returns a `boolean`) and\n\t   *    {@link current} (which returns the current value).\n\t   * 2. Next, create a simple wrapper that inherits from `AsyncSequence`, whose\n\t   *    `getIterator` function returns an instance of the iterator type you just\n\t   *    defined.\n\t   *\n\t   * The default implementation for {@link #each} on an `AsyncSequence` is to\n\t   * create an iterator and then asynchronously call {@link Iterator#moveNext}\n\t   * (using `setImmediate`, if available, otherwise `setTimeout`) until the iterator\n\t   * can't move ahead any more.\n\t   *\n\t   * @public\n\t   * @constructor\n\t   * @param {Sequence} parent A {@link Sequence} to wrap, to expose asynchronous\n\t   *     iteration.\n\t   * @param {number=} interval How many milliseconds should elapse between each\n\t   *     element when iterating over this sequence. Note that this interval\n\t   *     applies even to the first value in the sequence; i.e., when calling\n\t   *     each(), this much time will elapse before the first element is\n\t   *     iterated.\n\t   *\n\t   *     If this argument is omitted, asynchronous iteration will be executed\n\t   *     as fast as possible.\n\t   */\n\t  function AsyncSequence(parent, interval) {\n\t    if (parent instanceof AsyncSequence) {\n\t      throw new Error(\"Sequence is already asynchronous!\");\n\t    }\n\t\n\t    this.parent         = parent;\n\t    this.interval       = interval;\n\t    this.onNextCallback = getOnNextCallback(interval);\n\t    this.cancelCallback = getCancelCallback(interval);\n\t  }\n\t\n\t  AsyncSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  AsyncSequence.prototype.isAsync = function isAsync() {\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Throws an exception. You cannot manually iterate over an asynchronous\n\t   * sequence.\n\t   *\n\t   * @public\n\t   * @example\n\t   * Lazy([1, 2, 3]).async().getIterator() // throws\n\t   */\n\t  AsyncSequence.prototype.getIterator = function getIterator() {\n\t    throw new Error('An AsyncSequence does not support synchronous iteration.');\n\t  };\n\t\n\t  /**\n\t   * An asynchronous version of {@link Sequence#each}.\n\t   *\n\t   * @public\n\t   * @param {Function} fn The function to invoke asynchronously on each element in\n\t   *     the sequence one by one.\n\t   * @returns {AsyncHandle} An {@link AsyncHandle} providing the ability to\n\t   *     cancel the asynchronous iteration (by calling `cancel()`) as well as\n\t   *     supply callback(s) for when an error is encountered (`onError`) or when\n\t   *     iteration is complete (`onComplete`).\n\t   */\n\t  AsyncSequence.prototype.each = function each(fn) {\n\t    var iterator = this.parent.getIterator(),\n\t        onNextCallback = this.onNextCallback,\n\t        cancelCallback = this.cancelCallback,\n\t        i = 0;\n\t\n\t    var handle = new AsyncHandle(function cancel() {\n\t      if (cancellationId) {\n\t        cancelCallback(cancellationId);\n\t      }\n\t    });\n\t\n\t    var cancellationId = onNextCallback(function iterate() {\n\t      cancellationId = null;\n\t\n\t      try {\n\t        if (iterator.moveNext() && fn(iterator.current(), i++) !== false) {\n\t          cancellationId = onNextCallback(iterate);\n\t\n\t        } else {\n\t          handle._resolve();\n\t        }\n\t\n\t      } catch (e) {\n\t        handle._reject(e);\n\t      }\n\t    });\n\t\n\t    return handle;\n\t  };\n\t\n\t  /**\n\t   * An `AsyncHandle` provides a [Promises/A+](http://promises-aplus.github.io/promises-spec/)\n\t   * compliant interface for an {@link AsyncSequence} that is currently (or was)\n\t   * iterating over its elements.\n\t   *\n\t   * In addition to behaving as a promise, an `AsyncHandle` provides the ability\n\t   * to {@link AsyncHandle#cancel} iteration (if `cancelFn` is provided)\n\t   * and also offers convenient {@link AsyncHandle#onComplete} and\n\t   * {@link AsyncHandle#onError} methods to attach listeners for when iteration\n\t   * is complete or an error is thrown during iteration.\n\t   *\n\t   * @public\n\t   * @param {Function} cancelFn A function to cancel asynchronous iteration.\n\t   *     This is passed in to support different cancellation mechanisms for\n\t   *     different forms of asynchronous sequences (e.g., timeout-based\n\t   *     sequences, sequences based on I/O, etc.).\n\t   * @constructor\n\t   *\n\t   * @example\n\t   * // Create a sequence of 100,000 random numbers, in chunks of 100.\n\t   * var sequence = Lazy.generate(Math.random)\n\t   *   .chunk(100)\n\t   *   .async()\n\t   *   .take(1000);\n\t   *\n\t   * // Reduce-style operations -- i.e., operations that return a *value* (as\n\t   * // opposed to a *sequence*) -- return an AsyncHandle for async sequences.\n\t   * var handle = sequence.toArray();\n\t   *\n\t   * handle.onComplete(function(array) {\n\t   *   // Do something w/ 1,000-element array.\n\t   * });\n\t   *\n\t   * // Since an AsyncHandle is a promise, you can also use it to create\n\t   * // subsequent promises using `then` (see the Promises/A+ spec for more\n\t   * // info).\n\t   * var flattened = handle.then(function(array) {\n\t   *   return Lazy(array).flatten();\n\t   * });\n\t   */\n\t  function AsyncHandle(cancelFn) {\n\t    this.resolveListeners = [];\n\t    this.rejectListeners = [];\n\t    this.state = PENDING;\n\t    this.cancelFn = cancelFn;\n\t  }\n\t\n\t  // Async handle states\n\t  var PENDING  = 1,\n\t      RESOLVED = 2,\n\t      REJECTED = 3;\n\t\n\t  AsyncHandle.prototype.then = function then(onFulfilled, onRejected) {\n\t    var promise = new AsyncHandle(this.cancelFn);\n\t\n\t    this.resolveListeners.push(function(value) {\n\t      try {\n\t        if (typeof onFulfilled !== 'function') {\n\t          resolve(promise, value);\n\t          return;\n\t        }\n\t\n\t        resolve(promise, onFulfilled(value));\n\t\n\t      } catch (e) {\n\t        promise._reject(e);\n\t      }\n\t    });\n\t\n\t    this.rejectListeners.push(function(reason) {\n\t      try {\n\t        if (typeof onRejected !== 'function') {\n\t          promise._reject(reason);\n\t          return;\n\t        }\n\t\n\t        resolve(promise, onRejected(reason));\n\t\n\t      } catch (e) {\n\t        promise._reject(e);\n\t      }\n\t    });\n\t\n\t    if (this.state === RESOLVED) {\n\t      this._resolve(this.value);\n\t    }\n\t\n\t    if (this.state === REJECTED) {\n\t      this._reject(this.reason);\n\t    }\n\t\n\t    return promise;\n\t  };\n\t\n\t  AsyncHandle.prototype._resolve = function _resolve(value) {\n\t    if (this.state === REJECTED) {\n\t      return;\n\t    }\n\t\n\t    if (this.state === PENDING) {\n\t      this.state = RESOLVED;\n\t      this.value = value;\n\t    }\n\t\n\t    consumeListeners(this.resolveListeners, this.value);\n\t  };\n\t\n\t  AsyncHandle.prototype._reject = function _reject(reason) {\n\t    if (this.state === RESOLVED) {\n\t      return;\n\t    }\n\t\n\t    if (this.state === PENDING) {\n\t      this.state = REJECTED;\n\t      this.reason = reason;\n\t    }\n\t\n\t    consumeListeners(this.rejectListeners, this.reason);\n\t  };\n\t\n\t  /**\n\t   * Cancels asynchronous iteration.\n\t   *\n\t   * @public\n\t   */\n\t  AsyncHandle.prototype.cancel = function cancel() {\n\t    if (this.cancelFn) {\n\t      this.cancelFn();\n\t      this.cancelFn = null;\n\t      this._resolve(false);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Updates the handle with a callback to execute when iteration is completed.\n\t   *\n\t   * @public\n\t   * @param {Function} callback The function to call when the asynchronous\n\t   *     iteration is completed.\n\t   * @return {AsyncHandle} A reference to the handle (for chaining).\n\t   */\n\t  AsyncHandle.prototype.onComplete = function onComplete(callback) {\n\t    this.resolveListeners.push(callback);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Updates the handle with a callback to execute if/when any error is\n\t   * encountered during asynchronous iteration.\n\t   *\n\t   * @public\n\t   * @param {Function} callback The function to call, with any associated error\n\t   *     object, when an error occurs.\n\t   * @return {AsyncHandle} A reference to the handle (for chaining).\n\t   */\n\t  AsyncHandle.prototype.onError = function onError(callback) {\n\t    this.rejectListeners.push(callback);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Promise resolution procedure:\n\t   * http://promises-aplus.github.io/promises-spec/#the_promise_resolution_procedure\n\t   */\n\t  function resolve(promise, x) {\n\t    if (promise === x) {\n\t      promise._reject(new TypeError('Cannot resolve a promise to itself'));\n\t      return;\n\t    }\n\t\n\t    if (x instanceof AsyncHandle) {\n\t      x.then(\n\t        function(value) { resolve(promise, value); },\n\t        function(reason) { promise._reject(reason); }\n\t      );\n\t      return;\n\t    }\n\t\n\t    var then;\n\t    try {\n\t      then = (/function|object/).test(typeof x) && x != null && x.then;\n\t    } catch (e) {\n\t      promise._reject(e);\n\t      return;\n\t    }\n\t\n\t    var thenableState = PENDING;\n\t    if (typeof then === 'function') {\n\t      try {\n\t        then.call(\n\t          x,\n\t          function resolvePromise(value) {\n\t            if (thenableState !== PENDING) {\n\t              return;\n\t            }\n\t            thenableState = RESOLVED;\n\t            resolve(promise, value);\n\t          },\n\t          function rejectPromise(reason) {\n\t            if (thenableState !== PENDING) {\n\t              return;\n\t            }\n\t            thenableState = REJECTED;\n\t            promise._reject(reason);\n\t          }\n\t        );\n\t      } catch (e) {\n\t        if (thenableState !== PENDING) {\n\t          return;\n\t        }\n\t\n\t        promise._reject(e);\n\t      }\n\t\n\t      return;\n\t    }\n\t\n\t    promise._resolve(x);\n\t  }\n\t\n\t  function consumeListeners(listeners, value, callback) {\n\t    callback || (callback = getOnNextCallback());\n\t\n\t    callback(function() {\n\t      if (listeners.length > 0) {\n\t        listeners.shift()(value);\n\t        consumeListeners(listeners, value, callback);\n\t      }\n\t    });\n\t  }\n\t\n\t  function getOnNextCallback(interval) {\n\t    if (typeof interval === \"undefined\") {\n\t      if (typeof setImmediate === \"function\") {\n\t        return setImmediate;\n\t      }\n\t    }\n\t\n\t    interval = interval || 0;\n\t    return function(fn) {\n\t      return setTimeout(fn, interval);\n\t    };\n\t  }\n\t\n\t  function getCancelCallback(interval) {\n\t    if (typeof interval === \"undefined\") {\n\t      if (typeof clearImmediate === \"function\") {\n\t        return clearImmediate;\n\t      }\n\t    }\n\t\n\t    return clearTimeout;\n\t  }\n\t\n\t  /**\n\t   * Transform a value, whether the value is retrieved asynchronously or directly.\n\t   *\n\t   * @private\n\t   * @param {Function} fn The function that transforms the value.\n\t   * @param {*} value The value to be transformed. This can be an {@link AsyncHandle} when the value\n\t   *     is retrieved asynchronously, otherwise it can be anything.\n\t   * @returns {*} An {@link AsyncHandle} when `value` is also an {@link AsyncHandle}, otherwise\n\t   *     whatever `fn` resulted in.\n\t   */\n\t  function transform(fn, value) {\n\t    if (value instanceof AsyncHandle) {\n\t      return value.then(function() { fn(value); });\n\t    }\n\t    return fn(value);\n\t  }\n\t\n\t  /**\n\t   * An async version of {@link Sequence#reverse}.\n\t   */\n\t  AsyncSequence.prototype.reverse = function reverse() {\n\t    return this.parent.reverse().async();\n\t  };\n\t\n\t  /**\n\t   * A version of {@link Sequence#find} which returns an {@link AsyncHandle}.\n\t   *\n\t   * @public\n\t   * @param {Function} predicate A function to call on (potentially) every element\n\t   *     in the sequence.\n\t   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n\t   *     the found element, once it is detected, or else `undefined`.\n\t   */\n\t  AsyncSequence.prototype.find = function find(predicate) {\n\t    var found;\n\t\n\t    var handle = this.each(function(e, i) {\n\t      if (predicate(e, i)) {\n\t        found = e;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    return handle.then(function() { return found; });\n\t  };\n\t\n\t  /**\n\t   * A version of {@link Sequence#indexOf} which returns an {@link AsyncHandle}.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n\t   *     the found index, once it is detected, or -1.\n\t   */\n\t  AsyncSequence.prototype.indexOf = function indexOf(value) {\n\t    var foundIndex = -1;\n\t\n\t    var handle = this.each(function(e, i) {\n\t      if (e === value) {\n\t        foundIndex = i;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    return handle.then(function() {\n\t      return foundIndex;\n\t    });\n\t  };\n\t\n\t  /**\n\t   * A version of {@link Sequence#contains} which returns an {@link AsyncHandle}.\n\t   *\n\t   * @public\n\t   * @param {*} value The element to search for in the sequence.\n\t   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n\t   *     either `true` or `false` to indicate whether the element was found.\n\t   */\n\t  AsyncSequence.prototype.contains = function contains(value) {\n\t    var found = false;\n\t\n\t    var handle = this.each(function(e) {\n\t      if (e === value) {\n\t        found = true;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    return handle.then(function() {\n\t      return found;\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Just return the same sequence for `AsyncSequence#async` (I see no harm in this).\n\t   */\n\t  AsyncSequence.prototype.async = function async() {\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * See {@link ObjectLikeSequence#watch} for docs.\n\t   */\n\t  ObjectWrapper.prototype.watch = function watch(propertyNames) {\n\t    return new WatchedPropertySequence(this.source, propertyNames);\n\t  };\n\t\n\t  function WatchedPropertySequence(object, propertyNames) {\n\t    this.listeners = [];\n\t\n\t    if (!propertyNames) {\n\t      propertyNames = Lazy(object).keys().toArray();\n\t    } else if (!isArray(propertyNames)) {\n\t      propertyNames = [propertyNames];\n\t    }\n\t\n\t    var listeners = this.listeners,\n\t        index     = 0;\n\t\n\t    Lazy(propertyNames).each(function(propertyName) {\n\t      var propertyValue = object[propertyName];\n\t\n\t      Object.defineProperty(object, propertyName, {\n\t        get: function() {\n\t          return propertyValue;\n\t        },\n\t\n\t        set: function(value) {\n\t          for (var i = listeners.length - 1; i >= 0; --i) {\n\t            if (listeners[i]({ property: propertyName, value: value }, index) === false) {\n\t              listeners.splice(i, 1);\n\t            }\n\t          }\n\t          propertyValue = value;\n\t          ++index;\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  WatchedPropertySequence.prototype = Object.create(AsyncSequence.prototype);\n\t\n\t  WatchedPropertySequence.prototype.each = function each(fn) {\n\t    this.listeners.push(fn);\n\t  };\n\t\n\t  /**\n\t   * A StreamLikeSequence comprises a sequence of 'chunks' of data, which are\n\t   * typically multiline strings.\n\t   *\n\t   * @constructor\n\t   */\n\t  function StreamLikeSequence() {}\n\t\n\t  StreamLikeSequence.prototype = Object.create(AsyncSequence.prototype);\n\t\n\t  StreamLikeSequence.prototype.isAsync = function isAsync() {\n\t    return true;\n\t  };\n\t\n\t  StreamLikeSequence.prototype.split = function split(delimiter) {\n\t    return new SplitStreamSequence(this, delimiter);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function SplitStreamSequence(parent, delimiter) {\n\t    this.parent    = parent;\n\t    this.delimiter = delimiter;\n\t    this.each      = this.getEachForDelimiter(delimiter);\n\t  }\n\t\n\t  SplitStreamSequence.prototype = Object.create(Sequence.prototype);\n\t\n\t  SplitStreamSequence.prototype.getEachForDelimiter = function getEachForDelimiter(delimiter) {\n\t    if (delimiter instanceof RegExp) {\n\t      return this.regexEach;\n\t    }\n\t\n\t    return this.stringEach;\n\t  };\n\t\n\t  SplitStreamSequence.prototype.regexEach = function each(fn) {\n\t    var delimiter = cloneRegex(this.delimiter),\n\t        buffer = '',\n\t        start = 0, end,\n\t        index = 0;\n\t\n\t    var handle = this.parent.each(function(chunk) {\n\t      buffer += chunk;\n\t\n\t      var match;\n\t      while (match = delimiter.exec(buffer)) {\n\t        end = match.index;\n\t        if (fn(buffer.substring(start, end), index++) === false) {\n\t          return false;\n\t        }\n\t        start = end + match[0].length;\n\t      }\n\t\n\t      buffer = buffer.substring(start);\n\t      start = 0;\n\t    });\n\t\n\t    handle.onComplete(function() {\n\t      if (buffer.length > 0) {\n\t        fn(buffer, index++);\n\t      }\n\t    });\n\t\n\t    return handle;\n\t  };\n\t\n\t  SplitStreamSequence.prototype.stringEach = function each(fn) {\n\t    var delimiter  = this.delimiter,\n\t        pieceIndex = 0,\n\t        buffer = '',\n\t        bufferIndex = 0;\n\t\n\t    var handle = this.parent.each(function(chunk) {\n\t      buffer += chunk;\n\t      var delimiterIndex;\n\t      while ((delimiterIndex = buffer.indexOf(delimiter)) >= 0) {\n\t        var piece = buffer.substr(0,delimiterIndex);\n\t        buffer = buffer.substr(delimiterIndex+delimiter.length);\n\t        if (fn(piece,pieceIndex++) === false) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    });\n\t\n\t    handle.onComplete(function() {\n\t      fn(buffer, pieceIndex++);\n\t    });\n\t\n\t    return handle;\n\t  };\n\t\n\t  StreamLikeSequence.prototype.lines = function lines() {\n\t    return this.split(\"\\n\");\n\t  };\n\t\n\t  StreamLikeSequence.prototype.match = function match(pattern) {\n\t    return new MatchedStreamSequence(this, pattern);\n\t  };\n\t\n\t  /**\n\t   * @constructor\n\t   */\n\t  function MatchedStreamSequence(parent, pattern) {\n\t    this.parent  = parent;\n\t    this.pattern = cloneRegex(pattern);\n\t  }\n\t\n\t  MatchedStreamSequence.prototype = Object.create(AsyncSequence.prototype);\n\t\n\t  MatchedStreamSequence.prototype.each = function each(fn) {\n\t    var pattern = this.pattern,\n\t        done      = false,\n\t        i         = 0;\n\t\n\t    return this.parent.each(function(chunk) {\n\t      Lazy(chunk).match(pattern).each(function(match) {\n\t        if (fn(match, i++) === false) {\n\t          done = true;\n\t          return false;\n\t        }\n\t      });\n\t\n\t      return !done;\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Defines a wrapper for custom {@link StreamLikeSequence}s. This is useful\n\t   * if you want a way to handle a stream of events as a sequence, but you can't\n\t   * use Lazy's existing interface (i.e., you're wrapping an object from a\n\t   * library with its own custom events).\n\t   *\n\t   * This method defines a *factory*: that is, it produces a function that can\n\t   * be used to wrap objects and return a {@link Sequence}. Hopefully the\n\t   * example will make this clear.\n\t   *\n\t   * @public\n\t   * @param {Function} initializer An initialization function called on objects\n\t   *     created by this factory. `this` will be bound to the created object,\n\t   *     which is an instance of {@link StreamLikeSequence}. Use `emit` to\n\t   *     generate data for the sequence.\n\t   * @returns {Function} A function that creates a new {@link StreamLikeSequence},\n\t   *     initializes it using the specified function, and returns it.\n\t   *\n\t   * @example\n\t   * var factory = Lazy.createWrapper(function(eventSource) {\n\t   *   var sequence = this;\n\t   *\n\t   *   eventSource.handleEvent(function(data) {\n\t   *     sequence.emit(data);\n\t   *   });\n\t   * });\n\t   *\n\t   * var eventEmitter = {\n\t   *   triggerEvent: function(data) {\n\t   *     eventEmitter.eventHandler(data);\n\t   *   },\n\t   *   handleEvent: function(handler) {\n\t   *     eventEmitter.eventHandler = handler;\n\t   *   },\n\t   *   eventHandler: function() {}\n\t   * };\n\t   *\n\t   * var events = [];\n\t   *\n\t   * factory(eventEmitter).each(function(e) {\n\t   *   events.push(e);\n\t   * });\n\t   *\n\t   * eventEmitter.triggerEvent('foo');\n\t   * eventEmitter.triggerEvent('bar');\n\t   *\n\t   * events // => ['foo', 'bar']\n\t   */\n\t  Lazy.createWrapper = function createWrapper(initializer) {\n\t    var ctor = function() {\n\t      this.listeners = [];\n\t    };\n\t\n\t    ctor.prototype = Object.create(StreamLikeSequence.prototype);\n\t\n\t    ctor.prototype.each = function(listener) {\n\t      this.listeners.push(listener);\n\t    };\n\t\n\t    ctor.prototype.emit = function(data) {\n\t      var listeners = this.listeners;\n\t\n\t      for (var len = listeners.length, i = len - 1; i >= 0; --i) {\n\t        if (listeners[i](data) === false) {\n\t          listeners.splice(i, 1);\n\t        }\n\t      }\n\t    };\n\t\n\t    return function() {\n\t      var sequence = new ctor();\n\t      initializer.apply(sequence, arguments);\n\t      return sequence;\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Creates a {@link GeneratedSequence} using the specified generator function\n\t   * and (optionally) length.\n\t   *\n\t   * @public\n\t   * @param {function(number):*} generatorFn The function used to generate the\n\t   *     sequence. This function accepts an index as a parameter and should return\n\t   *     a value for that index in the resulting sequence.\n\t   * @param {number=} length The length of the sequence, for sequences with a\n\t   *     definite length.\n\t   * @returns {GeneratedSequence} The generated sequence.\n\t   *\n\t   * @examples\n\t   * var randomNumbers = Lazy.generate(Math.random);\n\t   * var countingNumbers = Lazy.generate(function(i) { return i + 1; }, 5);\n\t   *\n\t   * randomNumbers          // instanceof Lazy.GeneratedSequence\n\t   * randomNumbers.length() // => undefined\n\t   * countingNumbers          // sequence: [1, 2, 3, 4, 5]\n\t   * countingNumbers.length() // => 5\n\t   */\n\t  Lazy.generate = function generate(generatorFn, length) {\n\t    return new GeneratedSequence(generatorFn, length);\n\t  };\n\t\n\t  /**\n\t   * Creates a sequence from a given starting value, up to a specified stopping\n\t   * value, incrementing by a given step. Invalid values for any of these\n\t   * arguments (e.g., a step of 0) result in an empty sequence.\n\t   *\n\t   * @public\n\t   * @returns {GeneratedSequence} The sequence defined by the given ranges.\n\t   *\n\t   * @examples\n\t   * Lazy.range(3)         // sequence: [0, 1, 2]\n\t   * Lazy.range(1, 4)      // sequence: [1, 2, 3]\n\t   * Lazy.range(2, 10, 2)  // sequence: [2, 4, 6, 8]\n\t   * Lazy.range(5, 1, 2)   // sequence: []\n\t   * Lazy.range(5, 15, -2) // sequence: []\n\t   * Lazy.range(3, 10, 3)  // sequence: [3, 6, 9]\n\t   * Lazy.range(5, 2)      // sequence: [5, 4, 3]\n\t   * Lazy.range(7, 2, -2)  // sequence: [7, 5, 3]\n\t   * Lazy.range(3, 5, 0)   // sequence: []\n\t   */\n\t  Lazy.range = function range() {\n\t    var start = arguments.length > 1 ? arguments[0] : 0,\n\t        stop  = arguments.length > 1 ? arguments[1] : arguments[0],\n\t        step  = arguments.length > 2 && arguments[2];\n\t\n\t    if (step === false) {\n\t      step = stop > start ? 1 : -1;\n\t    }\n\t\n\t    if (step === 0) {\n\t      return Lazy([]);\n\t    }\n\t\n\t    return Lazy.generate(function(i) { return start + (step * i); })\n\t      .take(Math.ceil((stop - start) / step));\n\t  };\n\t\n\t  /**\n\t   * Creates a sequence consisting of the given value repeated a specified number\n\t   * of times.\n\t   *\n\t   * @public\n\t   * @param {*} value The value to repeat.\n\t   * @param {number=} count The number of times the value should be repeated in\n\t   *     the sequence. If this argument is omitted, the value will repeat forever.\n\t   * @returns {GeneratedSequence} The sequence containing the repeated value.\n\t   *\n\t   * @examples\n\t   * Lazy.repeat(\"hi\", 3)          // sequence: [\"hi\", \"hi\", \"hi\"]\n\t   * Lazy.repeat(\"young\")          // instanceof Lazy.GeneratedSequence\n\t   * Lazy.repeat(\"young\").length() // => undefined\n\t   * Lazy.repeat(\"young\").take(3)  // sequence: [\"young\", \"young\", \"young\"]\n\t   */\n\t  Lazy.repeat = function repeat(value, count) {\n\t    return Lazy.generate(function() { return value; }, count);\n\t  };\n\t\n\t  Lazy.Sequence           = Sequence;\n\t  Lazy.ArrayLikeSequence  = ArrayLikeSequence;\n\t  Lazy.ObjectLikeSequence = ObjectLikeSequence;\n\t  Lazy.StringLikeSequence = StringLikeSequence;\n\t  Lazy.StreamLikeSequence = StreamLikeSequence;\n\t  Lazy.GeneratedSequence  = GeneratedSequence;\n\t  Lazy.AsyncSequence      = AsyncSequence;\n\t  Lazy.AsyncHandle        = AsyncHandle;\n\t\n\t  /*** Useful utility methods ***/\n\t\n\t  /**\n\t   * Creates a shallow copy of an array or object.\n\t   *\n\t   * @examples\n\t   * var array  = [1, 2, 3], clonedArray,\n\t   *     object = { foo: 1, bar: 2 }, clonedObject;\n\t   *\n\t   * clonedArray = Lazy.clone(array); // => [1, 2, 3]\n\t   * clonedArray.push(4); // clonedArray == [1, 2, 3, 4]\n\t   * array; // => [1, 2, 3]\n\t   *\n\t   * clonedObject = Lazy.clone(object); // => { foo: 1, bar: 2 }\n\t   * clonedObject.baz = 3; // clonedObject == { foo: 1, bar: 2, baz: 3 }\n\t   * object; // => { foo: 1, bar: 2 }\n\t   */\n\t  Lazy.clone = function clone(target) {\n\t    return Lazy(target).value();\n\t  };\n\t\n\t  /**\n\t   * Marks a method as deprecated, so calling it will issue a console warning.\n\t   */\n\t  Lazy.deprecate = function deprecate(message, fn) {\n\t    return function() {\n\t      console.warn(message);\n\t      return fn.apply(this, arguments);\n\t    };\n\t  };\n\t\n\t  var isArray    = Array.isArray || function(x) { return x instanceof Array; },\n\t      arrayPop   = Array.prototype.pop,\n\t      arraySlice = Array.prototype.slice;\n\t\n\t  /**\n\t   * If you know what function currying is, then you know what this does.\n\t   *\n\t   * @param {Function} fn The function to curry.\n\t   * @returns {Function} The curried function.\n\t   *\n\t   * @examples\n\t   * function abc(a, b, c) { return [a, b, c]; }\n\t   * var curried = Lazy.curry(abc);\n\t   *\n\t   * curried(1)(2)(3) // => [1, 2, 3]\n\t   * curried(1, 2)(3) // => [1, 2, 3]\n\t   * curried(1)(2, 3) // => [1, 2, 3]\n\t   * curried(1, 2, 3) // => [1, 2, 3]\n\t   * Lazy([1, 2, 3]).map(curried(1, 2)) // sequence: [[1, 2, 1], [1, 2, 2], [1, 2, 3]]\n\t   */\n\t  function curry(fn, arity) {\n\t    arity || (arity = fn.length);\n\t\n\t    function curried(args) {\n\t      if (args.length < arity) {\n\t        return function() {\n\t          return curried(args.concat(arraySlice.call(arguments, 0)));\n\t        };\n\t      }\n\t\n\t      return fn.apply(null, args);\n\t    }\n\t\n\t    return curried([]);\n\t  }\n\t\n\t  /**\n\t   * Same as Lazy.curry, but... you know... from the right.\n\t   *\n\t   * @param {Function} fn The function to curry from the right.\n\t   * @returns {Function} The curried-from-the-right function.\n\t   *\n\t   * @examples\n\t   * function abc(a, b, c) { return [a, b, c]; }\n\t   * var curriedRight = Lazy.curryRight(abc);\n\t   *\n\t   * curriedRight(3)(2)(1) // => [1, 2, 3]\n\t   * curriedRight(2, 3)(1) // => [1, 2, 3]\n\t   * curriedRight(3)(1, 2) // => [1, 2, 3]\n\t   * curriedRight(1, 2, 3) // => [1, 2, 3]\n\t   * Lazy([1, 2, 3]).map(curriedRight(3)) // sequence: [[1, 0, 3], [2, 1, 3], [3, 2, 3]]\n\t   */\n\t  function curryRight(fn, arity) {\n\t    arity || (arity = fn.length);\n\t\n\t    function curriedRight(args) {\n\t      if (args.length < arity) {\n\t        return function() {\n\t          return curriedRight(arraySlice.call(arguments, 0).concat(args));\n\t        };\n\t      }\n\t\n\t      return fn.apply(null, args);\n\t    }\n\t\n\t    return curriedRight([]);\n\t  }\n\t\n\t  Lazy.curry = curry;\n\t  Lazy.curryRight = curryRight;\n\t\n\t  /**\n\t   * Creates a callback... you know, Lo-Dash style.\n\t   *\n\t   * - for functions, just returns the function\n\t   * - for strings, returns a pluck-style callback\n\t   * - for objects, returns a where-style callback\n\t   *\n\t   * @param {Function|string|Object} callback A function, string, or object to\n\t   *     convert to a callback.\n\t   * @param {*} defaultReturn If the callback is undefined, a default return\n\t   *     value to use for the function.\n\t   * @returns {Function} The callback function.\n\t   *\n\t   * @examples\n\t   * Lazy.createCallback(function() {})                  // instanceof Function\n\t   * Lazy.createCallback('foo')                          // instanceof Function\n\t   * Lazy.createCallback('foo')({ foo: 'bar'})           // => 'bar'\n\t   * Lazy.createCallback({ foo: 'bar' })({ foo: 'bar' }) // => true\n\t   * Lazy.createCallback({ foo: 'bar' })({ foo: 'baz' }) // => false\n\t   */\n\t  function createCallback(callback, defaultValue) {\n\t    switch (typeof callback) {\n\t      case \"function\":\n\t        return callback;\n\t\n\t      case \"string\":\n\t        return function(e) {\n\t          return e[callback];\n\t        };\n\t\n\t      case \"object\":\n\t        return function(e) {\n\t          return Lazy(callback).all(function(value, key) {\n\t            return e[key] === value;\n\t          });\n\t        };\n\t\n\t      case \"undefined\":\n\t        return defaultValue ?\n\t          function() { return defaultValue; } :\n\t          Lazy.identity;\n\t\n\t      default:\n\t        throw new Error(\"Don't know how to make a callback from a \" + typeof callback + \"!\");\n\t    }\n\t  }\n\t\n\t  Lazy.createCallback = createCallback;\n\t\n\t  /**\n\t   * Takes a function that returns a value for one argument and produces a\n\t   * function that compares two arguments.\n\t   *\n\t   * @param {Function|string|Object} callback A function, string, or object to\n\t   *     convert to a callback using `createCallback`.\n\t   * @returns {Function} A function that accepts two values and returns 1 if\n\t   *     the first is greater, -1 if the second is greater, or 0 if they are\n\t   *     equivalent.\n\t   *\n\t   * @examples\n\t   * Lazy.createComparator('a')({ a: 1 }, { a: 2 });       // => -1\n\t   * Lazy.createComparator('a')({ a: 6 }, { a: 2 });       // => 1\n\t   * Lazy.createComparator('a')({ a: 1 }, { a: 1 });       // => 0\n\t   * Lazy.createComparator()(3, 5);                        // => -1\n\t   * Lazy.createComparator()(7, 5);                        // => 1\n\t   * Lazy.createComparator()(3, 3);                        // => 0\n\t   */\n\t  function createComparator(callback) {\n\t    if (!callback) { return compare; }\n\t\n\t    callback = createCallback(callback);\n\t\n\t    return function(x, y) {\n\t      return compare(callback(x), callback(y));\n\t    };\n\t  }\n\t\n\t  Lazy.createComparator = createComparator;\n\t\n\t  /**\n\t   * Takes a function and returns a function with the same logic but the\n\t   * arguments reversed. Only applies to functions w/ arity=2 as this is private\n\t   * and I can do what I want.\n\t   *\n\t   * @private\n\t   * @param {Function} fn The function to \"reverse\"\n\t   * @returns {Function} The \"reversed\" function\n\t   *\n\t   * @examples\n\t   * reverseArguments(function(x, y) { return x + y; })('a', 'b'); // => 'ba'\n\t   */\n\t  function reverseArguments(fn) {\n\t    return function(x, y) { return fn(y, x); };\n\t  }\n\t\n\t  /**\n\t   * Creates a Set containing the specified values.\n\t   *\n\t   * @param {...Array} values One or more array(s) of values used to populate the\n\t   *     set.\n\t   * @returns {Set} A new set containing the values passed in.\n\t   */\n\t  function createSet(values) {\n\t    var set = new Set();\n\t    Lazy(values || []).flatten().each(function(e) {\n\t      set.add(e);\n\t    });\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * Compares two elements for sorting purposes.\n\t   *\n\t   * @private\n\t   * @param {*} x The left element to compare.\n\t   * @param {*} y The right element to compare.\n\t   * @returns {number} 1 if x > y, -1 if x < y, or 0 if x and y are equal.\n\t   *\n\t   * @examples\n\t   * compare(1, 2)     // => -1\n\t   * compare(1, 1)     // => 0\n\t   * compare(2, 1)     // => 1\n\t   * compare('a', 'b') // => -1\n\t   */\n\t  function compare(x, y) {\n\t    if (x === y) {\n\t      return 0;\n\t    }\n\t\n\t    return x > y ? 1 : -1;\n\t  }\n\t\n\t  /**\n\t   * Iterates over every element in an array.\n\t   *\n\t   * @param {Array} array The array.\n\t   * @param {Function} fn The function to call on every element, which can return\n\t   *     false to stop the iteration early.\n\t   * @returns {boolean} True if every element in the entire sequence was iterated,\n\t   *     otherwise false.\n\t   */\n\t  function forEach(array, fn) {\n\t    var i = -1,\n\t        len = array.length;\n\t\n\t    while (++i < len) {\n\t      if (fn(array[i], i) === false) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  }\n\t\n\t  function getFirst(sequence) {\n\t    var result;\n\t    sequence.each(function(e) {\n\t      result = e;\n\t      return false;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Checks if an element exists in an array.\n\t   *\n\t   * @private\n\t   * @param {Array} array\n\t   * @param {*} element\n\t   * @returns {boolean} Whether or not the element exists in the array.\n\t   *\n\t   * @examples\n\t   * arrayContains([1, 2], 2)              // => true\n\t   * arrayContains([1, 2], 3)              // => false\n\t   * arrayContains([undefined], undefined) // => true\n\t   * arrayContains([NaN], NaN)             // => true\n\t   */\n\t  function arrayContains(array, element) {\n\t    var i = -1,\n\t        length = array.length;\n\t\n\t    // Special handling for NaN\n\t    if (element !== element) {\n\t      while (++i < length) {\n\t        if (array[i] !== array[i]) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    while (++i < length) {\n\t      if (array[i] === element) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Checks if an element exists in an array before a given index.\n\t   *\n\t   * @private\n\t   * @param {Array} array\n\t   * @param {*} element\n\t   * @param {number} index\n\t   * @param {Function} keyFn\n\t   * @returns {boolean}\n\t   *\n\t   * @examples\n\t   * arrayContainsBefore([1, 2, 3], 3, 2) // => false\n\t   * arrayContainsBefore([1, 2, 3], 3, 3) // => true\n\t   */\n\t  function arrayContainsBefore(array, element, index, keyFn) {\n\t    var i = -1;\n\t\n\t    if (keyFn) {\n\t      keyFn = createCallback(keyFn);\n\t      while (++i < index) {\n\t        if (keyFn(array[i]) === keyFn(element)) {\n\t          return true;\n\t        }\n\t      }\n\t\n\t    } else {\n\t      while (++i < index) {\n\t        if (array[i] === element) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Swaps the elements at two specified positions of an array.\n\t   *\n\t   * @private\n\t   * @param {Array} array\n\t   * @param {number} i\n\t   * @param {number} j\n\t   *\n\t   * @examples\n\t   * var array = [1, 2, 3, 4, 5];\n\t   *\n\t   * swap(array, 2, 3) // array == [1, 2, 4, 3, 5]\n\t   */\n\t  function swap(array, i, j) {\n\t    var temp = array[i];\n\t    array[i] = array[j];\n\t    array[j] = temp;\n\t  }\n\t\n\t  /**\n\t   * \"Clones\" a regular expression (but makes it always global).\n\t   *\n\t   * @private\n\t   * @param {RegExp|string} pattern\n\t   * @returns {RegExp}\n\t   */\n\t  function cloneRegex(pattern) {\n\t    return eval(\"\" + pattern + (!pattern.global ? \"g\" : \"\"));\n\t  };\n\t\n\t  /**\n\t   * A collection of unique elements.\n\t   *\n\t   * @private\n\t   * @constructor\n\t   *\n\t   * @examples\n\t   * var set  = new Set(),\n\t   *     obj1 = {},\n\t   *     obj2 = {},\n\t   *     fn1 = function fn1() {},\n\t   *     fn2 = function fn2() {};\n\t   *\n\t   * set.add('foo')            // => true\n\t   * set.add('foo')            // => false\n\t   * set.add(1)                // => true\n\t   * set.add(1)                // => false\n\t   * set.add('1')              // => true\n\t   * set.add('1')              // => false\n\t   * set.add(obj1)             // => true\n\t   * set.add(obj1)             // => false\n\t   * set.add(obj2)             // => true\n\t   * set.add(fn1)              // => true\n\t   * set.add(fn2)              // => true\n\t   * set.add(fn2)              // => false\n\t   * set.contains('__proto__') // => false\n\t   * set.add('__proto__')      // => true\n\t   * set.add('__proto__')      // => false\n\t   * set.contains('add')       // => false\n\t   * set.add('add')            // => true\n\t   * set.add('add')            // => false\n\t   * set.contains(undefined)   // => false\n\t   * set.add(undefined)        // => true\n\t   * set.contains(undefined)   // => true\n\t   * set.contains('undefined') // => false\n\t   * set.add('undefined')      // => true\n\t   * set.contains('undefined') // => true\n\t   * set.contains(NaN)         // => false\n\t   * set.add(NaN)              // => true\n\t   * set.contains(NaN)         // => true\n\t   * set.contains('NaN')       // => false\n\t   * set.add('NaN')            // => true\n\t   * set.contains('NaN')       // => true\n\t   * set.contains('@foo')      // => false\n\t   * set.add('@foo')           // => true\n\t   * set.contains('@foo')      // => true\n\t   */\n\t  function Set() {\n\t    this.table   = {};\n\t    this.objects = [];\n\t  }\n\t\n\t  /**\n\t   * Attempts to add a unique value to the set.\n\t   *\n\t   * @param {*} value The value to add.\n\t   * @returns {boolean} True if the value was added to the set (meaning an equal\n\t   *     value was not already present), or else false.\n\t   */\n\t  Set.prototype.add = function add(value) {\n\t    var table = this.table,\n\t        type  = typeof value,\n\t\n\t        // only applies for strings\n\t        firstChar,\n\t\n\t        // only applies for objects\n\t        objects;\n\t\n\t    switch (type) {\n\t      case \"number\":\n\t      case \"boolean\":\n\t      case \"undefined\":\n\t        if (!table[value]) {\n\t          table[value] = true;\n\t          return true;\n\t        }\n\t        return false;\n\t\n\t      case \"string\":\n\t        // Essentially, escape the first character if it could possibly collide\n\t        // with a number, boolean, or undefined (or a string that happens to start\n\t        // with the escape character!), OR if it could override a special property\n\t        // such as '__proto__' or 'constructor'.\n\t        switch (value.charAt(0)) {\n\t          case \"_\": // e.g., __proto__\n\t          case \"f\": // for 'false'\n\t          case \"t\": // for 'true'\n\t          case \"c\": // for 'constructor'\n\t          case \"u\": // for 'undefined'\n\t          case \"@\": // escaped\n\t          case \"0\":\n\t          case \"1\":\n\t          case \"2\":\n\t          case \"3\":\n\t          case \"4\":\n\t          case \"5\":\n\t          case \"6\":\n\t          case \"7\":\n\t          case \"8\":\n\t          case \"9\":\n\t          case \"N\": // for NaN\n\t            value = \"@\" + value;\n\t        }\n\t        if (!table[value]) {\n\t          table[value] = true;\n\t          return true;\n\t        }\n\t        return false;\n\t\n\t      default:\n\t        // For objects and functions, we can't really do anything other than store\n\t        // them in an array and do a linear search for reference equality.\n\t        objects = this.objects;\n\t        if (!arrayContains(objects, value)) {\n\t          objects.push(value);\n\t          return true;\n\t        }\n\t        return false;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Checks whether the set contains a value.\n\t   *\n\t   * @param {*} value The value to check for.\n\t   * @returns {boolean} True if the set contains the value, or else false.\n\t   */\n\t  Set.prototype.contains = function contains(value) {\n\t    var type = typeof value,\n\t\n\t        // only applies for strings\n\t        firstChar;\n\t\n\t    switch (type) {\n\t      case \"number\":\n\t      case \"boolean\":\n\t      case \"undefined\":\n\t        return !!this.table[value];\n\t\n\t      case \"string\":\n\t        // Essentially, escape the first character if it could possibly collide\n\t        // with a number, boolean, or undefined (or a string that happens to start\n\t        // with the escape character!), OR if it could override a special property\n\t        // such as '__proto__' or 'constructor'.\n\t        switch (value.charAt(0)) {\n\t          case \"_\": // e.g., __proto__\n\t          case \"f\": // for 'false'\n\t          case \"t\": // for 'true'\n\t          case \"c\": // for 'constructor'\n\t          case \"u\": // for 'undefined'\n\t          case \"@\": // escaped\n\t          case \"0\":\n\t          case \"1\":\n\t          case \"2\":\n\t          case \"3\":\n\t          case \"4\":\n\t          case \"5\":\n\t          case \"6\":\n\t          case \"7\":\n\t          case \"8\":\n\t          case \"9\":\n\t          case \"N\": // for NaN\n\t            value = \"@\" + value;\n\t        }\n\t        return !!this.table[value];\n\t\n\t      default:\n\t        // For objects and functions, we can't really do anything other than store\n\t        // them in an array and do a linear search for reference equality.\n\t        return arrayContains(this.objects, value);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * A \"rolling\" queue, with a fixed capacity. As items are added to the head,\n\t   * excess items are dropped from the tail.\n\t   *\n\t   * @private\n\t   * @constructor\n\t   *\n\t   * @examples\n\t   * var queue = new Queue(3);\n\t   *\n\t   * queue.add(1).toArray()        // => [1]\n\t   * queue.add(2).toArray()        // => [1, 2]\n\t   * queue.add(3).toArray()        // => [1, 2, 3]\n\t   * queue.add(4).toArray()        // => [2, 3, 4]\n\t   * queue.add(5).add(6).toArray() // => [4, 5, 6]\n\t   * queue.add(7).add(8).toArray() // => [6, 7, 8]\n\t   *\n\t   * // also want to check corner cases\n\t   * new Queue(1).add('foo').add('bar').toArray() // => ['bar']\n\t   * new Queue(0).add('foo').toArray()            // => []\n\t   * new Queue(-1)                                // throws\n\t   *\n\t   * @benchmarks\n\t   * function populateQueue(count, capacity) {\n\t   *   var q = new Queue(capacity);\n\t   *   for (var i = 0; i < count; ++i) {\n\t   *     q.add(i);\n\t   *   }\n\t   * }\n\t   *\n\t   * function populateArray(count, capacity) {\n\t   *   var arr = [];\n\t   *   for (var i = 0; i < count; ++i) {\n\t   *     if (arr.length === capacity) { arr.shift(); }\n\t   *     arr.push(i);\n\t   *   }\n\t   * }\n\t   *\n\t   * populateQueue(100, 10); // populating a Queue\n\t   * populateArray(100, 10); // populating an Array\n\t   */\n\t  function Queue(capacity) {\n\t    this.contents = new Array(capacity);\n\t    this.start    = 0;\n\t    this.count    = 0;\n\t  }\n\t\n\t  /**\n\t   * Adds an item to the queue, and returns the queue.\n\t   */\n\t  Queue.prototype.add = function add(element) {\n\t    var contents = this.contents,\n\t        capacity = contents.length,\n\t        start    = this.start;\n\t\n\t    if (this.count === capacity) {\n\t      contents[start] = element;\n\t      this.start = (start + 1) % capacity;\n\t\n\t    } else {\n\t      contents[this.count++] = element;\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Returns an array containing snapshot of the queue's contents.\n\t   */\n\t  Queue.prototype.toArray = function toArray() {\n\t    var contents = this.contents,\n\t        start    = this.start,\n\t        count    = this.count;\n\t\n\t    var snapshot = contents.slice(start, start + count);\n\t    if (snapshot.length < count) {\n\t      snapshot = snapshot.concat(contents.slice(0, count - snapshot.length));\n\t    }\n\t\n\t    return snapshot;\n\t  };\n\t\n\t  /**\n\t   * Shared base method for defining new sequence types.\n\t   */\n\t  function defineSequenceType(base, name, overrides) {\n\t    /** @constructor */\n\t    var ctor = function ctor() {};\n\t\n\t    // Make this type inherit from the specified base.\n\t    ctor.prototype = new base();\n\t\n\t    // Attach overrides to the new sequence type's prototype.\n\t    for (var override in overrides) {\n\t      ctor.prototype[override] = overrides[override];\n\t    }\n\t\n\t    // Define a factory method that sets the new sequence's parent to the caller\n\t    // and (optionally) applies any additional initialization logic.\n\t    // Expose this as a chainable method so that we can do:\n\t    // Lazy(...).map(...).filter(...).blah(...);\n\t    var factory = function factory() {\n\t      var sequence = new ctor();\n\t\n\t      // Every sequence needs a reference to its parent in order to work.\n\t      sequence.parent = this;\n\t\n\t      // If a custom init function was supplied, call it now.\n\t      if (sequence.init) {\n\t        sequence.init.apply(sequence, arguments);\n\t      }\n\t\n\t      return sequence;\n\t    };\n\t\n\t    var methodNames = typeof name === 'string' ? [name] : name;\n\t    for (var i = 0; i < methodNames.length; ++i) {\n\t      base.prototype[methodNames[i]] = factory;\n\t    }\n\t\n\t    return ctor;\n\t  }\n\t\n\t  return Lazy;\n\t});\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(147).setImmediate, __webpack_require__(147).clearImmediate))\n\n/***/ }),\n\n/***/ 137:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar map = __webpack_require__(138);\n\t\n\tvar getCountryCode = function(localeString) {\n\t    var components = localeString.split(\"_\");\n\t    if (components.length == 2) {\n\t        return components.pop();\n\t    }\n\t    components = localeString.split(\"-\");\n\t    if (components.length == 2) {\n\t        return components.pop();\n\t    }\n\t    return localeString;\n\t}\n\t\n\texports.getCurrency = function(locale) {\n\t    var countryCode = getCountryCode(locale).toUpperCase();\n\t    if (countryCode in map) {\n\t        return map[countryCode];\n\t    }\n\t    return null;\n\t}\n\t\n\texports.getLocales = function(currencyCode) {\n\t    currencyCode = currencyCode.toUpperCase();\n\t    var locales = [];\n\t    for (countryCode in map) {\n\t        if (map[countryCode] === currencyCode) {\n\t            locales.push(countryCode);\n\t        }\n\t    }\n\t    return locales;\n\t}\n\n/***/ }),\n\n/***/ 138:\n/***/ (function(module, exports) {\n\n\t// Generated using ShowCurrencies.java\n\tvar map = {\n\tAD: 'EUR',\n\tAE: 'AED',\n\tAF: 'AFN',\n\tAG: 'XCD',\n\tAI: 'XCD',\n\tAL: 'ALL',\n\tAM: 'AMD',\n\tAN: 'ANG',\n\tAO: 'AOA',\n\tAR: 'ARS',\n\tAS: 'USD',\n\tAT: 'EUR',\n\tAU: 'AUD',\n\tAW: 'AWG',\n\tAX: 'EUR',\n\tAZ: 'AZN',\n\tBA: 'BAM',\n\tBB: 'BBD',\n\tBD: 'BDT',\n\tBE: 'EUR',\n\tBF: 'XOF',\n\tBG: 'BGN',\n\tBH: 'BHD',\n\tBI: 'BIF',\n\tBJ: 'XOF',\n\tBL: 'EUR',\n\tBM: 'BMD',\n\tBN: 'BND',\n\tBO: 'BOB',\n\tBQ: 'USD',\n\tBR: 'BRL',\n\tBS: 'BSD',\n\tBT: 'BTN',\n\tBV: 'NOK',\n\tBW: 'BWP',\n\tBY: 'BYR',\n\tBZ: 'BZD',\n\tCA: 'CAD',\n\tCC: 'AUD',\n\tCD: 'CDF',\n\tCF: 'XAF',\n\tCG: 'XAF',\n\tCH: 'CHF',\n\tCI: 'XOF',\n\tCK: 'NZD',\n\tCL: 'CLP',\n\tCM: 'XAF',\n\tCN: 'CNY',\n\tCO: 'COP',\n\tCR: 'CRC',\n\tCU: 'CUP',\n\tCV: 'CVE',\n\tCW: 'ANG',\n\tCX: 'AUD',\n\tCY: 'EUR',\n\tCZ: 'CZK',\n\tDE: 'EUR',\n\tDJ: 'DJF',\n\tDK: 'DKK',\n\tDM: 'XCD',\n\tDO: 'DOP',\n\tDZ: 'DZD',\n\tEC: 'USD',\n\tEE: 'EUR',\n\tEG: 'EGP',\n\tEH: 'MAD',\n\tER: 'ERN',\n\tES: 'EUR',\n\tET: 'ETB',\n\tFI: 'EUR',\n\tFJ: 'FJD',\n\tFK: 'FKP',\n\tFM: 'USD',\n\tFO: 'DKK',\n\tFR: 'EUR',\n\tGA: 'XAF',\n\tGB: 'GBP',\n\tGD: 'XCD',\n\tGE: 'GEL',\n\tGF: 'EUR',\n\tGG: 'GBP',\n\tGH: 'GHS',\n\tGI: 'GIP',\n\tGL: 'DKK',\n\tGM: 'GMD',\n\tGN: 'GNF',\n\tGP: 'EUR',\n\tGQ: 'XAF',\n\tGR: 'EUR',\n\tGS: 'GBP',\n\tGT: 'GTQ',\n\tGU: 'USD',\n\tGW: 'XOF',\n\tGY: 'GYD',\n\tHK: 'HKD',\n\tHM: 'AUD',\n\tHN: 'HNL',\n\tHR: 'HRK',\n\tHT: 'HTG',\n\tHU: 'HUF',\n\tID: 'IDR',\n\tIE: 'EUR',\n\tIL: 'ILS',\n\tIM: 'GBP',\n\tIN: 'INR',\n\tIO: 'USD',\n\tIQ: 'IQD',\n\tIR: 'IRR',\n\tIS: 'ISK',\n\tIT: 'EUR',\n\tJE: 'GBP',\n\tJM: 'JMD',\n\tJO: 'JOD',\n\tJP: 'JPY',\n\tKE: 'KES',\n\tKG: 'KGS',\n\tKH: 'KHR',\n\tKI: 'AUD',\n\tKM: 'KMF',\n\tKN: 'XCD',\n\tKP: 'KPW',\n\tKR: 'KRW',\n\tKW: 'KWD',\n\tKY: 'KYD',\n\tKZ: 'KZT',\n\tLA: 'LAK',\n\tLB: 'LBP',\n\tLC: 'XCD',\n\tLI: 'CHF',\n\tLK: 'LKR',\n\tLR: 'LRD',\n\tLS: 'LSL',\n\tLT: 'LTL',\n\tLU: 'EUR',\n\tLV: 'LVL',\n\tLY: 'LYD',\n\tMA: 'MAD',\n\tMC: 'EUR',\n\tMD: 'MDL',\n\tME: 'EUR',\n\tMF: 'EUR',\n\tMG: 'MGA',\n\tMH: 'USD',\n\tMK: 'MKD',\n\tML: 'XOF',\n\tMM: 'MMK',\n\tMN: 'MNT',\n\tMO: 'MOP',\n\tMP: 'USD',\n\tMQ: 'EUR',\n\tMR: 'MRO',\n\tMS: 'XCD',\n\tMT: 'EUR',\n\tMU: 'MUR',\n\tMV: 'MVR',\n\tMW: 'MWK',\n\tMX: 'MXN',\n\tMY: 'MYR',\n\tMZ: 'MZN',\n\tNA: 'NAD',\n\tNC: 'XPF',\n\tNE: 'XOF',\n\tNF: 'AUD',\n\tNG: 'NGN',\n\tNI: 'NIO',\n\tNL: 'EUR',\n\tNO: 'NOK',\n\tNP: 'NPR',\n\tNR: 'AUD',\n\tNU: 'NZD',\n\tNZ: 'NZD',\n\tOM: 'OMR',\n\tPA: 'PAB',\n\tPE: 'PEN',\n\tPF: 'XPF',\n\tPG: 'PGK',\n\tPH: 'PHP',\n\tPK: 'PKR',\n\tPL: 'PLN',\n\tPM: 'EUR',\n\tPN: 'NZD',\n\tPR: 'USD',\n\tPS: 'ILS',\n\tPT: 'EUR',\n\tPW: 'USD',\n\tPY: 'PYG',\n\tQA: 'QAR',\n\tRE: 'EUR',\n\tRO: 'RON',\n\tRS: 'RSD',\n\tRU: 'RUB',\n\tRW: 'RWF',\n\tSA: 'SAR',\n\tSB: 'SBD',\n\tSC: 'SCR',\n\tSD: 'SDG',\n\tSE: 'SEK',\n\tSG: 'SGD',\n\tSH: 'SHP',\n\tSI: 'EUR',\n\tSJ: 'NOK',\n\tSK: 'EUR',\n\tSL: 'SLL',\n\tSM: 'EUR',\n\tSN: 'XOF',\n\tSO: 'SOS',\n\tSR: 'SRD',\n\tST: 'STD',\n\tSV: 'SVC',\n\tSX: 'ANG',\n\tSY: 'SYP',\n\tSZ: 'SZL',\n\tTC: 'USD',\n\tTD: 'XAF',\n\tTF: 'EUR',\n\tTG: 'XOF',\n\tTH: 'THB',\n\tTJ: 'TJS',\n\tTK: 'NZD',\n\tTL: 'USD',\n\tTM: 'TMT',\n\tTN: 'TND',\n\tTO: 'TOP',\n\tTR: 'TRY',\n\tTT: 'TTD',\n\tTV: 'AUD',\n\tTW: 'TWD',\n\tTZ: 'TZS',\n\tUA: 'UAH',\n\tUG: 'UGX',\n\tUM: 'USD',\n\tUS: 'USD',\n\tUY: 'UYU',\n\tUZ: 'UZS',\n\tVA: 'EUR',\n\tVC: 'XCD',\n\tVE: 'VEF',\n\tVG: 'USD',\n\tVI: 'USD',\n\tVN: 'VND',\n\tVU: 'VUV',\n\tWF: 'XPF',\n\tWS: 'WST',\n\tYE: 'YER',\n\tYT: 'EUR',\n\tZA: 'ZAR',\n\tZM: 'ZMK',\n\tZW: 'ZWL'\n\t};\n\t\n\tmodule.exports = map;\n\n/***/ }),\n\n/***/ 913:\n/***/ (function(module, exports) {\n\n\tfunction n(n){return n=n||Object.create(null),{on:function(c,e){(n[c]||(n[c]=[])).push(e)},off:function(c,e){n[c]&&n[c].splice(n[c].indexOf(e)>>>0,1)},emit:function(c,e){(n[c]||[]).slice().map(function(n){n(e)}),(n[\"*\"]||[]).slice().map(function(n){n(c,e)})}}}module.exports=n;\n\t//# sourceMappingURL=mitt.js.map\n\n/***/ }),\n\n/***/ 70:\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ 300:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n\t    \"use strict\";\n\t\n\t    if (global.setImmediate) {\n\t        return;\n\t    }\n\t\n\t    var nextHandle = 1; // Spec says greater than zero\n\t    var tasksByHandle = {};\n\t    var currentlyRunningATask = false;\n\t    var doc = global.document;\n\t    var registerImmediate;\n\t\n\t    function setImmediate(callback) {\n\t      // Callback can either be a function or a string\n\t      if (typeof callback !== \"function\") {\n\t        callback = new Function(\"\" + callback);\n\t      }\n\t      // Copy function arguments\n\t      var args = new Array(arguments.length - 1);\n\t      for (var i = 0; i < args.length; i++) {\n\t          args[i] = arguments[i + 1];\n\t      }\n\t      // Store and register the task\n\t      var task = { callback: callback, args: args };\n\t      tasksByHandle[nextHandle] = task;\n\t      registerImmediate(nextHandle);\n\t      return nextHandle++;\n\t    }\n\t\n\t    function clearImmediate(handle) {\n\t        delete tasksByHandle[handle];\n\t    }\n\t\n\t    function run(task) {\n\t        var callback = task.callback;\n\t        var args = task.args;\n\t        switch (args.length) {\n\t        case 0:\n\t            callback();\n\t            break;\n\t        case 1:\n\t            callback(args[0]);\n\t            break;\n\t        case 2:\n\t            callback(args[0], args[1]);\n\t            break;\n\t        case 3:\n\t            callback(args[0], args[1], args[2]);\n\t            break;\n\t        default:\n\t            callback.apply(undefined, args);\n\t            break;\n\t        }\n\t    }\n\t\n\t    function runIfPresent(handle) {\n\t        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n\t        // So if we're currently running a task, we'll need to delay this invocation.\n\t        if (currentlyRunningATask) {\n\t            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n\t            // \"too much recursion\" error.\n\t            setTimeout(runIfPresent, 0, handle);\n\t        } else {\n\t            var task = tasksByHandle[handle];\n\t            if (task) {\n\t                currentlyRunningATask = true;\n\t                try {\n\t                    run(task);\n\t                } finally {\n\t                    clearImmediate(handle);\n\t                    currentlyRunningATask = false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    function installNextTickImplementation() {\n\t        registerImmediate = function(handle) {\n\t            process.nextTick(function () { runIfPresent(handle); });\n\t        };\n\t    }\n\t\n\t    function canUsePostMessage() {\n\t        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n\t        // where `global.postMessage` means something completely different and can't be used for this purpose.\n\t        if (global.postMessage && !global.importScripts) {\n\t            var postMessageIsAsynchronous = true;\n\t            var oldOnMessage = global.onmessage;\n\t            global.onmessage = function() {\n\t                postMessageIsAsynchronous = false;\n\t            };\n\t            global.postMessage(\"\", \"*\");\n\t            global.onmessage = oldOnMessage;\n\t            return postMessageIsAsynchronous;\n\t        }\n\t    }\n\t\n\t    function installPostMessageImplementation() {\n\t        // Installs an event handler on `global` for the `message` event: see\n\t        // * https://developer.mozilla.org/en/DOM/window.postMessage\n\t        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\t\n\t        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\t        var onGlobalMessage = function(event) {\n\t            if (event.source === global &&\n\t                typeof event.data === \"string\" &&\n\t                event.data.indexOf(messagePrefix) === 0) {\n\t                runIfPresent(+event.data.slice(messagePrefix.length));\n\t            }\n\t        };\n\t\n\t        if (global.addEventListener) {\n\t            global.addEventListener(\"message\", onGlobalMessage, false);\n\t        } else {\n\t            global.attachEvent(\"onmessage\", onGlobalMessage);\n\t        }\n\t\n\t        registerImmediate = function(handle) {\n\t            global.postMessage(messagePrefix + handle, \"*\");\n\t        };\n\t    }\n\t\n\t    function installMessageChannelImplementation() {\n\t        var channel = new MessageChannel();\n\t        channel.port1.onmessage = function(event) {\n\t            var handle = event.data;\n\t            runIfPresent(handle);\n\t        };\n\t\n\t        registerImmediate = function(handle) {\n\t            channel.port2.postMessage(handle);\n\t        };\n\t    }\n\t\n\t    function installReadyStateChangeImplementation() {\n\t        var html = doc.documentElement;\n\t        registerImmediate = function(handle) {\n\t            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t            var script = doc.createElement(\"script\");\n\t            script.onreadystatechange = function () {\n\t                runIfPresent(handle);\n\t                script.onreadystatechange = null;\n\t                html.removeChild(script);\n\t                script = null;\n\t            };\n\t            html.appendChild(script);\n\t        };\n\t    }\n\t\n\t    function installSetTimeoutImplementation() {\n\t        registerImmediate = function(handle) {\n\t            setTimeout(runIfPresent, 0, handle);\n\t        };\n\t    }\n\t\n\t    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\t    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n\t    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\t\n\t    // Don't get fooled by e.g. browserify environments.\n\t    if ({}.toString.call(global.process) === \"[object process]\") {\n\t        // For Node.js before 0.9\n\t        installNextTickImplementation();\n\t\n\t    } else if (canUsePostMessage()) {\n\t        // For non-IE10 modern browsers\n\t        installPostMessageImplementation();\n\t\n\t    } else if (global.MessageChannel) {\n\t        // For web workers, where supported\n\t        installMessageChannelImplementation();\n\t\n\t    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n\t        // For IE 6–8\n\t        installReadyStateChangeImplementation();\n\t\n\t    } else {\n\t        // For older browsers\n\t        installSetTimeoutImplementation();\n\t    }\n\t\n\t    attachTo.setImmediate = setImmediate;\n\t    attachTo.clearImmediate = clearImmediate;\n\t}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(70)))\n\n/***/ }),\n\n/***/ 1031:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t// Pulled from react-compat\n\t// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\n\tfunction shallowDiffers(a, b) {\n\t  for (var i in a) {\n\t    if (!(i in b)) return true;\n\t  }for (var _i in b) {\n\t    if (a[_i] !== b[_i]) return true;\n\t  }return false;\n\t}\n\t\n\texports.default = function (instance, nextProps, nextState) {\n\t  return shallowDiffers(instance.props, nextProps) || shallowDiffers(instance.state, nextState);\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 72:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t;(function (name, root, factory) {\n\t  if (true) {\n\t    module.exports = factory()\n\t    module.exports['default'] = factory()\n\t  }\n\t  /* istanbul ignore next */\n\t  else if (typeof define === 'function' && define.amd) {\n\t    define(factory)\n\t  }\n\t  else {\n\t    root[name] = factory()\n\t  }\n\t}('slugify', this, function () {\n\t  /* eslint-disable */\n\t  var charMap = JSON.parse('{\"$\":\"dollar\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₹\":\"indian rupee\",\"₽\":\"russian ruble\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\"}')\n\t  /* eslint-enable */\n\t\n\t  function replace (string, options) {\n\t    if (typeof string !== 'string') {\n\t      throw new Error('slugify: string argument expected')\n\t    }\n\t\n\t    options = (typeof options === 'string')\n\t      ? {replacement: options}\n\t      : options || {}\n\t\n\t    var slug = string.split('')\n\t      .reduce(function (result, ch) {\n\t        return result + (charMap[ch] || ch)\n\t          // allowed\n\t          .replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]/g, '')\n\t      }, '')\n\t      // trim leading/trailing spaces\n\t      .replace(/^\\s+|\\s+$/g, '')\n\t      // convert spaces\n\t      .replace(/[-\\s]+/g, options.replacement || '-')\n\t      // remove trailing separator\n\t      .replace('#{replacement}$', '')\n\t\n\t    return options.lower ? slug.toLowerCase() : slug\n\t  }\n\t\n\t  replace.extend = function (customMap) {\n\t    for (var key in customMap) {\n\t      charMap[key] = customMap[key]\n\t    }\n\t  }\n\t\n\t  return replace\n\t}))\n\n\n/***/ }),\n\n/***/ 147:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n\t            (typeof self !== \"undefined\" && self) ||\n\t            window;\n\tvar apply = Function.prototype.apply;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) {\n\t  if (timeout) {\n\t    timeout.close();\n\t  }\n\t};\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(scope, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// setimmediate attaches itself to the global object\n\t__webpack_require__(300);\n\t// On some exotic environments, it's not clear which object `setimmediate` was\n\t// able to install onto.  Search each possibility in the same order as the\n\t// `setimmediate` library.\n\texports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n\t                       (typeof global !== \"undefined\" && global.setImmediate) ||\n\t                       (this && this.setImmediate);\n\texports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n\t                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n\t                         (this && this.clearImmediate);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n\n/***/ 136:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"All\":\"All commodities\",\"Crude Oil\":\"Crude oil\",\"CO2\":\"Carbon dioxide\",\"Geothermal\":\"Geothermal\",\"Hardrock\":\"Hardrock minerals\",\"Natural Gas\":\"Natural gas\",\"NGL\":\"Natural gas liquids\",\"Wood and wood-derived fuels\":\"Wood-derived fuel\",\"Conventional Hydroelectric\":\"Hydroelectric\"}\n\n/***/ }),\n\n/***/ 263:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"States\":{\"name\":\"State and local governments\",\"description\":\"Funds disbursed to states fall under the jurisdiction of each state, and each state determines how the funds will be used.\"},\"U.S. Treasury\":{\"name\":\"U.S. Treasury\",\"description\":\"The federal government’s basic operating fund pays for roughly two-thirds of all federal expenditures, including the military, national parks, and schools.\"},\"Reclamation\":{\"name\":\"Reclamation Fund\",\"description\":\"Supports the establishment of critical infrastructure projects like dams and power plants.\"},\"Land & Water Conservation\":{\"name\":\"Land and Water Conservation Fund\",\"description\":\"Provides matching grants to states and local governments to buy and develop public outdoor recreation areas across the 50 states.\",\"link\":{\"name\":\"How this fund works\",\"to\":\"/how-it-works/land-and-water-conservation-fund/\"}},\"Historic Preservation\":{\"name\":\"Historic Preservation Fund\",\"description\":\"Helps preserve U.S. historical and archaeological sites and cultural heritage through grants to state and tribal historic preservation offices.\",\"link\":{\"name\":\"How this fund works\",\"to\":\"/how-it-works/historic-preservation-fund/\"}},\"American Indian Tribes\":{\"name\":\"Native American tribes and individuals\",\"description\":\"ONRR disburses 100% of revenue collected from resource extraction on Native American lands back to tribes, nations, and individuals.\"},\"Other\":{\"name\":\"Other funds\",\"description\":\"Some funds are directed back to federal agencies that administer these lands to help cover operational costs. The Ultra-Deepwater Research Program and the Mescal Settlement Agreement also receive $50 million each.\"}}\n\n/***/ }),\n\n/***/ 53:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\r\n\t * Constants that are used by the application\r\n\t **/\n\tmodule.exports = Object.freeze({\n\t  // Redux Store keys for reducers\n\t  REVENUES_KEY: 'revenues',\n\t  PRODUCTION_VOLUMES_KEY: 'productionVolumes',\n\t  DISBURSEMENTS_KEY: 'federalDisbursements',\n\t\n\t  // Disbursements data keys for redux store\n\t  DISBURSEMENTS_ALL_KEY: 'disbursementsAll',\n\t\n\t  // Revenues data keys for redux store\n\t  REVENUES_ALL_KEY: 'revenuesAll',\n\t\n\t  // Production Volume data keys for redux store\n\t  PRODUCTION_VOLUMES_OIL_KEY: 'productVolumesOil',\n\t  PRODUCTION_VOLUMES_GAS_KEY: 'productVolumesGas',\n\t  PRODUCTION_VOLUMES_COAL_KEY: 'productVolumesCoal',\n\t\n\t  FEDERAL_OFFSHORE: 'Federal offshore',\n\t  FEDERAL_ONSHORE: 'Federal onshore',\n\t  NATIVE_AMERICAN: 'Native American',\n\t  OFFSHORE: 'Offshore',\n\t  ONSHORE: 'Onshore',\n\t  FEDERAL: 'Federal',\n\t\n\t  CALENDAR_YEAR: \"Calendar year\",\n\t  FISCAL_YEAR: \"Fiscal year\"\n\t\n\t});\n\n/***/ }),\n\n/***/ 13:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _slugify = __webpack_require__(72);\n\t\n\tvar _slugify2 = _interopRequireDefault(_slugify);\n\t\n\tvar _currencyFormatter = __webpack_require__(127);\n\t\n\tvar _currencyFormatter2 = _interopRequireDefault(_currencyFormatter);\n\t\n\tvar _commodity_names = __webpack_require__(136);\n\t\n\tvar _commodity_names2 = _interopRequireDefault(_commodity_names);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar utils = {\n\t\tgetDisplayName_CommodityName: function getDisplayName_CommodityName(key) {\n\t\t\treturn _commodity_names2.default[key] || key;\n\t\t},\n\t\n\t\tformatToSlug: function formatToSlug(name) {\n\t\t\treturn (0, _slugify2.default)(name, { lower: true, remove: /[$*_+~.()'\"!\\:@,]/g }).replace('-and-', '-');\n\t\t},\n\t\n\t\tformatToDollarInt: function formatToDollarInt(value) {\n\t\t\treturn _currencyFormatter2.default.format(value, { symbol: '$', precision: 0, format: { pos: '%s%v', neg: '(%s%v)', zero: '%s%v' } });\n\t\t},\n\t\n\t\tformatToCommaInt: function formatToCommaInt(value) {\n\t\t\treturn _currencyFormatter2.default.format(value, { symbol: '', precision: 0, format: { pos: '%s%v', neg: '(%s%v)', zero: '%s%v' } });\n\t\t},\n\t\tthrottle: function throttle(callback, limit) {\n\t\t\tvar wait = true; // Initially, we're not waiting\n\t\t\treturn function () {\n\t\t\t\t// We return a throttled function\n\t\t\t\tif (wait) {\n\t\t\t\t\t// If we're not waiting  \t\t\t\t\t\n\t\t\t\t\twait = false; // Prevent future invocations\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t// After a period of time\n\t\t\t\t\t\tcallback.call(); // Execute users function\n\t\t\t\t\t\twait = true; // And allow future invocations\n\t\t\t\t\t}, limit);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tgroupBy: function groupBy(data, group) {\n\t\t\tvar _this = this;\n\t\n\t\t\tvar groups = {};\n\t\n\t\t\tdata.map(function (item, index) {\n\t\n\t\t\t\tvar itemGroup = _this.resolveByStringPath(group, item);\n\t\t\t\tvar list = groups[itemGroup];\n\t\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tgroups[itemGroup] = [item];\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\treturn groups;\n\t\t},\n\t\tsumBy: function sumBy(data, group) {\n\t\t\tvar _this2 = this;\n\t\n\t\t\tvar groups = {};\n\t\n\t\t\tdata.map(function (item, index) {\n\t\n\t\t\t\tvar itemGroup = _this2.resolveByStringPath(group, item);\n\t\t\t\tvar list = groups[itemGroup];\n\t\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tgroups[itemGroup] = [item];\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\treturn groups;\n\t\t},\n\t\tresolveByStringPath: function resolveByStringPath(path, obj) {\n\t\t\treturn path.split('.').reduce(function (prev, curr) {\n\t\t\t\treturn prev ? prev[curr] : undefined;\n\t\t\t}, obj || self);\n\t\t},\n\t\trange: function range(start, end) {\n\t\t\treturn Array(end - start + 1).fill().map(function (_, idx) {\n\t\t\t\treturn start + idx;\n\t\t\t});\n\t\t},\n\t\tround: function round(number, precision) {\n\t\t\tprecision = precision || 0;\n\t\t\treturn parseFloat(number).toFixed(precision);\n\t\t}\n\t};\n\t\n\t// Import Display Name Yaml Files\n\texports.default = utils;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 794:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(162898551421021, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(494) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 795:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(10991734084388, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(495) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 796:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(257298155543294, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(496) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 797:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(\n\t      38\n\t    );\n\t    module.exports = function(cb) { return __webpack_require__.e/* nsure */(35783957827783, function(_, error) {\n\t        if (error) {\n\t          console.log('bundle loading error', error)\n\t          cb(true)\n\t        } else {\n\t          cb(null, function() { return __webpack_require__(497) })\n\t        }\n\t      });\n\t     }\n\t    \n\n/***/ }),\n\n/***/ 498:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _redux = __webpack_require__(299);\n\t\n\tvar _reducers = __webpack_require__(499);\n\t\n\tvar _reducers2 = _interopRequireDefault(_reducers);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* global window:true */\n\t/* eslint no-underscore-dangle: 0 */\n\t\n\texports.default = function () {\n\t\tvar devtools =  false ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n\t\t\treturn f;\n\t\t};\n\t\n\t\treturn (0, _redux.createStore)(_reducers2.default, devtools);\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 151:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.hydateDisbursements = exports.selectYear = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _fund_names = __webpack_require__(263);\n\t\n\tvar _fund_names2 = _interopRequireDefault(_fund_names);\n\t\n\tvar _utils = __webpack_require__(13);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _lazy = __webpack_require__(23);\n\t\n\tvar _lazy2 = _interopRequireDefault(_lazy);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Initial state is used for the pattern library and seeding any additional data\n\tvar initialState = {\n\t    year: 2018,\n\t    years: [2018],\n\t    disbursements: {\n\t        2017: {\n\t            year: \"2018\",\n\t            total: 10000,\n\t            highestFundValue: 10000,\n\t            disbursements: [{\n\t                States: {\n\t                    description: \"Fund Description\",\n\t                    name: \"Fund Display Name\",\n\t                    sortOrderIndex: 0,\n\t                    total: 10000,\n\t                    disbursements: [{ Onshore: 5000, GOMESA: 3000, Offshore: 2000 }]\n\t                }\n\t            }]\n\t        }\n\t    },\n\t    fundInfo: _fund_names2.default\n\t};\n\t\n\t// Define Action Types\n\tvar SELECT_YEAR = 'SELECT_YEAR';\n\tvar HYDRATE_DISBURSEMENTS = 'HYDRATE_DISBURSEMENTS_DEPRECATED';\n\t\n\t// Define Action Creators \n\tvar selectYear = exports.selectYear = function selectYear(year) {\n\t    return { type: SELECT_YEAR, payload: year };\n\t};\n\tvar hydateDisbursements = exports.hydateDisbursements = function hydateDisbursements(disbursements) {\n\t    return { type: HYDRATE_DISBURSEMENTS, payload: disbursements };\n\t};\n\t\n\t// Define Reducers\n\t\n\texports.default = function () {\n\t    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t    var action = arguments[1];\n\t    var type = action.type,\n\t        payload = action.payload;\n\t\n\t\n\t    switch (type) {\n\t        case SELECT_YEAR:\n\t            return _extends({}, state, { 'year': payload });\n\t        case HYDRATE_DISBURSEMENTS:\n\t            var newState = hydrateDisbursements(payload, state.year, state.fundInfo);\n\t            return _extends({}, state, newState);\n\t        default:\n\t            return state;\n\t    }\n\t};\n\t\n\tvar hydrateDisbursements = function hydrateDisbursements(data, year, fundInfo) {\n\t    var newState = {};\n\t    var sortedByYear = (0, _lazy2.default)(data).sortBy(\"Year\", true).toArray();\n\t    newState.years = (0, _lazy2.default)(_utils2.default.range(parseInt(sortedByYear[sortedByYear.length - 1].Year), parseInt(sortedByYear[0].Year))).sort(null, true).toArray();\n\t    newState.year = Math.max.apply(Math, newState.years);\n\t\n\t    var fundSortOrder = {};\n\t    newState.disbursements = {};\n\t    sortedByYear.map(function (disbursementsForYear, index) {\n\t        newState.disbursements[disbursementsForYear.Year] = hydrateDisbursementsForYear(disbursementsForYear, fundInfo, fundSortOrder);\n\t\n\t        // Set Sort order for funds by the highest year value\n\t        // The display order should not change from year to year and is set by the last year of data\n\t        // Using zero index since we already have the data sorted descending by year\n\t        if (index === 0) {\n\t            // Sort descending by total\n\t            newState.disbursements[disbursementsForYear.Year].disbursements.sort(function (a, b) {\n\t                return b[Object.keys(b)[0]].total - a[Object.keys(a)[0]].total;\n\t            });\n\t\n\t            newState.disbursements[disbursementsForYear.Year].disbursements.map(function (fund, index) {\n\t                fund[Object.keys(fund)[0]].sortOrderIndex = index;\n\t                fundSortOrder[Object.keys(fund)[0]] = index;\n\t            });\n\t        } else {\n\t            // Sort ascending by sortOrderIndex\n\t            newState.disbursements[disbursementsForYear.Year].disbursements.sort(function (a, b) {\n\t                return a[Object.keys(a)[0]].sortOrderIndex - b[Object.keys(b)[0]].sortOrderIndex;\n\t            });\n\t        }\n\t    });\n\t\n\t    return newState;\n\t};\n\t\n\tvar hydrateDisbursementsForYear = function hydrateDisbursementsForYear(disbursementsForYear, fundInfo, fundSortOrder) {\n\t    var newState = {\n\t        year: disbursementsForYear.Year,\n\t        total: 0,\n\t        highestFundValue: 0,\n\t        disbursements: []\n\t    };\n\t\n\t    if (disbursementsForYear) {\n\t        var disbursementsByFund = _utils2.default.groupBy(disbursementsForYear.disbursements, \"disbursement.Fund\");\n\t\n\t        // Go through all the funds if a fund has no data it will be zero, with no disbursements\n\t\n\t        var _loop = function _loop(fundKey) {\n\t            var fundToAdd = {};\n\t            fundToAdd[fundKey] = {\n\t                total: 0,\n\t                disbursements: [],\n\t                name: fundInfo[fundKey] ? fundInfo[fundKey].name : fundKey,\n\t                description: fundInfo[fundKey] ? fundInfo[fundKey].description : \"\",\n\t                link: fundInfo[fundKey] ? fundInfo[fundKey].link : undefined,\n\t                sortOrderIndex: fundSortOrder[fundKey]\n\t            };\n\t\n\t            var sourceData = void 0;\n\t\n\t            if (disbursementsByFund[fundKey]) {\n\t                sourceData = {};\n\t                disbursementsByFund[fundKey].map(function (fundData, index) {\n\t                    sourceData[fundData.disbursement.Source] = Math.round(fundData.disbursement.Disbursement);\n\t\n\t                    fundToAdd[fundKey].total += fundData.disbursement.Disbursement;\n\t                    newState.total += fundData.disbursement.Disbursement;\n\t                });\n\t            }\n\t            if (sourceData) {\n\t                fundToAdd[fundKey].disbursements.push(sourceData);\n\t            } else {\n\t                fundToAdd[fundKey].disbursements = undefined;\n\t            }\n\t\n\t            if (newState.highestFundValue < fundToAdd[fundKey].total) {\n\t                newState.highestFundValue = fundToAdd[fundKey].total;\n\t            }\n\t\n\t            newState.disbursements.push(fundToAdd);\n\t        };\n\t\n\t        for (var fundKey in fundInfo) {\n\t            _loop(fundKey);\n\t        }\n\t    }\n\t\n\t    return newState;\n\t};\n\n/***/ }),\n\n/***/ 152:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.byYear = exports.hydrate = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _FiscalYear, _CalendarYear, _SourceData, _initialState;\n\t\n\tvar _constants = __webpack_require__(53);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _utils = __webpack_require__(13);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar initialState = (_initialState = {\n\t\tFiscalYear: (_FiscalYear = {}, _FiscalYear[_constants2.default.DISBURSEMENTS_ALL_KEY] = undefined, _FiscalYear),\n\t\tCalendarYear: (_CalendarYear = {}, _CalendarYear[_constants2.default.DISBURSEMENTS_ALL_KEY] = undefined, _CalendarYear),\n\t\tSourceData: (_SourceData = {}, _SourceData[_constants2.default.DISBURSEMENTS_ALL_KEY] = undefined, _SourceData)\n\t}, _initialState[_constants2.default.DISBURSEMENTS_ALL_KEY] = undefined, _initialState);\n\t\n\t// Define Action Types\n\tvar HYDRATE = 'HYDRATE_DISBURSEMENTS';\n\tvar BY_YEAR = 'BY_YEAR_DISBURSEMENTS';\n\t//const BY_MONTH = 'BY_MONTH_DISBURSEMENTS';\n\t\n\t// Define Action Creators \n\tvar hydrate = exports.hydrate = function hydrate(key, data) {\n\t\treturn { type: HYDRATE, payload: data, key: key };\n\t};\n\tvar byYear = exports.byYear = function byYear(key, filter) {\n\t\treturn { type: BY_YEAR, payload: filter, key: key };\n\t};\n\t//export const byMonth = (key, filter) => ({ type: BY_MONTH, payload: filter,  key: key});\n\t\n\t// Define Reducers\n\t\n\texports.default = function () {\n\t\tvar _extends2;\n\t\n\t\tvar state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t\tvar action = arguments[1];\n\t\tvar type = action.type,\n\t\t    payload = action.payload,\n\t\t    key = action.key;\n\t\t//console.log(state);\n\t\n\t\tswitch (type) {\n\t\t\tcase HYDRATE:\n\t\t\t\tvar SourceData = state.SourceData;\n\t\n\t\t\t\tSourceData[key] = payload;\n\t\n\t\t\t\treturn _extends({}, state, { SourceData: SourceData });\n\t\t\tcase BY_YEAR:\n\t\t\t\treturn _extends({}, state, (_extends2 = {}, _extends2[key] = groupByYear(state.SourceData[key], payload), _extends2));\n\t\t\t//case BY_MONTH:\n\t\t\t//return ({...state , [key]:groupByMonth(state.SourceData[key], payload, state.FiscalYear[key], state.CalendarYear[key]) });\n\t\t\tdefault:\n\t\t\t\treturn state;\n\t\t}\n\t};\n\t\n\t/**\r\n\t * Set the most recent year available in our data\r\n\t * for Fiscal and Calendar year. Data is assumed to\r\n\t * be sorted descending by production date. If that changes\r\n\t * we should add a sort function.\r\n\t *\r\n\t * Fiscal Year is Oct (Year-1) to Sept (Year)\r\n\t * It is assumed if we have Sept data we have the fiscal year data\r\n\t * for that year.\r\n\t *\r\n\t * For Calendar Year it is assumed if we have Dec data we have \r\n\t * all data for that year\r\n\t **/\n\t\n\t\n\tvar getFiscalCalendarYear = function getFiscalCalendarYear(key, source, fiscalYear, calendarYear) {\n\t\tif (source === undefined) return { FiscalYear: undefined, CalendarYear: undefined };\n\t\n\t\tvar fiscalYearItem = source.find(function (item) {\n\t\t\treturn item.data.RevenueMonth === \"September\";\n\t\t});\n\t\tvar calendarYearItem = source.find(function (item) {\n\t\t\treturn item.data.RevenueMonth === \"December\";\n\t\t});\n\t\tfiscalYear[key] = fiscalYearItem && parseInt(fiscalYearItem.data.RevenueYear);\n\t\tcalendarYear[key] = calendarYearItem && parseInt(calendarYearItem.data.RevenueYear);\n\t\treturn { FiscalYear: fiscalYear,\n\t\t\tCalendarYear: calendarYear };\n\t};\n\t\n\t/** \r\n\t * \r\n\t * @returns {Object}\r\n\t **/\n\tvar groupByYear = function groupByYear(source, filter) {\n\t\tif (source === undefined) return source;\n\t\n\t\tvar displayNames = void 0;\n\t\tvar groupNames = void 0;\n\t\tvar results = Object.entries(_utils2.default.groupBy(source, \"data.Year\")).map(function (e) {\n\t\t\tvar _ref;\n\t\n\t\t\treturn _ref = {}, _ref[e[0]] = e[1], _ref;\n\t\t});\n\t\n\t\tresults.sort(function (a, b) {\n\t\t\treturn a[Object.keys(a)[0]][0].data.Year - b[Object.keys(b)[0]][0].data.Year;\n\t\t});\n\t\n\t\tif (filter) {\n\t\n\t\t\tif (filter.limit > 0) {\n\t\t\t\tresults.splice(0, results.length - filter.limit);\n\t\t\t}\n\t\n\t\t\t// Get display names before we filter the data.\n\t\t\tif (filter.displayName) {\n\t\t\t\tdisplayNames = {};\n\t\t\t\tresults.forEach(function (item) {\n\t\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayYear;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Set sub group name\n\t\t\tif (filter.subGroupName) {\n\t\t\t\tgroupNames = {};\n\t\t\t\tresults.map(function (item) {\n\t\t\t\t\tvar key = Object.keys(item)[0];\n\t\t\t\t\tif (groupNames[filter.subGroupName]) {\n\t\t\t\t\t\tgroupNames[filter.subGroupName].push(key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroupNames[filter.subGroupName] = [key];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Sum volume by data key and assign year key to the result\n\t\t\tif (filter.sumBy) {\n\t\t\t\tresults = results.map(function (yearData) {\n\t\t\t\t\tvar _ref2;\n\t\n\t\t\t\t\tvar year = Object.keys(yearData)[0];\n\t\t\t\t\tvar sums = [yearData[year].reduce(function (total, item) {\n\t\t\t\t\t\ttotal[item.data[filter.sumBy]] = total[item.data[filter.sumBy]] !== undefined ? total[item.data[filter.sumBy]] + item.data.Disbursement : item.data.Disbursement;\n\t\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}, {})];\n\t\n\t\t\t\t\treturn _ref2 = {}, _ref2[year] = sums, _ref2;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\n\t\treturn { Data: results,\n\t\t\tUnits: \"$\",\n\t\t\tLongUnits: \"dollars\",\n\t\t\tDisplayNames: displayNames,\n\t\t\tGroupNames: groupNames };\n\t};\n\t\n\t/** \r\n\t * \r\n\t * Example format:\r\n\t * {\"Jan\": [{\"Federal onshore\": 100, \"Federal offshore\": 100, \"Native American\":90}]}\r\n\t **/\n\tvar groupByMonth = function groupByMonth(source, filter, fiscalYear, calendarYear) {\n\t\tif (source === undefined) return source;\n\t\n\t\tvar displayNames = void 0;\n\t\tvar groupNames = void 0;\n\t\tvar results = JSON.parse(JSON.stringify(source));\n\t\n\t\tif (filter.period === \"recent\" && filter.limit > 0) {\n\t\t\tvar resultsGroupedByDate = Object.entries(_utils2.default.groupBy(source, \"data.RevenueDate\")).map(function (e) {\n\t\t\t\tvar _ref3;\n\t\n\t\t\t\treturn _ref3 = {}, _ref3[e[0]] = e[1], _ref3;\n\t\t\t});\n\t\t\tvar resultsLimited = resultsGroupedByDate.splice(0, 12);\n\t\t\tresults = results.filter(function (monthData) {\n\t\t\t\treturn Object.keys(resultsLimited[resultsLimited.length - 1])[0] <= monthData.data.RevenueDate;\n\t\t\t});\n\t\t}\n\t\t// Fiscal Year is Oct (Year-1) to Sept (Year)\n\t\telse if (filter.period === \"fiscal\") {\n\t\t\t\tvar fiscalYearStart = results.find(function (item) {\n\t\t\t\t\treturn item.data.RevenueMonth === \"October\" && parseInt(item.data.RevenueYear) === fiscalYear - 1;\n\t\t\t\t});\n\t\n\t\t\t\tvar fiscalYearEnd = results.find(function (item) {\n\t\t\t\t\treturn item.data.RevenueMonth === \"September\" && parseInt(item.data.RevenueYear) === fiscalYear;\n\t\t\t\t});\n\t\n\t\t\t\tresults = results.filter(function (item) {\n\t\t\t\t\treturn new Date(item.data.RevenueDate) >= new Date(fiscalYearStart.data.RevenueDate) && new Date(item.data.RevenueDate) <= new Date(fiscalYearEnd.data.RevenueDate);\n\t\t\t\t});\n\t\t\t} else if (filter.period === \"calendar\") {\n\t\t\t\tresults = results.filter(function (item) {\n\t\t\t\t\treturn parseInt(item.data.RevenueYear) === calendarYear;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\tresults = Object.entries(_utils2.default.groupBy(results, \"data.RevenueMonth\")).map(function (e) {\n\t\t\tvar _ref4;\n\t\n\t\t\treturn _ref4 = {}, _ref4[e[0]] = e[1], _ref4;\n\t\t});\n\t\n\t\t// Sort ascending by production date\n\t\tresults.sort(function (a, b) {\n\t\t\tvar aDate = new Date(a[Object.keys(a)[0]][0].data.RevenueDate);\n\t\t\tvar bDate = new Date(b[Object.keys(b)[0]][0].data.RevenueDate);\n\t\t\treturn aDate < bDate ? -1 : aDate == bDate ? 0 : 1;\n\t\t});\n\t\n\t\tif (filter) {\n\t\n\t\t\t// Get display names before we filter the data.\n\t\t\tif (filter.displayName) {\n\t\t\t\tdisplayNames = {};\n\t\t\t\tresults.forEach(function (item) {\n\t\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayMonth;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Get group names before we filter the data.\n\t\t\tif (filter.subGroup) {\n\t\t\t\tgroupNames = {};\n\t\t\t\tresults.map(function (item) {\n\t\t\t\t\tvar key = Object.keys(item)[0];\n\t\t\t\t\tvar name = item[key][0].data[filter.subGroup];\n\t\t\t\t\tif (groupNames[name]) {\n\t\t\t\t\t\tgroupNames[name].push(key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroupNames[name] = [key];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Sum volume by data key and assign month key to the result\n\t\t\tif (filter.sumBy) {\n\t\t\t\tresults = results.map(function (monthData) {\n\t\t\t\t\tvar _ref5;\n\t\n\t\t\t\t\tvar month = Object.keys(monthData)[0];\n\t\t\t\t\tvar sums = [monthData[month].reduce(function (total, item) {\n\t\n\t\t\t\t\t\ttotal[item.data[filter.sumBy]] = total[item.data[filter.sumBy]] !== undefined ? total[item.data[filter.sumBy]] + item.data.Revenue : item.data.Revenue;\n\t\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}, {})];\n\t\n\t\t\t\t\treturn _ref5 = {}, _ref5[month] = sums, _ref5;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\n\t\treturn { Data: results,\n\t\t\tUnits: \"$\",\n\t\t\tLongUnits: \"dollars\",\n\t\t\tDisplayNames: displayNames,\n\t\t\tGroupNames: groupNames };\n\t};\n\n/***/ }),\n\n/***/ 62:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar initialState = {\n\t  glossaryTerm: \"\",\n\t  glossaryOpen: false\n\t};\n\t\n\t// Define Action Types\n\tvar GLOSSARY_TERM_SELECTED = 'GLOSSARY_TERM_SELECTED';\n\tvar YEAR_SELECTED = 'YEAR_SELECTED';\n\t\n\t// Define Action Creators \n\tvar glossaryTermSelected = exports.glossaryTermSelected = function glossaryTermSelected(term) {\n\t  var doOpen = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t  return { type: GLOSSARY_TERM_SELECTED, payload: term, openGlossary: doOpen };\n\t};\n\t\n\t// Define Reducers\n\t\n\texports.default = function () {\n\t  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t  var action = arguments[1];\n\t  var type = action.type,\n\t      payload = action.payload;\n\t\n\t\n\t  switch (type) {\n\t    case GLOSSARY_TERM_SELECTED:\n\t      return _extends({}, state, { glossaryTerm: payload, glossaryOpen: action.openGlossary });\n\t    default:\n\t      return state;\n\t  }\n\t};\n\n/***/ }),\n\n/***/ 499:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.createReducer = undefined;\n\t\n\tvar _redux = __webpack_require__(299);\n\t\n\tvar _glossary = __webpack_require__(62);\n\t\n\tvar _glossary2 = _interopRequireDefault(_glossary);\n\t\n\tvar _disbursements = __webpack_require__(151);\n\t\n\tvar _disbursements2 = _interopRequireDefault(_disbursements);\n\t\n\tvar _productionVolumes = __webpack_require__(153);\n\t\n\tvar _productionVolumes2 = _interopRequireDefault(_productionVolumes);\n\t\n\tvar _revenues = __webpack_require__(154);\n\t\n\tvar _revenues2 = _interopRequireDefault(_revenues);\n\t\n\tvar _federalDisbursements = __webpack_require__(152);\n\t\n\tvar _federalDisbursements2 = _interopRequireDefault(_federalDisbursements);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = (0, _redux.combineReducers)({ glossary: _glossary2.default, disbursements: _disbursements2.default, productionVolumes: _productionVolumes2.default, revenues: _revenues2.default, federalDisbursements: _federalDisbursements2.default });\n\tvar createReducer = exports.createReducer = function createReducer(initialState, handlers) {\n\t\treturn function reducer() {\n\t\t\tvar state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t\t\tvar action = arguments[1];\n\t\n\t\t\tif (handlers.hasOwnProperty(action.type)) {\n\t\t\t\treturn handlers[action.type](state, action);\n\t\t\t} else {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t};\n\t};\n\n/***/ }),\n\n/***/ 153:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.byMonth = exports.byYear = exports.hydrate = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _FiscalYear, _CalendarYear, _SourceData, _initialState;\n\t\n\tvar _constants = __webpack_require__(53);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _utils = __webpack_require__(13);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar initialState = (_initialState = {\n\t\tFiscalYear: (_FiscalYear = {}, _FiscalYear[_constants2.default.PRODUCTION_VOLUMES_OIL_KEY] = undefined, _FiscalYear[_constants2.default.PRODUCTION_VOLUMES_GAS_KEY] = undefined, _FiscalYear[_constants2.default.PRODUCTION_VOLUMES_COAL_KEY] = undefined, _FiscalYear),\n\t\tCalendarYear: (_CalendarYear = {}, _CalendarYear[_constants2.default.PRODUCTION_VOLUMES_OIL_KEY] = undefined, _CalendarYear[_constants2.default.PRODUCTION_VOLUMES_GAS_KEY] = undefined, _CalendarYear[_constants2.default.PRODUCTION_VOLUMES_COAL_KEY] = undefined, _CalendarYear),\n\t\tSourceData: (_SourceData = {}, _SourceData[_constants2.default.PRODUCTION_VOLUMES_OIL_KEY] = undefined, _SourceData[_constants2.default.PRODUCTION_VOLUMES_GAS_KEY] = undefined, _SourceData[_constants2.default.PRODUCTION_VOLUMES_COAL_KEY] = undefined, _SourceData)\n\t}, _initialState[_constants2.default.PRODUCTION_VOLUMES_OIL_KEY] = undefined, _initialState[_constants2.default.PRODUCTION_VOLUMES_GAS_KEY] = undefined, _initialState[_constants2.default.PRODUCTION_VOLUMES_COAL_KEY] = undefined, _initialState);\n\t\n\t// Define Action Types\n\tvar HYDRATE = 'HYDRATE_PRODUCTION_VOLUMES';\n\tvar BY_YEAR = 'BY_YEAR_PRODUCTION_VOLUMES';\n\tvar BY_MONTH = 'BY_MONTH_PRODUCTION_VOLUMES';\n\t\n\t// Define Action Creators \n\tvar hydrate = exports.hydrate = function hydrate(key, data) {\n\t\treturn { type: HYDRATE, payload: data, key: key };\n\t};\n\tvar byYear = exports.byYear = function byYear(key, filter) {\n\t\treturn { type: BY_YEAR, payload: filter, key: key };\n\t};\n\tvar byMonth = exports.byMonth = function byMonth(key, filter) {\n\t\treturn { type: BY_MONTH, payload: filter, key: key };\n\t};\n\t\n\t// Define Reducers\n\t\n\texports.default = function () {\n\t\tvar _extends2, _extends3;\n\t\n\t\tvar state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t\tvar action = arguments[1];\n\t\tvar type = action.type,\n\t\t    payload = action.payload,\n\t\t    key = action.key;\n\t\t//console.log(state);\n\t\n\t\tswitch (type) {\n\t\t\tcase HYDRATE:\n\t\t\t\tvar SourceData = state.SourceData,\n\t\t\t\t    FiscalYear = state.FiscalYear,\n\t\t\t\t    CalendarYear = state.CalendarYear;\n\t\n\t\t\t\tSourceData[key] = payload;\n\t\t\t\treturn _extends({}, state, getFiscalCalendarYear(key, payload, FiscalYear, CalendarYear), { SourceData: SourceData });\n\t\t\tcase BY_YEAR:\n\t\t\t\treturn _extends({}, state, (_extends2 = {}, _extends2[key] = groupByYear(state.SourceData[key], payload), _extends2));\n\t\t\tcase BY_MONTH:\n\t\t\t\treturn _extends({}, state, (_extends3 = {}, _extends3[key] = groupByMonth(state.SourceData[key], payload, state.FiscalYear[key], state.CalendarYear[key]), _extends3));\n\t\t\tdefault:\n\t\t\t\treturn state;\n\t\t}\n\t};\n\t\n\t/**\r\n\t * Set the most recent year available in our data\r\n\t * for Fiscal and Calendar year. Data is assumed to\r\n\t * be sorted descending by production date. If that changes\r\n\t * we should add a sort function.\r\n\t *\r\n\t * Fiscal Year is Oct (Year-1) to Sept (Year)\r\n\t * It is assumed if we have Sept data we have the fiscal year data\r\n\t * for that year.\r\n\t *\r\n\t * For Calendar Year it is assumed if we have Dec data we have \r\n\t * all data for that year\r\n\t **/\n\t\n\tvar getFiscalCalendarYear = function getFiscalCalendarYear(key, source, fiscalYear, calendarYear) {\n\t\tif (source === undefined) return { FiscalYear: undefined, CalendarYear: undefined };\n\t\n\t\tvar fiscalYearItem = source.find(function (item) {\n\t\t\treturn item.data.ProductionMonth === \"September\";\n\t\t});\n\t\tvar calendarYearItem = source.find(function (item) {\n\t\t\treturn item.data.ProductionMonth === \"December\";\n\t\t});\n\t\tfiscalYear[key] = fiscalYearItem && parseInt(fiscalYearItem.data.ProductionYear);\n\t\tcalendarYear[key] = calendarYearItem && parseInt(calendarYearItem.data.ProductionYear);\n\t\treturn { FiscalYear: fiscalYear,\n\t\t\tCalendarYear: calendarYear };\n\t};\n\t\n\t/** \r\n\t * \r\n\t * @returns {Object}\r\n\t **/\n\tvar groupByYear = function groupByYear(source, filter) {\n\t\tif (source === undefined) return source;\n\t\n\t\tvar displayNames = void 0;\n\t\tvar groupNames = void 0;\n\t\tvar results = Object.entries(_utils2.default.groupBy(source, \"data.ProductionYear\")).map(function (e) {\n\t\t\tvar _ref;\n\t\n\t\t\treturn _ref = {}, _ref[e[0]] = e[1], _ref;\n\t\t});\n\t\n\t\t// We assume if the data matches current year that we dont have the year of data, so we remove it\n\t\tvar currentYear = new Date().getFullYear();\n\t\tresults = results.filter(function (yearData) {\n\t\t\treturn parseInt(Object.keys(yearData)[0]) !== currentYear;\n\t\t});\n\t\n\t\tresults.sort(function (a, b) {\n\t\t\treturn a[Object.keys(a)[0]][0].data.ProductionYear - b[Object.keys(b)[0]][0].data.ProductionYear;\n\t\t});\n\t\n\t\tif (filter) {\n\t\n\t\t\t// Get display names before we filter the data.\n\t\t\tif (filter.displayName) {\n\t\t\t\tdisplayNames = {};\n\t\t\t\tresults.forEach(function (item) {\n\t\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayYear;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Set sub group name\n\t\t\tif (filter.subGroupName) {\n\t\t\t\tgroupNames = {};\n\t\t\t\tresults.map(function (item) {\n\t\t\t\t\tvar key = Object.keys(item)[0];\n\t\t\t\t\tif (groupNames[filter.subGroupName]) {\n\t\t\t\t\t\tgroupNames[filter.subGroupName].push(key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroupNames[filter.subGroupName] = [key];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Sum volume by data key and assign year key to the result\n\t\t\tif (filter.sumBy) {\n\t\t\t\tresults = results.map(function (yearData) {\n\t\t\t\t\tvar _ref2;\n\t\n\t\t\t\t\tvar year = Object.keys(yearData)[0];\n\t\t\t\t\tvar sums = [yearData[year].reduce(function (total, item) {\n\t\t\t\t\t\ttotal[item.data[filter.sumBy]] = total[item.data[filter.sumBy]] !== undefined ? total[item.data[filter.sumBy]] + item.data.Volume : item.data.Volume;\n\t\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}, {})];\n\t\n\t\t\t\t\treturn _ref2 = {}, _ref2[year] = sums, _ref2;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tif (filter.limit > 0) {\n\t\t\t\tresults.splice(0, results.length - filter.limit);\n\t\t\t}\n\t\t}\n\t\n\t\treturn { Data: results,\n\t\t\tProductName: source[0].data.ProductName,\n\t\t\tUnits: source[0].data.Units,\n\t\t\tLongUnits: source[0].data.LongUnits,\n\t\t\tDisplayNames: displayNames,\n\t\t\tGroupNames: groupNames };\n\t};\n\t\n\t/** \r\n\t * This data is sorted ascending by year already.\r\n\t * So an assumption is made on min and max numbers.\r\n\t * \r\n\t * Example format:\r\n\t * {\"Jan\": [{\"Federal onshore\": 100, \"Federal offshore\": 100, \"Native American\":90}]}\r\n\t **/\n\tvar groupByMonth = function groupByMonth(source, filter, fiscalYear, calendarYear) {\n\t\tif (source === undefined) return source;\n\t\n\t\tvar displayNames = void 0;\n\t\tvar groupNames = void 0;\n\t\tvar results = JSON.parse(JSON.stringify(source));\n\t\n\t\tif (filter.period === \"recent\" && filter.limit > 0) {\n\t\t\tvar resultsGroupedByDate = Object.entries(_utils2.default.groupBy(source, \"data.ProductionDate\")).map(function (e) {\n\t\t\t\tvar _ref3;\n\t\n\t\t\t\treturn _ref3 = {}, _ref3[e[0]] = e[1], _ref3;\n\t\t\t});\n\t\t\tvar resultsLimited = resultsGroupedByDate.splice(0, 12);\n\t\t\tresults = results.filter(function (monthData) {\n\t\t\t\treturn Object.keys(resultsLimited[resultsLimited.length - 1])[0] <= monthData.data.ProductionDate;\n\t\t\t});\n\t\t}\n\t\t// Fiscal Year is Oct (Year-1) to Sept (Year)\n\t\telse if (filter.period === \"fiscal\") {\n\t\t\t\tvar fiscalYearStart = results.find(function (item) {\n\t\t\t\t\treturn item.data.ProductionMonth === \"October\" && parseInt(item.data.ProductionYear) === fiscalYear - 1;\n\t\t\t\t});\n\t\n\t\t\t\tvar fiscalYearEnd = results.find(function (item) {\n\t\t\t\t\treturn item.data.ProductionMonth === \"September\" && parseInt(item.data.ProductionYear) === fiscalYear;\n\t\t\t\t});\n\t\n\t\t\t\tresults = results.filter(function (item) {\n\t\t\t\t\treturn new Date(item.data.ProductionDate) >= new Date(fiscalYearStart.data.ProductionDate) && new Date(item.data.ProductionDate) <= new Date(fiscalYearEnd.data.ProductionDate);\n\t\t\t\t});\n\t\t\t} else if (filter.period === \"calendar\") {\n\t\t\t\tresults = results.filter(function (item) {\n\t\t\t\t\treturn parseInt(item.data.ProductionYear) === calendarYear;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\tresults = Object.entries(_utils2.default.groupBy(results, \"data.ProductionMonth\")).map(function (e) {\n\t\t\tvar _ref4;\n\t\n\t\t\treturn _ref4 = {}, _ref4[e[0]] = e[1], _ref4;\n\t\t});\n\t\n\t\t// Sort ascending by production date\n\t\tresults.sort(function (a, b) {\n\t\t\tvar aDate = new Date(a[Object.keys(a)[0]][0].data.ProductionDate);\n\t\t\tvar bDate = new Date(b[Object.keys(b)[0]][0].data.ProductionDate);\n\t\t\treturn aDate < bDate ? -1 : aDate == bDate ? 0 : 1;\n\t\t});\n\t\n\t\tif (filter) {\n\t\n\t\t\t// Get display names before we filter the data.\n\t\t\tif (filter.displayName) {\n\t\t\t\tdisplayNames = {};\n\t\t\t\tresults.forEach(function (item) {\n\t\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayMonth;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Get group names before we filter the data.\n\t\t\tif (filter.subGroup) {\n\t\t\t\tgroupNames = {};\n\t\t\t\tresults.map(function (item) {\n\t\t\t\t\tvar key = Object.keys(item)[0];\n\t\t\t\t\tvar name = item[key][0].data[filter.subGroup];\n\t\t\t\t\tif (groupNames[name]) {\n\t\t\t\t\t\tgroupNames[name].push(key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroupNames[name] = [key];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Sum volume by data key and assign month key to the result\n\t\t\tif (filter.sumBy) {\n\t\t\t\tresults = results.map(function (monthData) {\n\t\t\t\t\tvar _ref5;\n\t\n\t\t\t\t\tvar month = Object.keys(monthData)[0];\n\t\t\t\t\tvar sums = [monthData[month].reduce(function (total, item) {\n\t\n\t\t\t\t\t\ttotal[item.data[filter.sumBy]] = total[item.data[filter.sumBy]] !== undefined ? total[item.data[filter.sumBy]] + item.data.Volume : item.data.Volume;\n\t\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}, {})];\n\t\n\t\t\t\t\treturn _ref5 = {}, _ref5[month] = sums, _ref5;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\n\t\treturn { Data: results,\n\t\t\tProductName: source[0].data.ProductName,\n\t\t\tUnits: source[0].data.Units,\n\t\t\tLongUnits: source[0].data.LongUnits,\n\t\t\tDisplayNames: displayNames,\n\t\t\tGroupNames: groupNames };\n\t};\n\n/***/ }),\n\n/***/ 154:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.byMonth = exports.byYear = exports.hydrate = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _FiscalYear, _CalendarYear, _SourceData, _initialState;\n\t\n\tvar _constants = __webpack_require__(53);\n\t\n\tvar _constants2 = _interopRequireDefault(_constants);\n\t\n\tvar _utils = __webpack_require__(13);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar initialState = (_initialState = {\n\t\tFiscalYear: (_FiscalYear = {}, _FiscalYear[_constants2.default.REVENUES_ALL_KEY] = undefined, _FiscalYear),\n\t\tCalendarYear: (_CalendarYear = {}, _CalendarYear[_constants2.default.REVENUES_ALL_KEY] = undefined, _CalendarYear),\n\t\tSourceData: (_SourceData = {}, _SourceData[_constants2.default.REVENUES_ALL_KEY] = undefined, _SourceData)\n\t}, _initialState[_constants2.default.REVENUES_ALL_KEY] = undefined, _initialState);\n\t\n\t// Define Action Types\n\tvar HYDRATE = 'HYDRATE_REVENUES';\n\tvar BY_YEAR = 'BY_YEAR_REVENUES';\n\tvar BY_MONTH = 'BY_MONTH_REVENUES';\n\t\n\t// Define Action Creators \n\tvar hydrate = exports.hydrate = function hydrate(key, data) {\n\t\treturn { type: HYDRATE, payload: data, key: key };\n\t};\n\tvar byYear = exports.byYear = function byYear(key, filter) {\n\t\treturn { type: BY_YEAR, payload: filter, key: key };\n\t};\n\tvar byMonth = exports.byMonth = function byMonth(key, filter) {\n\t\treturn { type: BY_MONTH, payload: filter, key: key };\n\t};\n\t\n\t// Define Reducers\n\t\n\texports.default = function () {\n\t\tvar _extends2, _extends3;\n\t\n\t\tvar state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\t\tvar action = arguments[1];\n\t\tvar type = action.type,\n\t\t    payload = action.payload,\n\t\t    key = action.key;\n\t\t//console.log(state);\n\t\n\t\tswitch (type) {\n\t\t\tcase HYDRATE:\n\t\t\t\tvar SourceData = state.SourceData,\n\t\t\t\t    FiscalYear = state.FiscalYear,\n\t\t\t\t    CalendarYear = state.CalendarYear;\n\t\n\t\t\t\tSourceData[key] = payload;\n\t\t\t\treturn _extends({}, state, getFiscalCalendarYear(key, payload, FiscalYear, CalendarYear), { SourceData: SourceData });\n\t\t\tcase BY_YEAR:\n\t\t\t\treturn _extends({}, state, (_extends2 = {}, _extends2[key] = groupByYear(state.SourceData[key], payload), _extends2));\n\t\t\tcase BY_MONTH:\n\t\t\t\treturn _extends({}, state, (_extends3 = {}, _extends3[key] = groupByMonth(state.SourceData[key], payload, state.FiscalYear[key], state.CalendarYear[key]), _extends3));\n\t\t\tdefault:\n\t\t\t\treturn state;\n\t\t}\n\t};\n\t\n\t/**\r\n\t * Set the most recent year available in our data\r\n\t * for Fiscal and Calendar year. Data is assumed to\r\n\t * be sorted descending by production date. If that changes\r\n\t * we should add a sort function.\r\n\t *\r\n\t * Fiscal Year is Oct (Year-1) to Sept (Year)\r\n\t * It is assumed if we have Sept data we have the fiscal year data\r\n\t * for that year.\r\n\t *\r\n\t * For Calendar Year it is assumed if we have Dec data we have \r\n\t * all data for that year\r\n\t **/\n\t\n\tvar getFiscalCalendarYear = function getFiscalCalendarYear(key, source, fiscalYear, calendarYear) {\n\t\tif (source === undefined) return { FiscalYear: undefined, CalendarYear: undefined };\n\t\n\t\tvar fiscalYearItem = source.find(function (item) {\n\t\t\treturn item.data.RevenueMonth === \"September\";\n\t\t});\n\t\tvar calendarYearItem = source.find(function (item) {\n\t\t\treturn item.data.RevenueMonth === \"December\";\n\t\t});\n\t\tfiscalYear[key] = fiscalYearItem && parseInt(fiscalYearItem.data.RevenueYear);\n\t\tcalendarYear[key] = calendarYearItem && parseInt(calendarYearItem.data.RevenueYear);\n\t\treturn { FiscalYear: fiscalYear,\n\t\t\tCalendarYear: calendarYear };\n\t};\n\t\n\t/** \r\n\t * \r\n\t * @returns {Object}\r\n\t **/\n\tvar groupByYear = function groupByYear(source, filter) {\n\t\tif (source === undefined) return source;\n\t\n\t\tvar displayNames = void 0;\n\t\tvar groupNames = void 0;\n\t\tvar results = Object.entries(_utils2.default.groupBy(source, \"data.RevenueYear\")).map(function (e) {\n\t\t\tvar _ref;\n\t\n\t\t\treturn _ref = {}, _ref[e[0]] = e[1], _ref;\n\t\t});\n\t\n\t\t// We assume if the data matches current year that we dont have the year of data, so we remove it\n\t\tvar currentYear = new Date().getFullYear();\n\t\tresults = results.filter(function (yearData) {\n\t\t\treturn parseInt(Object.keys(yearData)[0]) !== currentYear;\n\t\t});\n\t\n\t\tresults.sort(function (a, b) {\n\t\t\treturn a[Object.keys(a)[0]][0].data.RevenueYear - b[Object.keys(b)[0]][0].data.RevenueYear;\n\t\t});\n\t\n\t\tif (filter) {\n\t\n\t\t\t// Get display names before we filter the data.\n\t\t\tif (filter.displayName) {\n\t\t\t\tdisplayNames = {};\n\t\t\t\tresults.forEach(function (item) {\n\t\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayYear;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Set sub group name\n\t\t\tif (filter.subGroupName) {\n\t\t\t\tgroupNames = {};\n\t\t\t\tresults.map(function (item) {\n\t\t\t\t\tvar key = Object.keys(item)[0];\n\t\t\t\t\tif (groupNames[filter.subGroupName]) {\n\t\t\t\t\t\tgroupNames[filter.subGroupName].push(key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroupNames[filter.subGroupName] = [key];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Sum volume by data key and assign year key to the result\n\t\t\tif (filter.sumBy) {\n\t\t\t\tresults = results.map(function (yearData) {\n\t\t\t\t\tvar _ref2;\n\t\n\t\t\t\t\tvar year = Object.keys(yearData)[0];\n\t\t\t\t\tvar sums = [yearData[year].reduce(function (total, item) {\n\t\t\t\t\t\ttotal[item.data[filter.sumBy]] = total[item.data[filter.sumBy]] !== undefined ? total[item.data[filter.sumBy]] + item.data.Revenue : item.data.Revenue;\n\t\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}, {})];\n\t\n\t\t\t\t\treturn _ref2 = {}, _ref2[year] = sums, _ref2;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tif (filter.limit > 0) {\n\t\t\t\tresults.splice(0, results.length - filter.limit);\n\t\t\t}\n\t\t}\n\t\n\t\treturn { Data: results,\n\t\t\tUnits: \"$\",\n\t\t\tLongUnits: \"dollars\",\n\t\t\tDisplayNames: displayNames,\n\t\t\tGroupNames: groupNames };\n\t};\n\t\n\t/** \r\n\t * \r\n\t * Example format:\r\n\t * {\"Jan\": [{\"Federal onshore\": 100, \"Federal offshore\": 100, \"Native American\":90}]}\r\n\t **/\n\tvar groupByMonth = function groupByMonth(source, filter, fiscalYear, calendarYear) {\n\t\tif (source === undefined) return source;\n\t\n\t\tvar displayNames = void 0;\n\t\tvar groupNames = void 0;\n\t\tvar results = JSON.parse(JSON.stringify(source));\n\t\n\t\tif (filter.period === \"recent\" && filter.limit > 0) {\n\t\t\tvar resultsGroupedByDate = Object.entries(_utils2.default.groupBy(source, \"data.RevenueDate\")).map(function (e) {\n\t\t\t\tvar _ref3;\n\t\n\t\t\t\treturn _ref3 = {}, _ref3[e[0]] = e[1], _ref3;\n\t\t\t});\n\t\t\tvar resultsLimited = resultsGroupedByDate.splice(0, 12);\n\t\t\tresults = results.filter(function (monthData) {\n\t\t\t\treturn Object.keys(resultsLimited[resultsLimited.length - 1])[0] <= monthData.data.RevenueDate;\n\t\t\t});\n\t\t}\n\t\t// Fiscal Year is Oct (Year-1) to Sept (Year)\n\t\telse if (filter.period === \"fiscal\") {\n\t\t\t\tvar fiscalYearStart = results.find(function (item) {\n\t\t\t\t\treturn item.data.RevenueMonth === \"October\" && parseInt(item.data.RevenueYear) === fiscalYear - 1;\n\t\t\t\t});\n\t\n\t\t\t\tvar fiscalYearEnd = results.find(function (item) {\n\t\t\t\t\treturn item.data.RevenueMonth === \"September\" && parseInt(item.data.RevenueYear) === fiscalYear;\n\t\t\t\t});\n\t\n\t\t\t\tresults = results.filter(function (item) {\n\t\t\t\t\treturn new Date(item.data.RevenueDate) >= new Date(fiscalYearStart.data.RevenueDate) && new Date(item.data.RevenueDate) <= new Date(fiscalYearEnd.data.RevenueDate);\n\t\t\t\t});\n\t\t\t} else if (filter.period === \"calendar\") {\n\t\t\t\tresults = results.filter(function (item) {\n\t\t\t\t\treturn parseInt(item.data.RevenueYear) === calendarYear;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\tresults = Object.entries(_utils2.default.groupBy(results, \"data.RevenueMonth\")).map(function (e) {\n\t\t\tvar _ref4;\n\t\n\t\t\treturn _ref4 = {}, _ref4[e[0]] = e[1], _ref4;\n\t\t});\n\t\n\t\t// Sort ascending by production date\n\t\tresults.sort(function (a, b) {\n\t\t\tvar aDate = new Date(a[Object.keys(a)[0]][0].data.RevenueDate);\n\t\t\tvar bDate = new Date(b[Object.keys(b)[0]][0].data.RevenueDate);\n\t\t\treturn aDate < bDate ? -1 : aDate == bDate ? 0 : 1;\n\t\t});\n\t\n\t\tif (filter) {\n\t\n\t\t\t// Get display names before we filter the data.\n\t\t\tif (filter.displayName) {\n\t\t\t\tdisplayNames = {};\n\t\t\t\tresults.forEach(function (item) {\n\t\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayMonth;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Get group names before we filter the data.\n\t\t\tif (filter.subGroup) {\n\t\t\t\tgroupNames = {};\n\t\t\t\tresults.map(function (item) {\n\t\t\t\t\tvar key = Object.keys(item)[0];\n\t\t\t\t\tvar name = item[key][0].data[filter.subGroup];\n\t\t\t\t\tif (groupNames[name]) {\n\t\t\t\t\t\tgroupNames[name].push(key);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgroupNames[name] = [key];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Sum volume by data key and assign month key to the result\n\t\t\tif (filter.sumBy) {\n\t\t\t\tresults = results.map(function (monthData) {\n\t\t\t\t\tvar _ref5;\n\t\n\t\t\t\t\tvar month = Object.keys(monthData)[0];\n\t\t\t\t\tvar sums = [monthData[month].reduce(function (total, item) {\n\t\n\t\t\t\t\t\ttotal[item.data[filter.sumBy]] = total[item.data[filter.sumBy]] !== undefined ? total[item.data[filter.sumBy]] + item.data.Revenue : item.data.Revenue;\n\t\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}, {})];\n\t\n\t\t\t\t\treturn _ref5 = {}, _ref5[month] = sums, _ref5;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\n\t\treturn { Data: results,\n\t\t\tUnits: \"$\",\n\t\t\tLongUnits: \"dollars\",\n\t\t\tDisplayNames: displayNames,\n\t\t\tGroupNames: groupNames };\n\t};\n\n/***/ }),\n\n/***/ 500:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRouterDom = __webpack_require__(144);\n\t\n\tvar _reactRedux = __webpack_require__(43);\n\t\n\tvar _createStore = __webpack_require__(498);\n\t\n\tvar _createStore2 = _interopRequireDefault(_createStore);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// eslint-disable-next-line react/display-name,react/prop-types\n\t/**\r\n\t * Enable Redux in gatsby\r\n\t * https://github.com/gatsbyjs/gatsby/tree/master/examples/using-redux\r\n\t **/\n\t\n\texports.default = function (_ref) {\n\t    var history = _ref.history;\n\t\n\t    var store = (0, _createStore2.default)();\n\t\n\t    var ConnectedRouterWrapper = function ConnectedRouterWrapper(_ref2) {\n\t        var children = _ref2.children;\n\t\n\t        return _react2.default.createElement(\n\t            _reactRedux.Provider,\n\t            { store: store },\n\t            _react2.default.createElement(\n\t                _reactRouterDom.Router,\n\t                { history: history },\n\t                children\n\t            )\n\t        );\n\t    };\n\t\n\t    return ConnectedRouterWrapper;\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// app-cea8733f45266d123bdf.js","var plugins = [{\n      plugin: require('C:/Development/doi-extractives-data/gatsby-site/node_modules/gatsby-remark-autolink-headers/gatsby-browser'),\n      options: {\"plugins\":[]},\n    },{\n      plugin: require('C:/Development/doi-extractives-data/gatsby-site/gatsby-browser'),\n      options: {\"plugins\":[]},\n    }]\n// During bootstrap, we write requires at top of this file which looks\n// basically like:\n// var plugins = [\n//   {\n//     plugin: require(\"/path/to/plugin1/gatsby-browser.js\"),\n//     options: { ... },\n//   },\n//   {\n//     plugin: require(\"/path/to/plugin2/gatsby-browser.js\"),\n//     options: { ... },\n//   },\n// ]\n\nexport function apiRunner(api, args, defaultReturn) {\n  let results = plugins.map(plugin => {\n    if (plugin.plugin[api]) {\n      const result = plugin.plugin[api](args, plugin.options)\n      return result\n    }\n  })\n\n  // Filter out undefined results.\n  results = results.filter(result => typeof result !== `undefined`)\n\n  if (results.length > 0) {\n    return results\n  } else if (defaultReturn) {\n    return [defaultReturn]\n  } else {\n    return []\n  }\n}\n\nexport function apiRunnerAsync(api, args, defaultReturn) {\n  return plugins.reduce(\n    (previous, next) =>\n      next.plugin[api]\n        ? previous.then(() => next.plugin[api](args, next.options))\n        : previous,\n    Promise.resolve()\n  )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/api-runner-browser.js","// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\nexports.components = {\n  \"component---src-pages-404-js\": require(\"gatsby-module-loader?name=component---src-pages-404-js!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\src\\\\pages\\\\404.js\"),\n  \"component---src-pages-about-index-js\": require(\"gatsby-module-loader?name=component---src-pages-about-index-js!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\src\\\\pages\\\\about\\\\index.js\"),\n  \"component---src-pages-explore-index-js\": require(\"gatsby-module-loader?name=component---src-pages-explore-index-js!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\src\\\\pages\\\\explore\\\\index.js\"),\n  \"component---src-pages-index-js\": require(\"gatsby-module-loader?name=component---src-pages-index-js!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\src\\\\pages\\\\index.js\")\n}\n\nexports.json = {\n  \"layout-index.json\": require(\"gatsby-module-loader?name=path---!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\layout-index.json\"),\n  \"404.json\": require(\"gatsby-module-loader?name=path---404!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\404.json\"),\n  \"about.json\": require(\"gatsby-module-loader?name=path---about!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\about.json\"),\n  \"explore.json\": require(\"gatsby-module-loader?name=path---explore!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\explore.json\"),\n  \"index.json\": require(\"gatsby-module-loader?name=path---index!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\index.json\"),\n  \"404-html.json\": require(\"gatsby-module-loader?name=path---404-html!C:\\\\Development\\\\doi-extractives-data\\\\gatsby-site\\\\.cache\\\\json\\\\404-html.json\")\n}\n\nexports.layouts = {\n  \"layout---index\": require(\"gatsby-module-loader?name=component---src-layouts-index-js!C:/Development/doi-extractives-data/gatsby-site/.cache/layouts/index.js\")\n}\n\n\n// WEBPACK FOOTER //\n// ./.cache/async-requires.js","import React, { createElement } from \"react\"\nimport PropTypes from \"prop-types\"\nimport loader, { publicLoader } from \"./loader\"\nimport emitter from \"./emitter\"\nimport { apiRunner } from \"./api-runner-browser\"\nimport shallowCompare from \"shallow-compare\"\n\nconst DefaultLayout = ({ children }) => <div>{children()}</div>\n\n// Pass pathname in as prop.\n// component will try fetching resources. If they exist,\n// will just render, else will render null.\nclass ComponentRenderer extends React.Component {\n  constructor(props) {\n    super()\n    let location = props.location\n\n    // Set the pathname for 404 pages.\n    if (!loader.getPage(location.pathname)) {\n      location = Object.assign({}, location, {\n        pathname: `/404.html`,\n      })\n    }\n\n    this.state = {\n      location,\n      pageResources: loader.getResourcesForPathname(location.pathname),\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // During development, always pass a component's JSON through so graphql\n    // updates go through.\n    if (process.env.NODE_ENV !== `production`) {\n      if (\n        nextProps &&\n        nextProps.pageResources &&\n        nextProps.pageResources.json\n      ) {\n        this.setState({ pageResources: nextProps.pageResources })\n      }\n    }\n    if (this.state.location.pathname !== nextProps.location.pathname) {\n      const pageResources = loader.getResourcesForPathname(\n        nextProps.location.pathname\n      )\n      if (!pageResources) {\n        let location = nextProps.location\n\n        // Set the pathname for 404 pages.\n        if (!loader.getPage(location.pathname)) {\n          location = Object.assign({}, location, {\n            pathname: `/404.html`,\n          })\n        }\n\n        // Page resources won't be set in cases where the browser back button\n        // or forward button is pushed as we can't wait as normal for resources\n        // to load before changing the page.\n        loader.getResourcesForPathname(location.pathname, pageResources => {\n          this.setState({\n            location,\n            pageResources,\n          })\n        })\n      } else {\n        this.setState({\n          location: nextProps.location,\n          pageResources,\n        })\n      }\n    }\n  }\n\n  componentDidMount() {\n    // Listen to events so when our page gets updated, we can transition.\n    // This is only useful on delayed transitions as the page will get rendered\n    // without the necessary page resources and then re-render once those come in.\n    emitter.on(`onPostLoadPageResources`, e => {\n      if (\n        loader.getPage(this.state.location.pathname) &&\n        e.page.path === loader.getPage(this.state.location.pathname).path\n      ) {\n        this.setState({ pageResources: e.pageResources })\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // 404\n    if (!nextState.pageResources) {\n      return true\n    }\n    // Check if the component or json have changed.\n    if (!this.state.pageResources && nextState.pageResources) {\n      return true\n    }\n    if (\n      this.state.pageResources.component !== nextState.pageResources.component\n    ) {\n      return true\n    }\n\n    if (this.state.pageResources.json !== nextState.pageResources.json) {\n      return true\n    }\n\n    // Check if location has changed on a page using internal routing\n    // via matchPath configuration.\n    if (\n      this.state.location.key !== nextState.location.key &&\n      nextState.pageResources.page &&\n      (nextState.pageResources.page.matchPath ||\n        nextState.pageResources.page.path)\n    ) {\n      return true\n    }\n\n    return shallowCompare(this, nextProps, nextState)\n  }\n\n  render() {\n    const pluginResponses = apiRunner(`replaceComponentRenderer`, {\n      props: { ...this.props, pageResources: this.state.pageResources },\n      loader: publicLoader,\n    })\n    const replacementComponent = pluginResponses[0]\n    // If page.\n    if (this.props.page) {\n      if (this.state.pageResources) {\n        return (\n          replacementComponent ||\n          createElement(this.state.pageResources.component, {\n            key: this.props.location.pathname,\n            ...this.props,\n            ...this.state.pageResources.json,\n          })\n        )\n      } else {\n        return null\n      }\n      // If layout.\n    } else if (this.props.layout) {\n      return (\n        replacementComponent ||\n        createElement(\n          this.state.pageResources && this.state.pageResources.layout\n            ? this.state.pageResources.layout\n            : DefaultLayout,\n          {\n            key:\n              this.state.pageResources && this.state.pageResources.layout\n                ? this.state.pageResources.layout\n                : `DefaultLayout`,\n            ...this.props,\n          }\n        )\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nComponentRenderer.propTypes = {\n  page: PropTypes.bool,\n  layout: PropTypes.bool,\n  location: PropTypes.object,\n}\n\nexport default ComponentRenderer\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/component-renderer.js","import mitt from \"mitt\"\nconst emitter = mitt()\nmodule.exports = emitter\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/emitter.js","// TODO add tests especially for handling prefixed links.\nimport { matchPath } from \"react-router-dom\"\nimport stripPrefix from \"./strip-prefix\"\n\nconst pageCache = {}\n\nmodule.exports = (pages, pathPrefix = ``) => rawPathname => {\n  let pathname = decodeURIComponent(rawPathname)\n\n  // Remove the pathPrefix from the pathname.\n  let trimmedPathname = stripPrefix(pathname, pathPrefix)\n\n  // Remove any hashfragment\n  if (trimmedPathname.split(`#`).length > 1) {\n    trimmedPathname = trimmedPathname\n      .split(`#`)\n      .slice(0, -1)\n      .join(``)\n  }\n\n  // Remove search query\n  if (trimmedPathname.split(`?`).length > 1) {\n    trimmedPathname = trimmedPathname\n      .split(`?`)\n      .slice(0, -1)\n      .join(``)\n  }\n\n  if (pageCache[trimmedPathname]) {\n    return pageCache[trimmedPathname]\n  }\n\n  let foundPage\n  // Array.prototype.find is not supported in IE so we use this somewhat odd\n  // work around.\n  pages.some(page => {\n    if (page.matchPath) {\n      // Try both the path and matchPath\n      if (\n        matchPath(trimmedPathname, { path: page.path }) ||\n        matchPath(trimmedPathname, {\n          path: page.matchPath,\n        })\n      ) {\n        foundPage = page\n        pageCache[trimmedPathname] = page\n        return true\n      }\n    } else {\n      if (\n        matchPath(trimmedPathname, {\n          path: page.path,\n          exact: true,\n        })\n      ) {\n        foundPage = page\n        pageCache[trimmedPathname] = page\n        return true\n      }\n\n      // Finally, try and match request with default document.\n      if (\n        matchPath(trimmedPathname, {\n          path: page.path + `index.html`,\n        })\n      ) {\n        foundPage = page\n        pageCache[trimmedPathname] = page\n        return true\n      }\n    }\n\n    return false\n  })\n\n  return foundPage\n}\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/find-page.js","import createHistory from \"history/createBrowserHistory\"\nimport { apiRunner } from \"./api-runner-browser\"\n\nconst pluginResponses = apiRunner(`replaceHistory`)\nconst replacementHistory = pluginResponses[0]\nconst history = replacementHistory || createHistory()\nmodule.exports = history\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/history.js","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./404-html.json\") })\n        }\n      }, \"path---404-html\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---404-html!./.cache/json/404-html.json\n// module id = 800\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./404.json\") })\n        }\n      }, \"path---404\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---404!./.cache/json/404.json\n// module id = 799\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./about.json\") })\n        }\n      }, \"path---about\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---about!./.cache/json/about.json\n// module id = 801\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./explore.json\") })\n        }\n      }, \"path---explore\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---explore!./.cache/json/explore.json\n// module id = 802\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./index.json\") })\n        }\n      }, \"path---index\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---index!./.cache/json/index.json\n// module id = 803\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/json-loader/index.js!./layout-index.json\") })\n        }\n      }, \"path---\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=path---!./.cache/json/layout-index.json\n// module id = 798\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\gatsby\\\\\\\\dist\\\\\\\\utils\\\\\\\\babel-plugin-extract-graphql.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-add-module-exports\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-transform-object-assign\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"presets\\\":[[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-env\\\\\\\\lib\\\\\\\\index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-stage-0\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-react\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"cacheDirectory\\\":true}!./index.js\") })\n        }\n      }, \"component---src-layouts-index-js\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=component---src-layouts-index-js!./.cache/layouts/index.js\n// module id = 793\n// module chunks = 231608221292675","import React, { createElement } from \"react\"\nimport pageFinderFactory from \"./find-page\"\nimport emitter from \"./emitter\"\nimport stripPrefix from \"./strip-prefix\"\nlet findPage\n\nlet syncRequires = {}\nlet asyncRequires = {}\nlet pathScriptsCache = {}\nlet resourceStrCache = {}\nlet resourceCache = {}\nlet pages = []\n// Note we're not actively using the path data atm. There\n// could be future optimizations however around trying to ensure\n// we load all resources for likely-to-be-visited paths.\nlet pathArray = []\nlet pathCount = {}\nlet pathPrefix = ``\nlet resourcesArray = []\nlet resourcesCount = {}\nconst preferDefault = m => (m && m.default) || m\nlet prefetcher\nlet inInitialRender = true\nlet fetchHistory = []\nconst failedPaths = {}\nconst failedResources = {}\nconst MAX_HISTORY = 5\n\n// Prefetcher logic\nif (process.env.NODE_ENV === `production`) {\n  prefetcher = require(`./prefetcher`)({\n    getNextQueuedResources: () => resourcesArray.slice(-1)[0],\n    createResourceDownload: resourceName => {\n      fetchResource(resourceName, () => {\n        resourcesArray = resourcesArray.filter(r => r !== resourceName)\n        prefetcher.onResourcedFinished(resourceName)\n      })\n    },\n  })\n  emitter.on(`onPreLoadPageResources`, e => {\n    prefetcher.onPreLoadPageResources(e)\n  })\n  emitter.on(`onPostLoadPageResources`, e => {\n    prefetcher.onPostLoadPageResources(e)\n  })\n}\n\nconst sortResourcesByCount = (a, b) => {\n  if (resourcesCount[a] > resourcesCount[b]) {\n    return 1\n  } else if (resourcesCount[a] < resourcesCount[b]) {\n    return -1\n  } else {\n    return 0\n  }\n}\n\nconst sortPagesByCount = (a, b) => {\n  if (pathCount[a] > pathCount[b]) {\n    return 1\n  } else if (pathCount[a] < pathCount[b]) {\n    return -1\n  } else {\n    return 0\n  }\n}\n\nconst fetchResource = (resourceName, cb = () => {}) => {\n  if (resourceStrCache[resourceName]) {\n    process.nextTick(() => {\n      cb(null, resourceStrCache[resourceName])\n    })\n  } else {\n    // Find resource\n    let resourceFunction\n    if (resourceName.slice(0, 12) === `component---`) {\n      resourceFunction = asyncRequires.components[resourceName]\n    } else if (resourceName.slice(0, 9) === `layout---`) {\n      resourceFunction = asyncRequires.layouts[resourceName]\n    } else {\n      resourceFunction = asyncRequires.json[resourceName]\n    }\n\n    // Download the resource\n    resourceFunction((err, executeChunk) => {\n      resourceStrCache[resourceName] = executeChunk\n      fetchHistory.push({\n        resource: resourceName,\n        succeeded: !err,\n      })\n\n      if (!failedResources[resourceName]) {\n        failedResources[resourceName] = err\n      }\n\n      fetchHistory = fetchHistory.slice(-MAX_HISTORY)\n      cb(err, executeChunk)\n    })\n  }\n}\n\nconst getResourceModule = (resourceName, cb) => {\n  if (resourceCache[resourceName]) {\n    process.nextTick(() => {\n      cb(null, resourceCache[resourceName])\n    })\n  } else if (failedResources[resourceName]) {\n    process.nextTick(() => {\n      cb(failedResources[resourceName])\n    })\n  } else {\n    fetchResource(resourceName, (err, executeChunk) => {\n      if (err) {\n        cb(err)\n      } else {\n        const module = preferDefault(executeChunk())\n        resourceCache[resourceName] = module\n        cb(err, module)\n      }\n    })\n  }\n}\n\nconst appearsOnLine = () => {\n  const isOnLine = navigator.onLine\n  if (typeof isOnLine === `boolean`) {\n    return isOnLine\n  }\n\n  // If no navigator.onLine support assume onLine if any of last N fetches succeeded\n  const succeededFetch = fetchHistory.find(entry => entry.succeeded)\n  return !!succeededFetch\n}\n\nconst handleResourceLoadError = (path, message) => {\n  console.log(message)\n\n  if (!failedPaths[path]) {\n    failedPaths[path] = message\n  }\n\n  if (\n    appearsOnLine() &&\n    window.location.pathname.replace(/\\/$/g, ``) !== path.replace(/\\/$/g, ``)\n  ) {\n    window.location.pathname = path\n  }\n}\n\nlet mountOrder = 1\nconst queue = {\n  empty: () => {\n    pathArray = []\n    pathCount = {}\n    resourcesCount = {}\n    resourcesArray = []\n    pages = []\n    pathPrefix = ``\n  },\n  addPagesArray: newPages => {\n    pages = newPages\n    if (\n      typeof __PREFIX_PATHS__ !== `undefined` &&\n      typeof __PATH_PREFIX__ !== `undefined`\n    ) {\n      if (__PREFIX_PATHS__ === true) pathPrefix = __PATH_PREFIX__\n    }\n    findPage = pageFinderFactory(newPages, pathPrefix)\n  },\n  addDevRequires: devRequires => {\n    syncRequires = devRequires\n  },\n  addProdRequires: prodRequires => {\n    asyncRequires = prodRequires\n  },\n  dequeue: () => pathArray.pop(),\n  enqueue: rawPath => {\n    // Check page exists.\n    const path = stripPrefix(rawPath, pathPrefix)\n    if (!pages.some(p => p.path === path)) {\n      return false\n    }\n\n    const mountOrderBoost = 1 / mountOrder\n    mountOrder += 1\n    // console.log(\n    // `enqueue \"${path}\", mountOrder: \"${mountOrder}, mountOrderBoost: ${mountOrderBoost}`\n    // )\n\n    // Add to path counts.\n    if (!pathCount[path]) {\n      pathCount[path] = 1\n    } else {\n      pathCount[path] += 1\n    }\n\n    // Add path to queue.\n    if (!queue.has(path)) {\n      pathArray.unshift(path)\n    }\n\n    // Sort pages by pathCount\n    pathArray.sort(sortPagesByCount)\n\n    // Add resources to queue.\n    const page = findPage(path)\n    if (page.jsonName) {\n      if (!resourcesCount[page.jsonName]) {\n        resourcesCount[page.jsonName] = 1 + mountOrderBoost\n      } else {\n        resourcesCount[page.jsonName] += 1 + mountOrderBoost\n      }\n\n      // Before adding, checking that the JSON resource isn't either\n      // already queued or been downloading.\n      if (\n        resourcesArray.indexOf(page.jsonName) === -1 &&\n        !resourceStrCache[page.jsonName]\n      ) {\n        resourcesArray.unshift(page.jsonName)\n      }\n    }\n    if (page.componentChunkName) {\n      if (!resourcesCount[page.componentChunkName]) {\n        resourcesCount[page.componentChunkName] = 1 + mountOrderBoost\n      } else {\n        resourcesCount[page.componentChunkName] += 1 + mountOrderBoost\n      }\n\n      // Before adding, checking that the component resource isn't either\n      // already queued or been downloading.\n      if (\n        resourcesArray.indexOf(page.componentChunkName) === -1 &&\n        !resourceStrCache[page.jsonName]\n      ) {\n        resourcesArray.unshift(page.componentChunkName)\n      }\n    }\n\n    // Sort resources by resourcesCount.\n    resourcesArray.sort(sortResourcesByCount)\n    if (process.env.NODE_ENV === `production`) {\n      prefetcher.onNewResourcesAdded()\n    }\n\n    return true\n  },\n  getResources: () => {\n    return {\n      resourcesArray,\n      resourcesCount,\n    }\n  },\n  getPages: () => {\n    return {\n      pathArray,\n      pathCount,\n    }\n  },\n  getPage: pathname => findPage(pathname),\n  has: path => pathArray.some(p => p === path),\n  getResourcesForPathname: (path, cb = () => {}) => {\n    if (\n      inInitialRender &&\n      navigator &&\n      navigator.serviceWorker &&\n      navigator.serviceWorker.controller &&\n      navigator.serviceWorker.controller.state === `activated`\n    ) {\n      // If we're loading from a service worker (it's already activated on\n      // this initial render) and we can't find a page, there's a good chance\n      // we're on a new page that this (now old) service worker doesn't know\n      // about so we'll unregister it and reload.\n      if (!findPage(path)) {\n        navigator.serviceWorker\n          .getRegistrations()\n          .then(function(registrations) {\n            // We would probably need this to\n            // prevent unnecessary reloading of the page\n            // while unregistering of ServiceWorker is not happening\n            if (registrations.length) {\n              for (let registration of registrations) {\n                registration.unregister()\n              }\n              window.location.reload()\n            }\n          })\n      }\n    }\n    inInitialRender = false\n    // In development we know the code is loaded already\n    // so we just return with it immediately.\n    if (process.env.NODE_ENV !== `production`) {\n      const page = findPage(path)\n      if (!page) return cb()\n      const pageResources = {\n        component: syncRequires.components[page.componentChunkName],\n        json: syncRequires.json[page.jsonName],\n        layout: syncRequires.layouts[page.layout],\n        page,\n      }\n      cb(pageResources)\n      return pageResources\n      // Production code path\n    } else {\n      if (failedPaths[path]) {\n        handleResourceLoadError(\n          path,\n          `Previously detected load failure for \"${path}\"`\n        )\n\n        return cb()\n      }\n\n      const page = findPage(path)\n\n      if (!page) {\n        handleResourceLoadError(path, `A page wasn't found for \"${path}\"`)\n\n        return cb()\n      }\n\n      // Use the path from the page so the pathScriptsCache uses\n      // the normalized path.\n      path = page.path\n\n      // Check if it's in the cache already.\n      if (pathScriptsCache[path]) {\n        process.nextTick(() => {\n          cb(pathScriptsCache[path])\n          emitter.emit(`onPostLoadPageResources`, {\n            page,\n            pageResources: pathScriptsCache[path],\n          })\n        })\n        return pathScriptsCache[path]\n      }\n\n      emitter.emit(`onPreLoadPageResources`, { path })\n      // Nope, we need to load resource(s)\n      let component\n      let json\n      let layout\n      // Load the component/json/layout and parallel and call this\n      // function when they're done loading. When both are loaded,\n      // we move on.\n      const done = () => {\n        if (component && json && (!page.layoutComponentChunkName || layout)) {\n          pathScriptsCache[path] = { component, json, layout, page }\n          const pageResources = { component, json, layout, page }\n          cb(pageResources)\n          emitter.emit(`onPostLoadPageResources`, {\n            page,\n            pageResources,\n          })\n        }\n      }\n      getResourceModule(page.componentChunkName, (err, c) => {\n        if (err) {\n          handleResourceLoadError(\n            page.path,\n            `Loading the component for ${page.path} failed`\n          )\n        }\n        component = c\n        done()\n      })\n      getResourceModule(page.jsonName, (err, j) => {\n        if (err) {\n          handleResourceLoadError(\n            page.path,\n            `Loading the JSON for ${page.path} failed`\n          )\n        }\n        json = j\n        done()\n      })\n\n      page.layoutComponentChunkName &&\n        getResourceModule(page.layout, (err, l) => {\n          if (err) {\n            handleResourceLoadError(\n              page.path,\n              `Loading the Layout for ${page.path} failed`\n            )\n          }\n          layout = l\n          done()\n        })\n\n      return undefined\n    }\n  },\n  peek: path => pathArray.slice(-1)[0],\n  length: () => pathArray.length,\n  indexOf: path => pathArray.length - pathArray.indexOf(path) - 1,\n}\n\nexport const publicLoader = {\n  getResourcesForPathname: queue.getResourcesForPathname,\n}\n\nexport default queue\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/loader.js","module.exports = [{\"componentChunkName\":\"component---src-pages-404-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"404.json\",\"path\":\"/404/\"},{\"componentChunkName\":\"component---src-pages-about-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"about.json\",\"path\":\"/about/\"},{\"componentChunkName\":\"component---src-pages-explore-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"explore.json\",\"path\":\"/explore/\"},{\"componentChunkName\":\"component---src-pages-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"index.json\",\"path\":\"/\"},{\"componentChunkName\":\"component---src-pages-404-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"404-html.json\",\"path\":\"/404.html\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.cache/pages.json\n// module id = 817\n// module chunks = 231608221292675","module.exports = ({ getNextQueuedResources, createResourceDownload }) => {\n  let pagesLoading = []\n  let resourcesDownloading = []\n\n  // Do things\n  const startResourceDownloading = () => {\n    const nextResource = getNextQueuedResources()\n    if (nextResource) {\n      resourcesDownloading.push(nextResource)\n      createResourceDownload(nextResource)\n    }\n  }\n\n  const reducer = action => {\n    switch (action.type) {\n      case `RESOURCE_FINISHED`:\n        resourcesDownloading = resourcesDownloading.filter(\n          r => r !== action.payload\n        )\n        break\n      case `ON_PRE_LOAD_PAGE_RESOURCES`:\n        pagesLoading.push(action.payload.path)\n        break\n      case `ON_POST_LOAD_PAGE_RESOURCES`:\n        pagesLoading = pagesLoading.filter(p => p !== action.payload.page.path)\n        break\n      case `ON_NEW_RESOURCES_ADDED`:\n        break\n    }\n\n    // Take actions.\n    // Wait for event loop queue to finish.\n    setTimeout(() => {\n      if (resourcesDownloading.length === 0 && pagesLoading.length === 0) {\n        // Start another resource downloading.\n        startResourceDownloading()\n      }\n    }, 0)\n  }\n\n  return {\n    onResourcedFinished: event => {\n      // Tell prefetcher that the resource finished downloading\n      // so it can grab the next one.\n      reducer({ type: `RESOURCE_FINISHED`, payload: event })\n    },\n    onPreLoadPageResources: event => {\n      // Tell prefetcher a page load has started so it should stop\n      // loading anything new\n      reducer({ type: `ON_PRE_LOAD_PAGE_RESOURCES`, payload: event })\n    },\n    onPostLoadPageResources: event => {\n      // Tell prefetcher a page load has finished so it should start\n      // loading resources again.\n      reducer({ type: `ON_POST_LOAD_PAGE_RESOURCES`, payload: event })\n    },\n    onNewResourcesAdded: () => {\n      // Tell prefetcher that more resources to be downloaded have\n      // been added.\n      reducer({ type: `ON_NEW_RESOURCES_ADDED` })\n    },\n    getState: () => {\n      return { pagesLoading, resourcesDownloading }\n    },\n    empty: () => {\n      pagesLoading = []\n      resourcesDownloading = []\n    },\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/prefetcher.js","if (__POLYFILL__) {\n  require(`core-js/fn/promise`)\n}\nimport { apiRunner, apiRunnerAsync } from \"./api-runner-browser\"\nimport React, { createElement } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Router, Route, withRouter, matchPath } from \"react-router-dom\"\nimport { ScrollContext } from \"gatsby-react-router-scroll\"\nimport domReady from \"domready\"\nimport { createLocation } from \"history\"\nimport history from \"./history\"\nwindow.___history = history\nimport emitter from \"./emitter\"\nwindow.___emitter = emitter\nimport pages from \"./pages.json\"\nimport redirects from \"./redirects.json\"\nimport ComponentRenderer from \"./component-renderer\"\nimport asyncRequires from \"./async-requires\"\nimport loader from \"./loader\"\nloader.addPagesArray(pages)\nloader.addProdRequires(asyncRequires)\nwindow.asyncRequires = asyncRequires\nwindow.___loader = loader\nwindow.matchPath = matchPath\n\n// Convert to a map for faster lookup in maybeRedirect()\nconst redirectMap = redirects.reduce((map, redirect) => {\n  map[redirect.fromPath] = redirect\n  return map\n}, {})\n\nconst maybeRedirect = pathname => {\n  const redirect = redirectMap[pathname]\n\n  if (redirect != null) {\n    history.replace(redirect.toPath)\n    return true\n  } else {\n    return false\n  }\n}\n\n// Check for initial page-load redirect\nmaybeRedirect(window.location.pathname)\n\n// Let the site/plugins run code very early.\napiRunnerAsync(`onClientEntry`).then(() => {\n  // Let plugins register a service worker. The plugin just needs\n  // to return true.\n  if (apiRunner(`registerServiceWorker`).length > 0) {\n    require(`./register-service-worker`)\n  }\n\n  const navigate = (to, replace) => {\n    const location = createLocation(to, null, null, history.location)\n    let { pathname } = location\n    const redirect = redirectMap[pathname]\n\n    // If we're redirecting, just replace the passed in pathname\n    // to the one we want to redirect to.\n    if (redirect) {\n      pathname = redirect.toPath\n    }\n    const wl = window.location\n\n    // If we're already at this location, do nothing.\n    if (\n      wl.pathname === location.pathname &&\n      wl.search === location.search &&\n      wl.hash === location.hash\n    ) {\n      return\n    }\n\n    const historyNavigateFunc = replace\n      ? window.___history.replace\n      : window.___history.push\n\n    // Listen to loading events. If page resources load before\n    // a second, navigate immediately.\n    function eventHandler(e) {\n      if (e.page.path === loader.getPage(pathname).path) {\n        emitter.off(`onPostLoadPageResources`, eventHandler)\n        clearTimeout(timeoutId)\n        historyNavigateFunc(location)\n      }\n    }\n\n    // Start a timer to wait for a second before transitioning and showing a\n    // loader in case resources aren't around yet.\n    const timeoutId = setTimeout(() => {\n      emitter.off(`onPostLoadPageResources`, eventHandler)\n      emitter.emit(`onDelayedLoadPageResources`, { pathname })\n      historyNavigateFunc(location)\n    }, 1000)\n\n    if (loader.getResourcesForPathname(pathname)) {\n      // The resources are already loaded so off we go.\n      clearTimeout(timeoutId)\n      historyNavigateFunc(location)\n    } else {\n      // They're not loaded yet so let's add a listener for when\n      // they finish loading.\n      emitter.on(`onPostLoadPageResources`, eventHandler)\n    }\n  }\n\n  // window.___loadScriptsForPath = loadScriptsForPath\n  window.___push = (to) => navigate(to, false)\n  window.___replace = (to) => navigate(to, true)\n  window.___navigateTo = window.___push\n\n  // Call onRouteUpdate on the initial page load.\n  apiRunner(`onRouteUpdate`, {\n    location: history.location,\n    action: history.action,\n  })\n\n  let initialAttachDone = false\n  function attachToHistory(history) {\n    if (!window.___history || initialAttachDone === false) {\n      window.___history = history\n      initialAttachDone = true\n\n      history.listen((location, action) => {\n        if (!maybeRedirect(location.pathname)) {\n          // Make sure React has had a chance to flush to DOM first.\n          setTimeout(() => {\n            apiRunner(`onRouteUpdate`, { location, action })\n          }, 0)\n        }\n      })\n    }\n  }\n\n  function shouldUpdateScroll(prevRouterProps, { location: { pathname } }) {\n    const results = apiRunner(`shouldUpdateScroll`, {\n      prevRouterProps,\n      pathname,\n    })\n    if (results.length > 0) {\n      return results[0]\n    }\n\n    if (prevRouterProps) {\n      const {\n        location: { pathname: oldPathname },\n      } = prevRouterProps\n      if (oldPathname === pathname) {\n        return false\n      }\n    }\n    return true\n  }\n\n  const AltRouter = apiRunner(`replaceRouterComponent`, { history })[0]\n  const DefaultRouter = ({ children }) => (\n    <Router history={history}>{children}</Router>\n  )\n\n  const ComponentRendererWithRouter = withRouter(ComponentRenderer)\n\n  loader.getResourcesForPathname(window.location.pathname, () => {\n    const Root = () =>\n      createElement(\n        AltRouter ? AltRouter : DefaultRouter,\n        null,\n        createElement(\n          ScrollContext,\n          { shouldUpdateScroll },\n          createElement(ComponentRendererWithRouter, {\n            layout: true,\n            children: layoutProps =>\n              createElement(Route, {\n                render: routeProps => {\n                  attachToHistory(routeProps.history)\n                  const props = layoutProps ? layoutProps : routeProps\n\n                  if (loader.getPage(props.location.pathname)) {\n                    return createElement(ComponentRenderer, {\n                      page: true,\n                      ...props,\n                    })\n                  } else {\n                    return createElement(ComponentRenderer, {\n                      page: true,\n                      location: { pathname: `/404.html` },\n                    })\n                  }\n                },\n              }),\n          })\n        )\n      )\n\n    const NewRoot = apiRunner(`wrapRootComponent`, { Root }, Root)[0]\n\n    const renderer = apiRunner(\n      `replaceHydrateFunction`,\n      undefined,\n      ReactDOM.render\n    )[0]\n\n    domReady(() =>\n      renderer(\n        <NewRoot />,\n        typeof window !== `undefined`\n          ? document.getElementById(`___gatsby`)\n          : void 0,\n        () => {\n          apiRunner(`onInitialClientRender`)\n        }\n      )\n    )\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/production-app.js","module.exports = []\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./.cache/redirects.json\n// module id = 818\n// module chunks = 231608221292675","import emitter from \"./emitter\"\n\nlet pathPrefix = `/`\nif (__PREFIX_PATHS__) {\n  pathPrefix = __PATH_PREFIX__ + `/`\n}\n\nif (`serviceWorker` in navigator) {\n  navigator.serviceWorker\n    .register(`${pathPrefix}sw.js`)\n    .then(function(reg) {\n      reg.addEventListener(`updatefound`, () => {\n        // The updatefound event implies that reg.installing is set; see\n        // https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event\n        const installingWorker = reg.installing\n        console.log(`installingWorker`, installingWorker)\n        installingWorker.addEventListener(`statechange`, () => {\n          switch (installingWorker.state) {\n            case `installed`:\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and the fresh content will\n                // have been added to the cache.\n                // We reload immediately so the user sees the new content.\n                // This could/should be made configurable in the future.\n                window.location.reload()\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a \"Content is cached for offline use.\" message.\n                console.log(`Content is now available offline!`)\n                emitter.emit(`sw:installed`)\n              }\n              break\n\n            case `redundant`:\n              console.error(`The installing service worker became redundant.`)\n              break\n          }\n        })\n      })\n    })\n    .catch(function(e) {\n      console.error(`Error during service worker registration:`, e)\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/register-service-worker.js","/**\n * Remove a prefix from a string. Return the input string if the given prefix\n * isn't found.\n */\n\nexport default (str, prefix = ``) => {\n  if (str.substr(0, prefix.length) === prefix) return str.slice(prefix.length)\n  return str\n}\n\n\n\n// WEBPACK FOOTER //\n// ./.cache/strip-prefix.js","/* globals window */\r\nimport 'core-js'; /* used for IE 11 compatibility */\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\n/* Add Redux store provider */\r\nimport wrapWithProvider from \"./wrap-with-provider\"\r\nexport const replaceRouterComponent = wrapWithProvider;\r\n\r\nconst usStateIds =[\r\n  \"AK\",\r\n  \"AL\",\r\n  \"AR\",\r\n  \"AZ\",\r\n  \"CA\",\r\n  \"CO\",\r\n  \"CT\",\r\n  \"DC\",\r\n  \"DE\",\r\n  \"FL\",\r\n  \"GA\",\r\n  \"HI\",\r\n  \"IA\",\r\n  \"IL\",\r\n  \"IN\",\r\n  \"KS\",\r\n  \"KY\",\r\n  \"LA\",\r\n  \"MA\",\r\n  \"MD\",\r\n  \"ME\",\r\n  \"MI\",\r\n  \"MN\",\r\n  \"MO\",\r\n  \"MS\",\r\n  \"MT\",\r\n  \"NC\",\r\n  \"ND\",\r\n  \"NE\",\r\n  \"NH\",\r\n  \"NJ\",\r\n  \"NM\",\r\n  \"NV\",\r\n  \"NY\",\r\n  \"OH\",\r\n  \"OK\",\r\n  \"OR\",\r\n  \"PA\",\r\n  \"RI\",\r\n  \"SC\",\r\n  \"SD\",\r\n  \"TN\",\r\n  \"TX\",\r\n  \"UT\",\r\n  \"VA\",\r\n  \"VT\",\r\n  \"WA\",\r\n  \"WI\",\r\n  \"WV\",\r\n  \"WY\"\r\n];\r\n\r\nexports.onClientEntry = () => {\r\n  // Patch the resource loader\r\n  const loader = global.___loader;\r\n  if (!loader) return;\r\n\r\n  let path = window.location.pathname;\r\n  let statePathId = path.substring((path.length-3), (path.length-1));\r\n\r\n  if(path.includes(\"/explore\") && (path.endsWith(\"e/\") || path.endsWith(\"e\"))) {\r\n    loader.addPagesArray([{\"componentChunkName\":\"component---src-pages-explore-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"explore.json\",\"path\": path}]);\r\n  }\r\n  else if(path.includes(\"/about\")){\r\n    loader.addPagesArray([{\"componentChunkName\":\"component---src-pages-about-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"about.json\",\"path\": path}]);\r\n  }\r\n  else if(path.includes(\"/explore\") && usStateIds.includes(statePathId)) {\r\n    loader.addPagesArray([{\"componentChunkName\":\"component---src-templates-state-page-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"explore-\"+statePathId.toLowerCase()+\".json\",\"path\":path}]);\r\n  }\r\n  else {\r\n    loader.addPagesArray([{\"componentChunkName\":\"component---src-pages-index-js\",\"layout\":\"layout---index\",\"layoutComponentChunkName\":\"component---src-layouts-index-js\",\"jsonName\":\"index.json\",\"path\":path}]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./gatsby-browser.js","/*!\n * accounting.js v0.4.1\n * Copyright 2014 Open Exchange Rates\n *\n * Freely distributable under the MIT license.\n * Portions of accounting.js are inspired or borrowed from underscore.js\n *\n * Full details and documentation:\n * http://openexchangerates.github.io/accounting.js/\n */\n\n(function(root, undefined) {\n\n\t/* --- Setup --- */\n\n\t// Create the local library object, to be exported or referenced globally later\n\tvar lib = {};\n\n\t// Current version\n\tlib.version = '0.4.1';\n\n\n\t/* --- Exposed settings --- */\n\n\t// The library's settings configuration object. Contains default parameters for\n\t// currency and number formatting\n\tlib.settings = {\n\t\tcurrency: {\n\t\t\tsymbol : \"$\",\t\t// default currency symbol is '$'\n\t\t\tformat : \"%s%v\",\t// controls output: %s = symbol, %v = value (can be object, see docs)\n\t\t\tdecimal : \".\",\t\t// decimal point separator\n\t\t\tthousand : \",\",\t\t// thousands separator\n\t\t\tprecision : 2,\t\t// decimal places\n\t\t\tgrouping : 3\t\t// digit grouping (not implemented yet)\n\t\t},\n\t\tnumber: {\n\t\t\tprecision : 0,\t\t// default precision on numbers is 0\n\t\t\tgrouping : 3,\t\t// digit grouping (not implemented yet)\n\t\t\tthousand : \",\",\n\t\t\tdecimal : \".\"\n\t\t}\n\t};\n\n\n\t/* --- Internal Helper Methods --- */\n\n\t// Store reference to possibly-available ECMAScript 5 methods for later\n\tvar nativeMap = Array.prototype.map,\n\t\tnativeIsArray = Array.isArray,\n\t\ttoString = Object.prototype.toString;\n\n\t/**\n\t * Tests whether supplied parameter is a string\n\t * from underscore.js\n\t */\n\tfunction isString(obj) {\n\t\treturn !!(obj === '' || (obj && obj.charCodeAt && obj.substr));\n\t}\n\n\t/**\n\t * Tests whether supplied parameter is a string\n\t * from underscore.js, delegates to ECMA5's native Array.isArray\n\t */\n\tfunction isArray(obj) {\n\t\treturn nativeIsArray ? nativeIsArray(obj) : toString.call(obj) === '[object Array]';\n\t}\n\n\t/**\n\t * Tests whether supplied parameter is a true object\n\t */\n\tfunction isObject(obj) {\n\t\treturn obj && toString.call(obj) === '[object Object]';\n\t}\n\n\t/**\n\t * Extends an object with a defaults object, similar to underscore's _.defaults\n\t *\n\t * Used for abstracting parameter handling from API methods\n\t */\n\tfunction defaults(object, defs) {\n\t\tvar key;\n\t\tobject = object || {};\n\t\tdefs = defs || {};\n\t\t// Iterate over object non-prototype properties:\n\t\tfor (key in defs) {\n\t\t\tif (defs.hasOwnProperty(key)) {\n\t\t\t\t// Replace values with defaults only if undefined (allow empty/zero values):\n\t\t\t\tif (object[key] == null) object[key] = defs[key];\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\t/**\n\t * Implementation of `Array.map()` for iteration loops\n\t *\n\t * Returns a new Array as a result of calling `iterator` on each array value.\n\t * Defers to native Array.map if available\n\t */\n\tfunction map(obj, iterator, context) {\n\t\tvar results = [], i, j;\n\n\t\tif (!obj) return results;\n\n\t\t// Use native .map method if it exists:\n\t\tif (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n\n\t\t// Fallback for native .map:\n\t\tfor (i = 0, j = obj.length; i < j; i++ ) {\n\t\t\tresults[i] = iterator.call(context, obj[i], i, obj);\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Check and normalise the value of precision (must be positive integer)\n\t */\n\tfunction checkPrecision(val, base) {\n\t\tval = Math.round(Math.abs(val));\n\t\treturn isNaN(val)? base : val;\n\t}\n\n\n\t/**\n\t * Parses a format string or object and returns format obj for use in rendering\n\t *\n\t * `format` is either a string with the default (positive) format, or object\n\t * containing `pos` (required), `neg` and `zero` values (or a function returning\n\t * either a string or object)\n\t *\n\t * Either string or format.pos must contain \"%v\" (value) to be valid\n\t */\n\tfunction checkCurrencyFormat(format) {\n\t\tvar defaults = lib.settings.currency.format;\n\n\t\t// Allow function as format parameter (should return string or object):\n\t\tif ( typeof format === \"function\" ) format = format();\n\n\t\t// Format can be a string, in which case `value` (\"%v\") must be present:\n\t\tif ( isString( format ) && format.match(\"%v\") ) {\n\n\t\t\t// Create and return positive, negative and zero formats:\n\t\t\treturn {\n\t\t\t\tpos : format,\n\t\t\t\tneg : format.replace(\"-\", \"\").replace(\"%v\", \"-%v\"),\n\t\t\t\tzero : format\n\t\t\t};\n\n\t\t// If no format, or object is missing valid positive value, use defaults:\n\t\t} else if ( !format || !format.pos || !format.pos.match(\"%v\") ) {\n\n\t\t\t// If defaults is a string, casts it to an object for faster checking next time:\n\t\t\treturn ( !isString( defaults ) ) ? defaults : lib.settings.currency.format = {\n\t\t\t\tpos : defaults,\n\t\t\t\tneg : defaults.replace(\"%v\", \"-%v\"),\n\t\t\t\tzero : defaults\n\t\t\t};\n\n\t\t}\n\t\t// Otherwise, assume format was fine:\n\t\treturn format;\n\t}\n\n\n\t/* --- API Methods --- */\n\n\t/**\n\t * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value\n\t * Alias: `accounting.parse(string)`\n\t *\n\t * Decimal must be included in the regular expression to match floats (defaults to\n\t * accounting.settings.number.decimal), so if the number uses a non-standard decimal \n\t * separator, provide it as the second argument.\n\t *\n\t * Also matches bracketed negatives (eg. \"$ (1.99)\" => -1.99)\n\t *\n\t * Doesn't throw any errors (`NaN`s become 0) but this may change in future\n\t */\n\tvar unformat = lib.unformat = lib.parse = function(value, decimal) {\n\t\t// Recursively unformat arrays:\n\t\tif (isArray(value)) {\n\t\t\treturn map(value, function(val) {\n\t\t\t\treturn unformat(val, decimal);\n\t\t\t});\n\t\t}\n\n\t\t// Fails silently (need decent errors):\n\t\tvalue = value || 0;\n\n\t\t// Return the value as-is if it's already a number:\n\t\tif (typeof value === \"number\") return value;\n\n\t\t// Default decimal point comes from settings, but could be set to eg. \",\" in opts:\n\t\tdecimal = decimal || lib.settings.number.decimal;\n\n\t\t // Build regex to strip out everything except digits, decimal point and minus sign:\n\t\tvar regex = new RegExp(\"[^0-9-\" + decimal + \"]\", [\"g\"]),\n\t\t\tunformatted = parseFloat(\n\t\t\t\t(\"\" + value)\n\t\t\t\t.replace(/\\((.*)\\)/, \"-$1\") // replace bracketed values with negatives\n\t\t\t\t.replace(regex, '')         // strip out any cruft\n\t\t\t\t.replace(decimal, '.')      // make sure decimal point is standard\n\t\t\t);\n\n\t\t// This will fail silently which may cause trouble, let's wait and see:\n\t\treturn !isNaN(unformatted) ? unformatted : 0;\n\t};\n\n\n\t/**\n\t * Implementation of toFixed() that treats floats more like decimals\n\t *\n\t * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present\n\t * problems for accounting- and finance-related software.\n\t */\n\tvar toFixed = lib.toFixed = function(value, precision) {\n\t\tprecision = checkPrecision(precision, lib.settings.number.precision);\n\t\tvar power = Math.pow(10, precision);\n\n\t\t// Multiply up by precision, round accurately, then divide and use native toFixed():\n\t\treturn (Math.round(lib.unformat(value) * power) / power).toFixed(precision);\n\t};\n\n\n\t/**\n\t * Format a number, with comma-separated thousands and custom precision/decimal places\n\t * Alias: `accounting.format()`\n\t *\n\t * Localise by overriding the precision and thousand / decimal separators\n\t * 2nd parameter `precision` can be an object matching `settings.number`\n\t */\n\tvar formatNumber = lib.formatNumber = lib.format = function(number, precision, thousand, decimal) {\n\t\t// Resursively format arrays:\n\t\tif (isArray(number)) {\n\t\t\treturn map(number, function(val) {\n\t\t\t\treturn formatNumber(val, precision, thousand, decimal);\n\t\t\t});\n\t\t}\n\n\t\t// Clean up number:\n\t\tnumber = unformat(number);\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(precision) ? precision : {\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal\n\t\t\t\t}),\n\t\t\t\tlib.settings.number\n\t\t\t),\n\n\t\t\t// Clean up precision\n\t\t\tusePrecision = checkPrecision(opts.precision),\n\n\t\t\t// Do some calc:\n\t\t\tnegative = number < 0 ? \"-\" : \"\",\n\t\t\tbase = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + \"\",\n\t\t\tmod = base.length > 3 ? base.length % 3 : 0;\n\n\t\t// Format the number:\n\t\treturn negative + (mod ? base.substr(0, mod) + opts.thousand : \"\") + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, \"$1\" + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : \"\");\n\t};\n\n\n\t/**\n\t * Format a number into currency\n\t *\n\t * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n\t * defaults: (0, \"$\", 2, \",\", \".\", \"%s%v\")\n\t *\n\t * Localise by overriding the symbol, precision, thousand / decimal separators and format\n\t * Second param can be an object matching `settings.currency` which is the easiest way.\n\t *\n\t * To do: tidy up the parameters\n\t */\n\tvar formatMoney = lib.formatMoney = function(number, symbol, precision, thousand, decimal, format) {\n\t\t// Resursively format arrays:\n\t\tif (isArray(number)) {\n\t\t\treturn map(number, function(val){\n\t\t\t\treturn formatMoney(val, symbol, precision, thousand, decimal, format);\n\t\t\t});\n\t\t}\n\n\t\t// Clean up number:\n\t\tnumber = unformat(number);\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\tformat : format\n\t\t\t\t}),\n\t\t\t\tlib.settings.currency\n\t\t\t),\n\n\t\t\t// Check format (returns object with pos, neg and zero):\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\n\t\t\t// Choose which format to use for this value:\n\t\t\tuseFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\n\n\t\t// Return with currency symbol added:\n\t\treturn useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t};\n\n\n\t/**\n\t * Format a list of numbers into an accounting column, padding with whitespace\n\t * to line up currency symbols, thousand separators and decimals places\n\t *\n\t * List should be an array of numbers\n\t * Second parameter can be an object containing keys that match the params\n\t *\n\t * Returns array of accouting-formatted number strings of same length\n\t *\n\t * NB: `white-space:pre` CSS rule is required on the list container to prevent\n\t * browsers from collapsing the whitespace in the output strings.\n\t */\n\tlib.formatColumn = function(list, symbol, precision, thousand, decimal, format) {\n\t\tif (!list) return [];\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\tformat : format\n\t\t\t\t}),\n\t\t\t\tlib.settings.currency\n\t\t\t),\n\n\t\t\t// Check format (returns object with pos, neg and zero), only need pos for now:\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\n\t\t\t// Whether to pad at start of string or after currency symbol:\n\t\t\tpadAfterSymbol = formats.pos.indexOf(\"%s\") < formats.pos.indexOf(\"%v\") ? true : false,\n\n\t\t\t// Store value for the length of the longest string in the column:\n\t\t\tmaxLength = 0,\n\n\t\t\t// Format the list according to options, store the length of the longest string:\n\t\t\tformatted = map(list, function(val, i) {\n\t\t\t\tif (isArray(val)) {\n\t\t\t\t\t// Recursively format columns if list is a multi-dimensional array:\n\t\t\t\t\treturn lib.formatColumn(val, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// Clean up the value\n\t\t\t\t\tval = unformat(val);\n\n\t\t\t\t\t// Choose which format to use for this value (pos, neg or zero):\n\t\t\t\t\tvar useFormat = val > 0 ? formats.pos : val < 0 ? formats.neg : formats.zero,\n\n\t\t\t\t\t\t// Format this value, push into formatted list and save the length:\n\t\t\t\t\t\tfVal = useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(val), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\n\t\t\t\t\tif (fVal.length > maxLength) maxLength = fVal.length;\n\t\t\t\t\treturn fVal;\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Pad each number in the list and send back the column of numbers:\n\t\treturn map(formatted, function(val, i) {\n\t\t\t// Only if this is a string (not a nested array, which would have already been padded):\n\t\t\tif (isString(val) && val.length < maxLength) {\n\t\t\t\t// Depending on symbol position, pad after symbol or at index 0:\n\t\t\t\treturn padAfterSymbol ? val.replace(opts.symbol, opts.symbol+(new Array(maxLength - val.length + 1).join(\" \"))) : (new Array(maxLength - val.length + 1).join(\" \")) + val;\n\t\t\t}\n\t\t\treturn val;\n\t\t});\n\t};\n\n\n\t/* --- Module Definition --- */\n\n\t// Export accounting for CommonJS. If being loaded as an AMD module, define it as such.\n\t// Otherwise, just add `accounting` to the global object\n\tif (typeof exports !== 'undefined') {\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\texports = module.exports = lib;\n\t\t}\n\t\texports.accounting = lib;\n\t} else if (typeof define === 'function' && define.amd) {\n\t\t// Return the library as an AMD module:\n\t\tdefine([], function() {\n\t\t\treturn lib;\n\t\t});\n\t} else {\n\t\t// Use accounting.noConflict to restore `accounting` back to its original value.\n\t\t// Returns a reference to the library's `accounting` object;\n\t\t// e.g. `var numbers = accounting.noConflict();`\n\t\tlib.noConflict = (function(oldAccounting) {\n\t\t\treturn function() {\n\t\t\t\t// Reset the value of the root's `accounting` variable:\n\t\t\t\troot.accounting = oldAccounting;\n\t\t\t\t// Delete the noConflict method:\n\t\t\t\tlib.noConflict = undefined;\n\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\treturn lib;\n\t\t\t};\n\t\t})(root.accounting);\n\n\t\t// Declare `fx` on the root (global/window) object:\n\t\troot['accounting'] = lib;\n\t}\n\n\t// Root will be `window` in browser or `global` on the server:\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/accounting/accounting.js\n// module id = 120\n// module chunks = 35783957827783 231608221292675 257298155543294","module.exports = {\"AED\":{\"code\":\"AED\",\"symbol\":\"د.إ.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"AFN\":{\"code\":\"AFN\",\"symbol\":\"؋\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ALL\":{\"code\":\"ALL\",\"symbol\":\"Lek\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AMD\":{\"code\":\"AMD\",\"symbol\":\"֏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ANG\":{\"code\":\"ANG\",\"symbol\":\"ƒ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AOA\":{\"code\":\"AOA\",\"symbol\":\"Kz\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ARS\":{\"code\":\"ARS\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"AUD\":{\"code\":\"AUD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AWG\":{\"code\":\"AWG\",\"symbol\":\"ƒ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"AZN\":{\"code\":\"AZN\",\"symbol\":\"₼\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BAM\":{\"code\":\"BAM\",\"symbol\":\"КМ\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BBD\":{\"code\":\"BBD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BDT\":{\"code\":\"BDT\",\"symbol\":\"৳\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"BGN\":{\"code\":\"BGN\",\"symbol\":\"лв.\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BHD\":{\"code\":\"BHD\",\"symbol\":\"د.ب.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"BIF\":{\"code\":\"BIF\",\"symbol\":\"FBu\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"BMD\":{\"code\":\"BMD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BND\":{\"code\":\"BND\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"BOB\":{\"code\":\"BOB\",\"symbol\":\"Bs\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BRL\":{\"code\":\"BRL\",\"symbol\":\"R$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BSD\":{\"code\":\"BSD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BTC\":{\"code\":\"BTC\",\"symbol\":\"Ƀ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":8},\"BTN\":{\"code\":\"BTN\",\"symbol\":\"Nu.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"BWP\":{\"code\":\"BWP\",\"symbol\":\"P\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"BYR\":{\"code\":\"BYR\",\"symbol\":\"р.\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"BZD\":{\"code\":\"BZD\",\"symbol\":\"BZ$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CAD\":{\"code\":\"CAD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CDF\":{\"code\":\"CDF\",\"symbol\":\"FC\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CHF\":{\"code\":\"CHF\",\"symbol\":\"CHF\",\"thousandsSeparator\":\"'\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CLP\":{\"code\":\"CLP\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CNY\":{\"code\":\"CNY\",\"symbol\":\"¥\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"COP\":{\"code\":\"COP\",\"symbol\":\"$\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"CRC\":{\"code\":\"CRC\",\"symbol\":\"₡\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CUC\":{\"code\":\"CUC\",\"symbol\":\"CUC\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CUP\":{\"code\":\"CUP\",\"symbol\":\"$MN\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CVE\":{\"code\":\"CVE\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"CZK\":{\"code\":\"CZK\",\"symbol\":\"Kč\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"DJF\":{\"code\":\"DJF\",\"symbol\":\"Fdj\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"DKK\":{\"code\":\"DKK\",\"symbol\":\"kr.\",\"thousandsSeparator\":\"\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"DOP\":{\"code\":\"DOP\",\"symbol\":\"RD$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"DZD\":{\"code\":\"DZD\",\"symbol\":\"د.ج.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"EGP\":{\"code\":\"EGP\",\"symbol\":\"ج.م.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ERN\":{\"code\":\"ERN\",\"symbol\":\"Nfk\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ETB\":{\"code\":\"ETB\",\"symbol\":\"ETB\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"EUR\":{\"code\":\"EUR\",\"symbol\":\"€\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"FJD\":{\"code\":\"FJD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"FKP\":{\"code\":\"FKP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GBP\":{\"code\":\"GBP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GEL\":{\"code\":\"GEL\",\"symbol\":\"Lari\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"GHS\":{\"code\":\"GHS\",\"symbol\":\"₵\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GIP\":{\"code\":\"GIP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GMD\":{\"code\":\"GMD\",\"symbol\":\"D\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GNF\":{\"code\":\"GNF\",\"symbol\":\"FG\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"GTQ\":{\"code\":\"GTQ\",\"symbol\":\"Q\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"GYD\":{\"code\":\"GYD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HKD\":{\"code\":\"HKD\",\"symbol\":\"HK$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HNL\":{\"code\":\"HNL\",\"symbol\":\"L.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"HRK\":{\"code\":\"HRK\",\"symbol\":\"kn\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"HTG\":{\"code\":\"HTG\",\"symbol\":\"G\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"HUF\":{\"code\":\"HUF\",\"symbol\":\"Ft\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"IDR\":{\"code\":\"IDR\",\"symbol\":\"Rp\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"ILS\":{\"code\":\"ILS\",\"symbol\":\"₪\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"INR\":{\"code\":\"INR\",\"symbol\":\"₹\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"IQD\":{\"code\":\"IQD\",\"symbol\":\"د.ع.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"IRR\":{\"code\":\"IRR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\"/\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ISK\":{\"code\":\"ISK\",\"symbol\":\"kr.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"JMD\":{\"code\":\"JMD\",\"symbol\":\"J$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"JOD\":{\"code\":\"JOD\",\"symbol\":\"د.ا.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"JPY\":{\"code\":\"JPY\",\"symbol\":\"¥\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KES\":{\"code\":\"KES\",\"symbol\":\"KSh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KGS\":{\"code\":\"KGS\",\"symbol\":\"сом\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\"-\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"KHR\":{\"code\":\"KHR\",\"symbol\":\"៛\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KMF\":{\"code\":\"KMF\",\"symbol\":\"CF\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KPW\":{\"code\":\"KPW\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KRW\":{\"code\":\"KRW\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"KWD\":{\"code\":\"KWD\",\"symbol\":\"د.ك.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"KYD\":{\"code\":\"KYD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"KZT\":{\"code\":\"KZT\",\"symbol\":\"₸\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\"-\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LAK\":{\"code\":\"LAK\",\"symbol\":\"₭\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"LBP\":{\"code\":\"LBP\",\"symbol\":\"ل.ل.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"LKR\":{\"code\":\"LKR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":0},\"LRD\":{\"code\":\"LRD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LSL\":{\"code\":\"LSL\",\"symbol\":\"M\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"LYD\":{\"code\":\"LYD\",\"symbol\":\"د.ل.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":3},\"MAD\":{\"code\":\"MAD\",\"symbol\":\"د.م.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MDL\":{\"code\":\"MDL\",\"symbol\":\"lei\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MGA\":{\"code\":\"MGA\",\"symbol\":\"Ar\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"MKD\":{\"code\":\"MKD\",\"symbol\":\"ден.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"MMK\":{\"code\":\"MMK\",\"symbol\":\"K\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MNT\":{\"code\":\"MNT\",\"symbol\":\"₮\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MOP\":{\"code\":\"MOP\",\"symbol\":\"MOP$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MRO\":{\"code\":\"MRO\",\"symbol\":\"UM\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MTL\":{\"code\":\"MTL\",\"symbol\":\"₤\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MUR\":{\"code\":\"MUR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MVR\":{\"code\":\"MVR\",\"symbol\":\"MVR\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"MWK\":{\"code\":\"MWK\",\"symbol\":\"MK\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MXN\":{\"code\":\"MXN\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MYR\":{\"code\":\"MYR\",\"symbol\":\"RM\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"MZN\":{\"code\":\"MZN\",\"symbol\":\"MT\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"NAD\":{\"code\":\"NAD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NGN\":{\"code\":\"NGN\",\"symbol\":\"₦\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NIO\":{\"code\":\"NIO\",\"symbol\":\"C$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"NOK\":{\"code\":\"NOK\",\"symbol\":\"kr\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"NPR\":{\"code\":\"NPR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"NZD\":{\"code\":\"NZD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"OMR\":{\"code\":\"OMR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"PAB\":{\"code\":\"PAB\",\"symbol\":\"B/.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PEN\":{\"code\":\"PEN\",\"symbol\":\"S/.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PGK\":{\"code\":\"PGK\",\"symbol\":\"K\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PHP\":{\"code\":\"PHP\",\"symbol\":\"₱\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PKR\":{\"code\":\"PKR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"PLN\":{\"code\":\"PLN\",\"symbol\":\"zł\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"PYG\":{\"code\":\"PYG\",\"symbol\":\"₲\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"QAR\":{\"code\":\"QAR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RON\":{\"code\":\"RON\",\"symbol\":\"lei\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RSD\":{\"code\":\"RSD\",\"symbol\":\"Дин.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RUB\":{\"code\":\"RUB\",\"symbol\":\"₽\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"RWF\":{\"code\":\"RWF\",\"symbol\":\"RWF\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SAR\":{\"code\":\"SAR\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SBD\":{\"code\":\"SBD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SCR\":{\"code\":\"SCR\",\"symbol\":\"₨\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SDD\":{\"code\":\"SDD\",\"symbol\":\"LSd\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SDG\":{\"code\":\"SDG\",\"symbol\":\"£‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SEK\":{\"code\":\"SEK\",\"symbol\":\"kr\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SGD\":{\"code\":\"SGD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SHP\":{\"code\":\"SHP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SLL\":{\"code\":\"SLL\",\"symbol\":\"Le\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SOS\":{\"code\":\"SOS\",\"symbol\":\"S\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SRD\":{\"code\":\"SRD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"STD\":{\"code\":\"STD\",\"symbol\":\"Db\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SVC\":{\"code\":\"SVC\",\"symbol\":\"₡\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"SYP\":{\"code\":\"SYP\",\"symbol\":\"£\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"SZL\":{\"code\":\"SZL\",\"symbol\":\"E\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"THB\":{\"code\":\"THB\",\"symbol\":\"฿\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TJS\":{\"code\":\"TJS\",\"symbol\":\"TJS\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\";\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"TMT\":{\"code\":\"TMT\",\"symbol\":\"m\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"TND\":{\"code\":\"TND\",\"symbol\":\"د.ت.‏\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":3},\"TOP\":{\"code\":\"TOP\",\"symbol\":\"T$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TRY\":{\"code\":\"TRY\",\"symbol\":\"TL\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"TTD\":{\"code\":\"TTD\",\"symbol\":\"TT$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TVD\":{\"code\":\"TVD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TWD\":{\"code\":\"TWD\",\"symbol\":\"NT$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"TZS\":{\"code\":\"TZS\",\"symbol\":\"TSh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UAH\":{\"code\":\"UAH\",\"symbol\":\"₴\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UGX\":{\"code\":\"UGX\",\"symbol\":\"USh\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"USD\":{\"code\":\"USD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"UYU\":{\"code\":\"UYU\",\"symbol\":\"$U\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"UZS\":{\"code\":\"UZS\",\"symbol\":\"сўм\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"VEB\":{\"code\":\"VEB\",\"symbol\":\"Bs.\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"VEF\":{\"code\":\"VEF\",\"symbol\":\"Bs. F.\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"VND\":{\"code\":\"VND\",\"symbol\":\"₫\",\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":1},\"VUV\":{\"code\":\"VUV\",\"symbol\":\"VT\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":0},\"WST\":{\"code\":\"WST\",\"symbol\":\"WS$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XAF\":{\"code\":\"XAF\",\"symbol\":\"F\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XCD\":{\"code\":\"XCD\",\"symbol\":\"$\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XBT\":{\"code\":\"XBT\",\"symbol\":\"Ƀ\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XOF\":{\"code\":\"XOF\",\"symbol\":\"F\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"XPF\":{\"code\":\"XPF\",\"symbol\":\"F\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"YER\":{\"code\":\"YER\",\"symbol\":\"﷼\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"ZAR\":{\"code\":\"ZAR\",\"symbol\":\"R\",\"thousandsSeparator\":\" \",\"decimalSeparator\":\",\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"ZMW\":{\"code\":\"ZMW\",\"symbol\":\"ZK\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2},\"WON\":{\"code\":\"WON\",\"symbol\":\"₩\",\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"decimalDigits\":2}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/currency-formatter/currencies.json\n// module id = 134\n// module chunks = 35783957827783 231608221292675 257298155543294","var accounting = require('accounting')\nvar assign = require('object-assign')\nvar localeCurrency = require('locale-currency')\nvar currencies = require('./currencies.json')\nvar localeFormats = require('./localeFormats.json')\n\nvar defaultCurrency = {\n  symbol: '',\n  thousandsSeparator: ',',\n  decimalSeparator: '.',\n  symbolOnLeft: true,\n  spaceBetweenAmountAndSymbol: false,\n  decimalDigits: 2\n}\n\nvar defaultLocaleFormat = {}\n\nvar formatMapping = [\n  {\n    symbolOnLeft: true,\n    spaceBetweenAmountAndSymbol: false,\n    format: {\n      pos: '%s%v',\n      neg: '-%s%v',\n      zero: '%s%v'\n    }\n  },\n  {\n    symbolOnLeft: true,\n    spaceBetweenAmountAndSymbol: true,\n    format: {\n      pos: '%s %v',\n      neg: '-%s %v',\n      zero: '%s %v'\n    }\n  },\n  {\n    symbolOnLeft: false,\n    spaceBetweenAmountAndSymbol: false,\n    format: {\n      pos: '%v%s',\n      neg: '-%v%s',\n      zero: '%v%s'\n    }\n  },\n  {\n    symbolOnLeft: false,\n    spaceBetweenAmountAndSymbol: true,\n    format: {\n      pos: '%v %s',\n      neg: '-%v %s',\n      zero: '%v %s'\n    }\n  }\n]\n\nfunction format(value, options) {\n  var code = options.code || (options.locale && localeCurrency.getCurrency(options.locale))\n  var localeMatch = /^([a-z]+)([_-]([a-z]+))?$/i.exec(options.locale) || []\n  var language = localeMatch[1]\n  var region = localeMatch[3]\n  var localeFormat = assign({}, defaultLocaleFormat,\n                            localeFormats[language] || {},\n                            localeFormats[language + '-' + region] || {})\n  var currency = assign({}, defaultCurrency, findCurrency(code), localeFormat)\n  \n  var symbolOnLeft = currency.symbolOnLeft\n  var spaceBetweenAmountAndSymbol = currency.spaceBetweenAmountAndSymbol\n\n  var format = formatMapping.filter(function(f) {\n    return f.symbolOnLeft == symbolOnLeft && f.spaceBetweenAmountAndSymbol == spaceBetweenAmountAndSymbol\n  })[0].format\n\n  return accounting.formatMoney(value, {\n    symbol: isUndefined(options.symbol)\n              ? currency.symbol\n              : options.symbol,\n\n    decimal: isUndefined(options.decimal)\n              ? currency.decimalSeparator\n              : options.decimal,\n\n    thousand: isUndefined(options.thousand)\n              ? currency.thousandsSeparator\n              : options.thousand,\n\n    precision: typeof options.precision === 'number'\n              ? options.precision\n              : currency.decimalDigits,\n\n    format: ['string', 'object'].indexOf(typeof options.format) > -1\n              ? options.format\n              : format\n  })\n}\n\nfunction findCurrency (currencyCode) {\n  return currencies[currencyCode]\n}\n\nfunction isUndefined (val) {\n  return typeof val === 'undefined'\n}\n\nfunction unformat(value, options) {\n  var code = options.code || (options.locale && localeCurrency.getCurrency(options.locale))\n  var localeFormat = localeFormats[options.locale] || defaultLocaleFormat\n  var currency = assign({}, defaultCurrency, findCurrency(code), localeFormat)\n  var decimal = isUndefined(options.decimal) ? currency.decimalSeparator : options.decimal\n  return accounting.unformat(value, decimal)\n}\n\nmodule.exports = {\n  defaultCurrency: defaultCurrency,\n  get currencies() {\n    // In favor of backwards compatibility, the currencies map is converted to an array here\n    return Object.keys(currencies).map(function(key) {\n      return currencies[key]\n    })\n  },\n  findCurrency: findCurrency,\n  format: format,\n  unformat: unformat\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/currency-formatter/index.js\n// module id = 127\n// module chunks = 35783957827783 231608221292675 257298155543294","module.exports = {\"de\":{\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"el\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2},\"en-IE\":{\"symbolOnLeft\":true,\"thousandsSeparator\":\",\",\"decimalSeparator\":\".\",\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"es\":{\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"symbolOnLeft\":false,\"spaceBetweenAmountAndSymbol\":true,\"decimalDigits\":2},\"it\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2},\"nl\":{\"symbolOnLeft\":true,\"spaceBetweenAmountAndSymbol\":false,\"thousandsSeparator\":\".\",\"decimalSeparator\":\",\",\"decimalDigits\":2}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/currency-formatter/localeFormats.json\n// module id = 135\n// module chunks = 35783957827783 231608221292675 257298155543294","/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domready/ready.js\n// module id = 759\n// module chunks = 231608221292675","\"use strict\";\n\n/* global document: false, __webpack_require__: false */\npatch();\n\nfunction patch() {\n  var head = document.querySelector(\"head\");\n  var ensure = __webpack_require__.e;\n  var chunks = __webpack_require__.s;\n  var failures;\n\n  __webpack_require__.e = function (chunkId, callback) {\n    var loaded = false;\n    var immediate = true;\n\n    var handler = function handler(error) {\n      if (!callback) return;\n\n      callback(__webpack_require__, error);\n      callback = null;\n    };\n\n    if (!chunks && failures && failures[chunkId]) {\n      handler(true);\n      return;\n    }\n\n    ensure(chunkId, function () {\n      if (loaded) return;\n      loaded = true;\n\n      if (immediate) {\n        // webpack fires callback immediately if chunk was already loaded\n        // IE also fires callback immediately if script was already\n        // in a cache (AppCache counts too)\n        setTimeout(function () {\n          handler();\n        });\n      } else {\n        handler();\n      }\n    });\n\n    // This is |true| if chunk is already loaded and does not need onError call.\n    // This happens because in such case ensure() is performed in sync way\n    if (loaded) {\n      return;\n    }\n\n    immediate = false;\n\n    onError(function () {\n      if (loaded) return;\n      loaded = true;\n\n      if (chunks) {\n        chunks[chunkId] = void 0;\n      } else {\n        failures || (failures = {});\n        failures[chunkId] = true;\n      }\n\n      handler(true);\n    });\n  };\n\n  function onError(callback) {\n    var script = head.lastChild;\n\n    if (script.tagName !== \"SCRIPT\") {\n      if (typeof console !== \"undefined\" && console.warn) {\n        console.warn(\"Script is not a script\", script);\n      }\n\n      return;\n    }\n\n    script.onload = script.onerror = function () {\n      script.onload = script.onerror = null;\n      setTimeout(callback, 0);\n    };\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader/patch.js\n// module id = 38\n// module chunks = 231608221292675","\"use strict\";\n\nvar scrollToHash = function scrollToHash(offsetY) {\n  // Make sure React has had a chance to flush to DOM first.\n  setTimeout(function () {\n    var hash = window.decodeURI(window.location.hash.replace(\"#\", \"\"));\n    if (hash !== \"\") {\n      var element = document.getElementById(hash);\n      if (element) {\n        var offset = element.offsetTop;\n        window.scrollTo(0, offset - offsetY);\n      }\n    }\n  }, 10);\n};\n\nexports.onClientEntry = function (args, pluginOptions) {\n  var offsetY = 0;\n  if (pluginOptions.offsetY) {\n    offsetY = pluginOptions.offsetY;\n  }\n  // This code is only so scrolling to header hashes works in development.\n  // For production, the equivalent code is in gatsby-ssr.js.\n  if (process.env.NODE_ENV !== \"production\") {\n    scrollToHash(offsetY);\n  }\n};\n\nexports.onRouteUpdate = function (args, pluginOptions) {\n  var offsetY = 0;\n  if (pluginOptions.offsetY) {\n    offsetY = pluginOptions.offsetY;\n  }\n\n  scrollToHash(offsetY);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-remark-autolink-headers/gatsby-browser.js\n// module id = 808\n// module chunks = 231608221292675","/*\n * @name Lazy.js\n * Licensed under the MIT License (see LICENSE.txt)\n *\n * @fileOverview\n * Lazy.js is a lazy evaluation library for JavaScript.\n *\n * This has been done before. For examples see:\n *\n * - [wu.js](http://fitzgen.github.io/wu.js/)\n * - [Linq.js](http://linqjs.codeplex.com/)\n * - [from.js](https://github.com/suckgamoni/fromjs/)\n * - [IxJS](http://rx.codeplex.com/)\n * - [sloth.js](http://rfw.name/sloth.js/)\n *\n * However, at least at present, Lazy.js is faster (on average) than any of\n * those libraries. It is also more complete, with nearly all of the\n * functionality of [Underscore](http://underscorejs.org/) and\n * [Lo-Dash](http://lodash.com/).\n *\n * Finding your way around the code\n * --------------------------------\n *\n * At the heart of Lazy.js is the {@link Sequence} object. You create an initial\n * sequence using {@link Lazy}, which can accept an array, object, or string.\n * You can then \"chain\" together methods from this sequence, creating a new\n * sequence with each call.\n *\n * Here's an example:\n *\n *     var data = getReallyBigArray();\n *\n *     var statistics = Lazy(data)\n *       .map(transform)\n *       .filter(validate)\n *       .reduce(aggregate);\n *\n * {@link Sequence} is the foundation of other, more specific sequence types.\n *\n * An {@link ArrayLikeSequence} provides indexed access to its elements.\n *\n * An {@link ObjectLikeSequence} consists of key/value pairs.\n *\n * A {@link StringLikeSequence} is like a string (duh): actually, it is an\n * {@link ArrayLikeSequence} whose elements happen to be characters.\n *\n * An {@link AsyncSequence} is special: it iterates over its elements\n * asynchronously (so calling `each` generally begins an asynchronous loop and\n * returns immediately).\n *\n * For more information\n * --------------------\n *\n * I wrote a blog post that explains a little bit more about Lazy.js, which you\n * can read [here](http://philosopherdeveloper.com/posts/introducing-lazy-js.html).\n *\n * You can also [create an issue on GitHub](https://github.com/dtao/lazy.js/issues)\n * if you have any issues with the library. I work through them eventually.\n *\n * [@dtao](https://github.com/dtao)\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.Lazy = factory();\n  }\n})(this, function(context) {\n  /**\n   * Wraps an object and returns a {@link Sequence}. For `null` or `undefined`,\n   * simply returns an empty sequence (see {@link Lazy.strict} for a stricter\n   * implementation).\n   *\n   * - For **arrays**, Lazy will create a sequence comprising the elements in\n   *   the array (an {@link ArrayLikeSequence}).\n   * - For **objects**, Lazy will create a sequence of key/value pairs\n   *   (an {@link ObjectLikeSequence}).\n   * - For **strings**, Lazy will create a sequence of characters (a\n   *   {@link StringLikeSequence}).\n   *\n   * @public\n   * @param {Array|Object|string} source An array, object, or string to wrap.\n   * @returns {Sequence} The wrapped lazy object.\n   *\n   * @exampleHelpers\n   * // Utility functions to provide to all examples\n   * function increment(x) { return x + 1; }\n   * function isEven(x) { return x % 2 === 0; }\n   * function isPositive(x) { return x > 0; }\n   * function isNegative(x) { return x < 0; }\n   *\n   * // HACK!\n   * // autodoc tests for private methods don't pull in all variables defined\n   * // within the current scope :(\n   * var isArray = Array.isArray;\n   *\n   * @examples\n   * Lazy([1, 2, 4])       // instanceof Lazy.ArrayLikeSequence\n   * Lazy({ foo: \"bar\" })  // instanceof Lazy.ObjectLikeSequence\n   * Lazy(\"hello, world!\") // instanceof Lazy.StringLikeSequence\n   * Lazy()                // sequence: []\n   * Lazy(null)            // sequence: []\n   */\n  function Lazy(source) {\n    if (isArray(source)) {\n      return new ArrayWrapper(source);\n\n    } else if (typeof source === \"string\") {\n      return new StringWrapper(source);\n\n    } else if (source instanceof Sequence) {\n      return source;\n    }\n\n    if (Lazy.extensions) {\n      var extensions = Lazy.extensions, length = extensions.length, result;\n      while (!result && length--) {\n        result = extensions[length](source);\n      }\n      if (result) {\n        return result;\n      }\n    }\n\n    return new ObjectWrapper(source);\n  }\n\n  Lazy.VERSION = '0.5.1';\n\n  /*** Utility methods of questionable value ***/\n\n  Lazy.noop = function noop() {};\n  Lazy.identity = function identity(x) { return x; };\n  Lazy.equality = function equality(x, y) { return x === y; };\n\n  /**\n   * Provides a stricter version of {@link Lazy} which throws an error when\n   * attempting to wrap `null`, `undefined`, or numeric or boolean values as a\n   * sequence.\n   *\n   * @public\n   * @returns {Function} A stricter version of the {@link Lazy} helper function.\n   *\n   * @examples\n   * var Strict = Lazy.strict();\n   *\n   * Strict()                  // throws\n   * Strict(null)              // throws\n   * Strict(true)              // throws\n   * Strict(5)                 // throws\n   * Strict([1, 2, 3])         // instanceof Lazy.ArrayLikeSequence\n   * Strict({ foo: \"bar\" })    // instanceof Lazy.ObjectLikeSequence\n   * Strict(\"hello, world!\")   // instanceof Lazy.StringLikeSequence\n   *\n   * // Let's also ensure the static functions are still there.\n   * Strict.range(3)           // sequence: [0, 1, 2]\n   * Strict.generate(Date.now) // instanceof Lazy.GeneratedSequence\n   */\n  Lazy.strict = function strict() {\n    function StrictLazy(source) {\n      if (source == null) {\n        throw new Error(\"You cannot wrap null or undefined using Lazy.\");\n      }\n\n      if (typeof source === \"number\" || typeof source === \"boolean\") {\n        throw new Error(\"You cannot wrap primitive values using Lazy.\");\n      }\n\n      return Lazy(source);\n    };\n\n    Lazy(Lazy).each(function(property, name) {\n      StrictLazy[name] = property;\n    });\n\n    return StrictLazy;\n  };\n\n  /**\n   * The `Sequence` object provides a unified API encapsulating the notion of\n   * zero or more consecutive elements in a collection, stream, etc.\n   *\n   * Lazy evaluation\n   * ---------------\n   *\n   * Generally speaking, creating a sequence should not be an expensive operation,\n   * and should not iterate over an underlying source or trigger any side effects.\n   * This means that chaining together methods that return sequences incurs only\n   * the cost of creating the `Sequence` objects themselves and not the cost of\n   * iterating an underlying data source multiple times.\n   *\n   * The following code, for example, creates 4 sequences and does nothing with\n   * `source`:\n   *\n   *     var seq = Lazy(source) // 1st sequence\n   *       .map(func)           // 2nd\n   *       .filter(pred)        // 3rd\n   *       .reverse();          // 4th\n   *\n   * Lazy's convention is to hold off on iterating or otherwise *doing* anything\n   * (aside from creating `Sequence` objects) until you call `each`:\n   *\n   *     seq.each(function(x) { console.log(x); });\n   *\n   * Defining custom sequences\n   * -------------------------\n   *\n   * Defining your own type of sequence is relatively simple:\n   *\n   * 1. Pass a *method name* and an object containing *function overrides* to\n   *    {@link Sequence.define}. If the object includes a function called `init`,\n   *    this function will be called upon initialization.\n   * 2. The object should include at least either a `getIterator` method or an\n   *    `each` method. The former supports both asynchronous and synchronous\n   *    iteration, but is slightly more cumbersome to implement. The latter\n   *    supports synchronous iteration and can be automatically implemented in\n   *    terms of the former. You can also implement both if you want, e.g. to\n   *    optimize performance. For more info, see {@link Iterator} and\n   *    {@link AsyncSequence}.\n   *\n   * As a trivial example, the following code defines a new method, `sample`,\n   * which randomly may or may not include each element from its parent.\n   *\n   *     Lazy.Sequence.define(\"sample\", {\n   *       each: function(fn) {\n   *         return this.parent.each(function(e) {\n   *           // 50/50 chance of including this element.\n   *           if (Math.random() > 0.5) {\n   *             return fn(e);\n   *           }\n   *         });\n   *       }\n   *     });\n   *\n   * (Of course, the above could also easily have been implemented using\n   * {@link #filter} instead of creating a custom sequence. But I *did* say this\n   * was a trivial example, to be fair.)\n   *\n   * Now it will be possible to create this type of sequence from any parent\n   * sequence by calling the method name you specified. In other words, you can\n   * now do this:\n   *\n   *     Lazy(arr).sample();\n   *     Lazy(arr).map(func).sample();\n   *     Lazy(arr).map(func).filter(pred).sample();\n   *\n   * Etc., etc.\n   *\n   * @public\n   * @constructor\n   */\n  function Sequence() {}\n\n  /**\n   * Create a new constructor function for a type inheriting from `Sequence`.\n   *\n   * @public\n   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n   *     used for constructing the new sequence. The method will be attached to\n   *     the `Sequence` prototype so that it can be chained with any other\n   *     sequence methods, like {@link #map}, {@link #filter}, etc.\n   * @param {Object} overrides An object containing function overrides for this\n   *     new sequence type. **Must** include either `getIterator` or `each` (or\n   *     both). *May* include an `init` method as well. For these overrides,\n   *     `this` will be the new sequence, and `this.parent` will be the base\n   *     sequence from which the new sequence was constructed.\n   * @returns {Function} A constructor for a new type inheriting from `Sequence`.\n   *\n   * @examples\n   * // This sequence type logs every element to the specified logger as it\n   * // iterates over it.\n   * Lazy.Sequence.define(\"verbose\", {\n   *   init: function(logger) {\n   *     this.logger = logger;\n   *   },\n   *\n   *   each: function(fn) {\n   *     var logger = this.logger;\n   *     return this.parent.each(function(e, i) {\n   *       logger(e);\n   *       return fn(e, i);\n   *     });\n   *   }\n   * });\n   *\n   * Lazy([1, 2, 3]).verbose(logger).each(Lazy.noop) // calls logger 3 times\n   */\n  Sequence.define = function define(methodName, overrides) {\n    if (!overrides || (!overrides.getIterator && !overrides.each)) {\n      throw new Error(\"A custom sequence must implement *at least* getIterator or each!\");\n    }\n\n    return defineSequenceType(Sequence, methodName, overrides);\n  };\n\n  /**\n   * Gets the number of elements in the sequence. In some cases, this may\n   * require eagerly evaluating the sequence.\n   *\n   * @public\n   * @returns {number} The number of elements in the sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).size();                 // => 3\n   * Lazy([1, 2]).map(Lazy.identity).size(); // => 2\n   * Lazy([1, 2, 3]).reject(isEven).size();  // => 2\n   * Lazy([1, 2, 3]).take(1).size();         // => 1\n   * Lazy({ foo: 1, bar: 2 }).size();        // => 2\n   * Lazy('hello').size();                   // => 5\n   */\n  Sequence.prototype.size = function size() {\n    return this.getIndex().length();\n  };\n\n  /**\n   * Creates an {@link Iterator} object with two methods, `moveNext` -- returning\n   * true or false -- and `current` -- returning the current value.\n   *\n   * This method is used when asynchronously iterating over sequences. Any type\n   * inheriting from `Sequence` must implement this method or it can't support\n   * asynchronous iteration.\n   *\n   * Note that **this method is not intended to be used directly by application\n   * code.** Rather, it is intended as a means for implementors to potentially\n   * define custom sequence types that support either synchronous or\n   * asynchronous iteration.\n   *\n   * @public\n   * @returns {Iterator} An iterator object.\n   *\n   * @examples\n   * var iterator = Lazy([1, 2]).getIterator();\n   *\n   * iterator.moveNext(); // => true\n   * iterator.current();  // => 1\n   * iterator.moveNext(); // => true\n   * iterator.current();  // => 2\n   * iterator.moveNext(); // => false\n   */\n  Sequence.prototype.getIterator = function getIterator() {\n    return new Iterator(this);\n  };\n\n  /**\n   * Gets the root sequence underlying the current chain of sequences.\n   */\n  Sequence.prototype.root = function root() {\n    return this.parent.root();\n  };\n\n  /**\n   * Whether or not the current sequence is an asynchronous one. This is more\n   * accurate than checking `instanceof {@link AsyncSequence}` because, for\n   * example, `Lazy([1, 2, 3]).async().map(Lazy.identity)` returns a sequence\n   * that iterates asynchronously even though it's not an instance of\n   * `AsyncSequence`.\n   *\n   * @returns {boolean} Whether or not the current sequence is an asynchronous one.\n   */\n  Sequence.prototype.isAsync = function isAsync() {\n    return this.parent ? this.parent.isAsync() : false;\n  };\n\n  /**\n   * Evaluates the sequence and produces the appropriate value (an array in most\n   * cases, an object for {@link ObjectLikeSequence}s or a string for\n   * {@link StringLikeSequence}s).\n   *\n   * @returns {Array|string|Object} The value resulting from fully evaluating\n   *     the sequence.\n   */\n  Sequence.prototype.value = function value() {\n    return this.toArray();\n  };\n\n  /**\n   * Applies the current transformation chain to a given source, returning the\n   * resulting value.\n   *\n   * @examples\n   * var sequence = Lazy([])\n   *   .map(function(x) { return x * -1; })\n   *   .filter(function(x) { return x % 2 === 0; });\n   *\n   * sequence.apply([1, 2, 3, 4]); // => [-2, -4]\n   */\n  Sequence.prototype.apply = function apply(source) {\n    var root = this.root(),\n        previousSource = root.source,\n        result;\n\n    try {\n      root.source = source;\n      result = this.value();\n    } finally {\n      root.source = previousSource;\n    }\n\n    return result;\n  };\n\n  /**\n   * The Iterator object provides an API for iterating over a sequence.\n   *\n   * The purpose of the `Iterator` type is mainly to offer an agnostic way of\n   * iterating over a sequence -- either synchronous (i.e. with a `while` loop)\n   * or asynchronously (with recursive calls to either `setTimeout` or --- if\n   * available --- `setImmediate`). It is not intended to be used directly by\n   * application code.\n   *\n   * @public\n   * @constructor\n   * @param {Sequence} sequence The sequence to iterate over.\n   */\n  function Iterator(sequence) {\n    this.sequence = sequence;\n    this.index    = -1;\n  }\n\n  /**\n   * Gets the current item this iterator is pointing to.\n   *\n   * @public\n   * @returns {*} The current item.\n   */\n  Iterator.prototype.current = function current() {\n    return this.cachedIndex && this.cachedIndex.get(this.index);\n  };\n\n  /**\n   * Moves the iterator to the next item in a sequence, if possible.\n   *\n   * @public\n   * @returns {boolean} True if the iterator is able to move to a new item, or else\n   *     false.\n   */\n  Iterator.prototype.moveNext = function moveNext() {\n    var cachedIndex = this.cachedIndex;\n\n    if (!cachedIndex) {\n      cachedIndex = this.cachedIndex = this.sequence.getIndex();\n    }\n\n    if (this.index >= cachedIndex.length() - 1) {\n      return false;\n    }\n\n    ++this.index;\n    return true;\n  };\n\n  /**\n   * Creates an array snapshot of a sequence.\n   *\n   * Note that for indefinite sequences, this method may raise an exception or\n   * (worse) cause the environment to hang.\n   *\n   * @public\n   * @returns {Array} An array containing the current contents of the sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).toArray() // => [1, 2, 3]\n   */\n  Sequence.prototype.toArray = function toArray() {\n    return this.reduce(function(arr, element) {\n      arr.push(element);\n      return arr;\n    }, []);\n  };\n\n  /**\n   * Compare this to another sequence for equality.\n   *\n   * @public\n   * @param {Sequence} other The other sequence to compare this one to.\n   * @param {Function=} equalityFn An optional equality function, which should\n   *     take two arguments and return true or false to indicate whether those\n   *     values are considered equal.\n   * @returns {boolean} Whether the two sequences contain the same values in\n   *     the same order.\n   *\n   * @examples\n   * Lazy([1, 2]).equals(Lazy([1, 2]))   // => true\n   * Lazy([1, 2]).equals(Lazy([2, 1]))   // => false\n   * Lazy([1]).equals(Lazy([1, 2]))      // => false\n   * Lazy([1, 2]).equals(Lazy([1]))      // => false\n   * Lazy([]).equals(Lazy([]))           // => true\n   * Lazy(['foo']).equals(Lazy(['foo'])) // => true\n   * Lazy(['1']).equals(Lazy([1]))       // => false\n   * Lazy([false]).equals(Lazy([0]))     // => false\n   * Lazy([1, 2]).equals([1, 2])         // => false\n   * Lazy([1, 2]).equals('[1, 2]')       // => false\n   */\n  Sequence.prototype.equals = function equals(other, equalityFn) {\n    if (!(other instanceof Sequence)) {\n      return false;\n    }\n\n    var it  = this.getIterator(),\n        oit = other.getIterator(),\n        eq  = equalityFn || Lazy.equality;\n    while (it.moveNext()) {\n      if (!oit.moveNext()) {\n        return false;\n      }\n      if (!eq(it.current(), oit.current())) {\n        return false;\n      }\n    }\n    return !oit.moveNext();\n  };\n\n  /**\n   * Provides an indexed view into the sequence.\n   *\n   * For sequences that are already indexed, this will simply return the\n   * sequence. For non-indexed sequences, this will eagerly evaluate the\n   * sequence.\n   *\n   * @returns {ArrayLikeSequence} A sequence containing the current contents of\n   *     the sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).filter(isEven)            // instanceof Lazy.Sequence\n   * Lazy([1, 2, 3]).filter(isEven).getIndex() // instanceof Lazy.ArrayLikeSequence\n   */\n  Sequence.prototype.getIndex = function getIndex() {\n    return new ArrayWrapper(this.toArray());\n  };\n\n  /**\n   * Returns the element at the specified index. Note that, for sequences that\n   * are not {@link ArrayLikeSequence}s, this may require partially evaluating\n   * the sequence, iterating to reach the result. (In other words for such\n   * sequences this method is not O(1).)\n   *\n   * @public\n   * @param {number} i The index to access.\n   * @returns {*} The element.\n   *\n   */\n  Sequence.prototype.get = function get(i) {\n    var element;\n    this.each(function(e, index) {\n      if (index === i) {\n        element = e;\n        return false;\n      }\n    });\n    return element;\n  };\n\n  /**\n   * Provides an indexed, memoized view into the sequence. This will cache the\n   * result whenever the sequence is first iterated, so that subsequent\n   * iterations will access the same element objects.\n   *\n   * @public\n   * @returns {ArrayLikeSequence} An indexed, memoized sequence containing this\n   *     sequence's elements, cached after the first iteration.\n   *\n   * @example\n   * function createObject() { return new Object(); }\n   *\n   * var plain    = Lazy.generate(createObject, 10),\n   *     memoized = Lazy.generate(createObject, 10).memoize();\n   *\n   * plain.toArray()[0] === plain.toArray()[0];       // => false\n   * memoized.toArray()[0] === memoized.toArray()[0]; // => true\n   */\n  Sequence.prototype.memoize = function memoize() {\n    return new MemoizedSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function MemoizedSequence(parent) {\n    this.parent   = parent;\n    this.memo     = [];\n    this.iterator = undefined;\n    this.complete = false;\n  }\n\n  // MemoizedSequence needs to have its prototype set up after ArrayLikeSequence\n\n  /**\n   * Creates an object from a sequence of key/value pairs.\n   *\n   * @public\n   * @returns {Object} An object with keys and values corresponding to the pairs\n   *     of elements in the sequence.\n   *\n   * @examples\n   * var details = [\n   *   [\"first\", \"Dan\"],\n   *   [\"last\", \"Tao\"],\n   *   [\"age\", 29]\n   * ];\n   *\n   * Lazy(details).toObject() // => { first: \"Dan\", last: \"Tao\", age: 29 }\n   */\n  Sequence.prototype.toObject = function toObject() {\n    return this.reduce(function(object, pair) {\n      object[pair[0]] = pair[1];\n      return object;\n    }, {});\n  };\n\n  /**\n   * Iterates over this sequence and executes a function for every element.\n   *\n   * @public\n   * @aka forEach\n   * @param {Function} fn The function to call on each element in the sequence.\n   *     Return false from the function to end the iteration.\n   * @returns {boolean} `true` if the iteration evaluated the entire sequence,\n   *     or `false` if iteration was ended early.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4]).each(fn) // calls fn 4 times\n   */\n  Sequence.prototype.each = function each(fn) {\n    var iterator = this.getIterator(),\n        i = -1;\n\n    while (iterator.moveNext()) {\n      if (fn(iterator.current(), ++i) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  Sequence.prototype.forEach = function forEach(fn) {\n    return this.each(fn);\n  };\n\n  /**\n   * Creates a new sequence whose values are calculated by passing this sequence's\n   * elements through some mapping function.\n   *\n   * @public\n   * @aka collect\n   * @param {Function} mapFn The mapping function used to project this sequence's\n   *     elements onto a new sequence. This function takes up to two arguments:\n   *     the element, and the current index.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * function addIndexToValue(e, i) { return e + i; }\n   *\n   * Lazy([]).map(increment)              // sequence: []\n   * Lazy([1, 2, 3]).map(increment)       // sequence: [2, 3, 4]\n   * Lazy([1, 2, 3]).map(addIndexToValue) // sequence: [1, 3, 5]\n   *\n   * @benchmarks\n   * function increment(x) { return x + 1; }\n   *\n   * var smArr = Lazy.range(10).toArray(),\n   *     lgArr = Lazy.range(100).toArray();\n   *\n   * Lazy(smArr).map(increment).each(Lazy.noop) // lazy - 10 elements\n   * Lazy(lgArr).map(increment).each(Lazy.noop) // lazy - 100 elements\n   * _.each(_.map(smArr, increment), _.noop)    // lodash - 10 elements\n   * _.each(_.map(lgArr, increment), _.noop)    // lodash - 100 elements\n   */\n  Sequence.prototype.map = function map(mapFn) {\n    return new MappedSequence(this, createCallback(mapFn));\n  };\n\n  Sequence.prototype.collect = function collect(mapFn) {\n    return this.map(mapFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function MappedSequence(parent, mapFn) {\n    this.parent = parent;\n    this.mapFn  = mapFn;\n  }\n\n  MappedSequence.prototype = Object.create(Sequence.prototype);\n\n  MappedSequence.prototype.getIterator = function getIterator() {\n    return new MappingIterator(this.parent, this.mapFn);\n  };\n\n  MappedSequence.prototype.each = function each(fn) {\n    var mapFn = this.mapFn;\n    return this.parent.each(function(e, i) {\n      return fn(mapFn(e, i), i);\n    });\n  };\n\n  /**\n   * @constructor\n   */\n  function MappingIterator(sequence, mapFn) {\n    this.iterator = sequence.getIterator();\n    this.mapFn    = mapFn;\n    this.index    = -1;\n  }\n\n  MappingIterator.prototype.current = function current() {\n    return this.mapFn(this.iterator.current(), this.index);\n  };\n\n  MappingIterator.prototype.moveNext = function moveNext() {\n    if (this.iterator.moveNext()) {\n      ++this.index;\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * Creates a new sequence whose values are calculated by accessing the specified\n   * property from each element in this sequence.\n   *\n   * @public\n   * @param {string} propertyName The name of the property to access for every\n   *     element in this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var people = [\n   *   { first: \"Dan\", last: \"Tao\" },\n   *   { first: \"Bob\", last: \"Smith\" }\n   * ];\n   *\n   * Lazy(people).pluck(\"last\") // sequence: [\"Tao\", \"Smith\"]\n   */\n  Sequence.prototype.pluck = function pluck(property) {\n    return this.map(property);\n  };\n\n  /**\n   * Creates a new sequence whose values are calculated by invoking the specified\n   * function on each element in this sequence.\n   *\n   * @public\n   * @param {string} methodName The name of the method to invoke for every element\n   *     in this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * function Person(first, last) {\n   *   this.fullName = function fullName() {\n   *     return first + \" \" + last;\n   *   };\n   * }\n   *\n   * var people = [\n   *   new Person(\"Dan\", \"Tao\"),\n   *   new Person(\"Bob\", \"Smith\")\n   * ];\n   *\n   * Lazy(people).invoke(\"fullName\") // sequence: [\"Dan Tao\", \"Bob Smith\"]\n   */\n  Sequence.prototype.invoke = function invoke(methodName) {\n    return this.map(function(e) {\n      return e[methodName]();\n    });\n  };\n\n  /**\n   * Creates a new sequence whose values are the elements of this sequence which\n   * satisfy the specified predicate.\n   *\n   * @public\n   * @aka select\n   * @param {Function} filterFn The predicate to call on each element in this\n   *     sequence, which returns true if the element should be included.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var numbers = [1, 2, 3, 4, 5, 6];\n   *\n   * Lazy(numbers).filter(isEven) // sequence: [2, 4, 6]\n   *\n   * @benchmarks\n   * function isEven(x) { return x % 2 === 0; }\n   *\n   * var smArr = Lazy.range(10).toArray(),\n   *     lgArr = Lazy.range(100).toArray();\n   *\n   * Lazy(smArr).filter(isEven).each(Lazy.noop) // lazy - 10 elements\n   * Lazy(lgArr).filter(isEven).each(Lazy.noop) // lazy - 100 elements\n   * _.each(_.filter(smArr, isEven), _.noop)    // lodash - 10 elements\n   * _.each(_.filter(lgArr, isEven), _.noop)    // lodash - 100 elements\n   */\n  Sequence.prototype.filter = function filter(filterFn) {\n    return new FilteredSequence(this, createCallback(filterFn));\n  };\n\n  Sequence.prototype.select = function select(filterFn) {\n    return this.filter(filterFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function FilteredSequence(parent, filterFn) {\n    this.parent   = parent;\n    this.filterFn = filterFn;\n  }\n\n  FilteredSequence.prototype = Object.create(Sequence.prototype);\n\n  FilteredSequence.prototype.getIterator = function getIterator() {\n    return new FilteringIterator(this.parent, this.filterFn);\n  };\n\n  FilteredSequence.prototype.each = function each(fn) {\n    var filterFn = this.filterFn,\n        j = 0;\n\n    return this.parent.each(function(e, i) {\n      if (filterFn(e, i)) {\n        return fn(e, j++);\n      }\n    });\n  };\n\n  FilteredSequence.prototype.reverse = function reverse() {\n    return this.parent.reverse().filter(this.filterFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function FilteringIterator(sequence, filterFn) {\n    this.iterator = sequence.getIterator();\n    this.filterFn = filterFn;\n    this.index    = 0;\n  }\n\n  FilteringIterator.prototype.current = function current() {\n    return this.value;\n  };\n\n  FilteringIterator.prototype.moveNext = function moveNext() {\n    var iterator = this.iterator,\n        filterFn = this.filterFn,\n        value;\n\n    while (iterator.moveNext()) {\n      value = iterator.current();\n      if (filterFn(value, this.index++)) {\n        this.value = value;\n        return true;\n      }\n    }\n\n    this.value = undefined;\n    return false;\n  };\n\n  /**\n   * Creates a new sequence whose values exclude the elements of this sequence\n   * identified by the specified predicate.\n   *\n   * @public\n   * @param {Function} rejectFn The predicate to call on each element in this\n   *     sequence, which returns true if the element should be omitted.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4, 5]).reject(isEven)              // sequence: [1, 3, 5]\n   * Lazy([{ foo: 1 }, { bar: 2 }]).reject('foo')      // sequence: [{ bar: 2 }]\n   * Lazy([{ foo: 1 }, { foo: 2 }]).reject({ foo: 2 }) // sequence: [{ foo: 1 }]\n   */\n  Sequence.prototype.reject = function reject(rejectFn) {\n    rejectFn = createCallback(rejectFn);\n    return this.filter(function(e) { return !rejectFn(e); });\n  };\n\n  /**\n   * Creates a new sequence whose values have the specified type, as determined\n   * by the `typeof` operator.\n   *\n   * @public\n   * @param {string} type The type of elements to include from the underlying\n   *     sequence, i.e. where `typeof [element] === [type]`.\n   * @returns {Sequence} The new sequence, comprising elements of the specified\n   *     type.\n   *\n   * @examples\n   * Lazy([1, 2, 'foo', 'bar']).ofType('number')  // sequence: [1, 2]\n   * Lazy([1, 2, 'foo', 'bar']).ofType('string')  // sequence: ['foo', 'bar']\n   * Lazy([1, 2, 'foo', 'bar']).ofType('boolean') // sequence: []\n   */\n  Sequence.prototype.ofType = function ofType(type) {\n    return this.filter(function(e) { return typeof e === type; });\n  };\n\n  /**\n   * Creates a new sequence whose values are the elements of this sequence with\n   * property names and values matching those of the specified object.\n   *\n   * @public\n   * @param {Object} properties The properties that should be found on every\n   *     element that is to be included in this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var people = [\n   *   { first: \"Dan\", last: \"Tao\" },\n   *   { first: \"Bob\", last: \"Smith\" }\n   * ];\n   *\n   * Lazy(people).where({ first: \"Dan\" }) // sequence: [{ first: \"Dan\", last: \"Tao\" }]\n   *\n   * @benchmarks\n   * var animals = [\"dog\", \"cat\", \"mouse\", \"horse\", \"pig\", \"snake\"];\n   *\n   * Lazy(animals).where({ length: 3 }).each(Lazy.noop) // lazy\n   * _.each(_.where(animals, { length: 3 }), _.noop)    // lodash\n   */\n  Sequence.prototype.where = function where(properties) {\n    return this.filter(properties);\n  };\n\n  /**\n   * Creates a new sequence with the same elements as this one, but to be iterated\n   * in the opposite order.\n   *\n   * Note that in some (but not all) cases, the only way to create such a sequence\n   * may require iterating the entire underlying source when `each` is called.\n   *\n   * @public\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).reverse() // sequence: [3, 2, 1]\n   * Lazy([]).reverse()        // sequence: []\n   */\n  Sequence.prototype.reverse = function reverse() {\n    return new ReversedSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function ReversedSequence(parent) {\n    this.parent = parent;\n  }\n\n  ReversedSequence.prototype = Object.create(Sequence.prototype);\n\n  ReversedSequence.prototype.getIterator = function getIterator() {\n    return new ReversedIterator(this.parent);\n  };\n\n  /**\n   * @constuctor\n   */\n  function ReversedIterator(sequence) {\n    this.sequence = sequence;\n  }\n\n  ReversedIterator.prototype.current = function current() {\n    return this.getIndex().get(this.index);\n  };\n\n  ReversedIterator.prototype.moveNext = function moveNext() {\n    var index  = this.getIndex(),\n        length = index.length();\n\n    if (typeof this.index === \"undefined\") {\n      this.index = length;\n    }\n\n    return (--this.index >= 0);\n  };\n\n  ReversedIterator.prototype.getIndex = function getIndex() {\n    if (!this.cachedIndex) {\n      this.cachedIndex = this.sequence.getIndex();\n    }\n\n    return this.cachedIndex;\n  };\n\n  /**\n   * Creates a new sequence with all of the elements of this one, plus those of\n   * the given array(s).\n   *\n   * @public\n   * @param {...*} var_args One or more values (or arrays of values) to use for\n   *     additional items after this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var left  = [1, 2, 3];\n   * var right = [4, 5, 6];\n   *\n   * Lazy(left).concat(right)             // sequence: [1, 2, 3, 4, 5, 6]\n   * Lazy(left).concat(Lazy(right))       // sequence: [1, 2, 3, 4, 5, 6]\n   * Lazy(left).concat(right, [7, 8])     // sequence: [1, 2, 3, 4, 5, 6, 7, 8]\n   * Lazy(left).concat([4, [5, 6]])       // sequence: [1, 2, 3, 4, [5, 6]]\n   * Lazy(left).concat(Lazy([4, [5, 6]])) // sequence: [1, 2, 3, 4, [5, 6]]\n   */\n  Sequence.prototype.concat = function concat(var_args) {\n    return new ConcatenatedSequence(this, arraySlice.call(arguments, 0));\n  };\n\n  /**\n   * @constructor\n   */\n  function ConcatenatedSequence(parent, arrays) {\n    this.parent = parent;\n    this.arrays = arrays;\n  }\n\n  ConcatenatedSequence.prototype = Object.create(Sequence.prototype);\n\n  ConcatenatedSequence.prototype.each = function each(fn) {\n    var done = false,\n        i = 0;\n\n    this.parent.each(function(e) {\n      if (fn(e, i++) === false) {\n        done = true;\n        return false;\n      }\n    });\n\n    if (!done) {\n      Lazy(this.arrays).flatten(true).each(function(e) {\n        if (fn(e, i++) === false) {\n          return false;\n        }\n      });\n    }\n  };\n\n  /**\n   * Creates a new sequence comprising the first N elements from this sequence, OR\n   * (if N is `undefined`) simply returns the first element of this sequence.\n   *\n   * @public\n   * @aka head, take\n   * @param {number=} count The number of elements to take from this sequence. If\n   *     this value exceeds the length of the sequence, the resulting sequence\n   *     will be essentially the same as this one.\n   * @returns {*} The new sequence (or the first element from this sequence if\n   *     no count was given).\n   *\n   * @examples\n   * function powerOfTwo(exp) {\n   *   return Math.pow(2, exp);\n   * }\n   *\n   * Lazy.generate(powerOfTwo).first()          // => 1\n   * Lazy.generate(powerOfTwo).first(5)         // sequence: [1, 2, 4, 8, 16]\n   * Lazy.generate(powerOfTwo).skip(2).first()  // => 4\n   * Lazy.generate(powerOfTwo).skip(2).first(2) // sequence: [4, 8]\n   */\n  Sequence.prototype.first = function first(count) {\n    if (typeof count === \"undefined\") {\n      return getFirst(this);\n    }\n    return new TakeSequence(this, count);\n  };\n\n  Sequence.prototype.head =\n  Sequence.prototype.take = function (count) {\n    return this.first(count);\n  };\n\n  /**\n   * @constructor\n   */\n  function TakeSequence(parent, count) {\n    this.parent = parent;\n    this.count  = count;\n  }\n\n  TakeSequence.prototype = Object.create(Sequence.prototype);\n\n  TakeSequence.prototype.getIterator = function getIterator() {\n    return new TakeIterator(this.parent, this.count);\n  };\n\n  TakeSequence.prototype.each = function each(fn) {\n    var count = this.count,\n        i     = 0;\n\n    var result;\n    var handle = this.parent.each(function(e) {\n      if (i < count) { result = fn(e, i++); }\n      if (i >= count) { return false; }\n      return result;\n    });\n\n    if (handle instanceof AsyncHandle) {\n      return handle;\n    }\n\n    return i === count && result !== false;\n  };\n\n  /**\n   * @constructor\n   */\n  function TakeIterator(sequence, count) {\n    this.iterator = sequence.getIterator();\n    this.count    = count;\n  }\n\n  TakeIterator.prototype.current = function current() {\n    return this.iterator.current();\n  };\n\n  TakeIterator.prototype.moveNext = function moveNext() {\n    return ((--this.count >= 0) && this.iterator.moveNext());\n  };\n\n  /**\n   * Creates a new sequence comprising the elements from the head of this sequence\n   * that satisfy some predicate. Once an element is encountered that doesn't\n   * satisfy the predicate, iteration will stop.\n   *\n   * @public\n   * @param {Function} predicate\n   * @returns {Sequence} The new sequence\n   *\n   * @examples\n   * function lessThan(x) {\n   *   return function(y) {\n   *     return y < x;\n   *   };\n   * }\n   *\n   * Lazy([1, 2, 3, 4]).takeWhile(lessThan(3)) // sequence: [1, 2]\n   * Lazy([1, 2, 3, 4]).takeWhile(lessThan(0)) // sequence: []\n   */\n  Sequence.prototype.takeWhile = function takeWhile(predicate) {\n    return new TakeWhileSequence(this, predicate);\n  };\n\n  /**\n   * @constructor\n   */\n  function TakeWhileSequence(parent, predicate) {\n    this.parent    = parent;\n    this.predicate = predicate;\n  }\n\n  TakeWhileSequence.prototype = Object.create(Sequence.prototype);\n\n  TakeWhileSequence.prototype.each = function each(fn) {\n    var predicate = this.predicate,\n        finished = false,\n        j = 0;\n\n    var result = this.parent.each(function(e, i) {\n      if (!predicate(e, i)) {\n        finished = true;\n        return false;\n      }\n\n      return fn(e, j++);\n    });\n\n    if (result instanceof AsyncHandle) {\n      return result;\n    }\n\n    return finished;\n  };\n\n  /**\n   * Creates a new sequence comprising all but the last N elements of this\n   * sequence.\n   *\n   * @public\n   * @param {number=} count The number of items to omit from the end of the\n   *     sequence (defaults to 1).\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4]).initial()                    // sequence: [1, 2, 3]\n   * Lazy([1, 2, 3, 4]).initial(2)                   // sequence: [1, 2]\n   * Lazy([1, 2, 3]).filter(Lazy.identity).initial() // sequence: [1, 2]\n   */\n  Sequence.prototype.initial = function initial(count) {\n    return new InitialSequence(this, count);\n  };\n\n  function InitialSequence(parent, count) {\n    this.parent = parent;\n    this.count = typeof count === \"number\" ? count : 1;\n  }\n\n  InitialSequence.prototype = Object.create(Sequence.prototype);\n\n  InitialSequence.prototype.each = function each(fn) {\n    var index = this.parent.getIndex();\n    return index.take(index.length() - this.count).each(fn);\n  };\n\n  /**\n   * Creates a new sequence comprising the last N elements of this sequence, OR\n   * (if N is `undefined`) simply returns the last element of this sequence.\n   *\n   * @public\n   * @param {number=} count The number of items to take from the end of the\n   *     sequence.\n   * @returns {*} The new sequence (or the last element from this sequence\n   *     if no count was given).\n   *\n   * @examples\n   * Lazy([1, 2, 3]).last()                 // => 3\n   * Lazy([1, 2, 3]).last(2)                // sequence: [2, 3]\n   * Lazy([1, 2, 3]).filter(isEven).last(2) // sequence: [2]\n   */\n  Sequence.prototype.last = function last(count) {\n    if (typeof count === \"undefined\") {\n      return this.reverse().first();\n    }\n    return this.reverse().take(count).reverse();\n  };\n\n  /**\n   * Returns the first element in this sequence with property names and values\n   * matching those of the specified object.\n   *\n   * @public\n   * @param {Object} properties The properties that should be found on some\n   *     element in this sequence.\n   * @returns {*} The found element, or `undefined` if none exists in this\n   *     sequence.\n   *\n   * @examples\n   * var words = [\"foo\", \"bar\"];\n   *\n   * Lazy(words).findWhere({ 0: \"f\" }); // => \"foo\"\n   * Lazy(words).findWhere({ 0: \"z\" }); // => undefined\n   */\n  Sequence.prototype.findWhere = function findWhere(properties) {\n    return this.where(properties).first();\n  };\n\n  /**\n   * Creates a new sequence comprising all but the first N elements of this\n   * sequence.\n   *\n   * @public\n   * @aka skip, tail, rest\n   * @param {number=} count The number of items to omit from the beginning of the\n   *     sequence (defaults to 1).\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4]).rest()  // sequence: [2, 3, 4]\n   * Lazy([1, 2, 3, 4]).rest(0) // sequence: [1, 2, 3, 4]\n   * Lazy([1, 2, 3, 4]).rest(2) // sequence: [3, 4]\n   * Lazy([1, 2, 3, 4]).rest(5) // sequence: []\n   */\n  Sequence.prototype.rest = function rest(count) {\n    return new DropSequence(this, count);\n  };\n\n  Sequence.prototype.skip =\n  Sequence.prototype.tail =\n  Sequence.prototype.drop = function drop(count) {\n    return this.rest(count);\n  };\n\n  /**\n   * @constructor\n   */\n  function DropSequence(parent, count) {\n    this.parent = parent;\n    this.count  = typeof count === \"number\" ? count : 1;\n  }\n\n  DropSequence.prototype = Object.create(Sequence.prototype);\n\n  DropSequence.prototype.each = function each(fn) {\n    var count   = this.count,\n        dropped = 0,\n        i       = 0;\n\n    return this.parent.each(function(e) {\n      if (dropped++ < count) { return; }\n      return fn(e, i++);\n    });\n  };\n\n  /**\n   * Creates a new sequence comprising the elements from this sequence *after*\n   * those that satisfy some predicate. The sequence starts with the first\n   * element that does not match the predicate.\n   *\n   * @public\n   * @aka skipWhile\n   * @param {Function} predicate\n   * @returns {Sequence} The new sequence\n   */\n  Sequence.prototype.dropWhile = function dropWhile(predicate) {\n    return new DropWhileSequence(this, predicate);\n  };\n\n  Sequence.prototype.skipWhile = function skipWhile(predicate) {\n    return this.dropWhile(predicate);\n  };\n\n  /**\n   * @constructor\n   */\n  function DropWhileSequence(parent, predicate) {\n    this.parent    = parent;\n    this.predicate = predicate;\n  }\n\n  DropWhileSequence.prototype = Object.create(Sequence.prototype);\n\n  DropWhileSequence.prototype.each = function each(fn) {\n    var predicate = this.predicate,\n        done      = false;\n\n    return this.parent.each(function(e) {\n      if (!done) {\n        if (predicate(e)) {\n          return;\n        }\n\n        done = true;\n      }\n\n      return fn(e);\n    });\n  };\n\n  /**\n   * Creates a new sequence with the same elements as this one, but ordered\n   * using the specified comparison function.\n   *\n   * This has essentially the same behavior as calling\n   * [`Array#sort`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort),\n   * but obviously instead of modifying the collection it returns a new\n   * {@link Sequence} object.\n   *\n   * @public\n   * @param {Function=} sortFn The function used to compare elements in the\n   *     sequence. The function will be passed two elements and should return:\n   *     - 1 if the first is greater\n   *     - -1 if the second is greater\n   *     - 0 if the two values are the same\n   * @param {boolean} descending Whether or not the resulting sequence should be\n   *     in descending order (defaults to `false`).\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([5, 10, 1]).sort()                // sequence: [1, 5, 10]\n   * Lazy(['foo', 'bar']).sort()            // sequence: ['bar', 'foo']\n   * Lazy(['b', 'c', 'a']).sort(null, true) // sequence: ['c', 'b', 'a']\n   * Lazy([5, 10, 1]).sort(null, true)      // sequence: [10, 5, 1]\n   *\n   * // Sorting w/ custom comparison function\n   * Lazy(['a', 'ab', 'aa', 'ba', 'b', 'abc']).sort(function compare(x, y) {\n   *   if (x.length && (x.length !== y.length)) { return compare(x.length, y.length); }\n   *   if (x === y) { return 0; }\n   *   return x > y ? 1 : -1;\n   * });\n   * // => sequence: ['a', 'b', 'aa', 'ab', 'ba', 'abc']\n   */\n  Sequence.prototype.sort = function sort(sortFn, descending) {\n    sortFn || (sortFn = compare);\n    if (descending) { sortFn = reverseArguments(sortFn); }\n    return new SortedSequence(this, sortFn);\n  };\n\n  /**\n   * Creates a new sequence with the same elements as this one, but ordered by\n   * the results of the given function.\n   *\n   * You can pass:\n   *\n   * - a *string*, to sort by the named property\n   * - a function, to sort by the result of calling the function on each element\n   *\n   * @public\n   * @param {Function} sortFn The function to call on the elements in this\n   *     sequence, in order to sort them.\n   * @param {boolean} descending Whether or not the resulting sequence should be\n   *     in descending order (defaults to `false`).\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * function population(country) {\n   *   return country.pop;\n   * }\n   *\n   * function area(country) {\n   *   return country.sqkm;\n   * }\n   *\n   * var countries = [\n   *   { name: \"USA\", pop: 320000000, sqkm: 9600000 },\n   *   { name: \"Brazil\", pop: 194000000, sqkm: 8500000 },\n   *   { name: \"Nigeria\", pop: 174000000, sqkm: 924000 },\n   *   { name: \"China\", pop: 1350000000, sqkm: 9700000 },\n   *   { name: \"Russia\", pop: 143000000, sqkm: 17000000 },\n   *   { name: \"Australia\", pop: 23000000, sqkm: 7700000 }\n   * ];\n   *\n   * Lazy(countries).sortBy(population).last(3).pluck('name') // sequence: [\"Brazil\", \"USA\", \"China\"]\n   * Lazy(countries).sortBy(area).last(3).pluck('name')       // sequence: [\"USA\", \"China\", \"Russia\"]\n   * Lazy(countries).sortBy(area, true).first(3).pluck('name') // sequence: [\"Russia\", \"China\", \"USA\"]\n   *\n   * @benchmarks\n   * var randoms = Lazy.generate(Math.random).take(100).toArray();\n   *\n   * Lazy(randoms).sortBy(Lazy.identity).each(Lazy.noop) // lazy\n   * _.each(_.sortBy(randoms, Lazy.identity), _.noop)    // lodash\n   */\n  Sequence.prototype.sortBy = function sortBy(sortFn, descending) {\n    sortFn = createComparator(sortFn);\n    if (descending) { sortFn = reverseArguments(sortFn); }\n    return new SortedSequence(this, sortFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function SortedSequence(parent, sortFn) {\n    this.parent = parent;\n    this.sortFn = sortFn;\n  }\n\n  SortedSequence.prototype = Object.create(Sequence.prototype);\n\n  SortedSequence.prototype.each = function each(fn) {\n    var sortFn = this.sortFn,\n        result = this.parent.toArray();\n\n    result.sort(sortFn);\n\n    return forEach(result, fn);\n  };\n\n  /**\n   * @examples\n   * var items = [{ a: 4 }, { a: 3 }, { a: 5 }];\n   *\n   * Lazy(items).sortBy('a').reverse();\n   * // => sequence: [{ a: 5 }, { a: 4 }, { a: 3 }]\n   *\n   * Lazy(items).sortBy('a').reverse().reverse();\n   * // => sequence: [{ a: 3 }, { a: 4 }, { a: 5 }]\n   */\n  SortedSequence.prototype.reverse = function reverse() {\n    return new SortedSequence(this.parent, reverseArguments(this.sortFn));\n  };\n\n  /**\n   * Creates a new {@link ObjectLikeSequence} comprising the elements in this\n   * one, grouped together according to some key. The value associated with each\n   * key in the resulting object-like sequence is an array containing all of\n   * the elements in this sequence with that key.\n   *\n   * @public\n   * @param {Function|string} keyFn The function to call on the elements in this\n   *     sequence to obtain a key by which to group them, or a string representing\n   *     a parameter to read from all the elements in this sequence.\n   * @param {Function|string} valFn (Optional) The function to call on the elements\n   *     in this sequence to assign to the value for each instance to appear in the\n   *     group, or a string representing a parameter to read from all the elements\n   *     in this sequence.\n   * @returns {ObjectLikeSequence} The new sequence.\n   *\n   * @examples\n   * function oddOrEven(x) {\n   *   return x % 2 === 0 ? 'even' : 'odd';\n   * }\n   * function square(x) {\n   *   return x*x;\n   * }\n   *\n   * var numbers = [1, 2, 3, 4, 5];\n   *\n   * Lazy(numbers).groupBy(oddOrEven)                     // sequence: { odd: [1, 3, 5], even: [2, 4] }\n   * Lazy(numbers).groupBy(oddOrEven).get(\"odd\")          // => [1, 3, 5]\n   * Lazy(numbers).groupBy(oddOrEven).get(\"foo\")          // => undefined\n   * Lazy(numbers).groupBy(oddOrEven, square).get(\"even\") // => [4, 16]\n   *\n   * Lazy([\n   *   { name: 'toString' },\n   *   { name: 'toString' }\n   * ]).groupBy('name');\n   * // => sequence: {\n   *   'toString': [\n   *     { name: 'toString' },\n   *     { name: 'toString' }\n   *   ]\n   * }\n   */\n  Sequence.prototype.groupBy = function groupBy(keyFn, valFn) {\n    return new GroupedSequence(this, keyFn, valFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function GroupedSequence(parent, keyFn, valFn) {\n    this.parent = parent;\n    this.keyFn  = keyFn;\n    this.valFn  = valFn;\n  }\n\n  // GroupedSequence must have its prototype set after ObjectLikeSequence has\n  // been fully initialized.\n\n  /**\n   * Creates a new {@link ObjectLikeSequence} comprising the elements in this\n   * one, indexed according to some key.\n   *\n   * @public\n   * @param {Function|string} keyFn The function to call on the elements in this\n   *     sequence to obtain a key by which to index them, or a string\n   *     representing a property to read from all the elements in this sequence.\n   * @param {Function|string} valFn (Optional) The function to call on the elements\n   *     in this sequence to assign to the value of the indexed object, or a string\n   *     representing a parameter to read from all the elements in this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var people = [\n   *   { name: 'Bob', age: 25 },\n   *   { name: 'Fred', age: 34 }\n   * ];\n   *\n   * var bob  = people[0],\n   *     fred = people[1];\n   *\n   * Lazy(people).indexBy('name')        // sequence: { 'Bob': bob, 'Fred': fred }\n   * Lazy(people).indexBy('name', 'age') // sequence: { 'Bob': 25, 'Fred': 34 }\n   */\n  Sequence.prototype.indexBy = function(keyFn, valFn) {\n    return new IndexedSequence(this, keyFn, valFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedSequence(parent, keyFn, valFn) {\n    this.parent = parent;\n    this.keyFn  = keyFn;\n    this.valFn  = valFn;\n  }\n\n  // IndexedSequence must have its prototype set after ObjectLikeSequence has\n  // been fully initialized.\n\n  /**\n   * Creates a new {@link ObjectLikeSequence} containing the unique keys of all\n   * the elements in this sequence, each paired with the number of elements\n   * in this sequence having that key.\n   *\n   * @public\n   * @param {Function|string} keyFn The function to call on the elements in this\n   *     sequence to obtain a key by which to count them, or a string representing\n   *     a parameter to read from all the elements in this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * function oddOrEven(x) {\n   *   return x % 2 === 0 ? 'even' : 'odd';\n   * }\n   *\n   * var numbers = [1, 2, 3, 4, 5];\n   *\n   * Lazy(numbers).countBy(oddOrEven)            // sequence: { odd: 3, even: 2 }\n   * Lazy(numbers).countBy(oddOrEven).get(\"odd\") // => 3\n   * Lazy(numbers).countBy(oddOrEven).get(\"foo\") // => undefined\n   */\n  Sequence.prototype.countBy = function countBy(keyFn) {\n    return new CountedSequence(this, keyFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function CountedSequence(parent, keyFn) {\n    this.parent = parent;\n    this.keyFn  = keyFn;\n  }\n\n  // CountedSequence, like GroupedSequence, must have its prototype set after\n  // ObjectLikeSequence has been fully initialized.\n\n  /**\n   * Creates a new sequence with every unique element from this one appearing\n   * exactly once (i.e., with duplicates removed).\n   *\n   * @public\n   * @aka unique\n   * @param {Function=} keyFn An optional function to produce the key for each\n   *     object. This key is then tested for uniqueness as  opposed to the\n   *     object reference.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 2, 3, 3, 3]).uniq() // sequence: [1, 2, 3]\n   * Lazy([{ name: 'mike' }, \n   * \t{ name: 'sarah' }, \n   * \t{ name: 'mike' }\n   * ]).uniq('name')\n   * // sequence: [{ name: 'mike' }, { name: 'sarah' }]\n   *\n   * @benchmarks\n   * function randomOf(array) {\n   *   return function() {\n   *     return array[Math.floor(Math.random() * array.length)];\n   *   };\n   * }\n   *\n   * var mostUnique = Lazy.generate(randomOf(_.range(100)), 100).toArray(),\n   *     someUnique = Lazy.generate(randomOf(_.range(50)), 100).toArray(),\n   *     mostDupes  = Lazy.generate(randomOf(_.range(5)), 100).toArray();\n   *\n   * Lazy(mostUnique).uniq().each(Lazy.noop) // lazy - mostly unique elements\n   * Lazy(someUnique).uniq().each(Lazy.noop) // lazy - some unique elements\n   * Lazy(mostDupes).uniq().each(Lazy.noop)  // lazy - mostly duplicate elements\n   * _.each(_.uniq(mostUnique), _.noop)      // lodash - mostly unique elements\n   * _.each(_.uniq(someUnique), _.noop)      // lodash - some unique elements\n   * _.each(_.uniq(mostDupes), _.noop)       // lodash - mostly duplicate elements\n   */\n  Sequence.prototype.uniq = function uniq(keyFn) {\n    return new UniqueSequence(this, keyFn);\n  };\n\n  Sequence.prototype.unique = function unique(keyFn) {\n    return this.uniq(keyFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function UniqueSequence(parent, keyFn) {\n    this.parent = parent;\n    this.keyFn  = keyFn;\n  }\n\n  UniqueSequence.prototype = Object.create(Sequence.prototype);\n\n  UniqueSequence.prototype.each = function each(fn) {\n    var cache = new Set(),\n        keyFn = this.keyFn,\n        i     = 0;\n\n    if (keyFn) {\n      keyFn = createCallback(keyFn);\n      return this.parent.each(function(e) {\n        if (cache.add(keyFn(e))) {\n          return fn(e, i++);\n        }\n      });\n\n    } else {\n      return this.parent.each(function(e) {\n        if (cache.add(e)) {\n          return fn(e, i++);\n        }\n      });\n    }\n  };\n\n  /**\n   * Creates a new sequence by combining the elements from this sequence with\n   * corresponding elements from the specified array(s).\n   *\n   * @public\n   * @param {...Array} var_args One or more arrays of elements to combine with\n   *     those of this sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2]).zip([3, 4])     // sequence: [[1, 3], [2, 4]]\n   * Lazy([]).zip([0])            // sequence: [[undefined, 0]]\n   * Lazy([0]).zip([])            // sequence: [[0, undefined]]\n   * Lazy([]).zip([1, 2], [3, 4]) // sequence: [[undefined, 1, 3], [undefined, 2, 4]]\n   * Lazy([]).zip([1], [2, 3])    // sequence: [[undefined, 1, 2], [undefined, undefined, 3]]\n   * Lazy([1, 2]).zip([3], [4])   // sequence: [[1, 3, 4], [2, undefined, undefined]]\n   *\n   * @benchmarks\n   * var smArrL = Lazy.range(10).toArray(),\n   *     smArrR = Lazy.range(10, 20).toArray(),\n   *     lgArrL = Lazy.range(100).toArray(),\n   *     lgArrR = Lazy.range(100, 200).toArray();\n   *\n   * Lazy(smArrL).zip(smArrR).each(Lazy.noop) // lazy - zipping 10-element arrays\n   * Lazy(lgArrL).zip(lgArrR).each(Lazy.noop) // lazy - zipping 100-element arrays\n   * _.each(_.zip(smArrL, smArrR), _.noop)    // lodash - zipping 10-element arrays\n   * _.each(_.zip(lgArrL, lgArrR), _.noop)    // lodash - zipping 100-element arrays\n   */\n  Sequence.prototype.zip = function zip(var_args) {\n    if (arguments.length === 1) {\n      return new SimpleZippedSequence(this, (/** @type {Array} */ var_args));\n    } else {\n      return new ZippedSequence(this, arraySlice.call(arguments, 0));\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  function ZippedSequence(parent, arrays) {\n    this.parent = parent;\n    this.arrays = arrays;\n  }\n\n  ZippedSequence.prototype = Object.create(Sequence.prototype);\n\n  ZippedSequence.prototype.each = function each(fn) {\n    var arrays = this.arrays,\n        i = 0;\n\n    var iteratedLeft = this.parent.each(function(e) {\n      var group = [e];\n      for (var j = 0; j < arrays.length; ++j) {\n        group.push(arrays[j][i]);\n      }\n      return fn(group, i++);\n    });\n\n    if (!iteratedLeft) {\n      return false;\n    }\n\n    var group,\n        keepGoing = true;\n\n    while (keepGoing) {\n      keepGoing = false;\n      group = [undefined];\n      for (var j = 0; j < arrays.length; ++j) {\n        group.push(arrays[j][i]);\n\n        // Check if *any* of the arrays have more elements to iterate.\n        if (arrays[j].length > i) {\n          keepGoing = true;\n        }\n      }\n\n      if (keepGoing && (fn(group, i++) === false)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Creates a new sequence with the same elements as this one, in a randomized\n   * order.\n   *\n   * @public\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4, 5]).shuffle().value() // =~ [1, 2, 3, 4, 5]\n   * Lazy([]).shuffle().value()              // => []\n   * Lazy([1]).shuffle().each(Lazy.noop)     // => true\n   * Lazy([]).shuffle().each(Lazy.noop)      // => true\n   */\n  Sequence.prototype.shuffle = function shuffle() {\n    return new ShuffledSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function ShuffledSequence(parent) {\n    this.parent = parent;\n  }\n\n  ShuffledSequence.prototype = Object.create(Sequence.prototype);\n\n  ShuffledSequence.prototype.each = function each(fn) {\n    var shuffled = this.parent.toArray(),\n        floor = Math.floor,\n        random = Math.random,\n        j = 0;\n\n    for (var i = shuffled.length - 1; i > 0; --i) {\n      swap(shuffled, i, floor(random() * (i + 1)));\n      if (fn(shuffled[i], j++) === false) {\n        return false;\n      }\n    }\n\n    if (shuffled.length) {\n      fn(shuffled[0], j);\n    }\n\n    return true;\n  };\n\n  /**\n   * Creates a new sequence with every element from this sequence, and with arrays\n   * exploded so that a sequence of arrays (of arrays) becomes a flat sequence of\n   * values.\n   *\n   * @public\n   * @param {boolean} shallow Option to flatten only one level deep (default is\n   *     recursive).\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, [2, 3], [4, [5]]]).flatten()     // sequence: [1, 2, 3, 4, 5]\n   * Lazy([1, [2, 3], [4, [5]]]).flatten(true) // sequence: [1, 2, 3, 4, [5]]\n   * Lazy([1, Lazy([2, 3])]).flatten()         // sequence: [1, 2, 3]\n   */\n  Sequence.prototype.flatten = function flatten(shallow) {\n    return new FlattenedSequence(this, shallow);\n  };\n\n  /**\n   * @constructor\n   */\n  function FlattenedSequence(parent, shallow) {\n    this.parent = parent;\n    this.each = shallow ? this.eachShallow : this.eachRecursive;\n  }\n\n  FlattenedSequence.prototype = Object.create(Sequence.prototype);\n\n  FlattenedSequence.prototype.eachShallow = function(fn) {\n    var index = 0;\n\n    return this.parent.each(function(e) {\n      if (isArray(e)) {\n        return forEach(e, function(val) {\n          return fn(val, index++);\n        });\n      }\n\n      if (e instanceof Sequence) {\n        return e.each(function(val) {\n          return fn(val, index++);\n        });\n      }\n\n      return fn(e, index++);\n    });\n  };\n\n  FlattenedSequence.prototype.eachRecursive = function each(fn) {\n    var index = 0;\n\n    return this.parent.each(function recurseVisitor(e) {\n      if (isArray(e)) {\n        return forEach(e, recurseVisitor);\n      }\n\n      if (e instanceof Sequence) {\n        return e.each(recurseVisitor);\n      }\n\n      return fn(e, index++);\n    });\n  };\n\n  /**\n   * Creates a new sequence with the same elements as this one, except for all\n   * falsy values (`false`, `0`, `\"\"`, `null`, and `undefined`).\n   *\n   * @public\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([\"foo\", null, \"bar\", undefined]).compact() // sequence: [\"foo\", \"bar\"]\n   */\n  Sequence.prototype.compact = function compact() {\n    return this.filter(function(e) { return !!e; });\n  };\n\n  /**\n   * Creates a new sequence with all the elements of this sequence that are not\n   * also among the specified arguments.\n   *\n   * @public\n   * @aka difference\n   * @param {...*} var_args The values, or array(s) of values, to be excluded from the\n   *     resulting sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4, 5]).without(2, 3)   // sequence: [1, 4, 5]\n   * Lazy([1, 2, 3, 4, 5]).without([4, 5]) // sequence: [1, 2, 3]\n   */\n  Sequence.prototype.without = function without(var_args) {\n    return new WithoutSequence(this, arraySlice.call(arguments, 0));\n  };\n\n  Sequence.prototype.difference = function difference(var_args) {\n    return this.without.apply(this, arguments);\n  };\n\n  /**\n   * @constructor\n   */\n  function WithoutSequence(parent, values) {\n    this.parent = parent;\n    this.values = values;\n  }\n\n  WithoutSequence.prototype = Object.create(Sequence.prototype);\n\n  WithoutSequence.prototype.each = function each(fn) {\n    var set = createSet(this.values),\n        i = 0;\n    return this.parent.each(function(e) {\n      if (!set.contains(e)) {\n        return fn(e, i++);\n      }\n    });\n  };\n\n  /**\n   * Creates a new sequence with all the unique elements either in this sequence\n   * or among the specified arguments.\n   *\n   * @public\n   * @param {...*} var_args The values, or array(s) of values, to be additionally\n   *     included in the resulting sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([\"foo\", \"bar\"]).union([])             // sequence: [\"foo\", \"bar\"]\n   * Lazy([\"foo\", \"bar\"]).union([\"bar\", \"baz\"]) // sequence: [\"foo\", \"bar\", \"baz\"]\n   */\n  Sequence.prototype.union = function union(var_args) {\n    return this.concat(var_args).uniq();\n  };\n\n  /**\n   * Creates a new sequence with all the elements of this sequence that also\n   * appear among the specified arguments.\n   *\n   * @public\n   * @param {...*} var_args The values, or array(s) of values, in which elements\n   *     from this sequence must also be included to end up in the resulting sequence.\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * Lazy([\"foo\", \"bar\"]).intersection([])             // sequence: []\n   * Lazy([\"foo\", \"bar\"]).intersection([\"bar\", \"baz\"]) // sequence: [\"bar\"]\n   * Lazy([\"a\", \"a\"]).intersection([\"a\"])              // sequence: [\"a\"]\n   * Lazy([\"a\"]).intersection([\"a\", \"a\"])              // sequence: [\"a\"]\n   * Lazy([\"a\", \"a\"]).intersection([\"a\", \"a\"])         // sequence: [\"a\"]\n   * Lazy([\"a\", \"a\"]).intersection([\"a\"], [\"a\"])       // sequence: [\"a\"]\n   */\n  Sequence.prototype.intersection = function intersection(var_args) {\n    if (arguments.length === 1 && isArray(arguments[0])) {\n      return new SimpleIntersectionSequence(this, (/** @type {Array} */ var_args));\n    } else {\n      return new IntersectionSequence(this, arraySlice.call(arguments, 0));\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  function IntersectionSequence(parent, arrays) {\n    this.parent = parent;\n    this.arrays = arrays;\n  }\n\n  IntersectionSequence.prototype = Object.create(Sequence.prototype);\n\n  IntersectionSequence.prototype.each = function each(fn) {\n    var sets = Lazy(this.arrays).map(function(values) {\n      return new UniqueMemoizer(Lazy(values).getIterator());\n    });\n\n    var setIterator = new UniqueMemoizer(sets.getIterator()),\n        i = 0;\n\n    return this.parent.uniq().each(function(e) {\n      var includedInAll = true;\n      setIterator.each(function(set) {\n        if (!set.contains(e)) {\n          includedInAll = false;\n          return false;\n        }\n      });\n\n      if (includedInAll) {\n        return fn(e, i++);\n      }\n    });\n  };\n\n  /**\n   * @constructor\n   */\n  function Memoizer(memo, iterator) {\n    this.iterator     = iterator;\n    this.memo         = memo;\n    this.currentIndex = 0;\n    this.currentValue = undefined;\n  }\n\n  Memoizer.prototype.current = function current() {\n    return this.currentValue;\n  };\n\n  Memoizer.prototype.moveNext = function moveNext() {\n    var iterator = this.iterator,\n        memo = this.memo,\n        current;\n\n    if (this.currentIndex < memo.length) {\n      this.currentValue = memo[this.currentIndex++];\n      return true;\n    }\n\n    if (iterator.moveNext()) {\n      this.currentValue = memo[this.currentIndex++] = iterator.current();\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * @constructor\n   */\n  function UniqueMemoizer(iterator) {\n    this.iterator     = iterator;\n    this.set          = new Set();\n    this.memo         = [];\n    this.currentValue = undefined;\n  }\n\n  UniqueMemoizer.prototype.current = function current() {\n    return this.currentValue;\n  };\n\n  UniqueMemoizer.prototype.moveNext = function moveNext() {\n    var iterator = this.iterator,\n        set = this.set,\n        memo = this.memo,\n        current;\n\n    while (iterator.moveNext()) {\n      current = iterator.current();\n      if (set.add(current)) {\n        memo.push(current);\n        this.currentValue = current;\n        return true;\n      }\n    }\n    return false;\n  };\n\n  UniqueMemoizer.prototype.each = function each(fn) {\n    var memo = this.memo,\n        length = memo.length,\n        i = -1;\n\n    while (++i < length) {\n      if (fn(memo[i], i) === false) {\n        return false;\n      }\n    }\n\n    while (this.moveNext()) {\n      if (fn(this.currentValue, i++) === false) {\n        break;\n      }\n    }\n  };\n\n  UniqueMemoizer.prototype.contains = function contains(e) {\n    if (this.set.contains(e)) {\n      return true;\n    }\n\n    while (this.moveNext()) {\n      if (this.currentValue === e) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Checks whether every element in this sequence satisfies a given predicate.\n   *\n   * @public\n   * @aka all\n   * @param {Function} predicate A function to call on (potentially) every element\n   *     in this sequence.\n   * @returns {boolean} True if `predicate` returns true for every element in the\n   *     sequence (or the sequence is empty). False if `predicate` returns false\n   *     for at least one element.\n   *\n   * @examples\n   * var numbers = [1, 2, 3, 4, 5];\n   *\n   * var objects = [{ foo: true }, { foo: false, bar: true }];\n   *\n   * Lazy(numbers).every(isEven)     // => false\n   * Lazy(numbers).every(isPositive) // => true\n   * Lazy(objects).all('foo')        // => false\n   * Lazy(objects).all('bar')        // => false\n   */\n  Sequence.prototype.every = function every(predicate) {\n    predicate = createCallback(predicate);\n\n    return this.each(function(e, i) {\n      return !!predicate(e, i);\n    });\n  };\n\n  Sequence.prototype.all = function all(predicate) {\n    return this.every(predicate);\n  };\n\n  /**\n   * Checks whether at least one element in this sequence satisfies a given\n   * predicate (or, if no predicate is specified, whether the sequence contains at\n   * least one element).\n   *\n   * @public\n   * @aka any\n   * @param {Function=} predicate A function to call on (potentially) every element\n   *     in this sequence.\n   * @returns {boolean} True if `predicate` returns true for at least one element\n   *     in the sequence. False if `predicate` returns false for every element (or\n   *     the sequence is empty).\n   *\n   * @examples\n   * var numbers = [1, 2, 3, 4, 5];\n   *\n   * Lazy(numbers).some()           // => true\n   * Lazy(numbers).some(isEven)     // => true\n   * Lazy(numbers).some(isNegative) // => false\n   * Lazy([]).some()                // => false\n   */\n  Sequence.prototype.some = function some(predicate) {\n    predicate = createCallback(predicate, true);\n\n    var success = false;\n    this.each(function(e) {\n      if (predicate(e)) {\n        success = true;\n        return false;\n      }\n    });\n    return success;\n  };\n\n  Sequence.prototype.any = function any(predicate) {\n    return this.some(predicate);\n  };\n\n  /**\n   * Checks whether NO elements in this sequence satisfy the given predicate\n   * (the opposite of {@link Sequence#all}, basically).\n   *\n   * @public\n   * @param {Function=} predicate A function to call on (potentially) every element\n   *     in this sequence.\n   * @returns {boolean} True if `predicate` does not return true for any element\n   *     in the sequence. False if `predicate` returns true for at least one\n   *     element.\n   *\n   * @examples\n   * var numbers = [1, 2, 3, 4, 5];\n   *\n   * Lazy(numbers).none()           // => false\n   * Lazy(numbers).none(isEven)     // => false\n   * Lazy(numbers).none(isNegative) // => true\n   * Lazy([]).none(isEven)          // => true\n   * Lazy([]).none(isNegative)      // => true\n   * Lazy([]).none()                // => true\n   */\n  Sequence.prototype.none = function none(predicate) {\n    return !this.any(predicate);\n  };\n\n  /**\n   * Checks whether the sequence has no elements.\n   *\n   * @public\n   * @returns {boolean} True if the sequence is empty, false if it contains at\n   *     least one element.\n   *\n   * @examples\n   * Lazy([]).isEmpty()        // => true\n   * Lazy([1, 2, 3]).isEmpty() // => false\n   */\n  Sequence.prototype.isEmpty = function isEmpty() {\n    return !this.any();\n  };\n\n  /**\n   * Performs (at worst) a linear search from the head of this sequence,\n   * returning the first index at which the specified value is found.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @param {Function=} equalityFn An optional equality function, which should\n   *     take two arguments and return true or false to indicate whether those\n   *     values are considered equal.\n   * @returns {number} The index within this sequence where the given value is\n   *     located, or -1 if the sequence doesn't contain the value.\n   *\n   * @examples\n   * function reciprocal(x) { return 1 / x; }\n   *\n   * Lazy([\"foo\", \"bar\", \"baz\"]).indexOf(\"bar\")   // => 1\n   * Lazy([1, 2, 3]).indexOf(4)                   // => -1\n   * Lazy([1, 2, 3]).map(reciprocal).indexOf(0.5) // => 1\n   */\n  Sequence.prototype.indexOf = function indexOf(value, equalityFn) {\n    var eq = equalityFn || Lazy.equality,\n        foundIndex = -1;\n\n    this.each(function(e, i) {\n      if (eq(e, value)) {\n        foundIndex = i;\n        return false;\n      }\n    });\n    return foundIndex;\n  };\n\n  /**\n   * Performs (at worst) a linear search from the tail of this sequence,\n   * returning the last index at which the specified value is found.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @returns {number} The last index within this sequence where the given value\n   *     is located, or -1 if the sequence doesn't contain the value.\n   *\n   * @examples\n   * Lazy([\"a\", \"b\", \"c\", \"b\", \"a\"]).lastIndexOf(\"b\")    // => 3\n   * Lazy([1, 2, 3]).lastIndexOf(0)                      // => -1\n   * Lazy([2, 2, 1, 2, 4]).filter(isEven).lastIndexOf(2) // 2\n   */\n  Sequence.prototype.lastIndexOf = function lastIndexOf(value, equalityFn) {\n    var reversed = this.getIndex().reverse(),\n        index    = reversed.indexOf(value, equalityFn);\n    if (index !== -1) {\n      index = reversed.length() - index - 1;\n    }\n    return index;\n  };\n\n  /**\n   * Performs a binary search of this sequence, returning the lowest index where\n   * the given value is either found, or where it belongs (if it is not already\n   * in the sequence).\n   *\n   * This method assumes the sequence is in sorted order and will fail otherwise.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @returns {number} An index within this sequence where the given value is\n   *     located, or where it belongs in sorted order.\n   *\n   * @examples\n   * Lazy([1, 3, 6, 9]).sortedIndex(3)                    // => 1\n   * Lazy([1, 3, 6, 9]).sortedIndex(7)                    // => 3\n   * Lazy([5, 10, 15, 20]).filter(isEven).sortedIndex(10) // => 0\n   * Lazy([5, 10, 15, 20]).filter(isEven).sortedIndex(12) // => 1\n   */\n  Sequence.prototype.sortedIndex = function sortedIndex(value) {\n    var indexed = this.getIndex(),\n        lower   = 0,\n        upper   = indexed.length(),\n        i;\n\n    while (lower < upper) {\n      i = (lower + upper) >>> 1;\n      if (compare(indexed.get(i), value) === -1) {\n        lower = i + 1;\n      } else {\n        upper = i;\n      }\n    }\n    return lower;\n  };\n\n  /**\n   * Checks whether the given value is in this sequence.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @param {Function=} equalityFn An optional equality function, which should\n   *     take two arguments and return true or false to indicate whether those\n   *     values are considered equal.\n   * @returns {boolean} True if the sequence contains the value, false if not.\n   *\n   * @examples\n   * var numbers = [5, 10, 15, 20];\n   *\n   * Lazy(numbers).contains(15) // => true\n   * Lazy(numbers).contains(13) // => false\n   */\n  Sequence.prototype.contains = function contains(value, equalityFn) {\n    return this.indexOf(value, equalityFn) !== -1;\n  };\n\n  /**\n   * Aggregates a sequence into a single value according to some accumulator\n   * function.\n   *\n   * For an asynchronous sequence, instead of immediately returning a result\n   * (which it can't, obviously), this method returns an {@link AsyncHandle}\n   * whose `onComplete` method can be called to supply a callback to handle the\n   * final result once iteration has completed.\n   *\n   * @public\n   * @aka inject, foldl\n   * @param {Function} aggregator The function through which to pass every element\n   *     in the sequence. For every element, the function will be passed the total\n   *     aggregated result thus far and the element itself, and should return a\n   *     new aggregated result.\n   * @param {*=} memo The starting value to use for the aggregated result\n   *     (defaults to the first element in the sequence).\n   * @returns {*} The result of the aggregation, or, for asynchronous sequences,\n   *     an {@link AsyncHandle} whose `onComplete` method accepts a callback to\n   *     handle the final result.\n   *\n   * @examples\n   * function multiply(x, y) { return x * y; }\n   *\n   * var numbers = [1, 2, 3, 4];\n   *\n   * Lazy(numbers).reduce(multiply)    // => 24\n   * Lazy(numbers).reduce(multiply, 5) // => 120\n   */\n  Sequence.prototype.reduce = function reduce(aggregator, memo) {\n    if (arguments.length < 2) {\n      return this.tail().reduce(aggregator, this.head());\n    }\n\n    var eachResult = this.each(function(e, i) {\n      memo = aggregator(memo, e, i);\n    });\n\n    // TODO: Think of a way more efficient solution to this problem.\n    if (eachResult instanceof AsyncHandle) {\n      return eachResult.then(function() { return memo; });\n    }\n\n    return memo;\n  };\n\n  Sequence.prototype.inject =\n  Sequence.prototype.foldl = function foldl(aggregator, memo) {\n    return this.reduce(aggregator, memo);\n  };\n\n  /**\n   * Aggregates a sequence, from the tail, into a single value according to some\n   * accumulator function.\n   *\n   * @public\n   * @aka foldr\n   * @param {Function} aggregator The function through which to pass every element\n   *     in the sequence. For every element, the function will be passed the total\n   *     aggregated result thus far and the element itself, and should return a\n   *     new aggregated result.\n   * @param {*} memo The starting value to use for the aggregated result.\n   * @returns {*} The result of the aggregation.\n   *\n   * @examples\n   * function append(s1, s2) {\n   *   return s1 + s2;\n   * }\n   *\n   * function isVowel(str) {\n   *   return \"aeiou\".indexOf(str) !== -1;\n   * }\n   *\n   * Lazy(\"abcde\").reduceRight(append)                 // => \"edcba\"\n   * Lazy(\"abcde\").filter(isVowel).reduceRight(append) // => \"ea\"\n   */\n  Sequence.prototype.reduceRight = function reduceRight(aggregator, memo) {\n    if (arguments.length < 2) {\n      return this.initial(1).reduceRight(aggregator, this.last());\n    }\n\n    // This bothers me... but frankly, calling reverse().reduce() is potentially\n    // going to eagerly evaluate the sequence anyway; so it's really not an issue.\n    var indexed = this.getIndex(),\n        i = indexed.length() - 1;\n    return indexed.reverse().reduce(function(m, e) {\n      return aggregator(m, e, i--);\n    }, memo);\n  };\n\n  Sequence.prototype.foldr = function foldr(aggregator, memo) {\n    return this.reduceRight(aggregator, memo);\n  };\n\n  /**\n   * Groups this sequence into consecutive (overlapping) segments of a specified\n   * length. If the underlying sequence has fewer elements than the specified\n   * length, then this sequence will be empty.\n   *\n   * @public\n   * @param {number} length The length of each consecutive segment.\n   * @returns {Sequence} The resulting sequence of consecutive segments.\n   *\n   * @examples\n   * function sum(vals) { return Lazy(vals).sum(); }\n   * var pairs = Lazy([1, 2, 3, 4]).consecutive(2);\n   *\n   * // Make sure consecutive sequences are reusable.\n   * pairs.map(sum) // => sequence: [3, 5, 7]\n   * pairs.map(sum) // => sequence: [3, 5, 7]\n   *\n   * Lazy([]).consecutive(2)        // => sequence: []\n   * Lazy([1]).consecutive(2)       // => sequence: []\n   * Lazy([1, 2]).consecutive(2)    // => sequence: [[1, 2]]\n   * Lazy([1, 2, 3]).consecutive(2) // => sequence: [[1, 2], [2, 3]]\n   * Lazy([1, 2, 3]).consecutive(0) // => sequence: [[]]\n   * Lazy([1, 2, 3]).consecutive(1) // => sequence: [[1], [2], [3]]\n   */\n  Sequence.prototype.consecutive = function consecutive(count) {\n    return new ConsecutiveSequence(this, count);\n  };\n\n  function ConsecutiveSequence(parent, count) {\n    this.parent = parent;\n    this.count = count;\n  }\n\n  ConsecutiveSequence.prototype = Object.create(Sequence.prototype);\n\n  ConsecutiveSequence.prototype.each = function each(fn) {\n    var count = this.count,\n        queue = new Queue(count);\n    var segments = this.parent.map(function(element) {\n      if (queue.add(element).count === count) {\n        return queue.toArray();\n      }\n    });\n    return segments.compact().each(fn);\n  };\n\n  /**\n   * Breaks this sequence into chunks (arrays) of a specified length.\n   *\n   * @public\n   * @param {number} size The size of each chunk.\n   * @returns {Sequence} The resulting sequence of chunks.\n   *\n   * @examples\n   * Lazy([]).chunk(2)        // sequence: []\n   * Lazy([1, 2, 3]).chunk(2) // sequence: [[1, 2], [3]]\n   * Lazy([1, 2, 3]).chunk(1) // sequence: [[1], [2], [3]]\n   * Lazy([1, 2, 3]).chunk(4) // sequence: [[1, 2, 3]]\n   * Lazy([1, 2, 3]).chunk(0) // throws\n   */\n  Sequence.prototype.chunk = function chunk(size) {\n    if (size < 1) {\n      throw new Error(\"You must specify a positive chunk size.\");\n    }\n\n    return new ChunkedSequence(this, size);\n  };\n\n  /**\n   * @constructor\n   */\n  function ChunkedSequence(parent, size) {\n    this.parent    = parent;\n    this.chunkSize = size;\n  }\n\n  ChunkedSequence.prototype = Object.create(Sequence.prototype);\n\n  ChunkedSequence.prototype.getIterator = function getIterator() {\n    return new ChunkedIterator(this.parent, this.chunkSize);\n  };\n\n  /**\n   * @constructor\n   */\n  function ChunkedIterator(sequence, size) {\n    this.iterator = sequence.getIterator();\n    this.size     = size;\n  }\n\n  ChunkedIterator.prototype.current = function current() {\n    return this.currentChunk;\n  };\n\n  ChunkedIterator.prototype.moveNext = function moveNext() {\n    var iterator  = this.iterator,\n        chunkSize = this.size,\n        chunk     = [];\n\n    while (chunk.length < chunkSize && iterator.moveNext()) {\n      chunk.push(iterator.current());\n    }\n\n    if (chunk.length === 0) {\n      return false;\n    }\n\n    this.currentChunk = chunk;\n    return true;\n  };\n\n  /**\n   * Passes each element in the sequence to the specified callback during\n   * iteration. This is like {@link Sequence#each}, except that it can be\n   * inserted anywhere in the middle of a chain of methods to \"intercept\" the\n   * values in the sequence at that point.\n   *\n   * @public\n   * @param {Function} callback A function to call on every element in the\n   *     sequence during iteration. The return value of this function does not\n   *     matter.\n   * @returns {Sequence} A sequence comprising the same elements as this one.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).tap(fn).each(Lazy.noop); // calls fn 3 times\n   */\n  Sequence.prototype.tap = function tap(callback) {\n    return new TappedSequence(this, callback);\n  };\n\n  /**\n   * @constructor\n   */\n  function TappedSequence(parent, callback) {\n    this.parent = parent;\n    this.callback = callback;\n  }\n\n  TappedSequence.prototype = Object.create(Sequence.prototype);\n\n  TappedSequence.prototype.each = function each(fn) {\n    var callback = this.callback;\n    return this.parent.each(function(e, i) {\n      callback(e, i);\n      return fn(e, i);\n    });\n  };\n\n  /**\n   * Seaches for the first element in the sequence satisfying a given predicate.\n   *\n   * @public\n   * @aka detect\n   * @param {Function} predicate A function to call on (potentially) every element\n   *     in the sequence.\n   * @returns {*} The first element in the sequence for which `predicate` returns\n   *     `true`, or `undefined` if no such element is found.\n   *\n   * @examples\n   * function divisibleBy3(x) {\n   *   return x % 3 === 0;\n   * }\n   *\n   * var numbers = [5, 6, 7, 8, 9, 10];\n   *\n   * Lazy(numbers).find(divisibleBy3) // => 6\n   * Lazy(numbers).find(isNegative)   // => undefined\n   */\n  Sequence.prototype.find = function find(predicate) {\n    return this.filter(predicate).first();\n  };\n\n  Sequence.prototype.detect = function detect(predicate) {\n    return this.find(predicate);\n  };\n\n  /**\n   * Gets the minimum value in the sequence.\n   *\n   * @public\n   * @param {Function=} valueFn The function by which the value for comparison is\n   *     calculated for each element in the sequence.\n   * @returns {*} The element with the lowest value in the sequence, or\n   *     undefined` if the sequence is empty.\n   *\n   * @examples\n   * function negate(x) { return x * -1; }\n   *\n   * Lazy([]).min()                       // => undefined\n   * Lazy([1]).min()                      // => 1\n   * Lazy([1, 2]).min()                   // => 1\n   * Lazy([2, 1]).min()                   // => 1\n   * Lazy([6, 18, 2, 49, 34]).min()       // => 2\n   * Lazy([6, 18, 2, 49, 34]).min(negate) // => 49\n   * Lazy(['b', 'a', 'c']).min()          // => 'a'\n   */\n  Sequence.prototype.min = function min(valueFn) {\n    if (typeof valueFn !== \"undefined\") {\n      return this.minBy(valueFn);\n    }\n\n    return this.reduce(function(prev, current, i) {\n      if (typeof prev === \"undefined\") {\n        return current;\n      }\n      return current < prev ? current : prev;\n    });\n  };\n\n  Sequence.prototype.minBy = function minBy(valueFn) {\n    valueFn = createCallback(valueFn);\n    return this.reduce(function(x, y) { return valueFn(y) < valueFn(x) ? y : x; });\n  };\n\n  /**\n   * Gets the maximum value in the sequence.\n   *\n   * @public\n   * @param {Function=} valueFn The function by which the value for comparison is\n   *     calculated for each element in the sequence.\n   * @returns {*} The element with the highest value in the sequence, or\n   *     undefined if the sequence is empty.\n   *\n   * @examples\n   * function reverseDigits(x) {\n   *   return Number(String(x).split('').reverse().join(''));\n   * }\n   *\n   * Lazy([]).max()                              // => undefined\n   * Lazy([1]).max()                             // => 1\n   * Lazy([1, 2]).max()                          // => 2\n   * Lazy([2, 1]).max()                          // => 2\n   * Lazy([6, 18, 2, 48, 29]).max()              // => 48\n   * Lazy([6, 18, 2, 48, 29]).max(reverseDigits) // => 29\n   * Lazy(['b', 'c', 'a']).max()                 // => 'c'\n   */\n  Sequence.prototype.max = function max(valueFn) {\n    if (typeof valueFn !== \"undefined\") {\n      return this.maxBy(valueFn);\n    }\n\n    return this.reduce(function(prev, current, i) {\n      if (typeof prev === \"undefined\") {\n        return current;\n      }\n      return current > prev ? current : prev;\n    });\n  };\n\n  Sequence.prototype.maxBy = function maxBy(valueFn) {\n    valueFn = createCallback(valueFn);\n    return this.reduce(function(x, y) { return valueFn(y) > valueFn(x) ? y : x; });\n  };\n\n  /**\n   * Gets the sum of the numeric values in the sequence.\n   *\n   * @public\n   * @param {Function=} valueFn The function used to select the numeric values\n   *     that will be summed up.\n   * @returns {*} The sum.\n   *\n   * @examples\n   * Lazy([]).sum()                     // => 0\n   * Lazy([1, 2, 3, 4]).sum()           // => 10\n   * Lazy([1.2, 3.4]).sum(Math.floor)   // => 4\n   * Lazy(['foo', 'bar']).sum('length') // => 6\n   */\n  Sequence.prototype.sum = function sum(valueFn) {\n    if (typeof valueFn !== \"undefined\") {\n      return this.sumBy(valueFn);\n    }\n\n    return this.reduce(function(x, y) { return x + y; }, 0);\n  };\n\n  Sequence.prototype.sumBy = function sumBy(valueFn) {\n    valueFn = createCallback(valueFn);\n    return this.reduce(function(x, y) { return x + valueFn(y); }, 0);\n  };\n\n  /**\n   * Creates a string from joining together all of the elements in this sequence,\n   * separated by the given delimiter.\n   *\n   * @public\n   * @aka toString\n   * @param {string=} delimiter The separator to insert between every element from\n   *     this sequence in the resulting string (defaults to `\",\"`).\n   * @returns {string} The delimited string.\n   *\n   * @examples\n   * function toParam(v, k) {\n   *   return k + '=' + v;\n   * }\n   *\n   * Lazy([6, 29, 1984]).join(\"/\")  // => \"6/29/1984\"\n   * Lazy([\"a\", \"b\", \"c\"]).join()   // => \"a,b,c\"\n   * Lazy([\"a\", \"b\", \"c\"]).join(\"\") // => \"abc\"\n   * Lazy([1, 2, 3]).join()         // => \"1,2,3\"\n   * Lazy([1, 2, 3]).join(\"\")       // => \"123\"\n   * Lazy([\"\", \"\", \"\"]).join(\",\")   // => \",,\"\n   * Lazy([1, 2]).join(0)           // => \"102\"\n   * Lazy([\"cons\", \"d\"]).join(true) // => \"construed\"\n   * Lazy({foo: 1, bar: 2}).values().join()        // \"1,2\"\n   * Lazy({foo: 1, bar: 2}).keys().join()          // \"foo,bar\"\n   * Lazy({foo: 1, bar: 2}).map(toParam).join('&') // 'foo=1&bar=2'\n   */\n  Sequence.prototype.join = function join(delimiter) {\n    delimiter = typeof delimiter === \"undefined\" ? \",\" : String(delimiter);\n\n    var i = -1;\n    return this.reduce(function(str, e) {\n      if (++i > 0) {\n        str += delimiter;\n      }\n      return str + e;\n    }, \"\");\n  };\n\n  Sequence.prototype.toString = function toString(delimiter) {\n    return this.join(delimiter);\n  };\n\n  /**\n   * Creates a sequence, with the same elements as this one, that will be iterated\n   * over asynchronously when calling `each`.\n   *\n   * @public\n   * @param {number=} interval The approximate period, in milliseconds, that\n   *     should elapse between each element in the resulting sequence. Omitting\n   *     this argument will result in the fastest possible asynchronous iteration.\n   * @returns {AsyncSequence} The new asynchronous sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).async(100).each(fn) // calls fn 3 times asynchronously\n   */\n  Sequence.prototype.async = function async(interval) {\n    return new AsyncSequence(this, interval);\n  };\n\n  /**\n   * @constructor\n   */\n  function SimpleIntersectionSequence(parent, array) {\n    this.parent = parent;\n    this.array  = array;\n    this.each   = getEachForIntersection(array);\n  }\n\n  SimpleIntersectionSequence.prototype = Object.create(Sequence.prototype);\n\n  SimpleIntersectionSequence.prototype.eachMemoizerCache = function eachMemoizerCache(fn) {\n    var iterator = new UniqueMemoizer(Lazy(this.array).getIterator()),\n        i = 0;\n\n    return this.parent.uniq().each(function(e) {\n      if (iterator.contains(e)) {\n        return fn(e, i++);\n      }\n    });\n  };\n\n  SimpleIntersectionSequence.prototype.eachArrayCache = function eachArrayCache(fn) {\n    var array = this.array,\n        find  = arrayContains,\n        i = 0;\n\n    return this.parent.uniq().each(function(e) {\n      if (find(array, e)) {\n        return fn(e, i++);\n      }\n    });\n  };\n\n  function getEachForIntersection(source) {\n    if (source.length < 40) {\n      return SimpleIntersectionSequence.prototype.eachArrayCache;\n    } else {\n      return SimpleIntersectionSequence.prototype.eachMemoizerCache;\n    }\n  }\n\n  /**\n   * An optimized version of {@link ZippedSequence}, when zipping a sequence with\n   * only one array.\n   *\n   * @param {Sequence} parent The underlying sequence.\n   * @param {Array} array The array with which to zip the sequence.\n   * @constructor\n   */\n  function SimpleZippedSequence(parent, array) {\n    this.parent = parent;\n    this.array  = array;\n  }\n\n  SimpleZippedSequence.prototype = Object.create(Sequence.prototype);\n\n  SimpleZippedSequence.prototype.each = function each(fn) {\n    var array = this.array,\n        i = -1;\n\n    var iteratedLeft = this.parent.each(function(e) {\n      ++i;\n      return fn([e, array[i]], i);\n    });\n\n    if (!iteratedLeft) {\n      return false;\n    }\n\n    while (++i < array.length) {\n      if (fn([undefined, array[i]], i) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * An `ArrayLikeSequence` is a {@link Sequence} that provides random access to\n   * its elements. This extends the API for iterating with the additional methods\n   * {@link #get} and {@link #length}, allowing a sequence to act as a \"view\" into\n   * a collection or other indexed data source.\n   *\n   * The initial sequence created by wrapping an array with `Lazy(array)` is an\n   * `ArrayLikeSequence`.\n   *\n   * All methods of `ArrayLikeSequence` that conceptually should return\n   * something like a array (with indexed access) return another\n   * `ArrayLikeSequence`, for example:\n   *\n   * - {@link Sequence#map}\n   * - {@link ArrayLikeSequence#slice}\n   * - {@link Sequence#take} and {@link Sequence#drop}\n   * - {@link Sequence#reverse}\n   *\n   * The above is not an exhaustive list. There are also certain other cases\n   * where it might be possible to return an `ArrayLikeSequence` (e.g., calling\n   * {@link Sequence#concat} with a single array argument), but this is not\n   * guaranteed by the API.\n   *\n   * Note that in many cases, it is not possible to provide indexed access\n   * without first performing at least a partial iteration of the underlying\n   * sequence. In these cases an `ArrayLikeSequence` will not be returned:\n   *\n   * - {@link Sequence#filter}\n   * - {@link Sequence#uniq}\n   * - {@link Sequence#union}\n   * - {@link Sequence#intersect}\n   *\n   * etc. The above methods only return ordinary {@link Sequence} objects.\n   *\n   * Defining custom array-like sequences\n   * ------------------------------------\n   *\n   * Creating a custom `ArrayLikeSequence` is essentially the same as creating a\n   * custom {@link Sequence}. You just have a couple more methods you need to\n   * implement: `get` and (optionally) `length`.\n   *\n   * Here's an example. Let's define a sequence type called `OffsetSequence` that\n   * offsets each of its parent's elements by a set distance, and circles back to\n   * the beginning after reaching the end. **Remember**: the initialization\n   * function you pass to {@link #define} should always accept a `parent` as its\n   * first parameter.\n   *\n   *     ArrayLikeSequence.define(\"offset\", {\n   *       init: function(parent, offset) {\n   *         this.offset = offset;\n   *       },\n   *\n   *       get: function(i) {\n   *         return this.parent.get((i + this.offset) % this.parent.length());\n   *       }\n   *     });\n   *\n   * It's worth noting a couple of things here.\n   *\n   * First, Lazy's default implementation of `length` simply returns the parent's\n   * length. In this case, since an `OffsetSequence` will always have the same\n   * number of elements as its parent, that implementation is fine; so we don't\n   * need to override it.\n   *\n   * Second, the default implementation of `each` uses `get` and `length` to\n   * essentially create a `for` loop, which is fine here. If you want to implement\n   * `each` your own way, you can do that; but in most cases (as here), you can\n   * probably just stick with the default.\n   *\n   * So we're already done, after only implementing `get`! Pretty easy, huh?\n   *\n   * Now the `offset` method will be chainable from any `ArrayLikeSequence`. So\n   * for example:\n   *\n   *     Lazy([1, 2, 3]).map(mapFn).offset(3);\n   *\n   * ...will work, but:\n   *\n   *     Lazy([1, 2, 3]).filter(mapFn).offset(3);\n   *\n   * ...will not (because `filter` does not return an `ArrayLikeSequence`).\n   *\n   * (Also, as with the example provided for defining custom {@link Sequence}\n   * types, this example really could have been implemented using a function\n   * already available as part of Lazy.js: in this case, {@link Sequence#map}.)\n   *\n   * @public\n   * @constructor\n   *\n   * @examples\n   * Lazy([1, 2, 3])                    // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2, 3]).map(Lazy.identity) // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2, 3]).take(2)            // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2, 3]).drop(2)            // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2, 3]).reverse()          // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2, 3]).slice(1, 2)        // instanceof Lazy.ArrayLikeSequence\n   */\n  function ArrayLikeSequence() {}\n\n  ArrayLikeSequence.prototype = Object.create(Sequence.prototype);\n\n  /**\n   * Create a new constructor function for a type inheriting from\n   * `ArrayLikeSequence`.\n   *\n   * @public\n   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n   *     used for constructing the new sequence. The method will be attached to\n   *     the `ArrayLikeSequence` prototype so that it can be chained with any other\n   *     methods that return array-like sequences.\n   * @param {Object} overrides An object containing function overrides for this\n   *     new sequence type. **Must** include `get`. *May* include `init`,\n   *     `length`, `getIterator`, and `each`. For each function, `this` will be\n   *     the new sequence and `this.parent` will be the source sequence.\n   * @returns {Function} A constructor for a new type inheriting from\n   *     `ArrayLikeSequence`.\n   *\n   * @examples\n   * Lazy.ArrayLikeSequence.define(\"offset\", {\n   *   init: function(offset) {\n   *     this.offset = offset;\n   *   },\n   *\n   *   get: function(i) {\n   *     return this.parent.get((i + this.offset) % this.parent.length());\n   *   }\n   * });\n   *\n   * Lazy([1, 2, 3]).offset(1) // sequence: [2, 3, 1]\n   */\n  ArrayLikeSequence.define = function define(methodName, overrides) {\n    if (!overrides || typeof overrides.get !== 'function') {\n      throw new Error(\"A custom array-like sequence must implement *at least* get!\");\n    }\n\n    return defineSequenceType(ArrayLikeSequence, methodName, overrides);\n  };\n\n  /**\n   * Returns the element at the specified index.\n   *\n   * @public\n   * @param {number} i The index to access.\n   * @returns {*} The element.\n   *\n   * @examples\n   * function increment(x) { return x + 1; }\n   *\n   * Lazy([1, 2, 3]).get(1)                // => 2\n   * Lazy([1, 2, 3]).get(-1)               // => undefined\n   * Lazy([1, 2, 3]).map(increment).get(1) // => 3\n   */\n  ArrayLikeSequence.prototype.get = function get(i) {\n    return this.parent.get(i);\n  };\n\n  /**\n   * Returns the length of the sequence.\n   *\n   * @public\n   * @returns {number} The length.\n   *\n   * @examples\n   * function increment(x) { return x + 1; }\n   *\n   * Lazy([]).length()                       // => 0\n   * Lazy([1, 2, 3]).length()                // => 3\n   * Lazy([1, 2, 3]).map(increment).length() // => 3\n   */\n  ArrayLikeSequence.prototype.length = function length() {\n    return this.parent.length();\n  };\n\n  /**\n   * Returns the current sequence (since it is already indexed).\n   */\n  ArrayLikeSequence.prototype.getIndex = function getIndex() {\n    return this;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#getIterator}.\n   */\n  ArrayLikeSequence.prototype.getIterator = function getIterator() {\n    return new IndexedIterator(this);\n  };\n\n  /**\n   * An optimized version of {@link Iterator} meant to work with already-indexed\n   * sequences.\n   *\n   * @param {ArrayLikeSequence} sequence The sequence to iterate over.\n   * @constructor\n   */\n  function IndexedIterator(sequence) {\n    this.sequence = sequence;\n    this.index    = -1;\n  }\n\n  IndexedIterator.prototype.current = function current() {\n    return this.sequence.get(this.index);\n  };\n\n  IndexedIterator.prototype.moveNext = function moveNext() {\n    if (this.index >= this.sequence.length() - 1) {\n      return false;\n    }\n\n    ++this.index;\n    return true;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#each}.\n   */\n  ArrayLikeSequence.prototype.each = function each(fn) {\n    var length = this.length(),\n        i = -1;\n\n    while (++i < length) {\n      if (fn(this.get(i), i) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns a new sequence with the same elements as this one, plus the\n   * specified element at the end.\n   *\n   * @public\n   * @returns {ArrayLikeSequence} The new array-like sequence.\n   *\n   * @examples\n   * Lazy([1, 2]).push(3) // sequence: [1, 2, 3]\n   * Lazy([]).push(1)     // sequence: [1]\n   */\n  ArrayLikeSequence.prototype.push = function push(value) {\n    return this.concat([value]);\n  };\n\n  /**\n   * Returns a new sequence with the same elements as this one, minus the last\n   * element.\n   *\n   * @public\n   * @returns {ArrayLikeSequence} The new array-like sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).pop() // sequence: [1, 2]\n   * Lazy([]).pop()        // sequence: []\n   */\n  ArrayLikeSequence.prototype.pop = function pop() {\n    return this.initial();\n  };\n\n  /**\n   * Returns a new sequence with the same elements as this one, plus the\n   * specified element at the beginning.\n   *\n   * @public\n   * @returns {ArrayLikeSequence} The new array-like sequence.\n   *\n   * @examples\n   * Lazy([1, 2]).unshift(3) // sequence: [3, 1, 2]\n   * Lazy([]).unshift(1)     // sequence: [1]\n   */\n  ArrayLikeSequence.prototype.unshift = function unshift(value) {\n    return Lazy([value]).concat(this);\n  };\n\n  /**\n   * Returns a new sequence with the same elements as this one, minus the first\n   * element.\n   *\n   * @public\n   * @returns {ArrayLikeSequence} The new array-like sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3]).shift() // sequence: [2, 3]\n   * Lazy([]).shift()        // sequence: []\n   */\n  ArrayLikeSequence.prototype.shift = function shift() {\n    return this.drop();\n  };\n\n  /**\n   * Returns a new sequence comprising the portion of this sequence starting\n   * from the specified starting index and continuing until the specified ending\n   * index or to the end of the sequence.\n   *\n   * @public\n   * @param {number} begin The index at which the new sequence should start.\n   * @param {number=} end The index at which the new sequence should end.\n   * @returns {ArrayLikeSequence} The new array-like sequence.\n   *\n   * @examples\n   * Lazy([1, 2, 3, 4, 5]).slice(0)     // sequence: [1, 2, 3, 4, 5]\n   * Lazy([1, 2, 3, 4, 5]).slice(2)     // sequence: [3, 4, 5]\n   * Lazy([1, 2, 3, 4, 5]).slice(2, 4)  // sequence: [3, 4]\n   * Lazy([1, 2, 3, 4, 5]).slice(-1)    // sequence: [5]\n   * Lazy([1, 2, 3, 4, 5]).slice(1, -1) // sequence: [2, 3, 4]\n   * Lazy([1, 2, 3, 4, 5]).slice(0, 10) // sequence: [1, 2, 3, 4, 5]\n   */\n  ArrayLikeSequence.prototype.slice = function slice(begin, end) {\n    var length = this.length();\n\n    if (begin < 0) {\n      begin = length + begin;\n    }\n\n    var result = this.drop(begin);\n\n    if (typeof end === \"number\") {\n      if (end < 0) {\n        end = length + end;\n      }\n      result = result.take(end - begin);\n    }\n\n    return result;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#map}, which creates an\n   * {@link ArrayLikeSequence} so that the result still provides random access.\n   *\n   * @public\n   *\n   * @examples\n   * Lazy([1, 2, 3]).map(Lazy.identity) // instanceof Lazy.ArrayLikeSequence\n   */\n  ArrayLikeSequence.prototype.map = function map(mapFn) {\n    return new IndexedMappedSequence(this, createCallback(mapFn));\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedMappedSequence(parent, mapFn) {\n    this.parent = parent;\n    this.mapFn  = mapFn;\n  }\n\n  IndexedMappedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  IndexedMappedSequence.prototype.get = function get(i) {\n    if (i < 0 || i >= this.parent.length()) {\n      return undefined;\n    }\n\n    return this.mapFn(this.parent.get(i), i);\n  };\n\n  /**\n   * An optimized version of {@link Sequence#filter}.\n   */\n  ArrayLikeSequence.prototype.filter = function filter(filterFn) {\n    return new IndexedFilteredSequence(this, createCallback(filterFn));\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedFilteredSequence(parent, filterFn) {\n    this.parent   = parent;\n    this.filterFn = filterFn;\n  }\n\n  IndexedFilteredSequence.prototype = Object.create(FilteredSequence.prototype);\n\n  IndexedFilteredSequence.prototype.each = function each(fn) {\n    var parent = this.parent,\n        filterFn = this.filterFn,\n        length = this.parent.length(),\n        i = -1,\n        j = 0,\n        e;\n\n    while (++i < length) {\n      e = parent.get(i);\n      if (filterFn(e, i) && fn(e, j++) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#reverse}, which creates an\n   * {@link ArrayLikeSequence} so that the result still provides random access.\n   *\n   * @public\n   *\n   * @examples\n   * Lazy([1, 2, 3]).reverse() // instanceof Lazy.ArrayLikeSequence\n   */\n  ArrayLikeSequence.prototype.reverse = function reverse() {\n    return new IndexedReversedSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedReversedSequence(parent) {\n    this.parent = parent;\n  }\n\n  IndexedReversedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  IndexedReversedSequence.prototype.get = function get(i) {\n    return this.parent.get(this.length() - i - 1);\n  };\n\n  /**\n   * An optimized version of {@link Sequence#first}, which creates an\n   * {@link ArrayLikeSequence} so that the result still provides random access.\n   *\n   * @public\n   *\n   * @examples\n   * Lazy([1, 2, 3]).first(2) // instanceof Lazy.ArrayLikeSequence\n   */\n  ArrayLikeSequence.prototype.first = function first(count) {\n    if (typeof count === \"undefined\") {\n      return this.get(0);\n    }\n\n    return new IndexedTakeSequence(this, count);\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedTakeSequence(parent, count) {\n    this.parent = parent;\n    this.count  = count;\n  }\n\n  IndexedTakeSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  IndexedTakeSequence.prototype.length = function length() {\n    var parentLength = this.parent.length();\n    return this.count <= parentLength ? this.count : parentLength;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#rest}, which creates an\n   * {@link ArrayLikeSequence} so that the result still provides random access.\n   *\n   * @public\n   *\n   * @examples\n   * Lazy([1, 2, 3]).rest() // instanceof Lazy.ArrayLikeSequence\n   */\n  ArrayLikeSequence.prototype.rest = function rest(count) {\n    return new IndexedDropSequence(this, count);\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedDropSequence(parent, count) {\n    this.parent = parent;\n    this.count  = typeof count === \"number\" ? count : 1;\n  }\n\n  IndexedDropSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  IndexedDropSequence.prototype.get = function get(i) {\n    return this.parent.get(this.count + i);\n  };\n\n  IndexedDropSequence.prototype.length = function length() {\n    var parentLength = this.parent.length();\n    return this.count <= parentLength ? parentLength - this.count : 0;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#concat} that returns another\n   * {@link ArrayLikeSequence} *if* the argument is an array.\n   *\n   * @public\n   * @param {...*} var_args\n   *\n   * @examples\n   * Lazy([1, 2]).concat([3, 4]) // instanceof Lazy.ArrayLikeSequence\n   * Lazy([1, 2]).concat([3, 4]) // sequence: [1, 2, 3, 4]\n   */\n  ArrayLikeSequence.prototype.concat = function concat(var_args) {\n    if (arguments.length === 1 && isArray(arguments[0])) {\n      return new IndexedConcatenatedSequence(this, (/** @type {Array} */ var_args));\n    } else {\n      return Sequence.prototype.concat.apply(this, arguments);\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  function IndexedConcatenatedSequence(parent, other) {\n    this.parent = parent;\n    this.other  = other;\n  }\n\n  IndexedConcatenatedSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  IndexedConcatenatedSequence.prototype.get = function get(i) {\n    var parentLength = this.parent.length();\n    if (i < parentLength) {\n      return this.parent.get(i);\n    } else {\n      return this.other[i - parentLength];\n    }\n  };\n\n  IndexedConcatenatedSequence.prototype.length = function length() {\n    return this.parent.length() + this.other.length;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#uniq}.\n   */\n  ArrayLikeSequence.prototype.uniq = function uniq(keyFn) {\n    return new IndexedUniqueSequence(this, createCallback(keyFn));\n  };\n\n  /**\n   * @param {ArrayLikeSequence} parent\n   * @constructor\n   */\n  function IndexedUniqueSequence(parent, keyFn) {\n    this.parent = parent;\n    this.each   = getEachForParent(parent);\n    this.keyFn  = keyFn;\n  }\n\n  IndexedUniqueSequence.prototype = Object.create(Sequence.prototype);\n\n  IndexedUniqueSequence.prototype.eachArrayCache = function eachArrayCache(fn) {\n    // Basically the same implementation as w/ the set, but using an array because\n    // it's cheaper for smaller sequences.\n    var parent = this.parent,\n        keyFn  = this.keyFn,\n        length = parent.length(),\n        cache  = [],\n        find   = arrayContains,\n        key, value,\n        i = -1,\n        j = 0;\n\n    while (++i < length) {\n      value = parent.get(i);\n      key = keyFn(value);\n      if (!find(cache, key)) {\n        cache.push(key);\n        if (fn(value, j++) === false) {\n          return false;\n        }\n      }\n    }\n  };\n\n  IndexedUniqueSequence.prototype.eachSetCache = UniqueSequence.prototype.each;\n\n  function getEachForParent(parent) {\n    if (parent.length() < 100) {\n      return IndexedUniqueSequence.prototype.eachArrayCache;\n    } else {\n      return UniqueSequence.prototype.each;\n    }\n  }\n\n  // Now that we've fully initialized the ArrayLikeSequence prototype, we can\n  // set the prototype for MemoizedSequence.\n\n  MemoizedSequence.prototype = Object.create(Sequence.prototype);\n\n  MemoizedSequence.prototype.getParentIterator = function getParentIterator() {\n    // Since the premise of this sequence is that it only iterates over each\n    // element of its parent a grand total of one (1) time, we should only ever\n    // need to get the parent iterator once.\n    if (!this.iterator) {\n      this.iterator = this.parent.getIterator();\n    }\n\n    return this.iterator;\n  };\n\n  MemoizedSequence.prototype.getIterator = function getIterator() {\n    return new Memoizer(this.memo, this.getParentIterator());\n  };\n\n  MemoizedSequence.prototype.iterateTo = function iterateTo(i) {\n    var memo = this.memo,\n        iterator = this.getParentIterator();\n\n    while (i >= memo.length) {\n      if (!iterator.moveNext()) {\n        this.complete = true;\n        return false;\n      }\n\n      memo.push(iterator.current());\n    }\n\n    return true;\n  };\n\n  MemoizedSequence.prototype.get = function get(i) {\n    var memo = this.memo;\n\n    if (i < memo.length) {\n      return memo[i];\n    }\n\n    if (!this.iterateTo(i)) {\n      return undefined;\n    }\n\n    return memo[i];\n  };\n\n  MemoizedSequence.prototype.length = function length() {\n    if (!this.complete) {\n      this.iterateTo(Infinity);\n    }\n\n    return this.memo.length;\n  };\n\n  MemoizedSequence.prototype.slice = function slice(begin, end) {\n    if (!this.complete) {\n      this.iterateTo(end);\n    }\n\n    return Lazy(this.memo.slice(begin, end));\n  };\n\n  MemoizedSequence.prototype.toArray = function toArray() {\n    if (!this.complete) {\n      this.iterateTo(Infinity);\n    }\n\n    return this.memo.slice(0);\n  };\n\n  /**\n   * ArrayWrapper is the most basic {@link Sequence}. It directly wraps an array\n   * and implements the same methods as {@link ArrayLikeSequence}, but more\n   * efficiently.\n   *\n   * @constructor\n   */\n  function ArrayWrapper(source) {\n    this.source = source;\n  }\n\n  ArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  ArrayWrapper.prototype.root = function root() {\n    return this;\n  };\n\n  ArrayWrapper.prototype.isAsync = function isAsync() {\n    return false;\n  };\n\n  /**\n   * Returns the element at the specified index in the source array.\n   *\n   * @param {number} i The index to access.\n   * @returns {*} The element.\n   */\n  ArrayWrapper.prototype.get = function get(i) {\n    return this.source[i];\n  };\n\n  /**\n   * Returns the length of the source array.\n   *\n   * @returns {number} The length.\n   */\n  ArrayWrapper.prototype.length = function length() {\n    return this.source.length;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#each}.\n   */\n  ArrayWrapper.prototype.each = function each(fn) {\n    return forEach(this.source, fn);\n  };\n\n  /**\n   * An optimized version of {@link Sequence#map}.\n   */\n  ArrayWrapper.prototype.map = function map(mapFn) {\n    return new MappedArrayWrapper(this, createCallback(mapFn));\n  };\n\n  /**\n   * An optimized version of {@link Sequence#filter}.\n   */\n  ArrayWrapper.prototype.filter = function filter(filterFn) {\n    return new FilteredArrayWrapper(this, createCallback(filterFn));\n  };\n\n  /**\n   * An optimized version of {@link Sequence#uniq}.\n   */\n  ArrayWrapper.prototype.uniq = function uniq(keyFn) {\n    return new UniqueArrayWrapper(this, keyFn);\n  };\n\n  /**\n   * An optimized version of {@link ArrayLikeSequence#concat}.\n   *\n   * @param {...*} var_args\n   */\n  ArrayWrapper.prototype.concat = function concat(var_args) {\n    if (arguments.length === 1 && isArray(arguments[0])) {\n      return new ConcatArrayWrapper(this, (/** @type {Array} */ var_args));\n    } else {\n      return ArrayLikeSequence.prototype.concat.apply(this, arguments);\n    }\n  };\n\n  /**\n   * An optimized version of {@link Sequence#toArray}.\n   */\n  ArrayWrapper.prototype.toArray = function toArray() {\n    return this.source.slice(0);\n  };\n\n  /**\n   * @constructor\n   */\n  function MappedArrayWrapper(parent, mapFn) {\n    this.parent = parent;\n    this.mapFn  = mapFn;\n  }\n\n  MappedArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  MappedArrayWrapper.prototype.get = function get(i) {\n    var source = this.parent.source;\n\n    if (i < 0 || i >= source.length) {\n      return undefined;\n    }\n\n    return this.mapFn(source[i]);\n  };\n\n  MappedArrayWrapper.prototype.length = function length() {\n    return this.parent.source.length;\n  };\n\n  MappedArrayWrapper.prototype.each = function each(fn) {\n    var source = this.parent.source,\n        length = source.length,\n        mapFn  = this.mapFn,\n        i = -1;\n\n    while (++i < length) {\n      if (fn(mapFn(source[i], i), i) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * @constructor\n   */\n  function FilteredArrayWrapper(parent, filterFn) {\n    this.parent   = parent;\n    this.filterFn = filterFn;\n  }\n\n  FilteredArrayWrapper.prototype = Object.create(FilteredSequence.prototype);\n\n  FilteredArrayWrapper.prototype.each = function each(fn) {\n    var source = this.parent.source,\n        filterFn = this.filterFn,\n        length = source.length,\n        i = -1,\n        j = 0,\n        e;\n\n    while (++i < length) {\n      e = source[i];\n      if (filterFn(e, i) && fn(e, j++) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * @constructor\n   */\n  function UniqueArrayWrapper(parent, keyFn) {\n    this.parent = parent;\n    this.each   = getEachForSource(parent.source);\n    this.keyFn  = keyFn;\n  }\n\n  UniqueArrayWrapper.prototype = Object.create(Sequence.prototype);\n\n  UniqueArrayWrapper.prototype.eachNoCache = function eachNoCache(fn) {\n    var source = this.parent.source,\n        keyFn  = this.keyFn,\n        length = source.length,\n        find   = arrayContainsBefore,\n        value,\n\n        // Yes, this is hideous.\n        // Trying to get performance first, will refactor next!\n        i = -1,\n        k = 0;\n\n    while (++i < length) {\n      value = source[i];\n      if (!find(source, value, i, keyFn) && fn(value, k++) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  UniqueArrayWrapper.prototype.eachArrayCache = function eachArrayCache(fn) {\n    // Basically the same implementation as w/ the set, but using an array because\n    // it's cheaper for smaller sequences.\n    var source = this.parent.source,\n        keyFn  = this.keyFn,\n        length = source.length,\n        cache  = [],\n        find   = arrayContains,\n        key, value,\n        i = -1,\n        j = 0;\n\n    if (keyFn) {\n      keyFn = createCallback(keyFn);\n      while (++i < length) {\n        value = source[i];\n        key = keyFn(value);\n        if (!find(cache, key)) {\n          cache.push(key);\n          if (fn(value, j++) === false) {\n            return false;\n          }\n        }\n      }\n\n    } else {\n      while (++i < length) {\n        value = source[i];\n        if (!find(cache, value)) {\n          cache.push(value);\n          if (fn(value, j++) === false) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  UniqueArrayWrapper.prototype.eachSetCache = UniqueSequence.prototype.each;\n\n  /**\n   * My latest findings here...\n   *\n   * So I hadn't really given the set-based approach enough credit. The main issue\n   * was that my Set implementation was totally not optimized at all. After pretty\n   * heavily optimizing it (just take a look; it's a monstrosity now!), it now\n   * becomes the fastest option for much smaller values of N.\n   */\n  function getEachForSource(source) {\n    if (source.length < 40) {\n      return UniqueArrayWrapper.prototype.eachNoCache;\n    } else if (source.length < 100) {\n      return UniqueArrayWrapper.prototype.eachArrayCache;\n    } else {\n      return UniqueArrayWrapper.prototype.eachSetCache;\n    }\n  }\n\n  /**\n   * @constructor\n   */\n  function ConcatArrayWrapper(parent, other) {\n    this.parent = parent;\n    this.other  = other;\n  }\n\n  ConcatArrayWrapper.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  ConcatArrayWrapper.prototype.get = function get(i) {\n    var source = this.parent.source,\n        sourceLength = source.length;\n\n    if (i < sourceLength) {\n      return source[i];\n    } else {\n      return this.other[i - sourceLength];\n    }\n  };\n\n  ConcatArrayWrapper.prototype.length = function length() {\n    return this.parent.source.length + this.other.length;\n  };\n\n  ConcatArrayWrapper.prototype.each = function each(fn) {\n    var source = this.parent.source,\n        sourceLength = source.length,\n        other = this.other,\n        otherLength = other.length,\n        i = 0,\n        j = -1;\n\n    while (++j < sourceLength) {\n      if (fn(source[j], i++) === false) {\n        return false;\n      }\n    }\n\n    j = -1;\n    while (++j < otherLength) {\n      if (fn(other[j], i++) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * An `ObjectLikeSequence` object represents a sequence of key/value pairs.\n   *\n   * The initial sequence you get by wrapping an object with `Lazy(object)` is\n   * an `ObjectLikeSequence`.\n   *\n   * All methods of `ObjectLikeSequence` that conceptually should return\n   * something like an object return another `ObjectLikeSequence`.\n   *\n   * @public\n   * @constructor\n   *\n   * @examples\n   * var obj = { foo: 'bar' };\n   *\n   * Lazy(obj).assign({ bar: 'baz' })   // instanceof Lazy.ObjectLikeSequence\n   * Lazy(obj).defaults({ bar: 'baz' }) // instanceof Lazy.ObjectLikeSequence\n   * Lazy(obj).invert()                 // instanceof Lazy.ObjectLikeSequence\n   */\n  function ObjectLikeSequence() {}\n\n  ObjectLikeSequence.prototype = Object.create(Sequence.prototype);\n\n  /**\n   * Create a new constructor function for a type inheriting from\n   * `ObjectLikeSequence`.\n   *\n   * @public\n   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n   *     used for constructing the new sequence. The method will be attached to\n   *     the `ObjectLikeSequence` prototype so that it can be chained with any other\n   *     methods that return object-like sequences.\n   * @param {Object} overrides An object containing function overrides for this\n   *     new sequence type. **Must** include `each`. *May* include `init` and\n   *     `get` (for looking up an element by key).\n   * @returns {Function} A constructor for a new type inheriting from\n   *     `ObjectLikeSequence`.\n   *\n   * @examples\n   * function downcaseKey(value, key) {\n   *   return [key.toLowerCase(), value];\n   * }\n   *\n   * Lazy.ObjectLikeSequence.define(\"caseInsensitive\", {\n   *   init: function() {\n   *     var downcased = this.parent\n   *       .map(downcaseKey)\n   *       .toObject();\n   *     this.downcased = Lazy(downcased);\n   *   },\n   *\n   *   get: function(key) {\n   *     return this.downcased.get(key.toLowerCase());\n   *   },\n   *\n   *   each: function(fn) {\n   *     return this.downcased.each(fn);\n   *   }\n   * });\n   *\n   * Lazy({ Foo: 'bar' }).caseInsensitive()            // sequence: { foo: 'bar' }\n   * Lazy({ FOO: 'bar' }).caseInsensitive().get('foo') // => 'bar'\n   * Lazy({ FOO: 'bar' }).caseInsensitive().get('FOO') // => 'bar'\n   */\n  ObjectLikeSequence.define = function define(methodName, overrides) {\n    if (!overrides || typeof overrides.each !== 'function') {\n      throw new Error(\"A custom object-like sequence must implement *at least* each!\");\n    }\n\n    return defineSequenceType(ObjectLikeSequence, methodName, overrides);\n  };\n\n  ObjectLikeSequence.prototype.value = function value() {\n    return this.toObject();\n  };\n\n  /**\n   * Gets the element at the specified key in this sequence.\n   *\n   * @public\n   * @param {string} key The key.\n   * @returns {*} The element.\n   *\n   * @examples\n   * Lazy({ foo: \"bar\" }).get(\"foo\")                          // => \"bar\"\n   * Lazy({ foo: \"bar\" }).extend({ foo: \"baz\" }).get(\"foo\")   // => \"baz\"\n   * Lazy({ foo: \"bar\" }).defaults({ bar: \"baz\" }).get(\"bar\") // => \"baz\"\n   * Lazy({ foo: \"bar\" }).invert().get(\"bar\")                 // => \"foo\"\n   * Lazy({ foo: 1, bar: 2 }).pick([\"foo\"]).get(\"foo\")        // => 1\n   * Lazy({ foo: 1, bar: 2 }).pick([\"foo\"]).get(\"bar\")        // => undefined\n   * Lazy({ foo: 1, bar: 2 }).omit([\"foo\"]).get(\"bar\")        // => 2\n   * Lazy({ foo: 1, bar: 2 }).omit([\"foo\"]).get(\"foo\")        // => undefined\n   */\n  ObjectLikeSequence.prototype.get = function get(key) {\n    var pair = this.pairs().find(function(pair) {\n      return pair[0] === key;\n    });\n\n    return pair ? pair[1] : undefined;\n  };\n\n  /**\n   * Returns a {@link Sequence} whose elements are the keys of this object-like\n   * sequence.\n   *\n   * @public\n   * @returns {Sequence} The sequence based on this sequence's keys.\n   *\n   * @examples\n   * var obj = { hello: \"hola\", goodbye: \"hasta luego\" };\n   *\n   * Lazy(obj).keys() // sequence: [\"hello\", \"goodbye\"]\n   * Lazy(obj).keys().map(function(v, i) { return [v, i]; }) // sequence: [[\"hello\", 0], [\"goodbye\", 1]]\n   */\n  ObjectLikeSequence.prototype.keys = function keys() {\n    return new KeySequence(this);\n  };\n\n  function KeySequence(parent) {\n    this.parent = parent;\n  }\n\n  KeySequence.prototype = Object.create(Sequence.prototype);\n\n  KeySequence.prototype.each = function each(fn) {\n    var i = -1;\n\n    return this.parent.each(function(v, k) {\n      return fn(k, ++i);\n    });\n  };\n\n  /**\n   * Returns a {@link Sequence} whose elements are the values of this object-like\n   * sequence.\n   *\n   * @public\n   * @returns {Sequence} The sequence based on this sequence's values.\n   *\n   * @examples\n   * Lazy({ hello: \"hola\", goodbye: \"hasta luego\" }).values() // sequence: [\"hola\", \"hasta luego\"]\n   */\n  ObjectLikeSequence.prototype.values = function values() {\n    return new ValuesSequence(this);\n  };\n\n  function ValuesSequence(parent) {\n    this.parent = parent;\n  }\n\n  ValuesSequence.prototype = Object.create(Sequence.prototype);\n\n  ValuesSequence.prototype.each = function each(fn) {\n    var i = -1;\n\n    return this.parent.each(function(v, k) {\n      return fn(v, ++i);\n    });\n  };\n\n  /**\n   * Throws an exception. Asynchronous iteration over object-like sequences is\n   * not supported.\n   *\n   * @public\n   * @examples\n   * Lazy({ foo: 'bar' }).async() // throws\n   */\n  ObjectLikeSequence.prototype.async = function async() {\n    throw new Error('An ObjectLikeSequence does not support asynchronous iteration.');\n  };\n\n  ObjectLikeSequence.prototype.filter = function filter(filterFn) {\n    return new FilteredObjectLikeSequence(this, createCallback(filterFn));\n  };\n\n  function FilteredObjectLikeSequence(parent, filterFn) {\n    this.parent = parent;\n    this.filterFn = filterFn;\n  }\n\n  FilteredObjectLikeSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  FilteredObjectLikeSequence.prototype.each = function each(fn) {\n    var filterFn = this.filterFn;\n\n    return this.parent.each(function(v, k) {\n      if (filterFn(v, k)) {\n        return fn(v, k);\n      }\n    });\n  };\n\n  /**\n   * Returns this same sequence. (Reversing an object-like sequence doesn't make\n   * any sense.)\n   */\n  ObjectLikeSequence.prototype.reverse = function reverse() {\n    return this;\n  };\n\n  /**\n   * Returns an {@link ObjectLikeSequence} whose elements are the combination of\n   * this sequence and another object. In the case of a key appearing in both this\n   * sequence and the given object, the other object's value will override the\n   * one in this sequence.\n   *\n   * @public\n   * @aka extend\n   * @param {Object} other The other object to assign to this sequence.\n   * @returns {ObjectLikeSequence} A new sequence comprising elements from this\n   *     sequence plus the contents of `other`.\n   *\n   * @examples\n   * Lazy({ \"uno\": 1, \"dos\": 2 }).assign({ \"tres\": 3 })     // sequence: { uno: 1, dos: 2, tres: 3 }\n   * Lazy({ foo: \"bar\" }).assign({ foo: \"baz\" });           // sequence: { foo: \"baz\" }\n   * Lazy({ foo: 'foo' }).assign({ foo: false }).get('foo') // false\n   */\n  ObjectLikeSequence.prototype.assign = function assign(other) {\n    return new AssignSequence(this, other);\n  };\n\n  ObjectLikeSequence.prototype.extend = function extend(other) {\n    return this.assign(other);\n  };\n\n  /**\n   * @constructor\n   */\n  function AssignSequence(parent, other) {\n    this.parent = parent;\n    this.other  = other;\n  }\n\n  AssignSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  AssignSequence.prototype.get = function get(key) {\n    return key in this.other ? this.other[key] : this.parent.get(key);\n  };\n\n  AssignSequence.prototype.each = function each(fn) {\n    var merged = new Set(),\n        done   = false;\n\n    Lazy(this.other).each(function(value, key) {\n      if (fn(value, key) === false) {\n        done = true;\n        return false;\n      }\n\n      merged.add(key);\n    });\n\n    if (!done) {\n      return this.parent.each(function(value, key) {\n        if (!merged.contains(key) && fn(value, key) === false) {\n          return false;\n        }\n      });\n    }\n  };\n\n  /**\n   * Returns an {@link ObjectLikeSequence} whose elements are the combination of\n   * this sequence and a 'default' object. In the case of a key appearing in both\n   * this sequence and the given object, this sequence's value will override the\n   * default object's.\n   *\n   * @public\n   * @param {Object} defaults The 'default' object to use for missing keys in this\n   *     sequence.\n   * @returns {ObjectLikeSequence} A new sequence comprising elements from this\n   *     sequence supplemented by the contents of `defaults`.\n   *\n   * @examples\n   * Lazy({ name: \"Dan\" }).defaults({ name: \"User\", password: \"passw0rd\" }) // sequence: { name: \"Dan\", password: \"passw0rd\" }\n   * Lazy({ foo: false }).defaults({ foo: 'foo' }).get('foo') // false\n   * Lazy({ a: 1 }).defaults({ b: 2 }).defaults({ c: 3 }) // sequence: { a: 1, b: 2, c: 3 }\n   * Lazy({ a: 1 }).defaults({ b: 2 }).defaults({ a: 3 }) // sequence: { a: 1, b: 2 }\n   * Lazy({ a: 1, b: 2 }).defaults({ b: 5 }).defaults({ c: 3, d: 4 }) // sequence: { a: 1, b: 2, c: 3, d: 4 }\n   */\n  ObjectLikeSequence.prototype.defaults = function defaults(defaults) {\n    return new DefaultsSequence(this, defaults);\n  };\n\n  /**\n   * @constructor\n   */\n  function DefaultsSequence(parent, defaults) {\n    this.parent        = parent;\n    this.defaultValues = defaults;\n  }\n\n  DefaultsSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  DefaultsSequence.prototype.get = function get(key) {\n    var parentValue = this.parent.get(key);\n    return parentValue !== undefined ? parentValue : this.defaultValues[key];\n  };\n\n  DefaultsSequence.prototype.each = function each(fn) {\n    var merged = new Set(),\n        done   = false;\n\n    this.parent.each(function(value, key) {\n      if (fn(value, key) === false) {\n        done = true;\n        return false;\n      }\n\n      if (typeof value !== \"undefined\") {\n        merged.add(key);\n      }\n    });\n\n    if (!done) {\n      Lazy(this.defaultValues).each(function(value, key) {\n        if (!merged.contains(key) && fn(value, key) === false) {\n          return false;\n        }\n      });\n    }\n  };\n\n  /**\n   * Returns an {@link ObjectLikeSequence} whose values are this sequence's keys,\n   * and whose keys are this sequence's values.\n   *\n   * @public\n   * @returns {ObjectLikeSequence} A new sequence comprising the inverted keys and\n   *     values from this sequence.\n   *\n   * @examples\n   * Lazy({ first: \"Dan\", last: \"Tao\" }).invert() // sequence: { Dan: \"first\", Tao: \"last\" }\n   */\n  ObjectLikeSequence.prototype.invert = function invert() {\n    return new InvertedSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function InvertedSequence(parent) {\n    this.parent = parent;\n  }\n\n  InvertedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  InvertedSequence.prototype.each = function each(fn) {\n    this.parent.each(function(value, key) {\n      return fn(key, value);\n    });\n  };\n\n  /**\n   * Produces an {@link ObjectLikeSequence} consisting of all the recursively\n   * merged values from this and the given object(s) or sequence(s).\n   *\n   * Note that by default this method only merges \"vanilla\" objects (bags of\n   * key/value pairs), not arrays or any other custom object types. To customize\n   * how merging works, you can provide the mergeFn argument, e.g. to handling\n   * merging arrays, strings, or other types of objects.\n   *\n   * @public\n   * @param {...Object|ObjectLikeSequence} others The other object(s) or\n   *     sequence(s) whose values will be merged into this one.\n   * @param {Function=} mergeFn An optional function used to customize merging\n   *     behavior. The function should take two values as parameters and return\n   *     whatever the \"merged\" form of those values is. If the function returns\n   *     undefined then the new value will simply replace the old one in the\n   *     final result.\n   * @returns {ObjectLikeSequence} The new sequence consisting of merged values.\n   *\n   * @examples\n   * // These examples are completely stolen from Lo-Dash's documentation:\n   * // lodash.com/docs#merge\n   *\n   * var names = {\n   *   'characters': [\n   *     { 'name': 'barney' },\n   *     { 'name': 'fred' }\n   *   ]\n   * };\n   *\n   * var ages = {\n   *   'characters': [\n   *     { 'age': 36 },\n   *     { 'age': 40 }\n   *   ]\n   * };\n   *\n   * var food = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var otherFood = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * function mergeArrays(a, b) {\n   *   return Array.isArray(a) ? a.concat(b) : undefined;\n   * }\n   *\n   * Lazy(names).merge(ages); // => sequence: { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n   * Lazy(food).merge(otherFood, mergeArrays); // => sequence: { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n   *\n   * // ----- Now for my own tests: -----\n   *\n   * // merges objects\n   * Lazy({ foo: 1 }).merge({ foo: 2 }); // => sequence: { foo: 2 }\n   * Lazy({ foo: 1 }).merge({ bar: 2 }); // => sequence: { foo: 1, bar: 2 }\n   *\n   * // goes deep\n   * Lazy({ foo: { bar: 1 } }).merge({ foo: { bar: 2 } }); // => sequence: { foo: { bar: 2 } }\n   * Lazy({ foo: { bar: 1 } }).merge({ foo: { baz: 2 } }); // => sequence: { foo: { bar: 1, baz: 2 } }\n   * Lazy({ foo: { bar: 1 } }).merge({ foo: { baz: 2 } }); // => sequence: { foo: { bar: 1, baz: 2 } }\n   *\n   * // gives precedence to later sources\n   * Lazy({ foo: 1 }).merge({ bar: 2 }, { bar: 3 }); // => sequence: { foo: 1, bar: 3 }\n   *\n   * // undefined gets passed over\n   * Lazy({ foo: 1 }).merge({ foo: undefined }); // => sequence: { foo: 1 }\n   *\n   * // null doesn't get passed over\n   * Lazy({ foo: 1 }).merge({ foo: null }); // => sequence: { foo: null }\n   *\n   * // array contents get merged as well\n   * Lazy({ foo: [{ bar: 1 }] }).merge({ foo: [{ baz: 2 }] }); // => sequence: { foo: [{ bar: 1, baz: 2}] }\n   */\n  ObjectLikeSequence.prototype.merge = function merge(var_args) {\n    var mergeFn = arguments.length > 1 && typeof arguments[arguments.length - 1] === \"function\" ?\n      arrayPop.call(arguments) : null;\n    return new MergedSequence(this, arraySlice.call(arguments, 0), mergeFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function MergedSequence(parent, others, mergeFn) {\n    this.parent  = parent;\n    this.others  = others;\n    this.mergeFn = mergeFn;\n  }\n\n  MergedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  MergedSequence.prototype.each = function each(fn) {\n    var others  = this.others,\n        mergeFn = this.mergeFn || mergeObjects,\n        keys    = {};\n\n    var iteratedFullSource = this.parent.each(function(value, key) {\n      var merged = value;\n\n      forEach(others, function(other) {\n        if (key in other) {\n          merged = mergeFn(merged, other[key]);\n        }\n      });\n\n      keys[key] = true;\n\n      return fn(merged, key);\n    });\n\n    if (iteratedFullSource === false) {\n      return false;\n    }\n\n    var remaining = {};\n\n    forEach(others, function(other) {\n      for (var k in other) {\n        if (!keys[k]) {\n          remaining[k] = mergeFn(remaining[k], other[k]);\n        }\n      }\n    });\n\n    return Lazy(remaining).each(fn);\n  };\n\n  /**\n   * @private\n   * @examples\n   * mergeObjects({ foo: 1 }, { bar: 2 }); // => { foo: 1, bar: 2 }\n   * mergeObjects({ foo: { bar: 1 } }, { foo: { baz: 2 } }); // => { foo: { bar: 1, baz: 2 } }\n   * mergeObjects({ foo: { bar: 1 } }, { foo: undefined }); // => { foo: { bar: 1 } }\n   * mergeObjects({ foo: { bar: 1 } }, { foo: null }); // => { foo: null }\n   * mergeObjects({ array: [0, 1, 2] }, { array: [3, 4, 5] }).array; // instanceof Array\n   * mergeObjects({ date: new Date() }, { date: new Date() }).date; // instanceof Date\n   * mergeObjects([{ foo: 1 }], [{ bar: 2 }]); // => [{ foo: 1, bar: 2 }]\n   */\n  function mergeObjects(a, b) {\n    var merged, prop;\n\n    if (typeof b === 'undefined') {\n      return a;\n    }\n\n    // Check that we're dealing with two objects or two arrays.\n    if (isVanillaObject(a) && isVanillaObject(b)) {\n      merged = {};\n    } else if (isArray(a) && isArray(b)) {\n      merged = [];\n    } else {\n      // Otherwise there's no merging to do -- just replace a w/ b.\n      return b;\n    }\n\n    for (prop in a) {\n      merged[prop] = mergeObjects(a[prop], b[prop]);\n    }\n    for (prop in b) {\n      if (!merged[prop]) {\n        merged[prop] = b[prop];\n      }\n    }\n    return merged;\n  }\n\n  /**\n   * Checks whether an object is a \"vanilla\" object, i.e. {'foo': 'bar'} as\n   * opposed to an array, date, etc.\n   *\n   * @private\n   * @examples\n   * isVanillaObject({foo: 'bar'}); // => true\n   * isVanillaObject(new Date());   // => false\n   * isVanillaObject([1, 2, 3]);    // => false\n   */\n  function isVanillaObject(object) {\n    return object && object.constructor === Object;\n  }\n\n  /**\n   * Creates a {@link Sequence} consisting of the keys from this sequence whose\n   *     values are functions.\n   *\n   * @public\n   * @aka methods\n   * @returns {Sequence} The new sequence.\n   *\n   * @examples\n   * var dog = {\n   *   name: \"Fido\",\n   *   breed: \"Golden Retriever\",\n   *   bark: function() { console.log(\"Woof!\"); },\n   *   wagTail: function() { console.log(\"TODO: implement robotic dog interface\"); }\n   * };\n   *\n   * Lazy(dog).functions() // sequence: [\"bark\", \"wagTail\"]\n   */\n  ObjectLikeSequence.prototype.functions = function functions() {\n    return this\n      .filter(function(v, k) { return typeof(v) === \"function\"; })\n      .map(function(v, k) { return k; });\n  };\n\n  ObjectLikeSequence.prototype.methods = function methods() {\n    return this.functions();\n  };\n\n  /**\n   * Creates an {@link ObjectLikeSequence} consisting of the key/value pairs from\n   * this sequence whose keys are included in the given array of property names.\n   *\n   * @public\n   * @param {Array.<string>} properties An array of the properties to \"pick\" from this\n   *     sequence.\n   * @returns {ObjectLikeSequence} The new sequence.\n   *\n   * @examples\n   * var players = {\n   *   \"who\": \"first\",\n   *   \"what\": \"second\",\n   *   \"i don't know\": \"third\"\n   * };\n   *\n   * Lazy(players).pick([\"who\", \"what\"]) // sequence: { who: \"first\", what: \"second\" }\n   */\n  ObjectLikeSequence.prototype.pick = function pick(properties) {\n    return new PickSequence(this, properties);\n  };\n\n  /**\n   * @constructor\n   */\n  function PickSequence(parent, properties) {\n    this.parent     = parent;\n    this.properties = properties;\n  }\n\n  PickSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  PickSequence.prototype.get = function get(key) {\n    return arrayContains(this.properties, key) ? this.parent.get(key) : undefined;\n  };\n\n  PickSequence.prototype.each = function each(fn) {\n    var inArray    = arrayContains,\n        properties = this.properties;\n\n    return this.parent.each(function(value, key) {\n      if (inArray(properties, key)) {\n        return fn(value, key);\n      }\n    });\n  };\n\n  /**\n   * Creates an {@link ObjectLikeSequence} consisting of the key/value pairs from\n   * this sequence excluding those with the specified keys. Non-string keys are\n   * effectively ignored.\n   *\n   * @public\n   * @param {Array} properties An array of the properties to *omit* from this\n   *     sequence.\n   * @returns {ObjectLikeSequence} The new sequence.\n   *\n   * @examples\n   * var players = {\n   *   \"who\": \"first\",\n   *   \"what\": \"second\",\n   *   \"i don't know\": \"third\"\n   * };\n   *\n   * Lazy(players).omit([\"who\", \"what\"]) // sequence: { \"i don't know\": \"third\" }\n   *\n   * // Example to show handling of non-string keys\n   * Lazy({1: 2, true: false}).omit([1, true]) // sequence: { \"1\": 2, \"true\": false }\n   */\n  ObjectLikeSequence.prototype.omit = function omit(properties) {\n    return new OmitSequence(this, properties);\n  };\n\n  /**\n   * @constructor\n   */\n  function OmitSequence(parent, properties) {\n    this.parent     = parent;\n    this.properties = properties;\n  }\n\n  OmitSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  OmitSequence.prototype.get = function get(key) {\n    return arrayContains(this.properties, key) ? undefined : this.parent.get(key);\n  };\n\n  OmitSequence.prototype.each = function each(fn) {\n    var inArray    = arrayContains,\n        properties = this.properties;\n\n    return this.parent.each(function(value, key) {\n      if (!inArray(properties, key)) {\n        return fn(value, key);\n      }\n    });\n  };\n\n  /**\n   * Maps the key/value pairs in this sequence to arrays.\n   *\n   * @public\n   * @aka toArray\n   * @returns {Sequence} An sequence of `[key, value]` pairs.\n   *\n   * @examples\n   * var colorCodes = {\n   *   red: \"#f00\",\n   *   green: \"#0f0\",\n   *   blue: \"#00f\"\n   * };\n   *\n   * Lazy(colorCodes).pairs() // sequence: [[\"red\", \"#f00\"], [\"green\", \"#0f0\"], [\"blue\", \"#00f\"]]\n   */\n  ObjectLikeSequence.prototype.pairs = function pairs() {\n    return this.map(function(v, k) { return [k, v]; });\n  };\n\n  /**\n   * Creates an array from the key/value pairs in this sequence.\n   *\n   * @public\n   * @returns {Array} An array of `[key, value]` elements.\n   *\n   * @examples\n   * var colorCodes = {\n   *   red: \"#f00\",\n   *   green: \"#0f0\",\n   *   blue: \"#00f\"\n   * };\n   *\n   * Lazy(colorCodes).toArray() // => [[\"red\", \"#f00\"], [\"green\", \"#0f0\"], [\"blue\", \"#00f\"]]\n   */\n  ObjectLikeSequence.prototype.toArray = function toArray() {\n    return this.pairs().toArray();\n  };\n\n  /**\n   * Creates an object with the key/value pairs from this sequence.\n   *\n   * @public\n   * @returns {Object} An object with the same key/value pairs as this sequence.\n   *\n   * @examples\n   * var colorCodes = {\n   *   red: \"#f00\",\n   *   green: \"#0f0\",\n   *   blue: \"#00f\"\n   * };\n   *\n   * Lazy(colorCodes).toObject() // => { red: \"#f00\", green: \"#0f0\", blue: \"#00f\" }\n   */\n  ObjectLikeSequence.prototype.toObject = function toObject() {\n    return this.reduce(function(object, value, key) {\n      object[key] = value;\n      return object;\n    }, {});\n  };\n\n  // Now that we've fully initialized the ObjectLikeSequence prototype, we can\n  // actually set the prototypes for GroupedSequence, IndexedSequence, and\n  // CountedSequence.\n\n  GroupedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  /**\n   * @examples\n   * var objects = [{a: 'x'}, {a: 'x'}];\n   *\n   * Lazy(objects).groupBy('a') // sequence: {x: [{a: 'x'}, {a: 'x'}]}\n   * Lazy(objects).groupBy('a').each(Lazy.noop) // true\n   */\n  GroupedSequence.prototype.each = function each(fn) {\n    var keyFn   = createCallback(this.keyFn),\n        valFn   = createCallback(this.valFn),\n        result;\n\n    result = this.parent.reduce(function(grouped,e) {\n      var key = keyFn(e),\n          val = valFn(e);\n      if (!isArray(grouped[key])) {\n        grouped[key] = [val];\n      } else {\n        grouped[key].push(val);\n      }\n      return grouped;\n    },{});\n\n    return transform(function(grouped) {\n      for (var key in grouped) {\n        if (fn(grouped[key], key) === false) {\n          return false;\n        }\n      }\n      return true;\n    }, result);\n  };\n\n  IndexedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  IndexedSequence.prototype.each = function each(fn) {\n    var keyFn   = createCallback(this.keyFn),\n        valFn   = createCallback(this.valFn),\n        indexed = {};\n\n    return this.parent.each(function(e) {\n      var key = keyFn(e),\n          val = valFn(e);\n\n      if (!indexed[key]) {\n        indexed[key] = val;\n        return fn(val, key);\n      }\n    });\n  };\n\n  CountedSequence.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  CountedSequence.prototype.each = function each(fn) {\n    var keyFn   = createCallback(this.keyFn),\n        counted = {};\n\n    this.parent.each(function(e) {\n      var key = keyFn(e);\n      if (!counted[key]) {\n        counted[key] = 1;\n      } else {\n        counted[key] += 1;\n      }\n    });\n\n    for (var key in counted) {\n      if (fn(counted[key], key) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Watches for all changes to a specified property (or properties) of an\n   * object and produces a sequence whose elements have the properties\n   * `{ property, value }` indicating which property changed and what it was\n   * changed to.\n   *\n   * Note that this method **only works on directly wrapped objects**; it will\n   * *not* work on any arbitrary {@link ObjectLikeSequence}.\n   *\n   * @public\n   * @param {(string|Array)=} propertyNames A property name or array of property\n   *     names to watch. If this parameter is `undefined`, all of the object's\n   *     current (enumerable) properties will be watched.\n   * @returns {Sequence} A sequence comprising `{ property, value }` objects\n   *     describing each change to the specified property/properties.\n   *\n   * @examples\n   * var obj = {},\n   *     changes = [];\n   *\n   * Lazy(obj).watch('foo').each(function(change) {\n   *   changes.push(change);\n   * });\n   *\n   * obj.foo = 1;\n   * obj.bar = 2;\n   * obj.foo = 3;\n   *\n   * obj.foo; // => 3\n   * changes; // => [{ property: 'foo', value: 1 }, { property: 'foo', value: 3 }]\n   */\n  ObjectLikeSequence.prototype.watch = function watch(propertyNames) {\n    throw new Error('You can only call #watch on a directly wrapped object.');\n  };\n\n  /**\n   * @constructor\n   */\n  function ObjectWrapper(source) {\n    this.source = source;\n  }\n\n  ObjectWrapper.prototype = Object.create(ObjectLikeSequence.prototype);\n\n  ObjectWrapper.prototype.root = function root() {\n    return this;\n  };\n\n  ObjectWrapper.prototype.isAsync = function isAsync() {\n    return false;\n  };\n\n  ObjectWrapper.prototype.get = function get(key) {\n    return this.source[key];\n  };\n\n  ObjectWrapper.prototype.each = function each(fn) {\n    var source = this.source,\n        keys = source ? Object.keys(source) : [],\n        length = keys.length,\n        key,\n        index;\n\n    for (index = 0; index < length; ++index) {\n      key = keys[index];\n\n      if (fn(source[key], key) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * A `StringLikeSequence` represents a sequence of characters.\n   *\n   * The initial sequence you get by wrapping a string with `Lazy(string)` is a\n   * `StringLikeSequence`.\n   *\n   * All methods of `StringLikeSequence` that conceptually should return\n   * something like a string return another `StringLikeSequence`.\n   *\n   * @public\n   * @constructor\n   *\n   * @examples\n   * function upcase(str) { return str.toUpperCase(); }\n   *\n   * Lazy('foo')               // instanceof Lazy.StringLikeSequence\n   * Lazy('foo').toUpperCase() // instanceof Lazy.StringLikeSequence\n   * Lazy('foo').reverse()     // instanceof Lazy.StringLikeSequence\n   * Lazy('foo').take(2)       // instanceof Lazy.StringLikeSequence\n   * Lazy('foo').drop(1)       // instanceof Lazy.StringLikeSequence\n   * Lazy('foo').substring(1)  // instanceof Lazy.StringLikeSequence\n   *\n   * // Note that `map` does not create a `StringLikeSequence` because there's\n   * // no guarantee the mapping function will return characters. In the event\n   * // you do want to map a string onto a string-like sequence, use\n   * // `mapString`:\n   * Lazy('foo').map(Lazy.identity)       // instanceof Lazy.ArrayLikeSequence\n   * Lazy('foo').mapString(Lazy.identity) // instanceof Lazy.StringLikeSequence\n   */\n  function StringLikeSequence() {}\n\n  StringLikeSequence.prototype = Object.create(ArrayLikeSequence.prototype);\n\n  /**\n   * Create a new constructor function for a type inheriting from\n   * `StringLikeSequence`.\n   *\n   * @public\n   * @param {string|Array.<string>} methodName The name(s) of the method(s) to be\n   *     used for constructing the new sequence. The method will be attached to\n   *     the `StringLikeSequence` prototype so that it can be chained with any other\n   *     methods that return string-like sequences.\n   * @param {Object} overrides An object containing function overrides for this\n   *     new sequence type. Has the same requirements as\n   *     {@link ArrayLikeSequence.define}.\n   * @returns {Function} A constructor for a new type inheriting from\n   *     `StringLikeSequence`.\n   *\n   * @examples\n   * Lazy.StringLikeSequence.define(\"zomg\", {\n   *   length: function() {\n   *     return this.parent.length() + \"!!ZOMG!!!1\".length;\n   *   },\n   *\n   *   get: function(i) {\n   *     if (i < this.parent.length()) {\n   *       return this.parent.get(i);\n   *     }\n   *     return \"!!ZOMG!!!1\".charAt(i - this.parent.length());\n   *   }\n   * });\n   *\n   * Lazy('foo').zomg() // sequence: \"foo!!ZOMG!!!1\"\n   */\n  StringLikeSequence.define = function define(methodName, overrides) {\n    if (!overrides || typeof overrides.get !== 'function') {\n      throw new Error(\"A custom string-like sequence must implement *at least* get!\");\n    }\n\n    return defineSequenceType(StringLikeSequence, methodName, overrides);\n  };\n\n  StringLikeSequence.prototype.value = function value() {\n    return this.toString();\n  };\n\n  /**\n   * Returns an {@link IndexedIterator} that will step over each character in this\n   * sequence one by one.\n   *\n   * @returns {IndexedIterator} The iterator.\n   */\n  StringLikeSequence.prototype.getIterator = function getIterator() {\n    return new CharIterator(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function CharIterator(source) {\n    this.source = Lazy(source);\n    this.index = -1;\n  }\n\n  CharIterator.prototype.current = function current() {\n    return this.source.charAt(this.index);\n  };\n\n  CharIterator.prototype.moveNext = function moveNext() {\n    return (++this.index < this.source.length());\n  };\n\n  /**\n   * Returns the character at the given index of this sequence, or the empty\n   * string if the specified index lies outside the bounds of the sequence.\n   *\n   * @public\n   * @param {number} i The index of this sequence.\n   * @returns {string} The character at the specified index.\n   *\n   * @examples\n   * Lazy(\"foo\").charAt(0)  // => \"f\"\n   * Lazy(\"foo\").charAt(-1) // => \"\"\n   * Lazy(\"foo\").charAt(10) // => \"\"\n   */\n  StringLikeSequence.prototype.charAt = function charAt(i) {\n    return this.get(i);\n  };\n\n  /**\n   * Returns the character code at the given index of this sequence, or `NaN` if\n   * the index lies outside the bounds of the sequence.\n   *\n   * @public\n   * @param {number} i The index of the character whose character code you want.\n   * @returns {number} The character code.\n   *\n   * @examples\n   * Lazy(\"abc\").charCodeAt(0)  // => 97\n   * Lazy(\"abc\").charCodeAt(-1) // => NaN\n   * Lazy(\"abc\").charCodeAt(10) // => NaN\n   */\n  StringLikeSequence.prototype.charCodeAt = function charCodeAt(i) {\n    var char = this.charAt(i);\n    if (!char) { return NaN; }\n\n    return char.charCodeAt(0);\n  };\n\n  /**\n   * Returns a {@link StringLikeSequence} comprising the characters from *this*\n   * sequence starting at `start` and ending at `stop` (exclusive), or---if\n   * `stop` is `undefined`, including the rest of the sequence.\n   *\n   * @public\n   * @param {number} start The index where this sequence should begin.\n   * @param {number=} stop The index (exclusive) where this sequence should end.\n   * @returns {StringLikeSequence} The new sequence.\n   *\n   * @examples\n   * Lazy(\"foo\").substring(1)      // sequence: \"oo\"\n   * Lazy(\"foo\").substring(-1)     // sequence: \"foo\"\n   * Lazy(\"hello\").substring(1, 3) // sequence: \"el\"\n   * Lazy(\"hello\").substring(1, 9) // sequence: \"ello\"\n   * Lazy(\"foo\").substring(0, 0)   // sequence: \"\"\n   * Lazy(\"foo\").substring(3, 3)   // sequence: \"\"\n   */\n  StringLikeSequence.prototype.substring = function substring(start, stop) {\n    return new StringSegment(this, start, stop);\n  };\n\n  /**\n   * @constructor\n   */\n  function StringSegment(parent, start, stop) {\n    this.parent = parent;\n    this.start  = Math.max(0, start);\n    this.stop   = stop;\n  }\n\n  StringSegment.prototype = Object.create(StringLikeSequence.prototype);\n\n  StringSegment.prototype.get = function get(i) {\n    return this.parent.get(i + this.start);\n  };\n\n  StringSegment.prototype.length = function length() {\n    return (typeof this.stop === \"number\" ? this.stop : this.parent.length()) - this.start;\n  };\n\n  /**\n   * An optimized version of {@link Sequence#first} that returns another\n   * {@link StringLikeSequence} (or just the first character, if `count` is\n   * undefined).\n   *\n   * @public\n   * @examples\n   * Lazy('foo').first()                // => 'f'\n   * Lazy('fo').first(2)                // sequence: 'fo'\n   * Lazy('foo').first(10)              // sequence: 'foo'\n   * Lazy('foo').toUpperCase().first()  // => 'F'\n   * Lazy('foo').toUpperCase().first(2) // sequence: 'FO'\n   */\n  StringLikeSequence.prototype.first = function first(count) {\n    if (typeof count === \"undefined\") {\n      return this.charAt(0);\n    }\n\n    return this.substring(0, count);\n  };\n\n  /**\n   * An optimized version of {@link Sequence#last} that returns another\n   * {@link StringLikeSequence} (or just the last character, if `count` is\n   * undefined).\n   *\n   * @public\n   * @examples\n   * Lazy('foo').last()                // => 'o'\n   * Lazy('foo').last(2)               // sequence: 'oo'\n   * Lazy('foo').last(10)              // sequence: 'foo'\n   * Lazy('foo').toUpperCase().last()  // => 'O'\n   * Lazy('foo').toUpperCase().last(2) // sequence: 'OO'\n   */\n  StringLikeSequence.prototype.last = function last(count) {\n    if (typeof count === \"undefined\") {\n      return this.charAt(this.length() - 1);\n    }\n\n    return this.substring(this.length() - count);\n  };\n\n  StringLikeSequence.prototype.drop = function drop(count) {\n    return this.substring(count);\n  };\n\n  /**\n   * Finds the index of the first occurrence of the given substring within this\n   * sequence, starting from the specified index (or the beginning of the\n   * sequence).\n   *\n   * @public\n   * @param {string} substring The substring to search for.\n   * @param {number=} startIndex The index from which to start the search.\n   * @returns {number} The first index where the given substring is found, or\n   *     -1 if it isn't in the sequence.\n   *\n   * @examples\n   * Lazy('canal').indexOf('a')    // => 1\n   * Lazy('canal').indexOf('a', 2) // => 3\n   * Lazy('canal').indexOf('ana')  // => 1\n   * Lazy('canal').indexOf('andy') // => -1\n   * Lazy('canal').indexOf('x')    // => -1\n   */\n  StringLikeSequence.prototype.indexOf = function indexOf(substring, startIndex) {\n    return this.toString().indexOf(substring, startIndex);\n  };\n\n  /**\n   * Finds the index of the last occurrence of the given substring within this\n   * sequence, starting from the specified index (or the end of the sequence)\n   * and working backwards.\n   *\n   * @public\n   * @param {string} substring The substring to search for.\n   * @param {number=} startIndex The index from which to start the search.\n   * @returns {number} The last index where the given substring is found, or\n   *     -1 if it isn't in the sequence.\n   *\n   * @examples\n   * Lazy('canal').lastIndexOf('a')    // => 3\n   * Lazy('canal').lastIndexOf('a', 2) // => 1\n   * Lazy('canal').lastIndexOf('ana')  // => 1\n   * Lazy('canal').lastIndexOf('andy') // => -1\n   * Lazy('canal').lastIndexOf('x')    // => -1\n   */\n  StringLikeSequence.prototype.lastIndexOf = function lastIndexOf(substring, startIndex) {\n    return this.toString().lastIndexOf(substring, startIndex);\n  };\n\n  /**\n   * Checks if this sequence contains a given substring.\n   *\n   * @public\n   * @param {string} substring The substring to check for.\n   * @returns {boolean} Whether or not this sequence contains `substring`.\n   *\n   * @examples\n   * Lazy('hello').contains('ell') // => true\n   * Lazy('hello').contains('')    // => true\n   * Lazy('hello').contains('abc') // => false\n   */\n  StringLikeSequence.prototype.contains = function contains(substring) {\n    return this.indexOf(substring) !== -1;\n  };\n\n  /**\n   * Checks if this sequence ends with a given suffix.\n   *\n   * @public\n   * @param {string} suffix The suffix to check for.\n   * @returns {boolean} Whether or not this sequence ends with `suffix`.\n   *\n   * @examples\n   * Lazy('foo').endsWith('oo')  // => true\n   * Lazy('foo').endsWith('')    // => true\n   * Lazy('foo').endsWith('abc') // => false\n   */\n  StringLikeSequence.prototype.endsWith = function endsWith(suffix) {\n    return this.substring(this.length() - suffix.length).toString() === suffix;\n  };\n\n  /**\n   * Checks if this sequence starts with a given prefix.\n   *\n   * @public\n   * @param {string} prefix The prefix to check for.\n   * @returns {boolean} Whether or not this sequence starts with `prefix`.\n   *\n   * @examples\n   * Lazy('foo').startsWith('fo')  // => true\n   * Lazy('foo').startsWith('')    // => true\n   * Lazy('foo').startsWith('abc') // => false\n   */\n  StringLikeSequence.prototype.startsWith = function startsWith(prefix) {\n    return this.substring(0, prefix.length).toString() === prefix;\n  };\n\n  /**\n   * Converts all of the characters in this string to uppercase.\n   *\n   * @public\n   * @returns {StringLikeSequence} A new sequence with the same characters as\n   *     this sequence, all uppercase.\n   *\n   * @examples\n   * function nextLetter(a) {\n   *   return String.fromCharCode(a.charCodeAt(0) + 1);\n   * }\n   *\n   * Lazy('foo').toUpperCase()                       // sequence: 'FOO'\n   * Lazy('foo').substring(1).toUpperCase()          // sequence: 'OO'\n   * Lazy('abc').mapString(nextLetter).toUpperCase() // sequence: 'BCD'\n   */\n  StringLikeSequence.prototype.toUpperCase = function toUpperCase() {\n    return this.mapString(function(char) { return char.toUpperCase(); });\n  };\n\n  /**\n   * Converts all of the characters in this string to lowercase.\n   *\n   * @public\n   * @returns {StringLikeSequence} A new sequence with the same characters as\n   *     this sequence, all lowercase.\n   *\n   * @examples\n   * function nextLetter(a) {\n   *   return String.fromCharCode(a.charCodeAt(0) + 1);\n   * }\n   *\n   * Lazy('FOO').toLowerCase()                       // sequence: 'foo'\n   * Lazy('FOO').substring(1).toLowerCase()          // sequence: 'oo'\n   * Lazy('ABC').mapString(nextLetter).toLowerCase() // sequence: 'bcd'\n   */\n  StringLikeSequence.prototype.toLowerCase = function toLowerCase() {\n    return this.mapString(function(char) { return char.toLowerCase(); });\n  };\n\n  /**\n   * Maps the characters of this sequence onto a new {@link StringLikeSequence}.\n   *\n   * @public\n   * @param {Function} mapFn The function used to map characters from this\n   *     sequence onto the new sequence.\n   * @returns {StringLikeSequence} The new sequence.\n   *\n   * @examples\n   * function upcase(char) { return char.toUpperCase(); }\n   *\n   * Lazy(\"foo\").mapString(upcase)               // sequence: \"FOO\"\n   * Lazy(\"foo\").mapString(upcase).charAt(0)     // => \"F\"\n   * Lazy(\"foo\").mapString(upcase).charCodeAt(0) // => 70\n   * Lazy(\"foo\").mapString(upcase).substring(1)  // sequence: \"OO\"\n   */\n  StringLikeSequence.prototype.mapString = function mapString(mapFn) {\n    return new MappedStringLikeSequence(this, mapFn);\n  };\n\n  /**\n   * @constructor\n   */\n  function MappedStringLikeSequence(parent, mapFn) {\n    this.parent = parent;\n    this.mapFn  = mapFn;\n  }\n\n  MappedStringLikeSequence.prototype = Object.create(StringLikeSequence.prototype);\n  MappedStringLikeSequence.prototype.get = IndexedMappedSequence.prototype.get;\n  MappedStringLikeSequence.prototype.length = IndexedMappedSequence.prototype.length;\n\n  /**\n   * Returns a copy of this sequence that reads back to front.\n   *\n   * @public\n   *\n   * @examples\n   * Lazy(\"abcdefg\").reverse() // sequence: \"gfedcba\"\n   */\n  StringLikeSequence.prototype.reverse = function reverse() {\n    return new ReversedStringLikeSequence(this);\n  };\n\n  /**\n   * @constructor\n   */\n  function ReversedStringLikeSequence(parent) {\n    this.parent = parent;\n  }\n\n  ReversedStringLikeSequence.prototype = Object.create(StringLikeSequence.prototype);\n  ReversedStringLikeSequence.prototype.get = IndexedReversedSequence.prototype.get;\n  ReversedStringLikeSequence.prototype.length = IndexedReversedSequence.prototype.length;\n\n  StringLikeSequence.prototype.toString = function toString() {\n    return this.join(\"\");\n  };\n\n  /**\n   * Creates a {@link Sequence} comprising all of the matches for the specified\n   * pattern in the underlying string.\n   *\n   * @public\n   * @param {RegExp} pattern The pattern to match.\n   * @returns {Sequence} A sequence of all the matches.\n   *\n   * @examples\n   * Lazy(\"abracadabra\").match(/a[bcd]/) // sequence: [\"ab\", \"ac\", \"ad\", \"ab\"]\n   * Lazy(\"fee fi fo fum\").match(/\\w+/)  // sequence: [\"fee\", \"fi\", \"fo\", \"fum\"]\n   * Lazy(\"hello\").match(/xyz/)          // sequence: []\n   */\n  StringLikeSequence.prototype.match = function match(pattern) {\n    return new StringMatchSequence(this, pattern);\n  };\n\n  /**\n   * @constructor\n   */\n  function StringMatchSequence(parent, pattern) {\n    this.parent = parent;\n    this.pattern = pattern;\n  }\n\n  StringMatchSequence.prototype = Object.create(Sequence.prototype);\n\n  StringMatchSequence.prototype.getIterator = function getIterator() {\n    return new StringMatchIterator(this.parent.toString(), this.pattern);\n  };\n\n  /**\n   * @constructor\n   */\n  function StringMatchIterator(source, pattern) {\n    this.source  = source;\n    this.pattern = cloneRegex(pattern);\n  }\n\n  StringMatchIterator.prototype.current = function current() {\n    return this.match[0];\n  };\n\n  StringMatchIterator.prototype.moveNext = function moveNext() {\n    return !!(this.match = this.pattern.exec(this.source));\n  };\n\n  /**\n   * Creates a {@link Sequence} comprising all of the substrings of this string\n   * separated by the given delimiter, which can be either a string or a regular\n   * expression.\n   *\n   * @public\n   * @param {string|RegExp} delimiter The delimiter to use for recognizing\n   *     substrings.\n   * @returns {Sequence} A sequence of all the substrings separated by the given\n   *     delimiter.\n   *\n   * @examples\n   * Lazy(\"foo\").split(\"\")                      // sequence: [\"f\", \"o\", \"o\"]\n   * Lazy(\"yo dawg\").split(\" \")                 // sequence: [\"yo\", \"dawg\"]\n   * Lazy(\"bah bah\\tblack  sheep\").split(/\\s+/) // sequence: [\"bah\", \"bah\", \"black\", \"sheep\"]\n   */\n  StringLikeSequence.prototype.split = function split(delimiter) {\n    return new SplitStringSequence(this, delimiter);\n  };\n\n  /**\n   * @constructor\n   */\n  function SplitStringSequence(parent, pattern) {\n    this.parent = parent;\n    this.pattern = pattern;\n  }\n\n  SplitStringSequence.prototype = Object.create(Sequence.prototype);\n\n  SplitStringSequence.prototype.getIterator = function getIterator() {\n    var source = this.parent.toString();\n\n    if (this.pattern instanceof RegExp) {\n      if (this.pattern.source === \"\" || this.pattern.source === \"(?:)\") {\n        return new CharIterator(source);\n      } else {\n        return new SplitWithRegExpIterator(source, this.pattern);\n      }\n    } else if (this.pattern === \"\") {\n      return new CharIterator(source);\n    } else {\n      return new SplitWithStringIterator(source, this.pattern);\n    }\n  };\n\n  /**\n   * @constructor\n   */\n  function SplitWithRegExpIterator(source, pattern) {\n    this.source  = source;\n    this.pattern = cloneRegex(pattern);\n  }\n\n  SplitWithRegExpIterator.prototype.current = function current() {\n    return this.source.substring(this.start, this.end);\n  };\n\n  SplitWithRegExpIterator.prototype.moveNext = function moveNext() {\n    if (!this.pattern) {\n      return false;\n    }\n\n    var match = this.pattern.exec(this.source);\n\n    if (match) {\n      this.start = this.nextStart ? this.nextStart : 0;\n      this.end = match.index;\n      this.nextStart = match.index + match[0].length;\n      return true;\n\n    } else if (this.pattern) {\n      this.start = this.nextStart;\n      this.end = undefined;\n      this.nextStart = undefined;\n      this.pattern = undefined;\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * @constructor\n   */\n  function SplitWithStringIterator(source, delimiter) {\n    this.source = source;\n    this.delimiter = delimiter;\n  }\n\n  SplitWithStringIterator.prototype.current = function current() {\n    return this.source.substring(this.leftIndex, this.rightIndex);\n  };\n\n  SplitWithStringIterator.prototype.moveNext = function moveNext() {\n    if (!this.finished) {\n      this.leftIndex = typeof this.leftIndex !== \"undefined\" ?\n        this.rightIndex + this.delimiter.length :\n        0;\n      this.rightIndex = this.source.indexOf(this.delimiter, this.leftIndex);\n    }\n\n    if (this.rightIndex === -1) {\n      this.finished = true;\n      this.rightIndex = undefined;\n      return true;\n    }\n\n    return !this.finished;\n  };\n\n  /**\n   * Wraps a string exposing {@link #match} and {@link #split} methods that return\n   * {@link Sequence} objects instead of arrays, improving on the efficiency of\n   * JavaScript's built-in `String#split` and `String.match` methods and\n   * supporting asynchronous iteration.\n   *\n   * @param {string} source The string to wrap.\n   * @constructor\n   */\n  function StringWrapper(source) {\n    this.source = source;\n  }\n\n  StringWrapper.prototype = Object.create(StringLikeSequence.prototype);\n\n  StringWrapper.prototype.root = function root() {\n    return this;\n  };\n\n  StringWrapper.prototype.isAsync = function isAsync() {\n    return false;\n  };\n\n  StringWrapper.prototype.get = function get(i) {\n    return this.source.charAt(i);\n  };\n\n  StringWrapper.prototype.length = function length() {\n    return this.source.length;\n  };\n\n  StringWrapper.prototype.toString = function toString() {\n    return this.source;\n  };\n\n  /**\n   * A `GeneratedSequence` does not wrap an in-memory collection but rather\n   * determines its elements on-the-fly during iteration according to a generator\n   * function.\n   *\n   * You create a `GeneratedSequence` by calling {@link Lazy.generate}.\n   *\n   * @public\n   * @constructor\n   * @param {function(number):*} generatorFn A function which accepts an index\n   *     and returns a value for the element at that position in the sequence.\n   * @param {number=} length The length of the sequence. If this argument is\n   *     omitted, the sequence will go on forever.\n   */\n  function GeneratedSequence(generatorFn, length) {\n    this.get = generatorFn;\n    this.fixedLength = length;\n  }\n\n  GeneratedSequence.prototype = Object.create(Sequence.prototype);\n\n  GeneratedSequence.prototype.isAsync = function isAsync() {\n    return false;\n  };\n\n  /**\n   * Returns the length of this sequence.\n   *\n   * @public\n   * @returns {number} The length, or `undefined` if this is an indefinite\n   *     sequence.\n   */\n  GeneratedSequence.prototype.length = function length() {\n    return this.fixedLength;\n  };\n\n  /**\n   * Iterates over the sequence produced by invoking this sequence's generator\n   * function up to its specified length, or, if length is `undefined`,\n   * indefinitely (in which case the sequence will go on forever--you would need\n   * to call, e.g., {@link Sequence#take} to limit iteration).\n   *\n   * @public\n   * @param {Function} fn The function to call on each output from the generator\n   *     function.\n   */\n  GeneratedSequence.prototype.each = function each(fn) {\n    var generatorFn = this.get,\n        length = this.fixedLength,\n        i = 0;\n\n    while (typeof length === \"undefined\" || i < length) {\n      if (fn(generatorFn(i), i++) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  GeneratedSequence.prototype.getIterator = function getIterator() {\n    return new GeneratedIterator(this);\n  };\n\n  /**\n   * Iterates over a generated sequence. (This allows generated sequences to be\n   * iterated asynchronously.)\n   *\n   * @param {GeneratedSequence} sequence The generated sequence to iterate over.\n   * @constructor\n   */\n  function GeneratedIterator(sequence) {\n    this.sequence     = sequence;\n    this.index        = 0;\n    this.currentValue = null;\n  }\n\n  GeneratedIterator.prototype.current = function current() {\n    return this.currentValue;\n  };\n\n  GeneratedIterator.prototype.moveNext = function moveNext() {\n    var sequence = this.sequence;\n\n    if (typeof sequence.fixedLength === \"number\" && this.index >= sequence.fixedLength) {\n      return false;\n    }\n\n    this.currentValue = sequence.get(this.index++);\n    return true;\n  };\n\n  /**\n   * An `AsyncSequence` iterates over its elements asynchronously when\n   * {@link #each} is called.\n   *\n   * You get an `AsyncSequence` by calling {@link Sequence#async} on any\n   * sequence. Note that some sequence types may not support asynchronous\n   * iteration.\n   *\n   * Returning values\n   * ----------------\n   *\n   * Because of its asynchronous nature, an `AsyncSequence` cannot be used in the\n   * same way as other sequences for functions that return values directly (e.g.,\n   * `reduce`, `max`, `any`, even `toArray`).\n   *\n   * Instead, these methods return an `AsyncHandle` whose `onComplete` method\n   * accepts a callback that will be called with the final result once iteration\n   * has finished.\n   *\n   * Defining custom asynchronous sequences\n   * --------------------------------------\n   *\n   * There are plenty of ways to define an asynchronous sequence. Here's one.\n   *\n   * 1. First, implement an {@link Iterator}. This is an object whose prototype\n   *    has the methods {@link Iterator#moveNext} (which returns a `boolean`) and\n   *    {@link current} (which returns the current value).\n   * 2. Next, create a simple wrapper that inherits from `AsyncSequence`, whose\n   *    `getIterator` function returns an instance of the iterator type you just\n   *    defined.\n   *\n   * The default implementation for {@link #each} on an `AsyncSequence` is to\n   * create an iterator and then asynchronously call {@link Iterator#moveNext}\n   * (using `setImmediate`, if available, otherwise `setTimeout`) until the iterator\n   * can't move ahead any more.\n   *\n   * @public\n   * @constructor\n   * @param {Sequence} parent A {@link Sequence} to wrap, to expose asynchronous\n   *     iteration.\n   * @param {number=} interval How many milliseconds should elapse between each\n   *     element when iterating over this sequence. Note that this interval\n   *     applies even to the first value in the sequence; i.e., when calling\n   *     each(), this much time will elapse before the first element is\n   *     iterated.\n   *\n   *     If this argument is omitted, asynchronous iteration will be executed\n   *     as fast as possible.\n   */\n  function AsyncSequence(parent, interval) {\n    if (parent instanceof AsyncSequence) {\n      throw new Error(\"Sequence is already asynchronous!\");\n    }\n\n    this.parent         = parent;\n    this.interval       = interval;\n    this.onNextCallback = getOnNextCallback(interval);\n    this.cancelCallback = getCancelCallback(interval);\n  }\n\n  AsyncSequence.prototype = Object.create(Sequence.prototype);\n\n  AsyncSequence.prototype.isAsync = function isAsync() {\n    return true;\n  };\n\n  /**\n   * Throws an exception. You cannot manually iterate over an asynchronous\n   * sequence.\n   *\n   * @public\n   * @example\n   * Lazy([1, 2, 3]).async().getIterator() // throws\n   */\n  AsyncSequence.prototype.getIterator = function getIterator() {\n    throw new Error('An AsyncSequence does not support synchronous iteration.');\n  };\n\n  /**\n   * An asynchronous version of {@link Sequence#each}.\n   *\n   * @public\n   * @param {Function} fn The function to invoke asynchronously on each element in\n   *     the sequence one by one.\n   * @returns {AsyncHandle} An {@link AsyncHandle} providing the ability to\n   *     cancel the asynchronous iteration (by calling `cancel()`) as well as\n   *     supply callback(s) for when an error is encountered (`onError`) or when\n   *     iteration is complete (`onComplete`).\n   */\n  AsyncSequence.prototype.each = function each(fn) {\n    var iterator = this.parent.getIterator(),\n        onNextCallback = this.onNextCallback,\n        cancelCallback = this.cancelCallback,\n        i = 0;\n\n    var handle = new AsyncHandle(function cancel() {\n      if (cancellationId) {\n        cancelCallback(cancellationId);\n      }\n    });\n\n    var cancellationId = onNextCallback(function iterate() {\n      cancellationId = null;\n\n      try {\n        if (iterator.moveNext() && fn(iterator.current(), i++) !== false) {\n          cancellationId = onNextCallback(iterate);\n\n        } else {\n          handle._resolve();\n        }\n\n      } catch (e) {\n        handle._reject(e);\n      }\n    });\n\n    return handle;\n  };\n\n  /**\n   * An `AsyncHandle` provides a [Promises/A+](http://promises-aplus.github.io/promises-spec/)\n   * compliant interface for an {@link AsyncSequence} that is currently (or was)\n   * iterating over its elements.\n   *\n   * In addition to behaving as a promise, an `AsyncHandle` provides the ability\n   * to {@link AsyncHandle#cancel} iteration (if `cancelFn` is provided)\n   * and also offers convenient {@link AsyncHandle#onComplete} and\n   * {@link AsyncHandle#onError} methods to attach listeners for when iteration\n   * is complete or an error is thrown during iteration.\n   *\n   * @public\n   * @param {Function} cancelFn A function to cancel asynchronous iteration.\n   *     This is passed in to support different cancellation mechanisms for\n   *     different forms of asynchronous sequences (e.g., timeout-based\n   *     sequences, sequences based on I/O, etc.).\n   * @constructor\n   *\n   * @example\n   * // Create a sequence of 100,000 random numbers, in chunks of 100.\n   * var sequence = Lazy.generate(Math.random)\n   *   .chunk(100)\n   *   .async()\n   *   .take(1000);\n   *\n   * // Reduce-style operations -- i.e., operations that return a *value* (as\n   * // opposed to a *sequence*) -- return an AsyncHandle for async sequences.\n   * var handle = sequence.toArray();\n   *\n   * handle.onComplete(function(array) {\n   *   // Do something w/ 1,000-element array.\n   * });\n   *\n   * // Since an AsyncHandle is a promise, you can also use it to create\n   * // subsequent promises using `then` (see the Promises/A+ spec for more\n   * // info).\n   * var flattened = handle.then(function(array) {\n   *   return Lazy(array).flatten();\n   * });\n   */\n  function AsyncHandle(cancelFn) {\n    this.resolveListeners = [];\n    this.rejectListeners = [];\n    this.state = PENDING;\n    this.cancelFn = cancelFn;\n  }\n\n  // Async handle states\n  var PENDING  = 1,\n      RESOLVED = 2,\n      REJECTED = 3;\n\n  AsyncHandle.prototype.then = function then(onFulfilled, onRejected) {\n    var promise = new AsyncHandle(this.cancelFn);\n\n    this.resolveListeners.push(function(value) {\n      try {\n        if (typeof onFulfilled !== 'function') {\n          resolve(promise, value);\n          return;\n        }\n\n        resolve(promise, onFulfilled(value));\n\n      } catch (e) {\n        promise._reject(e);\n      }\n    });\n\n    this.rejectListeners.push(function(reason) {\n      try {\n        if (typeof onRejected !== 'function') {\n          promise._reject(reason);\n          return;\n        }\n\n        resolve(promise, onRejected(reason));\n\n      } catch (e) {\n        promise._reject(e);\n      }\n    });\n\n    if (this.state === RESOLVED) {\n      this._resolve(this.value);\n    }\n\n    if (this.state === REJECTED) {\n      this._reject(this.reason);\n    }\n\n    return promise;\n  };\n\n  AsyncHandle.prototype._resolve = function _resolve(value) {\n    if (this.state === REJECTED) {\n      return;\n    }\n\n    if (this.state === PENDING) {\n      this.state = RESOLVED;\n      this.value = value;\n    }\n\n    consumeListeners(this.resolveListeners, this.value);\n  };\n\n  AsyncHandle.prototype._reject = function _reject(reason) {\n    if (this.state === RESOLVED) {\n      return;\n    }\n\n    if (this.state === PENDING) {\n      this.state = REJECTED;\n      this.reason = reason;\n    }\n\n    consumeListeners(this.rejectListeners, this.reason);\n  };\n\n  /**\n   * Cancels asynchronous iteration.\n   *\n   * @public\n   */\n  AsyncHandle.prototype.cancel = function cancel() {\n    if (this.cancelFn) {\n      this.cancelFn();\n      this.cancelFn = null;\n      this._resolve(false);\n    }\n  };\n\n  /**\n   * Updates the handle with a callback to execute when iteration is completed.\n   *\n   * @public\n   * @param {Function} callback The function to call when the asynchronous\n   *     iteration is completed.\n   * @return {AsyncHandle} A reference to the handle (for chaining).\n   */\n  AsyncHandle.prototype.onComplete = function onComplete(callback) {\n    this.resolveListeners.push(callback);\n    return this;\n  };\n\n  /**\n   * Updates the handle with a callback to execute if/when any error is\n   * encountered during asynchronous iteration.\n   *\n   * @public\n   * @param {Function} callback The function to call, with any associated error\n   *     object, when an error occurs.\n   * @return {AsyncHandle} A reference to the handle (for chaining).\n   */\n  AsyncHandle.prototype.onError = function onError(callback) {\n    this.rejectListeners.push(callback);\n    return this;\n  };\n\n  /**\n   * Promise resolution procedure:\n   * http://promises-aplus.github.io/promises-spec/#the_promise_resolution_procedure\n   */\n  function resolve(promise, x) {\n    if (promise === x) {\n      promise._reject(new TypeError('Cannot resolve a promise to itself'));\n      return;\n    }\n\n    if (x instanceof AsyncHandle) {\n      x.then(\n        function(value) { resolve(promise, value); },\n        function(reason) { promise._reject(reason); }\n      );\n      return;\n    }\n\n    var then;\n    try {\n      then = (/function|object/).test(typeof x) && x != null && x.then;\n    } catch (e) {\n      promise._reject(e);\n      return;\n    }\n\n    var thenableState = PENDING;\n    if (typeof then === 'function') {\n      try {\n        then.call(\n          x,\n          function resolvePromise(value) {\n            if (thenableState !== PENDING) {\n              return;\n            }\n            thenableState = RESOLVED;\n            resolve(promise, value);\n          },\n          function rejectPromise(reason) {\n            if (thenableState !== PENDING) {\n              return;\n            }\n            thenableState = REJECTED;\n            promise._reject(reason);\n          }\n        );\n      } catch (e) {\n        if (thenableState !== PENDING) {\n          return;\n        }\n\n        promise._reject(e);\n      }\n\n      return;\n    }\n\n    promise._resolve(x);\n  }\n\n  function consumeListeners(listeners, value, callback) {\n    callback || (callback = getOnNextCallback());\n\n    callback(function() {\n      if (listeners.length > 0) {\n        listeners.shift()(value);\n        consumeListeners(listeners, value, callback);\n      }\n    });\n  }\n\n  function getOnNextCallback(interval) {\n    if (typeof interval === \"undefined\") {\n      if (typeof setImmediate === \"function\") {\n        return setImmediate;\n      }\n    }\n\n    interval = interval || 0;\n    return function(fn) {\n      return setTimeout(fn, interval);\n    };\n  }\n\n  function getCancelCallback(interval) {\n    if (typeof interval === \"undefined\") {\n      if (typeof clearImmediate === \"function\") {\n        return clearImmediate;\n      }\n    }\n\n    return clearTimeout;\n  }\n\n  /**\n   * Transform a value, whether the value is retrieved asynchronously or directly.\n   *\n   * @private\n   * @param {Function} fn The function that transforms the value.\n   * @param {*} value The value to be transformed. This can be an {@link AsyncHandle} when the value\n   *     is retrieved asynchronously, otherwise it can be anything.\n   * @returns {*} An {@link AsyncHandle} when `value` is also an {@link AsyncHandle}, otherwise\n   *     whatever `fn` resulted in.\n   */\n  function transform(fn, value) {\n    if (value instanceof AsyncHandle) {\n      return value.then(function() { fn(value); });\n    }\n    return fn(value);\n  }\n\n  /**\n   * An async version of {@link Sequence#reverse}.\n   */\n  AsyncSequence.prototype.reverse = function reverse() {\n    return this.parent.reverse().async();\n  };\n\n  /**\n   * A version of {@link Sequence#find} which returns an {@link AsyncHandle}.\n   *\n   * @public\n   * @param {Function} predicate A function to call on (potentially) every element\n   *     in the sequence.\n   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n   *     the found element, once it is detected, or else `undefined`.\n   */\n  AsyncSequence.prototype.find = function find(predicate) {\n    var found;\n\n    var handle = this.each(function(e, i) {\n      if (predicate(e, i)) {\n        found = e;\n        return false;\n      }\n    });\n\n    return handle.then(function() { return found; });\n  };\n\n  /**\n   * A version of {@link Sequence#indexOf} which returns an {@link AsyncHandle}.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n   *     the found index, once it is detected, or -1.\n   */\n  AsyncSequence.prototype.indexOf = function indexOf(value) {\n    var foundIndex = -1;\n\n    var handle = this.each(function(e, i) {\n      if (e === value) {\n        foundIndex = i;\n        return false;\n      }\n    });\n\n    return handle.then(function() {\n      return foundIndex;\n    });\n  };\n\n  /**\n   * A version of {@link Sequence#contains} which returns an {@link AsyncHandle}.\n   *\n   * @public\n   * @param {*} value The element to search for in the sequence.\n   * @returns {AsyncHandle} An {@link AsyncHandle} (promise) which resolves to\n   *     either `true` or `false` to indicate whether the element was found.\n   */\n  AsyncSequence.prototype.contains = function contains(value) {\n    var found = false;\n\n    var handle = this.each(function(e) {\n      if (e === value) {\n        found = true;\n        return false;\n      }\n    });\n\n    return handle.then(function() {\n      return found;\n    });\n  };\n\n  /**\n   * Just return the same sequence for `AsyncSequence#async` (I see no harm in this).\n   */\n  AsyncSequence.prototype.async = function async() {\n    return this;\n  };\n\n  /**\n   * See {@link ObjectLikeSequence#watch} for docs.\n   */\n  ObjectWrapper.prototype.watch = function watch(propertyNames) {\n    return new WatchedPropertySequence(this.source, propertyNames);\n  };\n\n  function WatchedPropertySequence(object, propertyNames) {\n    this.listeners = [];\n\n    if (!propertyNames) {\n      propertyNames = Lazy(object).keys().toArray();\n    } else if (!isArray(propertyNames)) {\n      propertyNames = [propertyNames];\n    }\n\n    var listeners = this.listeners,\n        index     = 0;\n\n    Lazy(propertyNames).each(function(propertyName) {\n      var propertyValue = object[propertyName];\n\n      Object.defineProperty(object, propertyName, {\n        get: function() {\n          return propertyValue;\n        },\n\n        set: function(value) {\n          for (var i = listeners.length - 1; i >= 0; --i) {\n            if (listeners[i]({ property: propertyName, value: value }, index) === false) {\n              listeners.splice(i, 1);\n            }\n          }\n          propertyValue = value;\n          ++index;\n        }\n      });\n    });\n  }\n\n  WatchedPropertySequence.prototype = Object.create(AsyncSequence.prototype);\n\n  WatchedPropertySequence.prototype.each = function each(fn) {\n    this.listeners.push(fn);\n  };\n\n  /**\n   * A StreamLikeSequence comprises a sequence of 'chunks' of data, which are\n   * typically multiline strings.\n   *\n   * @constructor\n   */\n  function StreamLikeSequence() {}\n\n  StreamLikeSequence.prototype = Object.create(AsyncSequence.prototype);\n\n  StreamLikeSequence.prototype.isAsync = function isAsync() {\n    return true;\n  };\n\n  StreamLikeSequence.prototype.split = function split(delimiter) {\n    return new SplitStreamSequence(this, delimiter);\n  };\n\n  /**\n   * @constructor\n   */\n  function SplitStreamSequence(parent, delimiter) {\n    this.parent    = parent;\n    this.delimiter = delimiter;\n    this.each      = this.getEachForDelimiter(delimiter);\n  }\n\n  SplitStreamSequence.prototype = Object.create(Sequence.prototype);\n\n  SplitStreamSequence.prototype.getEachForDelimiter = function getEachForDelimiter(delimiter) {\n    if (delimiter instanceof RegExp) {\n      return this.regexEach;\n    }\n\n    return this.stringEach;\n  };\n\n  SplitStreamSequence.prototype.regexEach = function each(fn) {\n    var delimiter = cloneRegex(this.delimiter),\n        buffer = '',\n        start = 0, end,\n        index = 0;\n\n    var handle = this.parent.each(function(chunk) {\n      buffer += chunk;\n\n      var match;\n      while (match = delimiter.exec(buffer)) {\n        end = match.index;\n        if (fn(buffer.substring(start, end), index++) === false) {\n          return false;\n        }\n        start = end + match[0].length;\n      }\n\n      buffer = buffer.substring(start);\n      start = 0;\n    });\n\n    handle.onComplete(function() {\n      if (buffer.length > 0) {\n        fn(buffer, index++);\n      }\n    });\n\n    return handle;\n  };\n\n  SplitStreamSequence.prototype.stringEach = function each(fn) {\n    var delimiter  = this.delimiter,\n        pieceIndex = 0,\n        buffer = '',\n        bufferIndex = 0;\n\n    var handle = this.parent.each(function(chunk) {\n      buffer += chunk;\n      var delimiterIndex;\n      while ((delimiterIndex = buffer.indexOf(delimiter)) >= 0) {\n        var piece = buffer.substr(0,delimiterIndex);\n        buffer = buffer.substr(delimiterIndex+delimiter.length);\n        if (fn(piece,pieceIndex++) === false) {\n          return false;\n        }\n      }\n      return true;\n    });\n\n    handle.onComplete(function() {\n      fn(buffer, pieceIndex++);\n    });\n\n    return handle;\n  };\n\n  StreamLikeSequence.prototype.lines = function lines() {\n    return this.split(\"\\n\");\n  };\n\n  StreamLikeSequence.prototype.match = function match(pattern) {\n    return new MatchedStreamSequence(this, pattern);\n  };\n\n  /**\n   * @constructor\n   */\n  function MatchedStreamSequence(parent, pattern) {\n    this.parent  = parent;\n    this.pattern = cloneRegex(pattern);\n  }\n\n  MatchedStreamSequence.prototype = Object.create(AsyncSequence.prototype);\n\n  MatchedStreamSequence.prototype.each = function each(fn) {\n    var pattern = this.pattern,\n        done      = false,\n        i         = 0;\n\n    return this.parent.each(function(chunk) {\n      Lazy(chunk).match(pattern).each(function(match) {\n        if (fn(match, i++) === false) {\n          done = true;\n          return false;\n        }\n      });\n\n      return !done;\n    });\n  };\n\n  /**\n   * Defines a wrapper for custom {@link StreamLikeSequence}s. This is useful\n   * if you want a way to handle a stream of events as a sequence, but you can't\n   * use Lazy's existing interface (i.e., you're wrapping an object from a\n   * library with its own custom events).\n   *\n   * This method defines a *factory*: that is, it produces a function that can\n   * be used to wrap objects and return a {@link Sequence}. Hopefully the\n   * example will make this clear.\n   *\n   * @public\n   * @param {Function} initializer An initialization function called on objects\n   *     created by this factory. `this` will be bound to the created object,\n   *     which is an instance of {@link StreamLikeSequence}. Use `emit` to\n   *     generate data for the sequence.\n   * @returns {Function} A function that creates a new {@link StreamLikeSequence},\n   *     initializes it using the specified function, and returns it.\n   *\n   * @example\n   * var factory = Lazy.createWrapper(function(eventSource) {\n   *   var sequence = this;\n   *\n   *   eventSource.handleEvent(function(data) {\n   *     sequence.emit(data);\n   *   });\n   * });\n   *\n   * var eventEmitter = {\n   *   triggerEvent: function(data) {\n   *     eventEmitter.eventHandler(data);\n   *   },\n   *   handleEvent: function(handler) {\n   *     eventEmitter.eventHandler = handler;\n   *   },\n   *   eventHandler: function() {}\n   * };\n   *\n   * var events = [];\n   *\n   * factory(eventEmitter).each(function(e) {\n   *   events.push(e);\n   * });\n   *\n   * eventEmitter.triggerEvent('foo');\n   * eventEmitter.triggerEvent('bar');\n   *\n   * events // => ['foo', 'bar']\n   */\n  Lazy.createWrapper = function createWrapper(initializer) {\n    var ctor = function() {\n      this.listeners = [];\n    };\n\n    ctor.prototype = Object.create(StreamLikeSequence.prototype);\n\n    ctor.prototype.each = function(listener) {\n      this.listeners.push(listener);\n    };\n\n    ctor.prototype.emit = function(data) {\n      var listeners = this.listeners;\n\n      for (var len = listeners.length, i = len - 1; i >= 0; --i) {\n        if (listeners[i](data) === false) {\n          listeners.splice(i, 1);\n        }\n      }\n    };\n\n    return function() {\n      var sequence = new ctor();\n      initializer.apply(sequence, arguments);\n      return sequence;\n    };\n  };\n\n  /**\n   * Creates a {@link GeneratedSequence} using the specified generator function\n   * and (optionally) length.\n   *\n   * @public\n   * @param {function(number):*} generatorFn The function used to generate the\n   *     sequence. This function accepts an index as a parameter and should return\n   *     a value for that index in the resulting sequence.\n   * @param {number=} length The length of the sequence, for sequences with a\n   *     definite length.\n   * @returns {GeneratedSequence} The generated sequence.\n   *\n   * @examples\n   * var randomNumbers = Lazy.generate(Math.random);\n   * var countingNumbers = Lazy.generate(function(i) { return i + 1; }, 5);\n   *\n   * randomNumbers          // instanceof Lazy.GeneratedSequence\n   * randomNumbers.length() // => undefined\n   * countingNumbers          // sequence: [1, 2, 3, 4, 5]\n   * countingNumbers.length() // => 5\n   */\n  Lazy.generate = function generate(generatorFn, length) {\n    return new GeneratedSequence(generatorFn, length);\n  };\n\n  /**\n   * Creates a sequence from a given starting value, up to a specified stopping\n   * value, incrementing by a given step. Invalid values for any of these\n   * arguments (e.g., a step of 0) result in an empty sequence.\n   *\n   * @public\n   * @returns {GeneratedSequence} The sequence defined by the given ranges.\n   *\n   * @examples\n   * Lazy.range(3)         // sequence: [0, 1, 2]\n   * Lazy.range(1, 4)      // sequence: [1, 2, 3]\n   * Lazy.range(2, 10, 2)  // sequence: [2, 4, 6, 8]\n   * Lazy.range(5, 1, 2)   // sequence: []\n   * Lazy.range(5, 15, -2) // sequence: []\n   * Lazy.range(3, 10, 3)  // sequence: [3, 6, 9]\n   * Lazy.range(5, 2)      // sequence: [5, 4, 3]\n   * Lazy.range(7, 2, -2)  // sequence: [7, 5, 3]\n   * Lazy.range(3, 5, 0)   // sequence: []\n   */\n  Lazy.range = function range() {\n    var start = arguments.length > 1 ? arguments[0] : 0,\n        stop  = arguments.length > 1 ? arguments[1] : arguments[0],\n        step  = arguments.length > 2 && arguments[2];\n\n    if (step === false) {\n      step = stop > start ? 1 : -1;\n    }\n\n    if (step === 0) {\n      return Lazy([]);\n    }\n\n    return Lazy.generate(function(i) { return start + (step * i); })\n      .take(Math.ceil((stop - start) / step));\n  };\n\n  /**\n   * Creates a sequence consisting of the given value repeated a specified number\n   * of times.\n   *\n   * @public\n   * @param {*} value The value to repeat.\n   * @param {number=} count The number of times the value should be repeated in\n   *     the sequence. If this argument is omitted, the value will repeat forever.\n   * @returns {GeneratedSequence} The sequence containing the repeated value.\n   *\n   * @examples\n   * Lazy.repeat(\"hi\", 3)          // sequence: [\"hi\", \"hi\", \"hi\"]\n   * Lazy.repeat(\"young\")          // instanceof Lazy.GeneratedSequence\n   * Lazy.repeat(\"young\").length() // => undefined\n   * Lazy.repeat(\"young\").take(3)  // sequence: [\"young\", \"young\", \"young\"]\n   */\n  Lazy.repeat = function repeat(value, count) {\n    return Lazy.generate(function() { return value; }, count);\n  };\n\n  Lazy.Sequence           = Sequence;\n  Lazy.ArrayLikeSequence  = ArrayLikeSequence;\n  Lazy.ObjectLikeSequence = ObjectLikeSequence;\n  Lazy.StringLikeSequence = StringLikeSequence;\n  Lazy.StreamLikeSequence = StreamLikeSequence;\n  Lazy.GeneratedSequence  = GeneratedSequence;\n  Lazy.AsyncSequence      = AsyncSequence;\n  Lazy.AsyncHandle        = AsyncHandle;\n\n  /*** Useful utility methods ***/\n\n  /**\n   * Creates a shallow copy of an array or object.\n   *\n   * @examples\n   * var array  = [1, 2, 3], clonedArray,\n   *     object = { foo: 1, bar: 2 }, clonedObject;\n   *\n   * clonedArray = Lazy.clone(array); // => [1, 2, 3]\n   * clonedArray.push(4); // clonedArray == [1, 2, 3, 4]\n   * array; // => [1, 2, 3]\n   *\n   * clonedObject = Lazy.clone(object); // => { foo: 1, bar: 2 }\n   * clonedObject.baz = 3; // clonedObject == { foo: 1, bar: 2, baz: 3 }\n   * object; // => { foo: 1, bar: 2 }\n   */\n  Lazy.clone = function clone(target) {\n    return Lazy(target).value();\n  };\n\n  /**\n   * Marks a method as deprecated, so calling it will issue a console warning.\n   */\n  Lazy.deprecate = function deprecate(message, fn) {\n    return function() {\n      console.warn(message);\n      return fn.apply(this, arguments);\n    };\n  };\n\n  var isArray    = Array.isArray || function(x) { return x instanceof Array; },\n      arrayPop   = Array.prototype.pop,\n      arraySlice = Array.prototype.slice;\n\n  /**\n   * If you know what function currying is, then you know what this does.\n   *\n   * @param {Function} fn The function to curry.\n   * @returns {Function} The curried function.\n   *\n   * @examples\n   * function abc(a, b, c) { return [a, b, c]; }\n   * var curried = Lazy.curry(abc);\n   *\n   * curried(1)(2)(3) // => [1, 2, 3]\n   * curried(1, 2)(3) // => [1, 2, 3]\n   * curried(1)(2, 3) // => [1, 2, 3]\n   * curried(1, 2, 3) // => [1, 2, 3]\n   * Lazy([1, 2, 3]).map(curried(1, 2)) // sequence: [[1, 2, 1], [1, 2, 2], [1, 2, 3]]\n   */\n  function curry(fn, arity) {\n    arity || (arity = fn.length);\n\n    function curried(args) {\n      if (args.length < arity) {\n        return function() {\n          return curried(args.concat(arraySlice.call(arguments, 0)));\n        };\n      }\n\n      return fn.apply(null, args);\n    }\n\n    return curried([]);\n  }\n\n  /**\n   * Same as Lazy.curry, but... you know... from the right.\n   *\n   * @param {Function} fn The function to curry from the right.\n   * @returns {Function} The curried-from-the-right function.\n   *\n   * @examples\n   * function abc(a, b, c) { return [a, b, c]; }\n   * var curriedRight = Lazy.curryRight(abc);\n   *\n   * curriedRight(3)(2)(1) // => [1, 2, 3]\n   * curriedRight(2, 3)(1) // => [1, 2, 3]\n   * curriedRight(3)(1, 2) // => [1, 2, 3]\n   * curriedRight(1, 2, 3) // => [1, 2, 3]\n   * Lazy([1, 2, 3]).map(curriedRight(3)) // sequence: [[1, 0, 3], [2, 1, 3], [3, 2, 3]]\n   */\n  function curryRight(fn, arity) {\n    arity || (arity = fn.length);\n\n    function curriedRight(args) {\n      if (args.length < arity) {\n        return function() {\n          return curriedRight(arraySlice.call(arguments, 0).concat(args));\n        };\n      }\n\n      return fn.apply(null, args);\n    }\n\n    return curriedRight([]);\n  }\n\n  Lazy.curry = curry;\n  Lazy.curryRight = curryRight;\n\n  /**\n   * Creates a callback... you know, Lo-Dash style.\n   *\n   * - for functions, just returns the function\n   * - for strings, returns a pluck-style callback\n   * - for objects, returns a where-style callback\n   *\n   * @param {Function|string|Object} callback A function, string, or object to\n   *     convert to a callback.\n   * @param {*} defaultReturn If the callback is undefined, a default return\n   *     value to use for the function.\n   * @returns {Function} The callback function.\n   *\n   * @examples\n   * Lazy.createCallback(function() {})                  // instanceof Function\n   * Lazy.createCallback('foo')                          // instanceof Function\n   * Lazy.createCallback('foo')({ foo: 'bar'})           // => 'bar'\n   * Lazy.createCallback({ foo: 'bar' })({ foo: 'bar' }) // => true\n   * Lazy.createCallback({ foo: 'bar' })({ foo: 'baz' }) // => false\n   */\n  function createCallback(callback, defaultValue) {\n    switch (typeof callback) {\n      case \"function\":\n        return callback;\n\n      case \"string\":\n        return function(e) {\n          return e[callback];\n        };\n\n      case \"object\":\n        return function(e) {\n          return Lazy(callback).all(function(value, key) {\n            return e[key] === value;\n          });\n        };\n\n      case \"undefined\":\n        return defaultValue ?\n          function() { return defaultValue; } :\n          Lazy.identity;\n\n      default:\n        throw new Error(\"Don't know how to make a callback from a \" + typeof callback + \"!\");\n    }\n  }\n\n  Lazy.createCallback = createCallback;\n\n  /**\n   * Takes a function that returns a value for one argument and produces a\n   * function that compares two arguments.\n   *\n   * @param {Function|string|Object} callback A function, string, or object to\n   *     convert to a callback using `createCallback`.\n   * @returns {Function} A function that accepts two values and returns 1 if\n   *     the first is greater, -1 if the second is greater, or 0 if they are\n   *     equivalent.\n   *\n   * @examples\n   * Lazy.createComparator('a')({ a: 1 }, { a: 2 });       // => -1\n   * Lazy.createComparator('a')({ a: 6 }, { a: 2 });       // => 1\n   * Lazy.createComparator('a')({ a: 1 }, { a: 1 });       // => 0\n   * Lazy.createComparator()(3, 5);                        // => -1\n   * Lazy.createComparator()(7, 5);                        // => 1\n   * Lazy.createComparator()(3, 3);                        // => 0\n   */\n  function createComparator(callback) {\n    if (!callback) { return compare; }\n\n    callback = createCallback(callback);\n\n    return function(x, y) {\n      return compare(callback(x), callback(y));\n    };\n  }\n\n  Lazy.createComparator = createComparator;\n\n  /**\n   * Takes a function and returns a function with the same logic but the\n   * arguments reversed. Only applies to functions w/ arity=2 as this is private\n   * and I can do what I want.\n   *\n   * @private\n   * @param {Function} fn The function to \"reverse\"\n   * @returns {Function} The \"reversed\" function\n   *\n   * @examples\n   * reverseArguments(function(x, y) { return x + y; })('a', 'b'); // => 'ba'\n   */\n  function reverseArguments(fn) {\n    return function(x, y) { return fn(y, x); };\n  }\n\n  /**\n   * Creates a Set containing the specified values.\n   *\n   * @param {...Array} values One or more array(s) of values used to populate the\n   *     set.\n   * @returns {Set} A new set containing the values passed in.\n   */\n  function createSet(values) {\n    var set = new Set();\n    Lazy(values || []).flatten().each(function(e) {\n      set.add(e);\n    });\n    return set;\n  }\n\n  /**\n   * Compares two elements for sorting purposes.\n   *\n   * @private\n   * @param {*} x The left element to compare.\n   * @param {*} y The right element to compare.\n   * @returns {number} 1 if x > y, -1 if x < y, or 0 if x and y are equal.\n   *\n   * @examples\n   * compare(1, 2)     // => -1\n   * compare(1, 1)     // => 0\n   * compare(2, 1)     // => 1\n   * compare('a', 'b') // => -1\n   */\n  function compare(x, y) {\n    if (x === y) {\n      return 0;\n    }\n\n    return x > y ? 1 : -1;\n  }\n\n  /**\n   * Iterates over every element in an array.\n   *\n   * @param {Array} array The array.\n   * @param {Function} fn The function to call on every element, which can return\n   *     false to stop the iteration early.\n   * @returns {boolean} True if every element in the entire sequence was iterated,\n   *     otherwise false.\n   */\n  function forEach(array, fn) {\n    var i = -1,\n        len = array.length;\n\n    while (++i < len) {\n      if (fn(array[i], i) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function getFirst(sequence) {\n    var result;\n    sequence.each(function(e) {\n      result = e;\n      return false;\n    });\n    return result;\n  }\n\n  /**\n   * Checks if an element exists in an array.\n   *\n   * @private\n   * @param {Array} array\n   * @param {*} element\n   * @returns {boolean} Whether or not the element exists in the array.\n   *\n   * @examples\n   * arrayContains([1, 2], 2)              // => true\n   * arrayContains([1, 2], 3)              // => false\n   * arrayContains([undefined], undefined) // => true\n   * arrayContains([NaN], NaN)             // => true\n   */\n  function arrayContains(array, element) {\n    var i = -1,\n        length = array.length;\n\n    // Special handling for NaN\n    if (element !== element) {\n      while (++i < length) {\n        if (array[i] !== array[i]) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    while (++i < length) {\n      if (array[i] === element) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Checks if an element exists in an array before a given index.\n   *\n   * @private\n   * @param {Array} array\n   * @param {*} element\n   * @param {number} index\n   * @param {Function} keyFn\n   * @returns {boolean}\n   *\n   * @examples\n   * arrayContainsBefore([1, 2, 3], 3, 2) // => false\n   * arrayContainsBefore([1, 2, 3], 3, 3) // => true\n   */\n  function arrayContainsBefore(array, element, index, keyFn) {\n    var i = -1;\n\n    if (keyFn) {\n      keyFn = createCallback(keyFn);\n      while (++i < index) {\n        if (keyFn(array[i]) === keyFn(element)) {\n          return true;\n        }\n      }\n\n    } else {\n      while (++i < index) {\n        if (array[i] === element) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Swaps the elements at two specified positions of an array.\n   *\n   * @private\n   * @param {Array} array\n   * @param {number} i\n   * @param {number} j\n   *\n   * @examples\n   * var array = [1, 2, 3, 4, 5];\n   *\n   * swap(array, 2, 3) // array == [1, 2, 4, 3, 5]\n   */\n  function swap(array, i, j) {\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  /**\n   * \"Clones\" a regular expression (but makes it always global).\n   *\n   * @private\n   * @param {RegExp|string} pattern\n   * @returns {RegExp}\n   */\n  function cloneRegex(pattern) {\n    return eval(\"\" + pattern + (!pattern.global ? \"g\" : \"\"));\n  };\n\n  /**\n   * A collection of unique elements.\n   *\n   * @private\n   * @constructor\n   *\n   * @examples\n   * var set  = new Set(),\n   *     obj1 = {},\n   *     obj2 = {},\n   *     fn1 = function fn1() {},\n   *     fn2 = function fn2() {};\n   *\n   * set.add('foo')            // => true\n   * set.add('foo')            // => false\n   * set.add(1)                // => true\n   * set.add(1)                // => false\n   * set.add('1')              // => true\n   * set.add('1')              // => false\n   * set.add(obj1)             // => true\n   * set.add(obj1)             // => false\n   * set.add(obj2)             // => true\n   * set.add(fn1)              // => true\n   * set.add(fn2)              // => true\n   * set.add(fn2)              // => false\n   * set.contains('__proto__') // => false\n   * set.add('__proto__')      // => true\n   * set.add('__proto__')      // => false\n   * set.contains('add')       // => false\n   * set.add('add')            // => true\n   * set.add('add')            // => false\n   * set.contains(undefined)   // => false\n   * set.add(undefined)        // => true\n   * set.contains(undefined)   // => true\n   * set.contains('undefined') // => false\n   * set.add('undefined')      // => true\n   * set.contains('undefined') // => true\n   * set.contains(NaN)         // => false\n   * set.add(NaN)              // => true\n   * set.contains(NaN)         // => true\n   * set.contains('NaN')       // => false\n   * set.add('NaN')            // => true\n   * set.contains('NaN')       // => true\n   * set.contains('@foo')      // => false\n   * set.add('@foo')           // => true\n   * set.contains('@foo')      // => true\n   */\n  function Set() {\n    this.table   = {};\n    this.objects = [];\n  }\n\n  /**\n   * Attempts to add a unique value to the set.\n   *\n   * @param {*} value The value to add.\n   * @returns {boolean} True if the value was added to the set (meaning an equal\n   *     value was not already present), or else false.\n   */\n  Set.prototype.add = function add(value) {\n    var table = this.table,\n        type  = typeof value,\n\n        // only applies for strings\n        firstChar,\n\n        // only applies for objects\n        objects;\n\n    switch (type) {\n      case \"number\":\n      case \"boolean\":\n      case \"undefined\":\n        if (!table[value]) {\n          table[value] = true;\n          return true;\n        }\n        return false;\n\n      case \"string\":\n        // Essentially, escape the first character if it could possibly collide\n        // with a number, boolean, or undefined (or a string that happens to start\n        // with the escape character!), OR if it could override a special property\n        // such as '__proto__' or 'constructor'.\n        switch (value.charAt(0)) {\n          case \"_\": // e.g., __proto__\n          case \"f\": // for 'false'\n          case \"t\": // for 'true'\n          case \"c\": // for 'constructor'\n          case \"u\": // for 'undefined'\n          case \"@\": // escaped\n          case \"0\":\n          case \"1\":\n          case \"2\":\n          case \"3\":\n          case \"4\":\n          case \"5\":\n          case \"6\":\n          case \"7\":\n          case \"8\":\n          case \"9\":\n          case \"N\": // for NaN\n            value = \"@\" + value;\n        }\n        if (!table[value]) {\n          table[value] = true;\n          return true;\n        }\n        return false;\n\n      default:\n        // For objects and functions, we can't really do anything other than store\n        // them in an array and do a linear search for reference equality.\n        objects = this.objects;\n        if (!arrayContains(objects, value)) {\n          objects.push(value);\n          return true;\n        }\n        return false;\n    }\n  };\n\n  /**\n   * Checks whether the set contains a value.\n   *\n   * @param {*} value The value to check for.\n   * @returns {boolean} True if the set contains the value, or else false.\n   */\n  Set.prototype.contains = function contains(value) {\n    var type = typeof value,\n\n        // only applies for strings\n        firstChar;\n\n    switch (type) {\n      case \"number\":\n      case \"boolean\":\n      case \"undefined\":\n        return !!this.table[value];\n\n      case \"string\":\n        // Essentially, escape the first character if it could possibly collide\n        // with a number, boolean, or undefined (or a string that happens to start\n        // with the escape character!), OR if it could override a special property\n        // such as '__proto__' or 'constructor'.\n        switch (value.charAt(0)) {\n          case \"_\": // e.g., __proto__\n          case \"f\": // for 'false'\n          case \"t\": // for 'true'\n          case \"c\": // for 'constructor'\n          case \"u\": // for 'undefined'\n          case \"@\": // escaped\n          case \"0\":\n          case \"1\":\n          case \"2\":\n          case \"3\":\n          case \"4\":\n          case \"5\":\n          case \"6\":\n          case \"7\":\n          case \"8\":\n          case \"9\":\n          case \"N\": // for NaN\n            value = \"@\" + value;\n        }\n        return !!this.table[value];\n\n      default:\n        // For objects and functions, we can't really do anything other than store\n        // them in an array and do a linear search for reference equality.\n        return arrayContains(this.objects, value);\n    }\n  };\n\n  /**\n   * A \"rolling\" queue, with a fixed capacity. As items are added to the head,\n   * excess items are dropped from the tail.\n   *\n   * @private\n   * @constructor\n   *\n   * @examples\n   * var queue = new Queue(3);\n   *\n   * queue.add(1).toArray()        // => [1]\n   * queue.add(2).toArray()        // => [1, 2]\n   * queue.add(3).toArray()        // => [1, 2, 3]\n   * queue.add(4).toArray()        // => [2, 3, 4]\n   * queue.add(5).add(6).toArray() // => [4, 5, 6]\n   * queue.add(7).add(8).toArray() // => [6, 7, 8]\n   *\n   * // also want to check corner cases\n   * new Queue(1).add('foo').add('bar').toArray() // => ['bar']\n   * new Queue(0).add('foo').toArray()            // => []\n   * new Queue(-1)                                // throws\n   *\n   * @benchmarks\n   * function populateQueue(count, capacity) {\n   *   var q = new Queue(capacity);\n   *   for (var i = 0; i < count; ++i) {\n   *     q.add(i);\n   *   }\n   * }\n   *\n   * function populateArray(count, capacity) {\n   *   var arr = [];\n   *   for (var i = 0; i < count; ++i) {\n   *     if (arr.length === capacity) { arr.shift(); }\n   *     arr.push(i);\n   *   }\n   * }\n   *\n   * populateQueue(100, 10); // populating a Queue\n   * populateArray(100, 10); // populating an Array\n   */\n  function Queue(capacity) {\n    this.contents = new Array(capacity);\n    this.start    = 0;\n    this.count    = 0;\n  }\n\n  /**\n   * Adds an item to the queue, and returns the queue.\n   */\n  Queue.prototype.add = function add(element) {\n    var contents = this.contents,\n        capacity = contents.length,\n        start    = this.start;\n\n    if (this.count === capacity) {\n      contents[start] = element;\n      this.start = (start + 1) % capacity;\n\n    } else {\n      contents[this.count++] = element;\n    }\n\n    return this;\n  };\n\n  /**\n   * Returns an array containing snapshot of the queue's contents.\n   */\n  Queue.prototype.toArray = function toArray() {\n    var contents = this.contents,\n        start    = this.start,\n        count    = this.count;\n\n    var snapshot = contents.slice(start, start + count);\n    if (snapshot.length < count) {\n      snapshot = snapshot.concat(contents.slice(0, count - snapshot.length));\n    }\n\n    return snapshot;\n  };\n\n  /**\n   * Shared base method for defining new sequence types.\n   */\n  function defineSequenceType(base, name, overrides) {\n    /** @constructor */\n    var ctor = function ctor() {};\n\n    // Make this type inherit from the specified base.\n    ctor.prototype = new base();\n\n    // Attach overrides to the new sequence type's prototype.\n    for (var override in overrides) {\n      ctor.prototype[override] = overrides[override];\n    }\n\n    // Define a factory method that sets the new sequence's parent to the caller\n    // and (optionally) applies any additional initialization logic.\n    // Expose this as a chainable method so that we can do:\n    // Lazy(...).map(...).filter(...).blah(...);\n    var factory = function factory() {\n      var sequence = new ctor();\n\n      // Every sequence needs a reference to its parent in order to work.\n      sequence.parent = this;\n\n      // If a custom init function was supplied, call it now.\n      if (sequence.init) {\n        sequence.init.apply(sequence, arguments);\n      }\n\n      return sequence;\n    };\n\n    var methodNames = typeof name === 'string' ? [name] : name;\n    for (var i = 0; i < methodNames.length; ++i) {\n      base.prototype[methodNames[i]] = factory;\n    }\n\n    return ctor;\n  }\n\n  return Lazy;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lazy.js/lazy.js\n// module id = 23\n// module chunks = 231608221292675 257298155543294","var map = require(\"./map\");\n\nvar getCountryCode = function(localeString) {\n    var components = localeString.split(\"_\");\n    if (components.length == 2) {\n        return components.pop();\n    }\n    components = localeString.split(\"-\");\n    if (components.length == 2) {\n        return components.pop();\n    }\n    return localeString;\n}\n\nexports.getCurrency = function(locale) {\n    var countryCode = getCountryCode(locale).toUpperCase();\n    if (countryCode in map) {\n        return map[countryCode];\n    }\n    return null;\n}\n\nexports.getLocales = function(currencyCode) {\n    currencyCode = currencyCode.toUpperCase();\n    var locales = [];\n    for (countryCode in map) {\n        if (map[countryCode] === currencyCode) {\n            locales.push(countryCode);\n        }\n    }\n    return locales;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/locale-currency/index.js\n// module id = 137\n// module chunks = 35783957827783 231608221292675 257298155543294","// Generated using ShowCurrencies.java\nvar map = {\nAD: 'EUR',\nAE: 'AED',\nAF: 'AFN',\nAG: 'XCD',\nAI: 'XCD',\nAL: 'ALL',\nAM: 'AMD',\nAN: 'ANG',\nAO: 'AOA',\nAR: 'ARS',\nAS: 'USD',\nAT: 'EUR',\nAU: 'AUD',\nAW: 'AWG',\nAX: 'EUR',\nAZ: 'AZN',\nBA: 'BAM',\nBB: 'BBD',\nBD: 'BDT',\nBE: 'EUR',\nBF: 'XOF',\nBG: 'BGN',\nBH: 'BHD',\nBI: 'BIF',\nBJ: 'XOF',\nBL: 'EUR',\nBM: 'BMD',\nBN: 'BND',\nBO: 'BOB',\nBQ: 'USD',\nBR: 'BRL',\nBS: 'BSD',\nBT: 'BTN',\nBV: 'NOK',\nBW: 'BWP',\nBY: 'BYR',\nBZ: 'BZD',\nCA: 'CAD',\nCC: 'AUD',\nCD: 'CDF',\nCF: 'XAF',\nCG: 'XAF',\nCH: 'CHF',\nCI: 'XOF',\nCK: 'NZD',\nCL: 'CLP',\nCM: 'XAF',\nCN: 'CNY',\nCO: 'COP',\nCR: 'CRC',\nCU: 'CUP',\nCV: 'CVE',\nCW: 'ANG',\nCX: 'AUD',\nCY: 'EUR',\nCZ: 'CZK',\nDE: 'EUR',\nDJ: 'DJF',\nDK: 'DKK',\nDM: 'XCD',\nDO: 'DOP',\nDZ: 'DZD',\nEC: 'USD',\nEE: 'EUR',\nEG: 'EGP',\nEH: 'MAD',\nER: 'ERN',\nES: 'EUR',\nET: 'ETB',\nFI: 'EUR',\nFJ: 'FJD',\nFK: 'FKP',\nFM: 'USD',\nFO: 'DKK',\nFR: 'EUR',\nGA: 'XAF',\nGB: 'GBP',\nGD: 'XCD',\nGE: 'GEL',\nGF: 'EUR',\nGG: 'GBP',\nGH: 'GHS',\nGI: 'GIP',\nGL: 'DKK',\nGM: 'GMD',\nGN: 'GNF',\nGP: 'EUR',\nGQ: 'XAF',\nGR: 'EUR',\nGS: 'GBP',\nGT: 'GTQ',\nGU: 'USD',\nGW: 'XOF',\nGY: 'GYD',\nHK: 'HKD',\nHM: 'AUD',\nHN: 'HNL',\nHR: 'HRK',\nHT: 'HTG',\nHU: 'HUF',\nID: 'IDR',\nIE: 'EUR',\nIL: 'ILS',\nIM: 'GBP',\nIN: 'INR',\nIO: 'USD',\nIQ: 'IQD',\nIR: 'IRR',\nIS: 'ISK',\nIT: 'EUR',\nJE: 'GBP',\nJM: 'JMD',\nJO: 'JOD',\nJP: 'JPY',\nKE: 'KES',\nKG: 'KGS',\nKH: 'KHR',\nKI: 'AUD',\nKM: 'KMF',\nKN: 'XCD',\nKP: 'KPW',\nKR: 'KRW',\nKW: 'KWD',\nKY: 'KYD',\nKZ: 'KZT',\nLA: 'LAK',\nLB: 'LBP',\nLC: 'XCD',\nLI: 'CHF',\nLK: 'LKR',\nLR: 'LRD',\nLS: 'LSL',\nLT: 'LTL',\nLU: 'EUR',\nLV: 'LVL',\nLY: 'LYD',\nMA: 'MAD',\nMC: 'EUR',\nMD: 'MDL',\nME: 'EUR',\nMF: 'EUR',\nMG: 'MGA',\nMH: 'USD',\nMK: 'MKD',\nML: 'XOF',\nMM: 'MMK',\nMN: 'MNT',\nMO: 'MOP',\nMP: 'USD',\nMQ: 'EUR',\nMR: 'MRO',\nMS: 'XCD',\nMT: 'EUR',\nMU: 'MUR',\nMV: 'MVR',\nMW: 'MWK',\nMX: 'MXN',\nMY: 'MYR',\nMZ: 'MZN',\nNA: 'NAD',\nNC: 'XPF',\nNE: 'XOF',\nNF: 'AUD',\nNG: 'NGN',\nNI: 'NIO',\nNL: 'EUR',\nNO: 'NOK',\nNP: 'NPR',\nNR: 'AUD',\nNU: 'NZD',\nNZ: 'NZD',\nOM: 'OMR',\nPA: 'PAB',\nPE: 'PEN',\nPF: 'XPF',\nPG: 'PGK',\nPH: 'PHP',\nPK: 'PKR',\nPL: 'PLN',\nPM: 'EUR',\nPN: 'NZD',\nPR: 'USD',\nPS: 'ILS',\nPT: 'EUR',\nPW: 'USD',\nPY: 'PYG',\nQA: 'QAR',\nRE: 'EUR',\nRO: 'RON',\nRS: 'RSD',\nRU: 'RUB',\nRW: 'RWF',\nSA: 'SAR',\nSB: 'SBD',\nSC: 'SCR',\nSD: 'SDG',\nSE: 'SEK',\nSG: 'SGD',\nSH: 'SHP',\nSI: 'EUR',\nSJ: 'NOK',\nSK: 'EUR',\nSL: 'SLL',\nSM: 'EUR',\nSN: 'XOF',\nSO: 'SOS',\nSR: 'SRD',\nST: 'STD',\nSV: 'SVC',\nSX: 'ANG',\nSY: 'SYP',\nSZ: 'SZL',\nTC: 'USD',\nTD: 'XAF',\nTF: 'EUR',\nTG: 'XOF',\nTH: 'THB',\nTJ: 'TJS',\nTK: 'NZD',\nTL: 'USD',\nTM: 'TMT',\nTN: 'TND',\nTO: 'TOP',\nTR: 'TRY',\nTT: 'TTD',\nTV: 'AUD',\nTW: 'TWD',\nTZ: 'TZS',\nUA: 'UAH',\nUG: 'UGX',\nUM: 'USD',\nUS: 'USD',\nUY: 'UYU',\nUZ: 'UZS',\nVA: 'EUR',\nVC: 'XCD',\nVE: 'VEF',\nVG: 'USD',\nVI: 'USD',\nVN: 'VND',\nVU: 'VUV',\nWF: 'XPF',\nWS: 'WST',\nYE: 'YER',\nYT: 'EUR',\nZA: 'ZAR',\nZM: 'ZMK',\nZW: 'ZWL'\n};\n\nmodule.exports = map;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/locale-currency/map.js\n// module id = 138\n// module chunks = 35783957827783 231608221292675 257298155543294","function n(n){return n=n||Object.create(null),{on:function(c,e){(n[c]||(n[c]=[])).push(e)},off:function(c,e){n[c]&&n[c].splice(n[c].indexOf(e)>>>0,1)},emit:function(c,e){(n[c]||[]).slice().map(function(n){n(e)}),(n[\"*\"]||[]).slice().map(function(n){n(c,e)})}}}module.exports=n;\n//# sourceMappingURL=mitt.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mitt/dist/mitt.js\n// module id = 913\n// module chunks = 231608221292675","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 70\n// module chunks = 35783957827783 231608221292675 257298155543294","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 300\n// module chunks = 231608221292675 257298155543294","\"use strict\";\n\nexports.__esModule = true;\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(a, b) {\n  for (var i in a) {\n    if (!(i in b)) return true;\n  }for (var _i in b) {\n    if (a[_i] !== b[_i]) return true;\n  }return false;\n}\n\nexports.default = function (instance, nextProps, nextState) {\n  return shallowDiffers(instance.props, nextProps) || shallowDiffers(instance.state, nextState);\n};\n\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shallow-compare/lib/index.js\n// module id = 1031\n// module chunks = 231608221292675","\n;(function (name, root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n    module.exports['default'] = factory()\n  }\n  /* istanbul ignore next */\n  else if (typeof define === 'function' && define.amd) {\n    define(factory)\n  }\n  else {\n    root[name] = factory()\n  }\n}('slugify', this, function () {\n  /* eslint-disable */\n  var charMap = JSON.parse('{\"$\":\"dollar\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₹\":\"indian rupee\",\"₽\":\"russian ruble\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\"}')\n  /* eslint-enable */\n\n  function replace (string, options) {\n    if (typeof string !== 'string') {\n      throw new Error('slugify: string argument expected')\n    }\n\n    options = (typeof options === 'string')\n      ? {replacement: options}\n      : options || {}\n\n    var slug = string.split('')\n      .reduce(function (result, ch) {\n        return result + (charMap[ch] || ch)\n          // allowed\n          .replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]/g, '')\n      }, '')\n      // trim leading/trailing spaces\n      .replace(/^\\s+|\\s+$/g, '')\n      // convert spaces\n      .replace(/[-\\s]+/g, options.replacement || '-')\n      // remove trailing separator\n      .replace('#{replacement}$', '')\n\n    return options.lower ? slug.toLowerCase() : slug\n  }\n\n  replace.extend = function (customMap) {\n    for (var key in customMap) {\n      charMap[key] = customMap[key]\n    }\n  }\n\n  return replace\n}))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/slugify/index.js\n// module id = 72\n// module chunks = 35783957827783 231608221292675 257298155543294","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 147\n// module chunks = 231608221292675 257298155543294","module.exports = {\"All\":\"All commodities\",\"Crude Oil\":\"Crude oil\",\"CO2\":\"Carbon dioxide\",\"Geothermal\":\"Geothermal\",\"Hardrock\":\"Hardrock minerals\",\"Natural Gas\":\"Natural gas\",\"NGL\":\"Natural gas liquids\",\"Wood and wood-derived fuels\":\"Wood-derived fuel\",\"Conventional Hydroelectric\":\"Hydroelectric\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/data/commodity_names.yml\n// module id = 136\n// module chunks = 35783957827783 231608221292675 257298155543294","module.exports = {\"States\":{\"name\":\"State and local governments\",\"description\":\"Funds disbursed to states fall under the jurisdiction of each state, and each state determines how the funds will be used.\"},\"U.S. Treasury\":{\"name\":\"U.S. Treasury\",\"description\":\"The federal government’s basic operating fund pays for roughly two-thirds of all federal expenditures, including the military, national parks, and schools.\"},\"Reclamation\":{\"name\":\"Reclamation Fund\",\"description\":\"Supports the establishment of critical infrastructure projects like dams and power plants.\"},\"Land & Water Conservation\":{\"name\":\"Land and Water Conservation Fund\",\"description\":\"Provides matching grants to states and local governments to buy and develop public outdoor recreation areas across the 50 states.\",\"link\":{\"name\":\"How this fund works\",\"to\":\"/how-it-works/land-and-water-conservation-fund/\"}},\"Historic Preservation\":{\"name\":\"Historic Preservation Fund\",\"description\":\"Helps preserve U.S. historical and archaeological sites and cultural heritage through grants to state and tribal historic preservation offices.\",\"link\":{\"name\":\"How this fund works\",\"to\":\"/how-it-works/historic-preservation-fund/\"}},\"American Indian Tribes\":{\"name\":\"Native American tribes and individuals\",\"description\":\"ONRR disburses 100% of revenue collected from resource extraction on Native American lands back to tribes, nations, and individuals.\"},\"Other\":{\"name\":\"Other funds\",\"description\":\"Some funds are directed back to federal agencies that administer these lands to help cover operational costs. The Ultra-Deepwater Research Program and the Mescal Settlement Agreement also receive $50 million each.\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/data/fund_names.yml\n// module id = 263\n// module chunks = 231608221292675 257298155543294","/**\r\n * Constants that are used by the application\r\n **/\r\nmodule.exports = Object.freeze({\r\n\t// Redux Store keys for reducers\r\n\tREVENUES_KEY: 'revenues',\r\n\tPRODUCTION_VOLUMES_KEY: 'productionVolumes',\r\n  DISBURSEMENTS_KEY: 'federalDisbursements',\r\n\r\n  // Disbursements data keys for redux store\r\n  DISBURSEMENTS_ALL_KEY: 'disbursementsAll',\r\n\r\n\t// Revenues data keys for redux store\r\n\tREVENUES_ALL_KEY: 'revenuesAll',\r\n\r\n\t// Production Volume data keys for redux store\r\n  PRODUCTION_VOLUMES_OIL_KEY: 'productVolumesOil',\r\n  PRODUCTION_VOLUMES_GAS_KEY: 'productVolumesGas',\r\n  PRODUCTION_VOLUMES_COAL_KEY: 'productVolumesCoal',\r\n\r\n  FEDERAL_OFFSHORE: 'Federal offshore',\r\n  FEDERAL_ONSHORE: 'Federal onshore',\r\n  NATIVE_AMERICAN: 'Native American',\r\n  OFFSHORE: 'Offshore',\r\n  ONSHORE: 'Onshore',\r\n  FEDERAL: 'Federal',\r\n\r\n  CALENDAR_YEAR: \"Calendar year\",\r\n  FISCAL_YEAR: \"Fiscal year\"\r\n\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/constants.js","import slugify from 'slugify';\r\nimport currencyFormatter from 'currency-formatter';\r\n\r\n// Import Display Name Yaml Files\r\nimport commodityNames from '../data/commodity_names.yml';\r\n\r\nconst utils = {\r\n\tgetDisplayName_CommodityName: (key) => {\r\n\t\treturn commodityNames[key] || key;\r\n\t},\r\n\r\n\tformatToSlug: (name) => {\r\n\t\treturn slugify(name, {lower:true, remove: /[$*_+~.()'\"!\\:@,]/g}).replace('-and-','-');\r\n\t},\r\n\r\n\tformatToDollarInt: (value) => {\r\n\t\treturn currencyFormatter.format(value, { symbol:'$', precision: 0, format: {pos: '%s%v',neg: '(%s%v)', zero: '%s%v'}});\r\n\t},\r\n\r\n\tformatToCommaInt: (value) => {\r\n\t\treturn currencyFormatter.format(value, { symbol:'', precision: 0, format: {pos: '%s%v',neg: '(%s%v)', zero: '%s%v'}});\r\n\t},\r\n\tthrottle: (callback, limit) => {\r\n\t    var wait = true;                  \t// Initially, we're not waiting\r\n\t    return function () {               \t// We return a throttled function\r\n\t        if (wait) {                   \t// If we're not waiting  \t\t\t\t\t\r\n\t            wait = false;               // Prevent future invocations\r\n\t            setTimeout(function () {   \t// After a period of time\r\n\t                callback.call();        // Execute users function\r\n\t                wait = true;\t\t\t// And allow future invocations\r\n\t            }, limit);\r\n\t        }\r\n\t    }\r\n\t},\r\n\tgroupBy(data, group) {\r\n\t\tlet groups = {};\r\n\r\n\t\tdata.map((item, index) => {\r\n\r\n\t\t\tlet itemGroup = this.resolveByStringPath(group, item);\r\n\t\t\tlet list = groups[itemGroup];\r\n\r\n\t\t\tif(list) {\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgroups[itemGroup] = [item];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groups;\r\n\t},\r\n\tsumBy(data, group) {\r\n\t\tlet groups = {};\r\n\r\n\t\tdata.map((item, index) => {\r\n\r\n\t\t\tlet itemGroup = this.resolveByStringPath(group, item);\r\n\t\t\tlet list = groups[itemGroup];\r\n\r\n\t\t\tif(list) {\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgroups[itemGroup] = [item];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn groups;\r\n\t},\r\n\tresolveByStringPath(path, obj) {\r\n\t    return path.split('.').reduce(function(prev, curr) {\r\n\t        return prev ? prev[curr] : undefined\r\n\t    }, obj || self)\r\n\t},\r\n\trange(start, end) {\r\n\t\treturn Array(end - start + 1).fill().map((_, idx) => start + idx)\r\n\t},\r\n\tround(number, precision)\r\n\t{\r\n\t    precision = precision || 0;\r\n\t    return parseFloat( number ).toFixed( precision );\r\n\t}\r\n}\r\n\r\nexport default utils;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils.js","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\gatsby\\\\\\\\dist\\\\\\\\utils\\\\\\\\babel-plugin-extract-graphql.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-add-module-exports\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-transform-object-assign\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"presets\\\":[[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-env\\\\\\\\lib\\\\\\\\index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-stage-0\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-react\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"cacheDirectory\\\":true}!./404.js\") })\n        }\n      }, \"component---src-pages-404-js\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=component---src-pages-404-js!./src/pages/404.js\n// module id = 794\n// module chunks = 231608221292675","require(\n      \"!../../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../../node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\gatsby\\\\\\\\dist\\\\\\\\utils\\\\\\\\babel-plugin-extract-graphql.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-add-module-exports\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-transform-object-assign\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"presets\\\":[[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-env\\\\\\\\lib\\\\\\\\index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-stage-0\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-react\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"cacheDirectory\\\":true}!./index.js\") })\n        }\n      }, \"component---src-pages-about-index-js\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=component---src-pages-about-index-js!./src/pages/about/index.js\n// module id = 795\n// module chunks = 231608221292675","require(\n      \"!../../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../../node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\gatsby\\\\\\\\dist\\\\\\\\utils\\\\\\\\babel-plugin-extract-graphql.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-add-module-exports\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-transform-object-assign\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"presets\\\":[[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-env\\\\\\\\lib\\\\\\\\index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-stage-0\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-react\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"cacheDirectory\\\":true}!./index.js\") })\n        }\n      }, \"component---src-pages-explore-index-js\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=component---src-pages-explore-index-js!./src/pages/explore/index.js\n// module id = 796\n// module chunks = 231608221292675","require(\n      \"!../../node_modules/gatsby-module-loader/patch.js\"\n    );\n    module.exports = function(cb) { return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, function() { return require(\"!!../../node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\gatsby\\\\\\\\dist\\\\\\\\utils\\\\\\\\babel-plugin-extract-graphql.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-add-module-exports\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-plugin-transform-object-assign\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"presets\\\":[[\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-env\\\\\\\\lib\\\\\\\\index.js\\\",{\\\"loose\\\":true,\\\"uglify\\\":true,\\\"modules\\\":\\\"commonjs\\\",\\\"targets\\\":{\\\"browsers\\\":[\\\"> 1%\\\",\\\"last 2 versions\\\",\\\"IE >= 9\\\"]},\\\"exclude\\\":[\\\"transform-regenerator\\\",\\\"transform-es2015-typeof-symbol\\\"]}],\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-stage-0\\\\\\\\lib\\\\\\\\index.js\\\",\\\"C:\\\\\\\\Development\\\\\\\\doi-extractives-data\\\\\\\\gatsby-site\\\\\\\\node_modules\\\\\\\\babel-preset-react\\\\\\\\lib\\\\\\\\index.js\\\"],\\\"cacheDirectory\\\":true}!./index.js\") })\n        }\n      }, \"component---src-pages-index-js\");\n     }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/gatsby-module-loader?name=component---src-pages-index-js!./src/pages/index.js\n// module id = 797\n// module chunks = 231608221292675","/* global window:true */\r\n/* eslint no-underscore-dangle: 0 */\r\n\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\n\r\n\r\nexport default () => {  \r\n\tconst devtools = \r\n\t\t(process.env.NODE_ENV === 'development' && window.devToolsExtension) ? \r\n\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t\t: \r\n\t\t\tf => f;\r\n\r\n\treturn createStore(rootReducer, devtools);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/state/create-store.js","'use strict';\r\n\r\nimport FUND_INFO from '../../data/fund_names.yml';\r\nimport utils from '../../js/utils';\r\nimport lazy from 'lazy.js';\r\n\r\n// Initial state is used for the pattern library and seeding any additional data\r\nconst initialState = {\r\n    year: 2018,\r\n    years: [2018],    \r\n    disbursements: {\r\n        2017: {\r\n            year: \"2018\",\r\n            total: 10000,\r\n            highestFundValue: 10000,\r\n            disbursements: [{\r\n                States: {\r\n                    description: \"Fund Description\",\r\n                    name: \"Fund Display Name\",\r\n                    sortOrderIndex: 0,\r\n                    total: 10000,\r\n                    disbursements: [{Onshore: 5000, GOMESA: 3000, Offshore: 2000}]\r\n                }\r\n            }]\r\n        }\r\n    },\r\n    fundInfo: FUND_INFO\r\n};\r\n\r\n// Define Action Types\r\nconst SELECT_YEAR = 'SELECT_YEAR';\r\nconst HYDRATE_DISBURSEMENTS = 'HYDRATE_DISBURSEMENTS_DEPRECATED';\r\n\r\n// Define Action Creators \r\nexport const selectYear = (year) => ({ type: SELECT_YEAR, payload: year});\r\nexport const hydateDisbursements = (disbursements) => ({ type: HYDRATE_DISBURSEMENTS, payload: disbursements});\r\n\r\n// Define Reducers\r\nexport default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SELECT_YEAR:\r\n            return ({...state, 'year': payload});\r\n        case HYDRATE_DISBURSEMENTS:\r\n            let newState = hydrateDisbursements(payload, state.year, state.fundInfo);\r\n            return ({...state, ...newState});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst hydrateDisbursements = (data, year, fundInfo) => {\r\n    let newState = {};\r\n    let sortedByYear = lazy(data).sortBy(\"Year\", true).toArray();\r\n    newState.years = lazy(utils.range(parseInt(sortedByYear[sortedByYear.length-1].Year), parseInt(sortedByYear[0].Year))).sort(null,true).toArray();\r\n    newState.year = Math.max(...newState.years);\r\n    \r\n    let fundSortOrder = {};\r\n    newState.disbursements = {};\r\n    sortedByYear.map((disbursementsForYear, index) => {\r\n        newState.disbursements[disbursementsForYear.Year] = hydrateDisbursementsForYear(disbursementsForYear, fundInfo, fundSortOrder);\r\n\r\n        // Set Sort order for funds by the highest year value\r\n        // The display order should not change from year to year and is set by the last year of data\r\n        // Using zero index since we already have the data sorted descending by year\r\n        if(index === 0) {\r\n            // Sort descending by total\r\n            newState.disbursements[disbursementsForYear.Year].disbursements.sort(function(a, b) {\r\n                return (b[Object.keys(b)[0]].total - a[Object.keys(a)[0]].total);\r\n            }); \r\n\r\n            newState.disbursements[disbursementsForYear.Year].disbursements.map((fund, index) => {\r\n                fund[Object.keys(fund)[0]].sortOrderIndex = index\r\n                fundSortOrder[Object.keys(fund)[0]] = index;\r\n            });\r\n        }\r\n        else {\r\n            // Sort ascending by sortOrderIndex\r\n            newState.disbursements[disbursementsForYear.Year].disbursements.sort(function(a, b) {\r\n                return (a[Object.keys(a)[0]].sortOrderIndex - b[Object.keys(b)[0]].sortOrderIndex);\r\n            });         \r\n        }\r\n\r\n    });\r\n\r\n    return newState;\r\n}\r\n\r\nconst hydrateDisbursementsForYear = (disbursementsForYear, fundInfo, fundSortOrder) => {\r\n    let newState = {\r\n        year: disbursementsForYear.Year,\r\n        total: 0,\r\n        highestFundValue: 0,\r\n        disbursements: []\r\n    };\r\n\r\n    if(disbursementsForYear) {\r\n        let disbursementsByFund = utils.groupBy(disbursementsForYear.disbursements, \"disbursement.Fund\");\r\n        \r\n        // Go through all the funds if a fund has no data it will be zero, with no disbursements\r\n        for(let fundKey in fundInfo) {\r\n            let fundToAdd = {};\r\n            fundToAdd[fundKey] = {\r\n                total: 0,\r\n                disbursements: [],\r\n                name: (fundInfo[fundKey])? fundInfo[fundKey].name : fundKey,\r\n                description: (fundInfo[fundKey])? fundInfo[fundKey].description : \"\",\r\n                link: (fundInfo[fundKey])? fundInfo[fundKey].link : undefined,\r\n                sortOrderIndex: fundSortOrder[fundKey]\r\n            }\r\n\r\n            let sourceData;\r\n\r\n            if(disbursementsByFund[fundKey]) {\r\n                sourceData = {};\r\n                disbursementsByFund[fundKey].map((fundData, index) => {\r\n                    sourceData[fundData.disbursement.Source] = Math.round(fundData.disbursement.Disbursement);\r\n                    \r\n                    fundToAdd[fundKey].total += fundData.disbursement.Disbursement;\r\n                    newState.total += fundData.disbursement.Disbursement;\r\n                });\r\n            }\r\n            if(sourceData){\r\n                fundToAdd[fundKey].disbursements.push(sourceData);\r\n            }\r\n            else{\r\n                fundToAdd[fundKey].disbursements = undefined;\r\n            }\r\n            \r\n\r\n            if(newState.highestFundValue < fundToAdd[fundKey].total) {\r\n                newState.highestFundValue = fundToAdd[fundKey].total;\r\n            }\r\n\r\n            newState.disbursements.push(fundToAdd);\r\n        }\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/state/reducers/disbursements.js","\"use strict\";\r\n\r\nimport CONSTANTS from '../../js/constants';\r\nimport utils from '../../js/utils';\r\n\r\n\r\nconst initialState = {\r\n\tFiscalYear: {\r\n\t\t[CONSTANTS.DISBURSEMENTS_ALL_KEY]: undefined,\r\n\t},\r\n\tCalendarYear: {\r\n\t\t[CONSTANTS.DISBURSEMENTS_ALL_KEY]: undefined,\r\n\t},\r\n\tSourceData: {\r\n\t\t[CONSTANTS.DISBURSEMENTS_ALL_KEY]: undefined,\r\n\t},\r\n\t[CONSTANTS.DISBURSEMENTS_ALL_KEY]: undefined,\r\n};\r\n\r\n// Define Action Types\r\nconst HYDRATE = 'HYDRATE_DISBURSEMENTS';\r\nconst BY_YEAR = 'BY_YEAR_DISBURSEMENTS';\r\n//const BY_MONTH = 'BY_MONTH_DISBURSEMENTS';\r\n\r\n// Define Action Creators \r\nexport const hydrate = (key, data) => ({ type: HYDRATE, payload: data,  key: key});\r\nexport const byYear = (key, filter) => ({ type: BY_YEAR, payload: filter,  key: key});\r\n//export const byMonth = (key, filter) => ({ type: BY_MONTH, payload: filter,  key: key});\r\n\r\n// Define Reducers\r\nexport default (state = initialState, action) => {\r\n  const { type, payload, key } = action;\r\n  //console.log(state);\r\n  switch (type) {\r\n    case HYDRATE:\r\n    \tlet {SourceData} = state;\r\n    \tSourceData[key] = payload;\r\n\r\n      return ({...state, SourceData: SourceData});\r\n    case BY_YEAR:\r\n      return ({...state, [key]:groupByYear(state.SourceData[key], payload) });\r\n    //case BY_MONTH:\r\n      //return ({...state , [key]:groupByMonth(state.SourceData[key], payload, state.FiscalYear[key], state.CalendarYear[key]) });\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Set the most recent year available in our data\r\n * for Fiscal and Calendar year. Data is assumed to\r\n * be sorted descending by production date. If that changes\r\n * we should add a sort function.\r\n *\r\n * Fiscal Year is Oct (Year-1) to Sept (Year)\r\n * It is assumed if we have Sept data we have the fiscal year data\r\n * for that year.\r\n *\r\n * For Calendar Year it is assumed if we have Dec data we have \r\n * all data for that year\r\n **/\r\nconst getFiscalCalendarYear = (key, source,fiscalYear,calendarYear) => {\r\n\tif(source === undefined) return {FiscalYear: undefined, CalendarYear: undefined};\r\n\t\r\n\tlet fiscalYearItem = source.find(item => (item.data.RevenueMonth === \"September\"));\r\n\tlet calendarYearItem = source.find(item => (item.data.RevenueMonth === \"December\"));\r\n\tfiscalYear[key] = (fiscalYearItem && parseInt(fiscalYearItem.data.RevenueYear));\r\n\tcalendarYear[key] = (calendarYearItem && parseInt(calendarYearItem.data.RevenueYear));\r\n\treturn {FiscalYear: fiscalYear, \r\n\t\t\t\t\tCalendarYear: calendarYear};\r\n}\r\n\r\n/** \r\n * \r\n * @returns {Object}\r\n **/\r\nconst groupByYear = (source, filter) => {\r\n\tif(source === undefined) return source;\r\n\r\n\tlet displayNames;\r\n\tlet groupNames;\r\n\tlet results = Object.entries(utils.groupBy(source, \"data.Year\")).map(e => ({[e[0]] : e[1] }) );\r\n\r\n\tresults.sort((a,b) => (a[Object.keys(a)[0]][0].data.Year - b[Object.keys(b)[0]][0].data.Year));\r\n\r\n\tif(filter) {\r\n\t\t\r\n\t\tif(filter.limit > 0) {\r\n\t\t\tresults.splice(0,(results.length-filter.limit));\r\n\t\t}\r\n\t\t\r\n\t\t// Get display names before we filter the data.\r\n\t\tif(filter.displayName) {\r\n\t\t\tdisplayNames = {};\r\n\t\t\tresults.forEach((item) => {\r\n\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayYear;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Set sub group name\r\n\t\tif(filter.subGroupName) {\r\n\t\t\tgroupNames = {};\r\n\t\t\tresults.map((item) => {\r\n\t\t\t\tlet key = Object.keys(item)[0];\r\n\t\t\t\tif(groupNames[filter.subGroupName]) {\r\n\t\t\t\t\tgroupNames[filter.subGroupName].push(key);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tgroupNames[filter.subGroupName] = [key];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Sum volume by data key and assign year key to the result\r\n\t\tif(filter.sumBy) {\r\n\t\t\tresults = results.map((yearData) => {\r\n\t\t\t\tlet year = Object.keys(yearData)[0];\r\n\t\t\t\tlet sums = [yearData[year].reduce((total, item) => {\r\n\t\t\t\t\ttotal[item.data[filter.sumBy]] = \r\n\t\t\t\t\t\t(total[item.data[filter.sumBy]] !== undefined) ?\r\n\t\t\t\t\t\t\ttotal[item.data[filter.sumBy]]+item.data.Disbursement \r\n\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\titem.data.Disbursement;\r\n\r\n\t\t\t\t\treturn total;},{})];\r\n\r\n\t\t\t\treturn {[year]: sums}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {Data:results, \r\n\t\t\t\t\tUnits: \"$\",\r\n\t\t\t\t\tLongUnits: \"dollars\",\r\n\t\t\t\t\tDisplayNames: displayNames,\r\n\t\t\t\t\tGroupNames: groupNames};\r\n}\r\n\r\n/** \r\n * \r\n * Example format:\r\n * {\"Jan\": [{\"Federal onshore\": 100, \"Federal offshore\": 100, \"Native American\":90}]}\r\n **/\r\nconst groupByMonth = (source, filter, fiscalYear, calendarYear) => {\r\n\tif(source === undefined) return source;\r\n\r\n\tlet displayNames;\r\n\tlet groupNames;\r\n\tlet results = JSON.parse(JSON.stringify(source));\r\n\r\n\tif(filter.period === \"recent\" && filter.limit > 0) {\r\n\t\tlet resultsGroupedByDate = Object.entries(utils.groupBy(source, \"data.RevenueDate\")).map(e => ({[e[0]] : e[1] }) );\r\n\t\tlet resultsLimited = resultsGroupedByDate.splice(0,12);\r\n\t\tresults = results.filter((monthData) => (Object.keys(resultsLimited[resultsLimited.length-1])[0] <= monthData.data.RevenueDate));\r\n\t}\r\n\t// Fiscal Year is Oct (Year-1) to Sept (Year)\r\n\telse if(filter.period === \"fiscal\") {\r\n\t\tlet fiscalYearStart = results.find((item) => \r\n\t\t\t(item.data.RevenueMonth === \"October\" && parseInt(item.data.RevenueYear) === (fiscalYear-1)));\r\n\r\n\t\tlet fiscalYearEnd = results.find((item) => \r\n\t\t\t(item.data.RevenueMonth === \"September\" && parseInt(item.data.RevenueYear) === (fiscalYear)));\r\n\t\t\r\n\t\tresults = results.filter((item) => (new Date(item.data.RevenueDate) >= new Date(fiscalYearStart.data.RevenueDate) && \r\n\t\t\t\t\tnew Date(item.data.RevenueDate) <= new Date(fiscalYearEnd.data.RevenueDate) ) );\r\n\t}\r\n\telse if(filter.period === \"calendar\") {\r\n\t\tresults = results.filter((item) => ( parseInt(item.data.RevenueYear) === calendarYear ) );\r\n\t}\r\n\r\n\tresults = Object.entries(utils.groupBy(results, \"data.RevenueMonth\")).map(e => ({[e[0]] : e[1] }) );\r\n\r\n\t// Sort ascending by production date\r\n\tresults.sort((a,b) => { \r\n\t\t\tlet aDate = new Date(a[Object.keys(a)[0]][0].data.RevenueDate);\r\n\t\t\tlet bDate = new Date(b[Object.keys(b)[0]][0].data.RevenueDate);\r\n\t\t\treturn (aDate < bDate)? -1 : (aDate == bDate)? 0 : 1;\r\n\t\t});\r\n\r\n\tif(filter) {\r\n\t\t\r\n\t\t// Get display names before we filter the data.\r\n\t\tif(filter.displayName) {\r\n\t\t\tdisplayNames = {};\r\n\t\t\tresults.forEach((item) => {\r\n\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayMonth;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Get group names before we filter the data.\r\n\t\tif(filter.subGroup) {\r\n\t\t\tgroupNames = {};\r\n\t\t\tresults.map((item) => {\r\n\t\t\t\tlet key = Object.keys(item)[0];\r\n\t\t\t\tlet name = item[key][0].data[filter.subGroup];\r\n\t\t\t\tif(groupNames[name]) {\r\n\t\t\t\t\tgroupNames[name].push(key);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tgroupNames[name] = [key];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Sum volume by data key and assign month key to the result\r\n\t\tif(filter.sumBy) {\r\n\t\t\tresults = results.map((monthData) => {\r\n\t\t\t\tlet month = Object.keys(monthData)[0];\r\n\t\t\t\tlet sums = [monthData[month].reduce((total, item) => {\r\n\r\n\t\t\t\t\ttotal[item.data[filter.sumBy]] = \r\n\t\t\t\t\t\t(total[item.data[filter.sumBy]] !== undefined) ?\r\n\t\t\t\t\t\t\ttotal[item.data[filter.sumBy]]+item.data.Revenue \r\n\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\titem.data.Revenue;\r\n\r\n\t\t\t\t\treturn total;},{})];\r\n\r\n\t\t\t\treturn {[month]: sums}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {Data:results, \r\n\t\t\t\t\tUnits: \"$\",\r\n\t\t\t\t\tLongUnits: \"dollars\",\r\n\t\t\t\t\tDisplayNames: displayNames,\r\n\t\t\t\t\tGroupNames: groupNames};\t\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/state/reducers/federal-disbursements.js","const initialState = {\r\n  glossaryTerm: \"\",\r\n  glossaryOpen: false\r\n};\r\n\r\n\r\n// Define Action Types\r\nconst GLOSSARY_TERM_SELECTED = 'GLOSSARY_TERM_SELECTED';\r\nconst YEAR_SELECTED = 'YEAR_SELECTED';\r\n\r\n// Define Action Creators \r\nexport const glossaryTermSelected = (term, doOpen=true) => ({ type: GLOSSARY_TERM_SELECTED, payload: term,  openGlossary: doOpen});\r\n\r\n// Define Reducers\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GLOSSARY_TERM_SELECTED:\r\n      return ({...state, glossaryTerm: payload, glossaryOpen: action.openGlossary});\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/state/reducers/glossary.js","\"use strict\";\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nimport glossary from './glossary';\r\nimport disbursements from './disbursements';\r\nimport productionVolumes from './production-volumes';\r\nimport revenues from './revenues';\r\nimport federalDisbursements from './federal-disbursements';\r\n\r\nexport default combineReducers({ glossary, disbursements, productionVolumes, revenues, federalDisbursements });\r\n\r\nexport const createReducer = (initialState, handlers) => {\r\n\treturn function reducer(state = initialState, action) {\r\n\t\tif (handlers.hasOwnProperty(action.type)) {\r\n\t\t\treturn handlers[action.type](state, action);\r\n\t\t} else {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/state/reducers/index.js","\"use strict\";\r\n\r\nimport CONSTANTS from '../../js/constants';\r\nimport utils from '../../js/utils';\r\n\r\nconst initialState = {\r\n\tFiscalYear: {\r\n\t\t[CONSTANTS.PRODUCTION_VOLUMES_OIL_KEY]: undefined,\r\n\t\t[CONSTANTS.PRODUCTION_VOLUMES_GAS_KEY]: undefined,\r\n\t\t[CONSTANTS.PRODUCTION_VOLUMES_COAL_KEY]: undefined\r\n\t},\r\n\tCalendarYear: {\r\n\t\t[CONSTANTS.PRODUCTION_VOLUMES_OIL_KEY]: undefined,\r\n\t\t[CONSTANTS.PRODUCTION_VOLUMES_GAS_KEY]: undefined,\r\n\t\t[CONSTANTS.PRODUCTION_VOLUMES_COAL_KEY]: undefined\r\n\t},\r\n\tSourceData: {\r\n\t\t[CONSTANTS.PRODUCTION_VOLUMES_OIL_KEY]: undefined,\r\n\t\t[CONSTANTS.PRODUCTION_VOLUMES_GAS_KEY]: undefined,\r\n\t\t[CONSTANTS.PRODUCTION_VOLUMES_COAL_KEY]: undefined\r\n\t},\r\n\t[CONSTANTS.PRODUCTION_VOLUMES_OIL_KEY]: undefined,\r\n\t[CONSTANTS.PRODUCTION_VOLUMES_GAS_KEY]: undefined,\r\n\t[CONSTANTS.PRODUCTION_VOLUMES_COAL_KEY]: undefined\r\n};\r\n\r\n\r\n// Define Action Types\r\nconst HYDRATE = 'HYDRATE_PRODUCTION_VOLUMES';\r\nconst BY_YEAR = 'BY_YEAR_PRODUCTION_VOLUMES';\r\nconst BY_MONTH = 'BY_MONTH_PRODUCTION_VOLUMES';\r\n\r\n// Define Action Creators \r\nexport const hydrate = (key, data) => ({ type: HYDRATE, payload: data,  key: key});\r\nexport const byYear = (key, filter) => ({ type: BY_YEAR, payload: filter,  key: key});\r\nexport const byMonth = (key, filter) => ({ type: BY_MONTH, payload: filter,  key: key});\r\n\r\n// Define Reducers\r\nexport default (state = initialState, action) => {\r\n  const { type, payload, key } = action;\r\n  //console.log(state);\r\n  switch (type) {\r\n    case HYDRATE:\r\n    \tlet {SourceData, FiscalYear, CalendarYear} = state;\r\n    \tSourceData[key] = payload;\r\n      return ({...state, ...getFiscalCalendarYear(key, payload, FiscalYear, CalendarYear), SourceData: SourceData});\r\n    case BY_YEAR:\r\n      return ({...state, [key]:groupByYear(state.SourceData[key], payload) });\r\n    case BY_MONTH:\r\n      return ({...state, [key]:groupByMonth(state.SourceData[key], payload, state.FiscalYear[key], state.CalendarYear[key]) });\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Set the most recent year available in our data\r\n * for Fiscal and Calendar year. Data is assumed to\r\n * be sorted descending by production date. If that changes\r\n * we should add a sort function.\r\n *\r\n * Fiscal Year is Oct (Year-1) to Sept (Year)\r\n * It is assumed if we have Sept data we have the fiscal year data\r\n * for that year.\r\n *\r\n * For Calendar Year it is assumed if we have Dec data we have \r\n * all data for that year\r\n **/\r\n\r\nconst getFiscalCalendarYear = (key, source,fiscalYear,calendarYear) => {\r\n\tif(source === undefined) return {FiscalYear: undefined, CalendarYear: undefined};\r\n\t\r\n\tlet fiscalYearItem = source.find(item => (item.data.ProductionMonth === \"September\"));\r\n\tlet calendarYearItem = source.find(item => (item.data.ProductionMonth === \"December\"));\r\n\tfiscalYear[key] = (fiscalYearItem && parseInt(fiscalYearItem.data.ProductionYear));\r\n\tcalendarYear[key] = (calendarYearItem && parseInt(calendarYearItem.data.ProductionYear));\r\n\treturn {FiscalYear: fiscalYear, \r\n\t\t\t\t\tCalendarYear: calendarYear};\r\n}\r\n\r\n/** \r\n * \r\n * @returns {Object}\r\n **/\r\nconst groupByYear = (source, filter) => {\r\n\tif(source === undefined) return source;\r\n\r\n\tlet displayNames;\r\n\tlet groupNames;\r\n\tlet results = Object.entries(utils.groupBy(source, \"data.ProductionYear\")).map(e => ({[e[0]] : e[1] }) );\r\n\r\n\t// We assume if the data matches current year that we dont have the year of data, so we remove it\r\n\tlet currentYear = new Date().getFullYear();\r\n\tresults = results.filter((yearData) => parseInt(Object.keys(yearData)[0]) !== currentYear);\r\n\r\n\tresults.sort((a,b) => (a[Object.keys(a)[0]][0].data.ProductionYear - b[Object.keys(b)[0]][0].data.ProductionYear));\r\n\r\n\tif(filter) {\r\n\t\t\r\n\t\t// Get display names before we filter the data.\r\n\t\tif(filter.displayName) {\r\n\t\t\tdisplayNames = {};\r\n\t\t\tresults.forEach((item) => {\r\n\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayYear;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Set sub group name\r\n\t\tif(filter.subGroupName) {\r\n\t\t\tgroupNames = {};\r\n\t\t\tresults.map((item) => {\r\n\t\t\t\tlet key = Object.keys(item)[0];\r\n\t\t\t\tif(groupNames[filter.subGroupName]) {\r\n\t\t\t\t\tgroupNames[filter.subGroupName].push(key);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tgroupNames[filter.subGroupName] = [key];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Sum volume by data key and assign year key to the result\r\n\t\tif(filter.sumBy) {\r\n\t\t\tresults = results.map((yearData) => {\r\n\t\t\t\tlet year = Object.keys(yearData)[0];\r\n\t\t\t\tlet sums = [yearData[year].reduce((total, item) => {\r\n\t\t\t\t\ttotal[item.data[filter.sumBy]] = \r\n\t\t\t\t\t\t(total[item.data[filter.sumBy]] !== undefined) ?\r\n\t\t\t\t\t\t\ttotal[item.data[filter.sumBy]]+item.data.Volume \r\n\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\titem.data.Volume;\r\n\r\n\t\t\t\t\treturn total;},{})];\r\n\r\n\t\t\t\treturn {[year]: sums}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif(filter.limit > 0) {\r\n\t\t\tresults.splice(0,(results.length-filter.limit));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {Data:results, \r\n\t\t\t\t\tProductName: source[0].data.ProductName,\r\n\t\t\t\t\tUnits: source[0].data.Units,\r\n\t\t\t\t\tLongUnits: source[0].data.LongUnits,\r\n\t\t\t\t\tDisplayNames: displayNames,\r\n\t\t\t\t\tGroupNames: groupNames};\r\n}\r\n\r\n/** \r\n * This data is sorted ascending by year already.\r\n * So an assumption is made on min and max numbers.\r\n * \r\n * Example format:\r\n * {\"Jan\": [{\"Federal onshore\": 100, \"Federal offshore\": 100, \"Native American\":90}]}\r\n **/\r\nconst groupByMonth = (source, filter, fiscalYear, calendarYear) => {\r\n\tif(source === undefined) return source;\r\n\r\n\tlet displayNames;\r\n\tlet groupNames;\r\n\tlet results = JSON.parse(JSON.stringify(source));\r\n\r\n\tif(filter.period === \"recent\" && filter.limit > 0) {\r\n\t\tlet resultsGroupedByDate = Object.entries(utils.groupBy(source, \"data.ProductionDate\")).map(e => ({[e[0]] : e[1] }) );\r\n\t\tlet resultsLimited = resultsGroupedByDate.splice(0,12);\r\n\t\tresults = results.filter((monthData) => (Object.keys(resultsLimited[resultsLimited.length-1])[0] <= monthData.data.ProductionDate));\r\n\t}\r\n\t// Fiscal Year is Oct (Year-1) to Sept (Year)\r\n\telse if(filter.period === \"fiscal\") {\r\n\t\tlet fiscalYearStart = results.find((item) => \r\n\t\t\t(item.data.ProductionMonth === \"October\" && parseInt(item.data.ProductionYear) === (fiscalYear-1)));\r\n\r\n\t\tlet fiscalYearEnd = results.find((item) => \r\n\t\t\t(item.data.ProductionMonth === \"September\" && parseInt(item.data.ProductionYear) === (fiscalYear)));\r\n\t\t\r\n\t\tresults = results.filter((item) => (new Date(item.data.ProductionDate) >= new Date(fiscalYearStart.data.ProductionDate) && \r\n\t\t\t\t\tnew Date(item.data.ProductionDate) <= new Date(fiscalYearEnd.data.ProductionDate) ) );\r\n\t}\r\n\telse if(filter.period === \"calendar\") {\r\n\t\tresults = results.filter((item) => ( parseInt(item.data.ProductionYear) === calendarYear ) );\r\n\t}\r\n\r\n\tresults = Object.entries(utils.groupBy(results, \"data.ProductionMonth\")).map(e => ({[e[0]] : e[1] }) );\r\n\r\n\t// Sort ascending by production date\r\n\tresults.sort((a,b) => { \r\n\t\t\tlet aDate = new Date(a[Object.keys(a)[0]][0].data.ProductionDate);\r\n\t\t\tlet bDate = new Date(b[Object.keys(b)[0]][0].data.ProductionDate);\r\n\t\t\treturn (aDate < bDate)? -1 : (aDate == bDate)? 0 : 1;\r\n\t\t});\r\n\r\n\tif(filter) {\r\n\t\t\r\n\t\t// Get display names before we filter the data.\r\n\t\tif(filter.displayName) {\r\n\t\t\tdisplayNames = {};\r\n\t\t\tresults.forEach((item) => {\r\n\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayMonth;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Get group names before we filter the data.\r\n\t\tif(filter.subGroup) {\r\n\t\t\tgroupNames = {};\r\n\t\t\tresults.map((item) => {\r\n\t\t\t\tlet key = Object.keys(item)[0];\r\n\t\t\t\tlet name = item[key][0].data[filter.subGroup];\r\n\t\t\t\tif(groupNames[name]) {\r\n\t\t\t\t\tgroupNames[name].push(key);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tgroupNames[name] = [key];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Sum volume by data key and assign month key to the result\r\n\t\tif(filter.sumBy) {\r\n\t\t\tresults = results.map((monthData) => {\r\n\t\t\t\tlet month = Object.keys(monthData)[0];\r\n\t\t\t\tlet sums = [monthData[month].reduce((total, item) => {\r\n\r\n\t\t\t\t\ttotal[item.data[filter.sumBy]] = \r\n\t\t\t\t\t\t(total[item.data[filter.sumBy]] !== undefined) ?\r\n\t\t\t\t\t\t\ttotal[item.data[filter.sumBy]]+item.data.Volume \r\n\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\titem.data.Volume;\r\n\r\n\t\t\t\t\treturn total;},{})];\r\n\r\n\t\t\t\treturn {[month]: sums}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {Data:results, \r\n\t\t\t\t\tProductName: source[0].data.ProductName,\r\n\t\t\t\t\tUnits: source[0].data.Units,\r\n\t\t\t\t\tLongUnits: source[0].data.LongUnits,\r\n\t\t\t\t\tDisplayNames: displayNames,\r\n\t\t\t\t\tGroupNames: groupNames};\t\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/state/reducers/production-volumes.js","\"use strict\";\r\n\r\nimport CONSTANTS from '../../js/constants';\r\nimport utils from '../../js/utils';\r\n\r\n\r\nconst initialState = {\r\n\tFiscalYear: {\r\n\t\t[CONSTANTS.REVENUES_ALL_KEY]: undefined,\r\n\t},\r\n\tCalendarYear: {\r\n\t\t[CONSTANTS.REVENUES_ALL_KEY]: undefined,\r\n\t},\r\n\tSourceData: {\r\n\t\t[CONSTANTS.REVENUES_ALL_KEY]: undefined,\r\n\t},\r\n\t[CONSTANTS.REVENUES_ALL_KEY]: undefined,\r\n};\r\n\r\n// Define Action Types\r\nconst HYDRATE = 'HYDRATE_REVENUES';\r\nconst BY_YEAR = 'BY_YEAR_REVENUES';\r\nconst BY_MONTH = 'BY_MONTH_REVENUES';\r\n\r\n// Define Action Creators \r\nexport const hydrate = (key, data) => ({ type: HYDRATE, payload: data,  key: key});\r\nexport const byYear = (key, filter) => ({ type: BY_YEAR, payload: filter,  key: key});\r\nexport const byMonth = (key, filter) => ({ type: BY_MONTH, payload: filter,  key: key});\r\n\r\n// Define Reducers\r\nexport default (state = initialState, action) => {\r\n  const { type, payload, key } = action;\r\n  //console.log(state);\r\n  switch (type) {\r\n    case HYDRATE:\r\n    \tlet {SourceData, FiscalYear, CalendarYear} = state;\r\n    \tSourceData[key] = payload;\r\n      return ({...state, ...getFiscalCalendarYear(key, payload, FiscalYear, CalendarYear), SourceData: SourceData});\r\n    case BY_YEAR:\r\n      return ({...state, [key]:groupByYear(state.SourceData[key], payload) });\r\n    case BY_MONTH:\r\n      return ({...state, [key]:groupByMonth(state.SourceData[key], payload, state.FiscalYear[key], state.CalendarYear[key]) });\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Set the most recent year available in our data\r\n * for Fiscal and Calendar year. Data is assumed to\r\n * be sorted descending by production date. If that changes\r\n * we should add a sort function.\r\n *\r\n * Fiscal Year is Oct (Year-1) to Sept (Year)\r\n * It is assumed if we have Sept data we have the fiscal year data\r\n * for that year.\r\n *\r\n * For Calendar Year it is assumed if we have Dec data we have \r\n * all data for that year\r\n **/\r\n\r\nconst getFiscalCalendarYear = (key, source,fiscalYear,calendarYear) => {\r\n\tif(source === undefined) return {FiscalYear: undefined, CalendarYear: undefined};\r\n\r\n\tlet fiscalYearItem = source.find(item => (item.data.RevenueMonth === \"September\"));\r\n\tlet calendarYearItem = source.find(item => (item.data.RevenueMonth === \"December\"));\r\n\tfiscalYear[key] = (fiscalYearItem && parseInt(fiscalYearItem.data.RevenueYear));\r\n\tcalendarYear[key] = (calendarYearItem && parseInt(calendarYearItem.data.RevenueYear));\r\n\treturn {FiscalYear: fiscalYear, \r\n\t\t\t\t\tCalendarYear: calendarYear};\r\n}\r\n\r\n/** \r\n * \r\n * @returns {Object}\r\n **/\r\nconst groupByYear = (source, filter) => {\r\n\tif(source === undefined) return source;\r\n\r\n\tlet displayNames;\r\n\tlet groupNames;\r\n\tlet results = Object.entries(utils.groupBy(source, \"data.RevenueYear\")).map(e => ({[e[0]] : e[1] }) );\r\n\t\r\n\t// We assume if the data matches current year that we dont have the year of data, so we remove it\r\n\tlet currentYear = new Date().getFullYear();\r\n\tresults = results.filter((yearData) => parseInt(Object.keys(yearData)[0]) !== currentYear);\r\n\r\n\tresults.sort((a,b) => (a[Object.keys(a)[0]][0].data.RevenueYear - b[Object.keys(b)[0]][0].data.RevenueYear));\r\n\r\n\tif(filter) {\r\n\t\t\r\n\t\t// Get display names before we filter the data.\r\n\t\tif(filter.displayName) {\r\n\t\t\tdisplayNames = {};\r\n\t\t\tresults.forEach((item) => {\r\n\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayYear;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Set sub group name\r\n\t\tif(filter.subGroupName) {\r\n\t\t\tgroupNames = {};\r\n\t\t\tresults.map((item) => {\r\n\t\t\t\tlet key = Object.keys(item)[0];\r\n\t\t\t\tif(groupNames[filter.subGroupName]) {\r\n\t\t\t\t\tgroupNames[filter.subGroupName].push(key);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tgroupNames[filter.subGroupName] = [key];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t// Sum volume by data key and assign year key to the result\r\n\t\tif(filter.sumBy) {\r\n\t\t\tresults = results.map((yearData) => {\r\n\t\t\t\tlet year = Object.keys(yearData)[0];\r\n\t\t\t\tlet sums = [yearData[year].reduce((total, item) => {\r\n\t\t\t\t\ttotal[item.data[filter.sumBy]] = \r\n\t\t\t\t\t\t(total[item.data[filter.sumBy]] !== undefined) ?\r\n\t\t\t\t\t\t\ttotal[item.data[filter.sumBy]]+item.data.Revenue \r\n\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\titem.data.Revenue;\r\n\r\n\t\t\t\t\treturn total;},{})];\r\n\r\n\t\t\t\treturn {[year]: sums}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif(filter.limit > 0) {\r\n\t\t\tresults.splice(0,(results.length-filter.limit));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {Data:results, \r\n\t\t\t\t\tUnits: \"$\",\r\n\t\t\t\t\tLongUnits: \"dollars\",\r\n\t\t\t\t\tDisplayNames: displayNames,\r\n\t\t\t\t\tGroupNames: groupNames};\r\n}\r\n\r\n/** \r\n * \r\n * Example format:\r\n * {\"Jan\": [{\"Federal onshore\": 100, \"Federal offshore\": 100, \"Native American\":90}]}\r\n **/\r\nconst groupByMonth = (source, filter, fiscalYear, calendarYear) => {\r\n\tif(source === undefined) return source;\r\n\r\n\tlet displayNames;\r\n\tlet groupNames;\r\n\tlet results = JSON.parse(JSON.stringify(source));\r\n\r\n\tif(filter.period === \"recent\" && filter.limit > 0) {\r\n\t\tlet resultsGroupedByDate = Object.entries(utils.groupBy(source, \"data.RevenueDate\")).map(e => ({[e[0]] : e[1] }) );\r\n\t\tlet resultsLimited = resultsGroupedByDate.splice(0,12);\r\n\t\tresults = results.filter((monthData) => (Object.keys(resultsLimited[resultsLimited.length-1])[0] <= monthData.data.RevenueDate));\r\n\t}\r\n\t// Fiscal Year is Oct (Year-1) to Sept (Year)\r\n\telse if(filter.period === \"fiscal\") {\r\n\t\tlet fiscalYearStart = results.find((item) => \r\n\t\t\t(item.data.RevenueMonth === \"October\" && parseInt(item.data.RevenueYear) === (fiscalYear-1)));\r\n\r\n\t\tlet fiscalYearEnd = results.find((item) => \r\n\t\t\t(item.data.RevenueMonth === \"September\" && parseInt(item.data.RevenueYear) === (fiscalYear)));\r\n\t\t\r\n\t\tresults = results.filter((item) => (new Date(item.data.RevenueDate) >= new Date(fiscalYearStart.data.RevenueDate) && \r\n\t\t\t\t\tnew Date(item.data.RevenueDate) <= new Date(fiscalYearEnd.data.RevenueDate) ) );\r\n\t}\r\n\telse if(filter.period === \"calendar\") {\r\n\t\tresults = results.filter((item) => ( parseInt(item.data.RevenueYear) === calendarYear ) );\r\n\t}\r\n\r\n\tresults = Object.entries(utils.groupBy(results, \"data.RevenueMonth\")).map(e => ({[e[0]] : e[1] }) );\r\n\r\n\t// Sort ascending by production date\r\n\tresults.sort((a,b) => { \r\n\t\t\tlet aDate = new Date(a[Object.keys(a)[0]][0].data.RevenueDate);\r\n\t\t\tlet bDate = new Date(b[Object.keys(b)[0]][0].data.RevenueDate);\r\n\t\t\treturn (aDate < bDate)? -1 : (aDate == bDate)? 0 : 1;\r\n\t\t});\r\n\r\n\tif(filter) {\r\n\t\t\r\n\t\t// Get display names before we filter the data.\r\n\t\tif(filter.displayName) {\r\n\t\t\tdisplayNames = {};\r\n\t\t\tresults.forEach((item) => {\r\n\t\t\t\tdisplayNames[Object.keys(item)[0]] = item[Object.keys(item)[0]][0].data.DisplayMonth;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Get group names before we filter the data.\r\n\t\tif(filter.subGroup) {\r\n\t\t\tgroupNames = {};\r\n\t\t\tresults.map((item) => {\r\n\t\t\t\tlet key = Object.keys(item)[0];\r\n\t\t\t\tlet name = item[key][0].data[filter.subGroup];\r\n\t\t\t\tif(groupNames[name]) {\r\n\t\t\t\t\tgroupNames[name].push(key);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tgroupNames[name] = [key];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Sum volume by data key and assign month key to the result\r\n\t\tif(filter.sumBy) {\r\n\t\t\tresults = results.map((monthData) => {\r\n\t\t\t\tlet month = Object.keys(monthData)[0];\r\n\t\t\t\tlet sums = [monthData[month].reduce((total, item) => {\r\n\r\n\t\t\t\t\ttotal[item.data[filter.sumBy]] = \r\n\t\t\t\t\t\t(total[item.data[filter.sumBy]] !== undefined) ?\r\n\t\t\t\t\t\t\ttotal[item.data[filter.sumBy]]+item.data.Revenue \r\n\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\titem.data.Revenue;\r\n\r\n\t\t\t\t\treturn total;},{})];\r\n\r\n\t\t\t\treturn {[month]: sums}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {Data:results, \r\n\t\t\t\t\tUnits: \"$\",\r\n\t\t\t\t\tLongUnits: \"dollars\",\r\n\t\t\t\t\tDisplayNames: displayNames,\r\n\t\t\t\t\tGroupNames: groupNames};\t\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/state/reducers/revenues.js","/**\r\n * Enable Redux in gatsby\r\n * https://github.com/gatsbyjs/gatsby/tree/master/examples/using-redux\r\n **/\r\n\r\nimport React from 'react'\r\nimport { Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport createStore from \"./src/state/create-store\"\r\n\r\n// eslint-disable-next-line react/display-name,react/prop-types\r\nexport default ({ history }) => {\r\n    const store = createStore();\r\n\r\n    const ConnectedRouterWrapper = ({ children }) => {\r\n    \treturn (\r\n\t        <Provider store={store}>\r\n\t            <Router history={history}>{children}</Router>\r\n\t        </Provider>\r\n\t    );\r\n    }\r\n\r\n    return ConnectedRouterWrapper\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./wrap-with-provider.js"],"sourceRoot":""}